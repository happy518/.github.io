[{"title":"字面量，常量和变量之间的区别","url":"/2017-03-02-%E5%AD%97%E9%9D%A2%E9%87%8F%EF%BC%8C%E5%B8%B8%E9%87%8F%E5%92%8C%E5%8F%98%E9%87%8F%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB/","content":"<p>经常看到这三者，基本上没有程序员都要和这三者打交道，之前每个都会使用，但是这样的来区别三者之间的关系还是第一次，从定义到实际的例子。这次全面弄清楚，以后就省得定义混淆。</p>\n<p>那么我就首先来看个例子，有个大概的了解，再去看看那些生硬的定义。</p>\n<p>c&#x2F;c++ code</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a; <span class=\"comment\">// 变量</span></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> b = <span class=\"number\">10</span>; <span class=\"comment\">// b为常量，10为字面量</span></span><br><span class=\"line\"><span class=\"built_in\">string</span> str = <span class=\"string\">&quot;hello world!&quot;</span>; <span class=\"comment\">// str为变量, hello world！为字面量</span></span><br></pre></td></tr></table></figure>\n<p>看完这个例子，我相信大家都会有大致的了解，这其中可能稍微有点不太理解的就是<strong>字面量</strong>。</p>\n<h1 id=\"字面量\"><a href=\"#字面量\" class=\"headerlink\" title=\"字面量\"></a>字面量</h1><blockquote>\n<p>在计算机科学中，字面量(literal)是用于表达源代码中一个固定值的表示法(nation)，几乎所有计算机编程语言都具有对基本值的字面量表示，诸如，整数，浮点数以及字符串；而有很多也对布尔类型和字符类型的值也支持字面量表示；还有一些甚至对枚举类型的元素以及像数组，记录和对象等复合类型的值也支持字面量表示。</p>\n</blockquote>\n<p>有个不太好，但是足以说明问题的解释，那就是对象字面量就是引号引起来的部分，必须是等号右边的部分。虽然这样的解释不太好，但是确实如此，这就是字面量。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> b = <span class=\"number\">10</span>; <span class=\"comment\">// b为常量，10为字面量</span></span><br><span class=\"line\"><span class=\"built_in\">string</span> str = <span class=\"string\">&quot;hello world!&quot;</span>; <span class=\"comment\">// str为变量，hello world!为字面量</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h1><p>有些数据在程序运行中可以变化或者被赋值，这成为变量。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a; <span class=\"comment\">// a为变量</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h1><p>有些数据可以在程序使用之前预定设定并在整个运行过程中没有变化，称之为常量。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> b = <span class=\"number\">10</span>; <span class=\"comment\">// b为常量，10为字面量</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"常量和变量的区别\"><a href=\"#常量和变量的区别\" class=\"headerlink\" title=\"常量和变量的区别\"></a>常量和变量的区别</h1><p>它们内存中的存储方式是一样的，只是常量不允许改变，就像只读一样。</p>\n<h1 id=\"变量，常量和字面量的区别\"><a href=\"#变量，常量和字面量的区别\" class=\"headerlink\" title=\"变量，常量和字面量的区别\"></a>变量，常量和字面量的区别</h1><p>字面量是指有字母，数字等构成的字符串和数值。它只能作为右值出现(右值就是等号右边的值，如 int a &#x3D; 123; 这里面a为左值，123为右值)。<br>常量和变量都属于变量，只不过常量是赋值过后不能在改变的变量，而普通的变量是可以在进行赋值操作的。</p>\n","categories":["java"],"tags":["java"]},{"title":"美团面试真题之一个线程OOM，进程里的其他线程还能运行吗？","url":"/2018-04-11%E7%BE%8E%E5%9B%A2%E9%9D%A2%E8%AF%95%E7%9C%9F%E9%A2%98%E4%B9%8B%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%A8%8BOOM%EF%BC%8C%E8%BF%9B%E7%A8%8B%E9%87%8C%E7%9A%84%E5%85%B6%E4%BB%96%E7%BA%BF%E7%A8%8B%E8%BF%98%E8%83%BD%E8%BF%90%E8%A1%8C%E5%90%97%EF%BC%9F/","content":"<p>一个进程有3个线程，如果一个线程抛出OOM，其他两个线程还能运行吗？ </p>\n<blockquote>\n<p>答案是还能运行</p>\n</blockquote>\n<p>不瞒大家说，正在面试中，我遇到这一题，我估计也会答错，因为我初看这一题的时候，觉得是在考察JVM的内存结构，我第一反应是OOM常见情况堆内存溢出，也就是下面的这种异常</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">java.lang.OutOfMemoryError：java heap space</span><br></pre></td></tr></table></figure>\n\n<p>多线程中栈与堆是公有还是私有的</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">在多线程环境下，每个线程拥有一个栈和一个程序计数器，栈和程序计数器用来保存线程执行历史和线程执行状态，是线程私有的，堆是由用一个进程内多个线程共享的。</span><br></pre></td></tr></table></figure>\n\n<p>测试代码伪代码如下：</p>\n<p>一个线程去构造堆内存溢出，每隔ls申请一次堆内存。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ypb.oom;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.google.common.collect.Lists;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.time.LocalDateTime;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.time.format.DateTimeFormatter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Executors;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@className</span> ThreadOOMTest</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span> 测试一个线程出现OOM，同进程下的其他线程还能继续运行吗？</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> yangpengbing</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 22:12 2018/12/19</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ThreadOOMTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">DateTimeFormatter</span> <span class=\"variable\">formatter</span> <span class=\"operator\">=</span> DateTimeFormatter.ofPattern(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;oom-thread&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">    \t    List&lt;<span class=\"type\">byte</span>[]&gt; bytes = Lists.newArrayList();</span><br><span class=\"line\">    \t    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    \t\t    show(format(formatter));</span><br><span class=\"line\">    \t\t    </span><br><span class=\"line\">\t    \t    bytes.add(<span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[m]);</span><br><span class=\"line\">\t    \t    </span><br><span class=\"line\">\t\t        sleep();</span><br><span class=\"line\">    \t    &#125;</span><br><span class=\"line\">\t    &#125;, name).start();</span><br><span class=\"line\"></span><br><span class=\"line\">        name = <span class=\"string\">&quot;not-oom-thread&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(()-&gt;&#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">                show(format(formatter));</span><br><span class=\"line\">\t            sleep();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, name).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 控制台输出时间和线程名称</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> msg</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">(String msg)</span> &#123;</span><br><span class=\"line\">        System.out.println(msg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 线程休眠1s</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sleep</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    \t    TimeUnit.SECONDS.sleep(<span class=\"number\">1L</span>);</span><br><span class=\"line\">    \t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">    \t    e.printStackTrace();</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 格式化输出的信息</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> formatter</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">format</span><span class=\"params\">(DateTimeFormatter formatter)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> String.format(<span class=\"string\">&quot;data &#123;%s&#125;, thread &#123;%s&#125;&quot;</span>, LocalDateTime.now().format(formatter), Thread.currentThread().getName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>控制台输出的结果：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-30f285d5b4b1f729.png\" loading=\"lazy\"></p>\n<p>从日志中可以看出，线程oom-thread线程溢出了，其他线程not-oom-thread线程还在执行中。使用jvisualvm监控下。</p>\n<p>设置的jvm参数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">-Xmx32m -Xms32m -XX:+UseConcMarkSweepGC -XX:+PrintGCDetails -verbose:gc -XX:+PrintGCDateStamps -Xloggc:E:/gc.log</span><br></pre></td></tr></table></figure>\n\n<p>1<a href=\"https://upload-images.jianshu.io/upload_images/14423059-a8f1bf114c7a42d3.png\"></a></p>\n<p>分析gc日志，可以看出老年代的内存使用率达到99.79%。内存使用率已经满了。出现内存溢出。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-561c9ae2e6106e2d.png\" loading=\"lazy\"></p>\n<p>上面是jvisualvm监控堆内存变化的结果，注意看图上，抛出OOM的时间在14:56:54左右，重点关注这个时间点左右的曲线变化。发现堆使用的数量突然间急速下滑，这代表这一点，当一个线程抛出OOM异常后，它说占用的内存空间会全部被释放掉，从而不会影响其他线程的运行。</p>\n<p>这个例子只是演示了堆内存溢出的情况，如果是栈内存溢出，结论也是一样的。</p>\n","categories":["JVM"],"tags":["JVM","OOM"]},{"title":"常用性能监控指南","url":"/2018-10-30-%E5%B8%B8%E7%94%A8%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E6%8C%87%E5%8D%97/","content":"<p>本文介绍一些常用的Linux的性能监控命令。</p>\n<h2 id=\"top命令-监控进程状态\"><a href=\"#top命令-监控进程状态\" class=\"headerlink\" title=\"top命令 - 监控进程状态\"></a>top命令 - 监控进程状态</h2><p>这个命令适用于来实时获取操作系统的整体情况，且能够实时反映出系统各个进程的资源占用情况。类似于window的任务管理器，使用top命令可以显示进程信息。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">top</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-3dbaa1cdbb8847a9?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<p>图中，上半部分显示操作系统的各种信息，包括cpu使用情况，内存使用情况，进程执行情况等，下半部分显示了活动比较频繁的进程，可以在这些进程中排查问题的端倪，确定可疑的进程后，可以指定相关进程，并设置信息更新时间，显示完成命令，下面来看一个例子，其中，指定显示进程9836，每隔5秒的进程的资源占用情况。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">top -d 5 -p 9836 -c </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ps命令-查看当前进程\"><a href=\"#ps命令-查看当前进程\" class=\"headerlink\" title=\"ps命令 - 查看当前进程\"></a>ps命令 - 查看当前进程</h2><p>这个命令适用于用来查看某个瞬间存在哪些进程。这些进程的状态和信息等，通过ps命令，可以判断当前进程的状态，从而找出问题的原因，使用ps命令可以显示系统中当前的所有进程。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ps -ef</span><br></pre></td></tr></table></figure>\n<p>同时，也可以指定查看相关的进程，下面来看一个例子，其中，查看所有java进程。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ps -ef | grep java</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-f9642196e5d5040e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<h2 id=\"netstat命令-查看网络连接情况\"><a href=\"#netstat命令-查看网络连接情况\" class=\"headerlink\" title=\"netstat命令 - 查看网络连接情况\"></a>netstat命令 - 查看网络连接情况</h2><p>这个命令可以知道linux系统的网络情况，适用于来查看网络连接信息，其中，可以查看当前所有的连接。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">netstat -lntp</span><br></pre></td></tr></table></figure>\n<p>此外还可以监听TCP的连接。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">netstat -atl</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-a72b2d97476325e5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"><br>甚至可以统计端口的当前连接数，下面来看一个例子，其中，查看10090端口的当前连接数。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">netstat -lntp | grep 10090 | wc -l</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"iostat命令-查看系统设备的IO负载情况\"><a href=\"#iostat命令-查看系统设备的IO负载情况\" class=\"headerlink\" title=\"iostat命令 - 查看系统设备的IO负载情况\"></a>iostat命令 - 查看系统设备的IO负载情况</h2><p>这个命令适用于查看监控系统设置的IO负载情况，对系统的的磁盘操作活动进行监控，iostat首次运行时，显示系统启动开始的各项统计信息，之后运行iostat将显示自上次运行该命令以后的统计信息，用户可以通过制定统计的次数和时间来获取所需要的统计信息，下面来看一个例子，其中，每秒采样一次，连续5次，观察磁盘IO的使用情况。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">iostat -k 1 5</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-a1b129fc00ac4e12?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<h2 id=\"sar命令-性能监控\"><a href=\"#sar命令-性能监控\" class=\"headerlink\" title=\"sar命令 - 性能监控\"></a>sar命令 - 性能监控</h2><p>这个命令适用于用来监控cpu的使用率和空闲情况，以及磁盘IO的使用情况，网卡流量的使用情况等，监控cpu情况，可以使用-u参数，输出cpu使用情况的统计信息。下面来看一下例子，其中，每秒采样一次，连续10次，观察cpu的使用情况。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sar -u 1 10</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-3a6c2945780b2fff?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"><br>指的注意的是，如果%user + %sys超过85%，进程可能要花费时间在队列中等待，因此响应时间和吞吐量会受影响，但是使用率100%不一定意味着cpu就是性能瓶颈，此时可以进一步看看vmstat命令-r值是否超出服务器的cpu数量，此外，%system比较大，说明系统管理方面花费了很多时间，需要进一步的分析其他软硬件因素，监控磁盘IO的情况，可以使用-d参数，  输出每块设备的活动信息，下面来看一个例子，其中，每秒采样一次，连续10次，观察磁盘IO的使用情况，其中-p参数可以打印出磁盘设备的名称。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sar -pd 1 10</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-5da3a4fd89716fb1?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"><br>如果%util接近100%，可能由于产生的IO请求太多,IO系统已经满负荷，因此磁盘存在瓶颈。此外，如果%await%远大于%svctm，可能是因为磁盘IO队列太长，导致响应时间变慢。</p>\n<h2 id=\"vmstat命令-虚拟内存监控\"><a href=\"#vmstat命令-虚拟内存监控\" class=\"headerlink\" title=\"vmstat命令 - 虚拟内存监控\"></a>vmstat命令 - 虚拟内存监控</h2><p>这个命令适用于监控cpu使用率，内存使用，虚拟内存交换情况，IO读写情况等，下面来看一个例子，其中，每秒采样1次，连续5次，观察虚拟内存的使用情况。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">vmstat 1 5</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-7d11eeede010f54d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"><br>其中，第一行显示是linux操作系统启动后的平均值，所以一般看第二行后面的值。<br><img src=\"http://upload-images.jianshu.io/upload_images/14423059-648bdddf5fbb4916?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"><br>其中，swpd，si，so三个指标的值比较高，可能是内存不足，如果cache使用率比较低，而swap的si和so有比较高的数据值时，应该警惕内存的性能问题，此外，注意的是，当内存严重不足时，系统会频繁使用调页和交换，这增加了磁盘IO的负载，进一步降低了系统对作业的执行速度，即系统IO资源问题又会影响到内存资源的分配。</p>\n<h2 id=\"nmon命令-性能监控\"><a href=\"#nmon命令-性能监控\" class=\"headerlink\" title=\"nmon命令 - 性能监控\"></a>nmon命令 - 性能监控</h2><p>nmon可以在一个屏幕上显示所有重要的性能信息，包括cpu信息，内存信息，网络信息，磁盘IO信息等，并动态的对其进行更新，可通过 IBM 官网上免费下载获取或者通过 yum 命令直接安装。这里，使用 wget 方式进行下载与安装。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget http://sourceforge.net/projects/nmon/files/nmon_linux_14i.tar.gz</span><br><span class=\"line\">tar zxvf nmon_linux_14i.tar.gz</span><br><span class=\"line\">chmod 777 nmon_x86_64_sles11</span><br></pre></td></tr></table></figure>\n<p>至此，安装完成。通过下面命令进行启动。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./nmon_x86_64_sles11</span><br></pre></td></tr></table></figure>\n<p>在运行界面上，输入 C 显示CPU信息，输入 M 显示内存信息，输入 N 显示网络信息，输入 D 显示硬盘 I&#x2F;O 信息。<br><img src=\"http://upload-images.jianshu.io/upload_images/14423059-36d8182b6ba16f64?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n","categories":["性能"],"tags":["性能","linux"]},{"title":"Git指令整理","url":"/git/2017-02-15-Git%E6%8C%87%E4%BB%A4%E6%95%B4%E7%90%86/","content":"<blockquote>\n<p>随便整理的一些自用的Git指令</p>\n</blockquote>\n<h1 id=\"GitHub创建仓库提示代码\"><a href=\"#GitHub创建仓库提示代码\" class=\"headerlink\" title=\"GitHub创建仓库提示代码\"></a>GitHub创建仓库提示代码</h1><pre><code>echo &quot;# 项目名&quot; &gt;&gt; README.md\ngit init\ngit add README.md\ngit commit -m &quot;first commit&quot;\ngit remote add origin git@github.com:qiubaiying/项目名.git\ngit push -u origin master\n</code></pre>\n<p>若仓库存在直接push</p>\n<pre><code>git remote add origin git@github.com:qiubaiying/test.git\ngit push -u origin master\n</code></pre>\n<h1 id=\"常用操作\"><a href=\"#常用操作\" class=\"headerlink\" title=\"常用操作\"></a>常用操作</h1><h4 id=\"创建仓库（初始化）\"><a href=\"#创建仓库（初始化）\" class=\"headerlink\" title=\"创建仓库（初始化）\"></a>创建仓库（初始化）</h4><pre><code>在当前指定目录下创建\ngit init\n\n新建一个仓库目录\ngit init [project-name]\n\n克隆一个远程项目\ngit clone [url]\n</code></pre>\n<h4 id=\"添加文件到缓存区\"><a href=\"#添加文件到缓存区\" class=\"headerlink\" title=\"添加文件到缓存区\"></a>添加文件到缓存区</h4><pre><code>添加所有变化的文件\n git add .\n\n添加名称指定文件\ngit add text.txt\n</code></pre>\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><pre><code>设置提交代码时的用户信息\ngit config [--global] user.name &quot;[name]&quot;\ngit config [--global] user.email &quot;[email address]&quot;\n</code></pre>\n<h4 id=\"提交\"><a href=\"#提交\" class=\"headerlink\" title=\"提交\"></a>提交</h4><pre><code>提交暂存区到仓库区\ngit commit -m &quot;msg&quot;\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n</code></pre>\n<h4 id=\"远程同步\"><a href=\"#远程同步\" class=\"headerlink\" title=\"远程同步\"></a>远程同步</h4><pre><code># 下载远程仓库的所有变动\n$ git fetch [remote]\n\n# 显示所有远程仓库\n$ git remote -v\n\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n</code></pre>\n<h4 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h4><pre><code># 列出所有本地分支\n$ git branch\n\n# 列出所有远程分支\n$ git branch -r\n\n# 列出所有本地分支和远程分支\n$ git branch -a\n\n# 新建一个分支，但依然停留在当前分支\n$ git branch [branch-name]\n\n# 新建一个分支，并切换到该分支\n$ git checkout -b [branch]\n\n# 新建一个分支，指向指定commit\n$ git branch [branch] [commit]\n\n# 新建一个分支，与指定的远程分支建立追踪关系\n$ git branch --track [branch] [remote-branch]\n\n# 切换到指定分支，并更新工作区\n$ git checkout [branch-name]\n\n# 切换到上一个分支\n$ git checkout -\n\n# 建立追踪关系，在现有分支与指定的远程分支之间\n$ git branch --set-upstream [branch] [remote-branch]\n\n# 合并指定分支到当前分支\n$ git merge [branch]\n\n# 选择一个commit，合并进当前分支\n$ git cherry-pick [commit]\n\n# 删除分支\n$ git branch -d [branch-name]\n\n# 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n</code></pre>\n<h4 id=\"标签Tags\"><a href=\"#标签Tags\" class=\"headerlink\" title=\"标签Tags\"></a>标签Tags</h4><pre><code>添加标签 在当前commit\ngit tag -a v1.0 -m &#39;xxx&#39; \n\n添加标签 在指定commit\ngit tag v1.0 [commit]\n\n查看\ngit tag\n\n删除\ngit tag -d V1.0\n\n删除远程tag\ngit push origin :refs/tags/[tagName]\n\n推送\ngit push origin --tags\n\n拉取\ngit fetch origin tag V1.0\n\n新建一个分支，指向某个tag\ngit checkout -b [branch] [tag]\n</code></pre>\n<h4 id=\"查看信息\"><a href=\"#查看信息\" class=\"headerlink\" title=\"查看信息\"></a>查看信息</h4><pre><code># 显示有变更的文件\n$ git status\n\n# 显示当前分支的版本历史\n$ git log\n\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n\n# 搜索提交历史，根据关键词\n$ git log -S [keyword]\n\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=format:%s\n\n# 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件\n$ git log [tag] HEAD --grep feature\n\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n\n# 显示暂存区和工作区的差异\n$ git diff\n\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff HEAD\n\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n\n# 显示今天你写了多少行代码\n$ git diff --shortstat &quot;@&#123;0 day ago&#125;&quot;\n\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n\n# 显示当前分支的最近几次提交\n$ git reflog\n</code></pre>\n<h4 id=\"撤销\"><a href=\"#撤销\" class=\"headerlink\" title=\"撤销\"></a>撤销</h4><pre><code># 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n\n# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n\n# 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n\n# 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n</code></pre>\n<h4 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h4><pre><code># 生成一个可供发布的压缩包\n$ git archives\n</code></pre>\n","categories":["git"],"tags":["Git"]},{"title":"Git 代码回滚","url":"/git/2017-02-16-Git-%E4%BB%A3%E7%A0%81%E5%9B%9E%E6%BB%9A/","content":"<blockquote>\n<p>并不适合阅读的个人文档。</p>\n</blockquote>\n<h1 id=\"git-revert-和-git-reset-的区别\"><a href=\"#git-revert-和-git-reset-的区别\" class=\"headerlink\" title=\"git revert 和 git reset 的区别\"></a><strong>git revert</strong> 和 <strong>git reset</strong> 的区别</h1><p> 先看图：</p>\n<p><img src=\"https://ww3.sinaimg.cn/large/006tNbRwgy1fcr9tu6vdjj30t30ez0y8.jpg\" loading=\"lazy\"></p>\n<p><strong>sourceTree</strong> 中 <strong>revert</strong> 译为**<code>提交回滚</code>**，作用为忽略你指定的版本，然后提交一个新的版本。新的版本中已近删除了你所指定的版本。</p>\n<p><strong>reset</strong> 为 <strong>重置到这次提交</strong>，将内容重置到指定的版本。<code>git reset</code> 命令后面是需要加2种参数的：<code>–-hard</code> 和 <code>–-soft</code>。这条命令默认情况下是 <code>-–soft</code>。</p>\n<p>执行上述命令时，这该条commit号之 后（时间作为参考点）的所有commit的修改都会退回到git缓冲区中。使用<code>git status</code> 命令可以在缓冲区中看到这些修改。而如果加上<code>-–hard</code>参数，则缓冲区中不会存储这些修改，git会直接丢弃这部分内容。可以使用 <code>git push origin HEAD --force</code> 强制将分区内容推送到远程服务器。</p>\n<h4 id=\"代码回退\"><a href=\"#代码回退\" class=\"headerlink\" title=\"代码回退\"></a>代码回退</h4><p>默认参数 <code>-soft</code>,所有commit的修改都会退回到git缓冲区<br>参数<code>--hard</code>，所有commit的修改直接丢弃</p>\n<pre><code>$ git reset --hard HEAD^ \t\t回退到上个版本\n$ git reset --hard commit_id\t退到/进到 指定commit_id\n</code></pre>\n<p>推送到远程\t</p>\n<pre><code>$ git push origin HEAD --force\n</code></pre>\n<h4 id=\"可以吃的后悔药-gt-版本穿梭\"><a href=\"#可以吃的后悔药-gt-版本穿梭\" class=\"headerlink\" title=\"可以吃的后悔药-&gt;版本穿梭\"></a>可以吃的后悔药-&gt;版本穿梭</h4><p>当你回滚之后，又后悔了，想恢复到新的版本怎么办？</p>\n<p>用<code>git reflog</code>打印你记录你的每一次操作记录</p>\n<pre><code>$ git reflog\n\n输出：\nc7edbfe HEAD@&#123;0&#125;: reset: moving to c7edbfefab1bdbef6cb60d2a7bb97aa80f022687\n470e9c2 HEAD@&#123;1&#125;: reset: moving to 470e9c2\nb45959e HEAD@&#123;2&#125;: revert: Revert &quot;add img&quot;\n470e9c2 HEAD@&#123;3&#125;: reset: moving to 470e9c2\n2c26183 HEAD@&#123;4&#125;: reset: moving to 2c26183\n0f67bb7 HEAD@&#123;5&#125;: revert: Revert &quot;add img&quot;\n</code></pre>\n<p>找到你操作的id如：<code>b45959e</code>，就可以回退到这个版本</p>\n<pre><code>$ git reset --hard b45959e\n</code></pre>\n","categories":["git"],"tags":["Git"]},{"title":"使用 .gitignore 忽略 Git 仓库中的文件","url":"/git/2017-02-22-%E4%BD%BF%E7%94%A8-.gitignore-%E5%BF%BD%E7%95%A5-git-%E4%BB%93%E5%BA%93%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6/","content":"<blockquote>\n<p>使用 <code>.gitignore</code> 文件忽略指定文件</p>\n</blockquote>\n<h2 id=\"gitignore\"><a href=\"#gitignore\" class=\"headerlink\" title=\".gitignore\"></a>.gitignore</h2><p>在Git中，很多时候你只想将代码提交到仓库，而不是将当前文件目录下的文件全部提交到Git仓库中，例如在MacOS系统下面的<code>.DS_Store</code>文件，或者是Xocde的操作记录，又或者是pod库的中一大串的源代码。这种情况下使用<code>.gitignore</code>就能够在Git提交时自动忽略掉这些文件。</p>\n<h2 id=\"忽略的格式\"><a href=\"#忽略的格式\" class=\"headerlink\" title=\"忽略的格式\"></a>忽略的格式</h2><ul>\n<li><code>#</code> :此为注释 – 将被 Git 忽略</li>\n<li><code>*.a</code> :忽略所有 <code>.a</code> 结尾的文件</li>\n<li><code>!lib.a</code> : 不忽略 <code>lib.a</code> 文件</li>\n<li><code>/TODO</code> :仅仅忽略项目根目录下的 <code>TODO</code> 文件,不包括 <code>subdir/TODO</code></li>\n<li><code>build/</code> : 忽略 <code>build/</code> 目录下的所有文件</li>\n<li><code>doc/*.txt</code> : 会忽略 <code>doc/notes.txt</code> 但不包括 <code>doc/server/arch.txt</code></li>\n</ul>\n<h2 id=\"创建方法\"><a href=\"#创建方法\" class=\"headerlink\" title=\"创建方法\"></a>创建方法</h2><h4 id=\"从-github-上获取\"><a href=\"#从-github-上获取\" class=\"headerlink\" title=\"从 github 上获取\"></a>从 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dpdGh1Yi9naXRpZ25vcmUuZ2l0\">github<i class=\"fa fa-external-link-alt\"></i></span> 上获取</h4><p>github上整理了一些常用需要的项目中需要忽略的文件配置，根据需要进行获取</p>\n<pre><code>https://github.com/github/gitignore.git\n</code></pre>\n<p>与 Xcode 相关的三个文件</p>\n<ul>\n<li>Xcode.gitignore</li>\n<li>Objective-C.gitignore</li>\n<li>Swift.gitignore</li>\n</ul>\n<p><code>Xcode.gitignore</code>忽略 <code>Xcode</code> 配置信息，如操作记录，默认打开窗口等</p>\n<p>其他两个在 <code>Xcode.gitignore</code> 基础上针对不同的语言进行忽略</p>\n<p>将这些文件重写命名为 <code>.gittignore</code></p>\n<pre><code>$ mv Swift.gitignore .gittignore\n</code></pre>\n<h4 id=\"通过-gitignore-io-创建（推荐）\"><a href=\"#通过-gitignore-io-创建（推荐）\" class=\"headerlink\" title=\"通过 gitignore.io 创建（推荐）\"></a>通过 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0aWdub3JlLmlvLw==\">gitignore.io<i class=\"fa fa-external-link-alt\"></i></span> 创建（推荐）</h4><h6 id=\"先自定义终端命令：\"><a href=\"#先自定义终端命令：\" class=\"headerlink\" title=\"先自定义终端命令：\"></a>先自定义终端命令：</h6><p>macOS下默认是<code>\\#!/bin/bash</code>：</p>\n<pre><code>$ echo &quot;function gi() &#123; curl -L -s https://www.gitignore.io/api/\\$@ ;&#125;&quot; &gt;&gt; ~/.bash_profile &amp;&amp; source ~/.bash_profile\n</code></pre>\n<p>如果是 <code>#!/bin/zsh</code></p>\n<pre><code>$ echo &quot;function gi() &#123; curl -L -s https://www.gitignore.io/api/\\$@ ;&#125;&quot; &gt;&gt; ~/.zshrc &amp;&amp; source ~/.zshrc\n</code></pre>\n<h6 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h6><p>在当前终端目录下</p>\n<pre><code>$ gi swift &gt; .gitignore\n</code></pre>\n<p>就会针对 Swifit 类型的工程创建 <code>.gitignore</code> 文件。</p>\n","categories":["git"],"tags":["Git","Github"]},{"url":"/java/2017-07-12-Java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%AD%A6%E4%B9%A0/","content":"<p>此文只能说是java多线程的一个入门，其实java里头线程完全可以写一本书了，但是如果基本的都没有学好，掌握好，又怎么能上一个台阶呢？</p>\n<p>本文主要将java中多线程的使用方法，线程同步，线程数据传递，线程状态以及相应的线程函数用法，概述等。首先让我们来了解下在操作系统中进程和线程的区别：</p>\n<p><strong>进程</strong> 每个进程都有独立的代码和数据空间(进程上下文)。进程间的切换会有很大的开销，一个进程包含1-n个线程，(进程是资源分配的最小单位)</p>\n<p><strong>线程</strong> 同一类进程共享代码和数据空间，每个线程有独立的运行栈和程序计数器，线程切换开销小，(线程是cpu调度的最小单位)</p>\n<p>进程和线程一样，分为五个阶段：创建，就绪，运行，阻塞，终止</p>\n<p>多进程是指操作系统能同时运行多个任务(程序)</p>\n<p>多线程是指在同一个程序中有多个顺序流在执行。</p>\n<p>java中要实现多线程，有两种手段，一种是继承Thread类，重写run方法，另外一种是实现Runnable接口，重写run方法。(其实，准确来说，应该还有一种，实现Callable接口，并与Future，线程池结合使用)</p>\n<h1 id=\"扩展java-lang-Thread类\"><a href=\"#扩展java-lang-Thread类\" class=\"headerlink\" title=\"扩展java.lang.Thread类\"></a>扩展java.lang.Thread类</h1><p>这里继承Thread类的方法是比较常用的一种，如果你只是想创建一个线程，没有其他的特殊的要求，那么可以使用Thread。(笔者建议使用Runnable)。下面来看一个简单的实例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ypb.concurrent.chapter1;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@className</span> MyThread</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span> 继承Thread类的方式，创建线程</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> yangpengbing</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyThread</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">times</span> <span class=\"operator\">=</span> <span class=\"number\">5</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; times; i++) &#123;</span><br><span class=\"line\">            System.out.println(name + <span class=\"string\">&quot;运行：&quot;</span> + i);</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                sleep((<span class=\"type\">long</span>) (Math.random() * <span class=\"number\">10</span>));</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Thread</span> <span class=\"variable\">t1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>(<span class=\"string\">&quot;A&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Thread</span> <span class=\"variable\">t2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>(<span class=\"string\">&quot;B&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        t1.start();</span><br><span class=\"line\">        t2.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">A运行：0</span><br><span class=\"line\">A运行：1</span><br><span class=\"line\">B运行：0</span><br><span class=\"line\">B运行：1</span><br><span class=\"line\">A运行：2</span><br><span class=\"line\">B运行：2</span><br><span class=\"line\">B运行：3</span><br><span class=\"line\">B运行：4</span><br><span class=\"line\">A运行：3</span><br><span class=\"line\">A运行：4</span><br></pre></td></tr></table></figure>\n<p>在运行一下：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">A运行：0</span><br><span class=\"line\">B运行：0</span><br><span class=\"line\">B运行：1</span><br><span class=\"line\">A运行：1</span><br><span class=\"line\">A运行：2</span><br><span class=\"line\">B运行：2</span><br><span class=\"line\">A运行：3</span><br><span class=\"line\">A运行：4</span><br><span class=\"line\">B运行：3</span><br><span class=\"line\">B运行：4</span><br></pre></td></tr></table></figure>\n\n<p>说明: </p>\n<p>程序启动运行main时候，java虚拟机启动一个进程，主线程main在main()调用的时候创建，随着调用t1和t2两个对象的start方法，另外两个线程也启动了，这样，整个应用就在多线程下运行了。</p>\n<p>注意：start()方法调用后并不是立即执行多线程代码，而是使得该线程编程可执行状态(runnable)，什么时候运行是由操作系统决定的。</p>\n<p>从程序运行的结果可以发现，多线程程序是乱序执行的，因此，只有乱序执行的代码才有必要设计为多线程。</p>\n<p>Thread.sleep()方法调用的目的是不让当前线程独自霸占该进程获得的CPU资源，以留出一定的时间给其他线程执行的机会。</p>\n<p>实际上所有的多线程代码执行顺序都是不确定的。每次执行的结果都是随机的。</p>\n<p>但是start方法重复调用的话，会出现java.lang.IllegalThreadStateException异常。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Thread</span> <span class=\"variable\">t1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>(<span class=\"string\">&quot;A&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">Thread</span> <span class=\"variable\">t2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>(<span class=\"string\">&quot;B&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    t1.start();</span><br><span class=\"line\">    t2.start();</span><br><span class=\"line\">    t2.start();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">Exception in thread &quot;main&quot; java.lang.IllegalThreadStateException</span><br><span class=\"line\">\tat java.lang.Thread.start(Thread.java:708)</span><br><span class=\"line\">\tat com.ypb.concurrent.chapter1.MyThread.main(MyThread.java:36)</span><br><span class=\"line\">A运行：0</span><br><span class=\"line\">B运行：0</span><br><span class=\"line\">B运行：1</span><br><span class=\"line\">A运行：1</span><br><span class=\"line\">A运行：2</span><br><span class=\"line\">B运行：2</span><br><span class=\"line\">A运行：3</span><br><span class=\"line\">A运行：4</span><br><span class=\"line\">B运行：3</span><br><span class=\"line\">B运行：4</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"实现java-lang-Runnable接口\"><a href=\"#实现java-lang-Runnable接口\" class=\"headerlink\" title=\"实现java.lang.Runnable接口\"></a>实现java.lang.Runnable接口</h1><p>采用Runnable也是非常常用的一种，我们只需要重写run方法即可，下面来看个实例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ypb.concurrent.chapter1;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@className</span> MyThread2</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span> 实现Runnable接口，创建线程</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> yangpengbing</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyThread2</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">MyRunnable</span>(<span class=\"string\">&quot;A&quot;</span>)).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">MyRunnable</span>(<span class=\"string\">&quot;B&quot;</span>)).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyRunnable</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyRunnable</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">            System.out.println(name + <span class=\"string\">&quot;运行：&quot;</span> + i);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                Thread.sleep((<span class=\"type\">long</span>) (Math.random() * <span class=\"number\">10</span>));</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">B运行：0</span><br><span class=\"line\">A运行：0</span><br><span class=\"line\">B运行：1</span><br><span class=\"line\">A运行：1</span><br><span class=\"line\">B运行：2</span><br><span class=\"line\">A运行：2</span><br><span class=\"line\">A运行：3</span><br><span class=\"line\">B运行：3</span><br><span class=\"line\">B运行：4</span><br><span class=\"line\">A运行：4</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<p>MyThread2类是通过实现Runnable接口，使得该类有了多线程类的特征，run()方法是多线程程序的一个约定，所有的多线程代码都在是run方法中里面，Thread类实际上也是实现了Runnable接口的类。</p>\n<p>在启动的多线程的时候，需要先通过Thread类的构造方法Thread(Runnable target)构造出对象，然后调用Thread对象的start()方法来运行多线程代码。</p>\n<p>实际上所有的多线程代码都是通过运行Thread的start()方法来运行的，因此，不管扩展Thread类还是实现Runnable接口来实现多线程，最终都是通过Thread的对象API来控制多线程的，熟悉Thread类的API是进行多线程编程的基础。</p>\n<h1 id=\"Thread和Runnable的区别\"><a href=\"#Thread和Runnable的区别\" class=\"headerlink\" title=\"Thread和Runnable的区别\"></a>Thread和Runnable的区别</h1><p>如果一个类继承Thread，这不适合资源共享，但是如果实现了Runnable接口的话，则很容易实现资源共享。</p>\n<p>总结：</p>\n<p>实现Runnable接口比继承Thread类所具有的优势：</p>\n<ul>\n<li>适合多个相同的程序代码的线程处理同一资源</li>\n<li>可以避免java中的单继承的限制</li>\n<li>增加程序的健壮性，代码可以被多个线程共享，代码和数据独立</li>\n<li>线程池只能放入Runnable或者Callable类，不能直接放入继承Thread的类。</li>\n</ul>\n<p>提醒一下大家： main方法其实也是一个线程，在java中所有的线程都是同时启动的，至于什么时候，哪个先执行，完全看谁先得到CPU的资源</p>\n<p>在java中，每次程序运行至少启动两个线程，一个main线程，一个是垃圾收集线程，因为当每次使用java名称生成一个类的时候，实际上都会启动一个JVM，每个JVM实际上都是在操作系统中启动一个进程。</p>\n<h1 id=\"线程状态转换\"><a href=\"#线程状态转换\" class=\"headerlink\" title=\"线程状态转换\"></a>线程状态转换</h1><p>下面这张图非常重要，如果看懂了这张图，那么对于多线程的理解将会更加深刻。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-64eaa44c5c5e391d.jpg\" loading=\"lazy\"></p>\n<ol>\n<li>新建状态(new)：新创建一个线程对象</li>\n<li>继续状态(Runnable)：线程对象创建后，其他线程调用了该对象的start()方法。该状态的线程位于可运行的线程池中，变得可运行，等待获取CPU的使用权。</li>\n<li>运行状态(Running)：就绪状态的线程获取到CPU使用权，执行程序代码。</li>\n<li>阻塞状态(Blocked)：阻塞状态是线程因为某种原因放弃使用CPU使用权，暂时停止运行，知道线程进入就绪状态，才有机会转到运行状态，阻塞的情况分为三种：</li>\n</ol>\n<ul>\n<li>等待阻塞：运行的线程执行了wait方法，JVM会把该线程放入等待池中，(wait会释放持有的锁)</li>\n<li>同步阻塞：运行的线程在获取对象的同步锁是，若同步锁被别的线程占用，则JVM会把该线程放入到锁池中</li>\n<li>其他阻塞：运行的线程执行sleep()或者join()方法，或者发出I&#x2F;O请求时，JVM会把该线程设置为阻塞状态，但sleep()状态超时，join()等待线程终止或者超时，或者I&#x2F;O处理完毕时，线程重新进入就绪状态。(sleep是不会释放对象锁的)</li>\n</ul>\n<ol start=\"5\">\n<li>死亡状态(Dead)：线程执行完毕了或者因异常退出run()方法，该线程结束生命周期。</li>\n</ol>\n<h1 id=\"线程调度\"><a href=\"#线程调度\" class=\"headerlink\" title=\"线程调度\"></a>线程调度</h1><ol>\n<li>调整线程的优先级：java线程有优先级，优先级越高的线程获得较多的运行机会。</li>\n</ol>\n<ul>\n<li>java线程中的优先级用整数来表示，取值范围是1到10，Thread类有三个静态常量：</li>\n</ul>\n<p>static int MAX_PRIORITY 表示的是线程可以具有最高优先级，取值为10</p>\n<p>static int MIN_PRIORITY 表示的是线程具有较低的优先级，取值是1</p>\n<p>static int NORM_PRIORITY 表示的是分配给线程默认的优先级，取值是5</p>\n<p>Thread类的setPriority()和getPriority()方法分别用来设置和获取线程的优先级。</p>\n<p>每个线程都有默认的优先级，主线程的默认优先级是Thread.NORM_PRIORITY</p>\n<p>线程的优先级有继承关系，比如A线程中创建了B线程，那么B将和A具有相同的优先级。</p>\n<p>JVM提供了10个线程优先级，但与常见的操作系统下都不能很好的映射，如果希望程序能移植到各个操作系统中，应该仅仅使用Thread类中的三个常量作为优先级，这样能保证同样的优先级采用同样的调度方式。</p>\n<ol start=\"2\">\n<li><p>线程睡眠：Thread.sleep(long millis)方法，使得线程转到阻塞状态，millis设置的是睡眠时间，单位毫秒，当睡眠结束后，就转为就绪状态(Runnable)状态，sleep()平台移植性好。</p>\n</li>\n<li><p>线程等待：Object类中的wait()方法，导致当前的线程等待，直到其他线程调用此对象的notify方法或notifyAll()方法唤醒。这个两个唤醒方法也是Object类中的方法，行为等价于调用wait(0)一样。</p>\n</li>\n<li><p>线程让步：Thread.yield()方法，暂停当前正在执行的线程对象，把执行机会让给相同或者更高优先级的线程。</p>\n</li>\n<li><p>线程加入：join()方法，等待其他线程终止，在当前线程中调用另一个线程的join方法，则当前线程转入阻塞状态，直到另外一个线程运行结束，当前线程在由阻塞状态转为就绪状态。</p>\n</li>\n<li><p>线程唤醒：Object类中的notify()方法，唤醒在此对象监视器上等待的单个线程，如果所有线程都在此对象上等待，则会选择唤醒其中的一个，选择是任意的，并在对实现做出决定是发生，线程通过调用wait()方法，在对象的监视器上等待，直到当前的线程放弃此对象上的锁定，才能继续执行被唤醒的线程，被唤醒的线程将以常规方式在对该对象上主动同步的其他所有线程就行竞争，notifyAll()，唤醒在此对象监视器上等待的所有线程。</p>\n</li>\n</ol>\n<h1 id=\"线程常用API说明\"><a href=\"#线程常用API说明\" class=\"headerlink\" title=\"线程常用API说明\"></a>线程常用API说明</h1><h2 id=\"Java线程创建形式Thread构造函数详解\"><a href=\"#Java线程创建形式Thread构造函数详解\" class=\"headerlink\" title=\"Java线程创建形式Thread构造函数详解\"></a>Java线程创建形式Thread构造函数详解</h2><h1 id=\"常见线程名词解释\"><a href=\"#常见线程名词解释\" class=\"headerlink\" title=\"常见线程名词解释\"></a>常见线程名词解释</h1><h1 id=\"线程同步\"><a href=\"#线程同步\" class=\"headerlink\" title=\"线程同步\"></a>线程同步</h1><h1 id=\"线程数据传递\"><a href=\"#线程数据传递\" class=\"headerlink\" title=\"线程数据传递\"></a>线程数据传递</h1><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veWpkX2h5Y2Zfc3BhY2UvcC83NTI2NjA4Lmh0bWw=\">https://www.cnblogs.com/yjd_hycf_space/p/7526608.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2V2YW5rYWthL2FydGljbGUvZGV0YWlscy80NDE1MzcwOSN0MQ==\">https://blog.csdn.net/evankaka/article/details/44153709#t1<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbm90ZWxlc3MvcC8xMDM1NDc1My5odG1s\">https://www.cnblogs.com/noteless/p/10354753.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2V2YW5rYWthL2FydGljbGUvZGV0YWlscy81MTYyNzM4MA==\">https://blog.csdn.net/evankaka/article/details/51627380<i class=\"fa fa-external-link-alt\"></i></span></p>\n"},{"title":"jdk8源码之HashMap深度解析","url":"/java/2017-03-03-JDK8%E6%BA%90%E7%A0%81%E4%B9%8BHashMap%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/","content":"<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3d1cGVpeHVhbi9KREtTb3VyY2VDb2RlMS44L2Jsb2IvbWFzdGVyL3NyYy9qYXZhL3V0aWwvSGFzaE1hcC5qYXZh\">https://github.com/wupeixuan/JDKSourceCode1.8/blob/master/src/java/util/HashMap.java<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"HashMap底层实现原理\"><a href=\"#HashMap底层实现原理\" class=\"headerlink\" title=\"HashMap底层实现原理\"></a>HashMap底层实现原理</h2><p>HashMap底层原理总结，几个Hash集合之间的对比。</p>\n<pre><code>参考：什么是HashMap？\n\n参考：Java 8系列之重新认识HashMap\n</code></pre>\n<h3 id=\"HashMap底层存储结构\"><a href=\"#HashMap底层存储结构\" class=\"headerlink\" title=\"HashMap底层存储结构\"></a>HashMap底层存储结构</h3><p>HashMap是一个用于存储Key-Value键值对的集合，每一个键值对也叫做一个Entry。这些Entry分散存储在一个数组当中，这个数组就是HashMap的主干。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * The table, initialized on first use, and resized as</span></span><br><span class=\"line\"><span class=\"comment\"> * necessary. When allocated, length is always a power of two.</span></span><br><span class=\"line\"><span class=\"comment\"> * (We also tolerate length zero in some operations to allow</span></span><br><span class=\"line\"><span class=\"comment\"> * bootstrapping mechanics that are currently not needed.)</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">transient</span> Node&lt;K,V&gt;[] table;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Basic hash bin node, used for most entries.  (See below for</span></span><br><span class=\"line\"><span class=\"comment\"> * TreeNode subclass, and in LinkedHashMap for its Entry subclass.)</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Node</span>&lt;K,V&gt; <span class=\"keyword\">implements</span> <span class=\"title class_\">Map</span>.Entry&lt;K,V&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"type\">int</span> hash;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> K key;</span><br><span class=\"line\">    V value;</span><br><span class=\"line\">    Node&lt;K,V&gt; next;</span><br><span class=\"line\"></span><br><span class=\"line\">    Node(<span class=\"type\">int</span> hash, K key, V value, Node&lt;K,V&gt; next) &#123; ... &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> K <span class=\"title function_\">getKey</span><span class=\"params\">()</span>        &#123; <span class=\"keyword\">return</span> key; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> V <span class=\"title function_\">getValue</span><span class=\"params\">()</span>      &#123; <span class=\"keyword\">return</span> value; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> key + <span class=\"string\">&quot;=&quot;</span> + value; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"title function_\">hashCode</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> Objects.hashCode(key) ^ Objects.hashCode(value);&#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> V <span class=\"title function_\">setValue</span><span class=\"params\">(V newValue)</span> &#123; ... &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"type\">boolean</span> <span class=\"title function_\">equals</span><span class=\"params\">(Object o)</span> &#123; ... &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>因为table数组的长度是有限的，再好的hash函数也会出现index冲突的情况，所以我们用链表来解决这个问题，table数组的每一个元素不只是一个Entry对象，也是一个链表的头节点，每一个Entry对象通过Next指针指向下一个Entry节点。当新来的Entry映射到冲突数组位置时，只需要插入对应的链表即可。</p>\n<p>需要注意的是：JDK1.7 新来的Entry节点插入链表时，会插在链表的头部，因为HashMap的发明者认为，后插入的Entry被查找的可能性更大。 JDK1.8是将节点查下链表的尾部，因为需要遍历链表，计算长度，插入头部，需要移动链表</p>\n<p>HashMap中的table数组如下所示：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-837dac531ca01daa.png\" loading=\"lazy\"></p>\n<p>所以，HashMap是数组+链表+红黑树（在Java 8中为了优化Entry的查找性能，新加了红黑树部分）实现的。</p>\n<h3 id=\"Put方法原理\"><a href=\"#Put方法原理\" class=\"headerlink\" title=\"Put方法原理\"></a>Put方法原理</h3><p>调用hashMap.put(&quot;str&quot;, 1)，将会在HashMap的table数组中插入一个Key为“str”的元素，这时候需要我们用一个hash()函数来确定Entry的插入位置，而每种数据类型有自己的hashCode()函数，比如String类型的hashCode()函数如下所示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">hashCode</span><span class=\"params\">(<span class=\"type\">byte</span>[] value)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">h</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">byte</span> v : value) &#123;</span><br><span class=\"line\">        h = <span class=\"number\">31</span> * h + (v &amp; <span class=\"number\">0xff</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> h;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>所以，put()函数的执行路径是这样的：</p>\n<pre><code>1. 首先put(&quot;str&quot;, 1)会调用HashMap的hash(&quot;str&quot;)方法。\n2. 在hash()内部，会调用String(Latin1)内部的hashcode()获取字符串”str”的hashcode。\n3. “str”的hashcode被返回给put()，put()通过一定计算得到最终的插入位置index。\n4. 最后将这个Entry插入到table的index位置。\n</code></pre>\n<p>这里就出现了两个问题，问题1: 在put()里怎样得到插入位置index？问题2: 为什么会调用HashMap的hash()函数，直接调用String的hashcode()不好吗？</p>\n<h4 id=\"问题1-在put-里怎样得到插入位置index？\"><a href=\"#问题1-在put-里怎样得到插入位置index？\" class=\"headerlink\" title=\"问题1: 在put()里怎样得到插入位置index？\"></a>问题1: 在put()里怎样得到插入位置index？</h4><p>对于不同的hash码我们希望它被插入到不同的位置，所以我们首先会想到对数组长度的取模运算，但是由于取模运算的效率很低，所以HashMap的发明者用位运算替代了取模运算。</p>\n<p>在put()里是通过如下的语句得到插入位置的：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">index = hash(key) &amp; (Length - <span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<p>其中Length是table数组的长度。为了实现和取模运算相同的功能，这里要求(Length - 1)这部分的二进制表示全为1，我们用HashMap的默认初始长度16举例说明：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">假设&quot;str&quot;的hash吗为: 1001 0110 1011 1110 1101 0010 1001 0101</span><br><span class=\"line\"></span><br><span class=\"line\">Length - 1 = 15 : 1111</span><br><span class=\"line\"></span><br><span class=\"line\">hash(&quot;str&quot;) &amp; (Length - 1) = 0101</span><br></pre></td></tr></table></figure>\n\n<p>如果(Length - 1)这部分不全为1，假如Length是10，那么Length - 1 &#x3D; 9 ：1001 那么无论再和任何hash码做与操作，中间两位数都会是0，这样就会出现大量不同的hash码被映射到相同位置的情况。</p>\n<p>所以，在HashMap中table数组的默认长度是16，并且要求每次自动扩容或者手动扩容时，长度都必须是2的幂。</p>\n<h4 id=\"问题2-为什么会调用HashMap的hash-函数，直接调用String的hashcode-不好吗？\"><a href=\"#问题2-为什么会调用HashMap的hash-函数，直接调用String的hashcode-不好吗？\" class=\"headerlink\" title=\"问题2: 为什么会调用HashMap的hash()函数，直接调用String的hashcode()不好吗？\"></a>问题2: 为什么会调用HashMap的hash()函数，直接调用String的hashcode()不好吗？</h4><p>HashMap中的hash()函数如下所示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"title function_\">hash</span><span class=\"params\">(Object key)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> h;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (key == <span class=\"literal\">null</span>) ? <span class=\"number\">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class=\"number\">16</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>HashMap中的hash()函数是将得到hashcode做进一步处理，它将hashcode的高16位和低16位进行异或操作，这样做的目的是：在table的长度比较小的情况下，也能保证hashcode的高位参与到地址映射的计算当中，同时不会有太大的开销。</p>\n<p>综上所述：从hashcode计算得到table索引的计算过程如下所示：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-794edcdbedc4b7ec.png\" loading=\"lazy\"></p>\n<p>put()方法的执行过程如下所示：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-7935c4c7f2335cb8.png\" loading=\"lazy\"></p>\n<h3 id=\"HashMap的扩容机制\"><a href=\"#HashMap的扩容机制\" class=\"headerlink\" title=\"HashMap的扩容机制\"></a>HashMap的扩容机制</h3><p>在HashMap中有一下两个属性和扩容相关：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> threshold;</span><br><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"type\">float</span> loadFactor;</span><br></pre></td></tr></table></figure>\n\n<p>其中threshold &#x3D; Length * loadFactor，Length表示table数组的长度（默认值是16），loadFactor为负载因子（默认值是0.75），阀值threshold表示当table数组中存储的元素超过这个阀值的时候，就需要扩容了。以默认长度16，和默认负载因子0.75为例，threshold &#x3D; 16 * 0.75 &#x3D; 12，即当table数组中存储的元素个数超过12个的时候，table数组就该扩容了。</p>\n<p>当然Java中的数组是无法自动扩容的，方法是使用一个新的数组代替已有的容量小的数组，然后将旧数组中的元素经过重新计算放到新数组中，那么怎样对旧元素进行重新映射呢？</p>\n<p>其实很简单，由于我们在扩容时，是使用2的幂扩展，即数组的长度扩大到原来的2倍, 4倍, 8倍…，因此在resize时(Length - 1)这部分相当于在高位新增一个或多个1bit，我们以扩大到原来的两倍为例说明：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-73d0dc1f00dea165.png\" loading=\"lazy\"></p>\n<p>(a)中n为16，(b)中n扩大到两倍为32，相当于(n - 1)这部分的高位多了一个1, 然后和原hash码作与操作，这样元素在数组中映射的位置要么不变，要不向后移动16个位置：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-4ebc4aafe7d6808e.png\" loading=\"lazy\"></p>\n<p>因此，我们在扩充HashMap的时候，只需要看看原来的hash值新增的那个bit是1还是0就好了，是0的话索引没变，是1的话索引变成“原索引+oldCap”，可以看看下图为16扩充为32的resize示意图：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-e9365ec251327548.png\" loading=\"lazy\"></p>\n<p>这个设计确实非常的巧妙，既省去了重新计算hash值的时间，而且同时，由于新增的1bit是0还是1可以认为是随机的，因此resize的过程，均匀的把之前的冲突的节点分散到新的bucket了。这一块就是JDK1.8新增的优化点。有一点注意区别，JDK1.7中resize的时候，旧链表迁移新链表的时候，如果在新表的数组索引位置相同，则链表元素会倒置，但是从上图可以看出，JDK1.8不会倒置。</p>\n<h3 id=\"HashMap死锁形成原理\"><a href=\"#HashMap死锁形成原理\" class=\"headerlink\" title=\"HashMap死锁形成原理\"></a>HashMap死锁形成原理</h3><p>HashMap非线程安全，即任一时刻可以有多个线程同时写HashMap，可能会导致数据的不一致。如果需要满足线程安全，可以用 Collections的synchronizedMap方法使HashMap具有线程安全的能力，或者使用线程安全的ConcurrentHashMap。</p>\n<p>要理解HashMap死锁形成的原理，我们要对HashMap的resize里的transfer过程有所了解，transfer过程是将旧数组中的元素复制到新数组中，在Java 8之前，复制过程会导致链表倒置，这也是形成死锁的重要原因（Java 8中已经不会倒置），transfer的基本过程如下：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">1. 新建节点e指向当前节点，新建节点next指向e.next</span><br><span class=\"line\">2. 将e.next指向新数组中指定位置newTable[i]</span><br><span class=\"line\">3. newTable[i] = e</span><br><span class=\"line\">4. e = next</span><br></pre></td></tr></table></figure>\n<p>举个例子：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">现在有链表1-&gt;2-&gt;3，要将它复制到新数组的newTable[i]位置</span><br><span class=\"line\">1. Node e = 1, next = e.next;</span><br><span class=\"line\">2. e.next = newTable[i];</span><br><span class=\"line\">3. newTable[i] = e;</span><br><span class=\"line\">4. e = next, next = e.next;</span><br><span class=\"line\">执行完后会得到这样的结果：</span><br><span class=\"line\">newTable[i]=3-&gt;2-&gt;1</span><br></pre></td></tr></table></figure>\n\n<p>死锁会在这种情况产生：两个线程同时往HashMap里放Entry，同时HashMap正好需要扩容，如果一个线程已经完成了transfer过程，而另一个线程不知道，并且又要进行transfer的时候，死锁就会形成。</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">现在Thread1已将完成了transfer，newTable[i]=3-&gt;2-&gt;1</span><br><span class=\"line\">在Thread2中:</span><br><span class=\"line\">Node e = 1, next = e.next;</span><br><span class=\"line\">e.next = newTable[i]    : 1 -&gt; newTable[i]=3</span><br><span class=\"line\">newTable[i] = e         : newTable[i] = 1-&gt;3-&gt;2-&gt;1  //这时候链表换已经形成了</span><br></pre></td></tr></table></figure>\n\n<p>在形成链表换以后再对HashMap进行Get操作时，就会形成死循环。</p>\n<p>在Java 8中对这里进行了优化，链表复制到新数组时并不会倒置，不会因为多个线程put导致死循环，但是还有很多弊端，比如数据丢失等，因此多线程情况下还是建议使用ConcurrentHashMap。</p>\n<h3 id=\"HashMap和Hashtable有什么区别\"><a href=\"#HashMap和Hashtable有什么区别\" class=\"headerlink\" title=\"HashMap和Hashtable有什么区别\"></a>HashMap和Hashtable有什么区别</h3><p>Java为数据结构中的映射定义了一个接口java.util.Map，此接口主要有四个常用的实现类，分别是HashMap、Hashtable、LinkedHashMap和TreeMap，类继承关系如下图所示：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-b4ca3403f4e917a4.png\" loading=\"lazy\"></p>\n<p>Hashtable：Hashtable是遗留类，很多映射的常用功能与HashMap类似，不同的是它承自Dictionary类，并且是线程安全的，任一时间只有一个线程能写Hashtable，并发性不如ConcurrentHashMap，因为ConcurrentHashMap引入了分段锁。Hashtable不建议在新代码中使用，不需要线程安全的场合可以用HashMap替换，需要线程安全的场合可以用ConcurrentHashMap替换。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><pre><code>1. 扩容是一个特别耗性能的操作，所以当程序员在使用HashMap的时候，估算map的大小，初始化的时候给一个大致的数值，避免map进行频繁的扩容。\n2. 负载因子是可以修改的，也可以大于1，但是建议不要轻易修改，除非情况非常特殊。\n3. HashMap是线程不安全的，不要在并发的环境中同时操作HashMap，建议使用ConcurrentHashMap。\n4. JDK1.8引入红黑树大程度优化了HashMap的性能。\n</code></pre>\n","categories":["jdk8"],"tags":["jdk8","源码"]},{"title":"java线程池ThreadPoolExecutor的工作原理与源码解读","url":"/java/2017-07-13-java%E7%BA%BF%E7%A8%8B%E6%B1%A0ThreadPoolExecutor%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E4%B8%8E%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/","content":"<p>随着cpu核数越来越多，不可避免的利用多线程技术以充分利用其计算能力，所以多线程技术是服务端开发人员必须掌握的技术。</p>\n<p>随着线程的创建和销毁，都涉及到系统的调用，比较消耗系统资源，所以就引入了线程池技术,避免频繁的创建和销毁线程。</p>\n<p>在我们的开发中&quot;池&quot;的概念并不罕见，有数据库连接池，线程池，对象池，常量池等等。</p>\n<p>在java中有一个Executors工具类，可以为我们创建一个线程池，其本质就是new一个ThreadPoolExecutor对象。线程池几乎也是面试题必考的问题。本文结合源码，说说ThreadPoolExecutor的工作原理。</p>\n<h1 id=\"使用线程池的好处\"><a href=\"#使用线程池的好处\" class=\"headerlink\" title=\"使用线程池的好处\"></a>使用线程池的好处</h1><ol>\n<li>降低资源消耗</li>\n</ol>\n<p>可以重复利用以创建的线程，降低线程创建和销毁造成的系统资源消耗。</p>\n<ol start=\"2\">\n<li>提高响应速度</li>\n</ol>\n<p>当任务达到时，任务可以不需要等待线程创建完就立即执行。</p>\n<ol start=\"3\">\n<li>提高线程的可管理性</li>\n</ol>\n<p>线程是稀缺资源，如果无限的创建，不仅回消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一分配，调优和监控。</p>\n<h1 id=\"线程池创建\"><a href=\"#线程池创建\" class=\"headerlink\" title=\"线程池创建\"></a>线程池创建</h1><p>先看一下ThreadPoolExecutor参数最全的构造方法:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ThreadPoolExecutor</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">ThreadPoolExecutor</span><span class=\"params\">(<span class=\"type\">int</span> corePoolSize, </span></span><br><span class=\"line\"><span class=\"params\">                            <span class=\"type\">int</span> maximumPoolSize, </span></span><br><span class=\"line\"><span class=\"params\">                            <span class=\"type\">long</span> keepAliveTime, TimeUnit unit, BlockingQueue&lt;Runnable&gt; workQueue, </span></span><br><span class=\"line\"><span class=\"params\">                            ThreadFactory threadFactory, </span></span><br><span class=\"line\"><span class=\"params\">                            RejectedExceptionHandler handler)</span>&#123;</span><br><span class=\"line\">  \t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>corePoolSize： 线程池中的核心线程数，说白了就是，即便是线程池里没有任何任务，也会有corePoolSize个线程在候着等任务。</li>\n<li>maximumPoolSize： 最大线程数，不管你提交多少任务，线程池里最多工作线程就是maximumPoolSize。</li>\n<li>keepAliveTime： 线程的存活时间。当线程池里的线程数大于corePoolSize时，如果登陆keepAliveTime时长还没有任务执行，则线程退出。</li>\n<li>unit： 这个是用来指定keepAliveTime的单位，比如秒：TimeUnit.SECONDS。</li>\n<li>workQueue： 一个阻塞队列，提交的任务将会被放入到这个队列里。</li>\n<li>threadFactory：线程工厂，用来创建线程，主要是为了给线程命名，默认工厂的线程名：pool-1-thread-3。</li>\n<li>handler：拒绝策略，当线程池里线程被耗尽了，且队列也满了的时候会调用。</li>\n</ol>\n<p>上面就是创建线程池用到的参数的详细解释。</p>\n<h2 id=\"线程池饱和策略\"><a href=\"#线程池饱和策略\" class=\"headerlink\" title=\"线程池饱和策略\"></a>线程池饱和策略</h2><p>这里提到了线程池饱和策略，那我们就简单介绍下有哪些饱和策略：</p>\n<ul>\n<li><strong>AbortPolicy</strong></li>\n</ul>\n<p>为java线程池默认的阻塞策略，不执行此任务，而且直接抛出一个运行时异常，切记ThreadPoolExecutor.execute需要try catch，否则程序直接退出。</p>\n<ul>\n<li><strong>DiscardPolicy</strong></li>\n</ul>\n<p>直接抛弃，任务不执行，空方法。</p>\n<ul>\n<li><strong>DiscardOldestPolicy</strong></li>\n</ul>\n<p>从队列里抛弃head的一个任务，并再次execute此task。</p>\n<ul>\n<li><strong>CallerRunsPolicy</strong></li>\n</ul>\n<p>在调用execute的线程里面执行此command，会阻塞入口。</p>\n<ul>\n<li><strong>用户自定义拒绝策略(最常用)</strong></li>\n</ul>\n<p>实现RejectedExceptionHandler，并自己自定义拒绝策略。</p>\n<h2 id=\"线程池的状态\"><a href=\"#线程池的状态\" class=\"headerlink\" title=\"线程池的状态\"></a>线程池的状态</h2><p>首先，线程池是一个有状态的对象，状态有以下几种:</p>\n<ul>\n<li><strong>RUNNING:</strong> 运行中，此时线程池能接受任务，并且会处理队列中的任务。</li>\n<li><strong>SHUTDOWN:</strong> 关闭中，此时，线程池不再接受新任务，但是会处理队列中的任务。</li>\n<li><strong>STOP:</strong> 停止，此时线程池不接受新任务，不会处理队列中任务，还会中断worker线程。</li>\n<li><strong>TIDYING:</strong> 清理中，所有任务都已经终止且线程数等于0，开始调用terminated()。</li>\n<li><strong>TERMINATED:</strong> 终止，terminated()执行结束。</li>\n</ul>\n<p>线程池的状态变化方式如下图所示：</p>\n<p>&#x2F;&#x2F; TODO</p>\n<h1 id=\"线程池执行流程\"><a href=\"#线程池执行流程\" class=\"headerlink\" title=\"线程池执行流程\"></a>线程池执行流程</h1><p>这里用一个图来说明线程池的执行过程。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-6fbfbb7273dd48a7.png\" loading=\"lazy\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-22cd81af7f72ef15.png\" loading=\"lazy\"></p>\n<ol>\n<li>任务被提交到线程池，如果当前运行的线程数小于corePoolSize，则创建新的线程来执行任务。(注意，执行这一步骤需要获取全局锁)。</li>\n<li>如果运行的线程数等于或者大于corePoolSize，则将任务添加到BlockingQueue队列中。</li>\n<li>如果无法将任务加入到BlockingQueue(队列已满)，则在非corePoolSize中创建新的线程来处理任务。(注意，执行这一步骤需要获取全局锁)。</li>\n<li>如果创建新线程使当前运行的线程超出maximumPoolSize，任务将被拒绝，并调用RejectExceptionHandler.rejectedExecution()方法。</li>\n</ol>\n<p>ThreadPoolExecutor采取上述步骤的总体设计思路，是为了在执行execute()方法时，尽可能地避免获取全局锁(这是一个严重的可伸缩瓶颈)。在ThreadPoolExecutor完成预热之后(当前运行的线程数大于等于corePoolSize)，几乎所有的execute()方法调用都是执行步骤2，而步骤2是不需要获取全局锁的。</p>\n<p><strong>注意:</strong> 在每两个操作之间都要重新判断线程池的状态和线程数(中间有其他操作)，这样才能保证ThreadPoolExecutor的线程安全性。</p>\n<h2 id=\"线程池的内部组件\"><a href=\"#线程池的内部组件\" class=\"headerlink\" title=\"线程池的内部组件\"></a>线程池的内部组件</h2><h2 id=\"Worker线程的执行逻辑\"><a href=\"#Worker线程的执行逻辑\" class=\"headerlink\" title=\"Worker线程的执行逻辑\"></a>Worker线程的执行逻辑</h2><p>线程池使用worker线程从队列中取任务执行，worker不断从队列中获取任务然后执行，worker线程的执行代码中还包含一些性能优化措施和容错逻辑，比如，第一任务直接放在worker中而不是放入队列中(所以worker每次都先看firstTask是否非空)，任务代码抛异常导致线程终止后，会重新创建一个线程替代挂掉的这个线程等(将processWorkerExit方法的代码)。根据对ThreadPoolExecutor.runWorker代码的分析，得出worker的执行逻辑如下图所示：</p>\n<h2 id=\"如何判断worker线程是否空闲，如何区分核心线程和非核心线程\"><a href=\"#如何判断worker线程是否空闲，如何区分核心线程和非核心线程\" class=\"headerlink\" title=\"如何判断worker线程是否空闲，如何区分核心线程和非核心线程\"></a>如何判断worker线程是否空闲，如何区分核心线程和非核心线程</h2><h2 id=\"其他细节\"><a href=\"#其他细节\" class=\"headerlink\" title=\"其他细节\"></a>其他细节</h2><p>worker线程执行任务前后分别调用beforeExecute()和afterExecute()。</p>\n<p>线程池在关闭之后会调用terminated()。</p>\n<p>若要监控线程池状态，getPoolSize()，getActiveCount()，getLargestPoolSize()，getTaskCount，getCompletedTaskCount()。</p>\n<p>这里以&quot;1.8.0_171&quot;的源代码为例，看一下具体实现。</p>\n<ol>\n<li>先看一下线程池的execute方法</li>\n</ol>\n<p>添加任务到线程池的核心方法execute()的源码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Executes the given task sometime in the future.  The task</span></span><br><span class=\"line\"><span class=\"comment\"> * may execute in a new thread or in an existing pooled thread.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * If the task cannot be submitted for execution, either because this</span></span><br><span class=\"line\"><span class=\"comment\"> * executor has been shutdown or because its capacity has been reached,</span></span><br><span class=\"line\"><span class=\"comment\"> * the task is handled by the current &#123;<span class=\"doctag\">@code</span> RejectedExecutionHandler&#125;.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> command the task to execute</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@throws</span> RejectedExecutionException at discretion of</span></span><br><span class=\"line\"><span class=\"comment\"> *         &#123;<span class=\"doctag\">@code</span> RejectedExecutionHandler&#125;, if the task</span></span><br><span class=\"line\"><span class=\"comment\"> *         cannot be accepted for execution</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@throws</span> NullPointerException if &#123;<span class=\"doctag\">@code</span> command&#125; is null</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">execute</span><span class=\"params\">(Runnable command)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (command == <span class=\"literal\">null</span>)</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">NullPointerException</span>();</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * Proceed in 3 steps:</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * 1. If fewer than corePoolSize threads are running, try to</span></span><br><span class=\"line\"><span class=\"comment\">     * start a new thread with the given command as its first</span></span><br><span class=\"line\"><span class=\"comment\">     * task.  The call to addWorker atomically checks runState and</span></span><br><span class=\"line\"><span class=\"comment\">     * workerCount, and so prevents false alarms that would add</span></span><br><span class=\"line\"><span class=\"comment\">     * threads when it shouldn&#x27;t, by returning false.</span></span><br><span class=\"line\"><span class=\"comment\">     * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\">     * 如果运行的线程数小于corePoolSize，则尝试以入参任务作为第一个任务启动一个新的线程。</span></span><br><span class=\"line\"><span class=\"comment\">     * 对addWorker的调用以原子性方式检查runState和workerCount,</span></span><br><span class=\"line\"><span class=\"comment\">     * 通过返回false防止在不应该添加线程时添加线程的错误警报。</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * 2. If a task can be successfully queued, then we still need</span></span><br><span class=\"line\"><span class=\"comment\">     * to double-check whether we should have added a thread</span></span><br><span class=\"line\"><span class=\"comment\">     * (because existing ones died since last checking) or that</span></span><br><span class=\"line\"><span class=\"comment\">     * the pool shut down since entry into this method. So we</span></span><br><span class=\"line\"><span class=\"comment\">     * recheck state and if necessary roll back the enqueuing if</span></span><br><span class=\"line\"><span class=\"comment\">     * stopped, or start a new thread if there are none.</span></span><br><span class=\"line\"><span class=\"comment\">     * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\">     * 如果上一步没有完成任务提交，状态为运行并且任务可以成功添加到队列，</span></span><br><span class=\"line\"><span class=\"comment\">     * 那么我们仍然需要再次检查，如果状态在任务加入队列后变成非运行(可能是执行到这里线程池shutdown了)</span></span><br><span class=\"line\"><span class=\"comment\">     * 非运行状态下，需要reject； 然后在判断当前线程数是否为0(有可能这个时候线程数变成了0)，</span></span><br><span class=\"line\"><span class=\"comment\">     * 如果是，新增一个线程；</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * 3. If we cannot queue task, then we try to add a new</span></span><br><span class=\"line\"><span class=\"comment\">     * thread.  If it fails, we know we are shut down or saturated</span></span><br><span class=\"line\"><span class=\"comment\">     * and so reject the task.</span></span><br><span class=\"line\"><span class=\"comment\">     * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\">     * 如果我们不能对任务添加到队列，那么我们尝试添加一个新的线程，如果失败了，</span></span><br><span class=\"line\"><span class=\"comment\">     * 则是线程池已经shutdown或者线程池已经达到饱和状态了，应该reject这个任务。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> ctl.get();</span><br><span class=\"line\">    <span class=\"comment\">// 工作线程数小于核心线程数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (workerCountOf(c) &lt; corePoolSize) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 直接启动新线程，true表示会再次检查workerCount是否小于corePoolSize</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (addWorker(command, <span class=\"literal\">true</span>))</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        c = ctl.get();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 如果工作线程数大于或等于核心线程数</span></span><br><span class=\"line\">    <span class=\"comment\">// 线程的状态为running并且队列未满</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isRunning(c) &amp;&amp; workQueue.offer(command)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 再次检查线程的的运行状态，如果不是running直接从队列中移除。</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">recheck</span> <span class=\"operator\">=</span> ctl.get();</span><br><span class=\"line\">        <span class=\"comment\">// 如果线程池状态为shutdown状态，需要将刚刚放入队列中的任务从队列中移除(因为突然发生的shutdown()调用)</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (! isRunning(recheck) &amp;&amp; remove(command))</span><br><span class=\"line\">            <span class=\"comment\">// 移除成功,拒绝该非运行的任务。</span></span><br><span class=\"line\">            reject(command);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (workerCountOf(recheck) == <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"comment\">// 防止了shutdown状态下没有活动线程了，但是队列还有任务没有执行的特殊情况。</span></span><br><span class=\"line\">            <span class=\"comment\">// 添加一个null任务是因为shutdown状态下，线程池不再接受新任务</span></span><br><span class=\"line\">            <span class=\"comment\">// 需要重新在创建一个worker线程(因为检查过的核心线程正好挂掉，如果不创建worker则线程池此时进入静止状态)</span></span><br><span class=\"line\">            addWorker(<span class=\"literal\">null</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 如果放入阻塞队列失败，这创建非核心worker线程处理给任务</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果队列满了，workerCount大于等于maximumPoolSize，则创建worker线程失败，则将任务交给饱和策略(handler)处理。</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!addWorker(command, <span class=\"literal\">false</span>))</span><br><span class=\"line\">        reject(command);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-c8c8b02a0eb9028a.png\" loading=\"lazy\"></p>\n<p>①. 判断当前活跃线程数是否小于corePoolSize，如果小于，则调用addWorker创建线程执行任务<br><br>②. 如果不小于corePoolSize，则将任务添加到workQueue队列中。<br><br>③. 如果放入workeQueu失败，则创建线程执行任务，如果创建线程失败(当前线程数不小于maximumPoolSize时)，就会调用reject(内部调用handler)拒绝接受任务。</p>\n<ol start=\"2\">\n<li>再看下addWorker的方法实现</li>\n</ol>\n<p>addWorker的源码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Checks if a new worker can be added with respect to current</span></span><br><span class=\"line\"><span class=\"comment\"> * pool state and the given bound (either core or maximum). If so,</span></span><br><span class=\"line\"><span class=\"comment\"> * the worker count is adjusted accordingly, and, if possible, a</span></span><br><span class=\"line\"><span class=\"comment\"> * new worker is created and started, running firstTask as its</span></span><br><span class=\"line\"><span class=\"comment\"> * first task. This method returns false if the pool is stopped or</span></span><br><span class=\"line\"><span class=\"comment\"> * eligible to shut down. It also returns false if the thread</span></span><br><span class=\"line\"><span class=\"comment\"> * factory fails to create a thread when asked.  If the thread</span></span><br><span class=\"line\"><span class=\"comment\"> * creation fails, either due to the thread factory returning</span></span><br><span class=\"line\"><span class=\"comment\"> * null, or due to an exception (typically OutOfMemoryError in</span></span><br><span class=\"line\"><span class=\"comment\"> * Thread.start()), we roll back cleanly.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 检查是否可以根据当前线程池状态和给定的边界(核心和最大值)添加新woker</span></span><br><span class=\"line\"><span class=\"comment\"> * 如果是，则worderCount将相应的进行调整，如果可能，将创建比启动一个新的worker</span></span><br><span class=\"line\"><span class=\"comment\"> * 运行firstTask作为其第一个任务，如果线程池被停止或者被shutdown，该方法返回false</span></span><br><span class=\"line\"><span class=\"comment\"> * 如果线程工厂在被请求的时候，创建线程失败，也会返回false</span></span><br><span class=\"line\"><span class=\"comment\"> * 如果创建线程失败，要么是由于线程工厂返回null，要么是由于异常(通常是thread.start()中的OutOfMemoryError)</span></span><br><span class=\"line\"><span class=\"comment\"> * 我们将干净地回滚。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> firstTask the task the new thread should run first (or</span></span><br><span class=\"line\"><span class=\"comment\"> * null if none). Workers are created with an initial first task</span></span><br><span class=\"line\"><span class=\"comment\"> * (in method execute()) to bypass queuing when there are fewer</span></span><br><span class=\"line\"><span class=\"comment\"> * than corePoolSize threads (in which case we always start one),</span></span><br><span class=\"line\"><span class=\"comment\"> * or when the queue is full (in which case we must bypass queue).</span></span><br><span class=\"line\"><span class=\"comment\"> * Initially idle threads are usually created via</span></span><br><span class=\"line\"><span class=\"comment\"> * prestartCoreThread or to replace other dying workers.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 新线程应该首先运行的任务(如果没有线程，则为null)。当线程数量少于corePoolSize线程时(在方法execute()中)，</span></span><br><span class=\"line\"><span class=\"comment\"> * 或者当队列已满时(在这种情况下，我们必须绕过队列)，将使用一个初始化first task创建worker，</span></span><br><span class=\"line\"><span class=\"comment\"> * 初始空闲线程通常是通过prestartCoreThread创建的或者同来替换其他垂死的worker。</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> core if true use corePoolSize as bound, else</span></span><br><span class=\"line\"><span class=\"comment\"> * maximumPoolSize. (A boolean indicator is used here rather than a</span></span><br><span class=\"line\"><span class=\"comment\"> * value to ensure reads of fresh values after checking other pool</span></span><br><span class=\"line\"><span class=\"comment\"> * state).</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 如果为true，使用corePoolSize作为边界，否则使用maximumPoolSize为边界，</span></span><br><span class=\"line\"><span class=\"comment\"> * (这里使用boolean作为指示符，而不是使用value，以确保在检查其他线程池状态后读取新值)</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> true if successful</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"title function_\">addWorker</span><span class=\"params\">(Runnable firstTask, <span class=\"type\">boolean</span> core)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// java标签</span></span><br><span class=\"line\">    retry:</span><br><span class=\"line\">    <span class=\"comment\">// 死循环</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> ctl.get();</span><br><span class=\"line\">        <span class=\"comment\">// 获取当前线程状态 (running为-536870912，shutdown为0，stop为536870912，tidying为1073741824，terminated为1610612736)</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> runStateOf(c);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Check if queue empty only if necessary.</span></span><br><span class=\"line\">        <span class=\"comment\">// 这个逻辑判断有点绕可以改成</span></span><br><span class=\"line\">        <span class=\"comment\">// rs &gt;= SHUTDOWN &amp;&amp; (rs != SHUTDOWN || firstTask != null || workQueue.isEmpty())</span></span><br><span class=\"line\">        <span class=\"comment\">// 逻辑判断成立可以分为下面几种情况均不接受新任务</span></span><br><span class=\"line\">        <span class=\"comment\">// 1. rs &gt; shutdown;  --&gt;不接受新任务</span></span><br><span class=\"line\">        <span class=\"comment\">// 2. rs &gt;= shutdown &amp;&amp; firstTask != null; --&gt;不接受新任务</span></span><br><span class=\"line\">        <span class=\"comment\">// 3. rs &gt;= shutdown &amp;&amp; workQueue.isEmpty(); --&gt;不接受新任务</span></span><br><span class=\"line\">        <span class=\"comment\">// 逻辑判断不成立</span></span><br><span class=\"line\">        <span class=\"comment\">// 1. rs == shutdown &amp;&amp; firstTask != null; 此时不会接受任务，但是仍然会执行队列中的任务</span></span><br><span class=\"line\">        <span class=\"comment\">// 2. rs == shutdown &amp;&amp; firstTask == null; 会执行addWorker(null, false)</span></span><br><span class=\"line\">        <span class=\"comment\">// 防止了SHUTDOWN状态下没有活动线程了，但是队列里还有任务没有执行这种特殊情况</span></span><br><span class=\"line\">        <span class=\"comment\">// 添加了一个null任务是因为SHUTDOWN状态下，线程池不再接受新任务</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rs &gt;= SHUTDOWN &amp;&amp;</span><br><span class=\"line\">            ! (rs == SHUTDOWN &amp;&amp;</span><br><span class=\"line\">               firstTask == <span class=\"literal\">null</span> &amp;&amp;</span><br><span class=\"line\">               ! workQueue.isEmpty()))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 死循环</span></span><br><span class=\"line\">        <span class=\"comment\">// 如果线程池状态为running并且队列中还有需要执行的任务。</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 获取线程池中的线程数量</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">wc</span> <span class=\"operator\">=</span> workerCountOf(c);</span><br><span class=\"line\">            <span class=\"comment\">// 如果超出容量或者最大线程池容量不再接受新任务</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (wc &gt;= CAPACITY ||</span><br><span class=\"line\">                wc &gt;= (core ? corePoolSize : maximumPoolSize))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 原子操作增加工作线程数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (compareAndIncrementWorkerCount(c))</span><br><span class=\"line\">                <span class=\"comment\">// 跳出retry</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span> retry;</span><br><span class=\"line\">            c = ctl.get();  <span class=\"comment\">// Re-read ctl</span></span><br><span class=\"line\">            <span class=\"comment\">// 如果线程池状态发生变化，重新循环</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (runStateOf(c) != rs)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span> retry;</span><br><span class=\"line\">            <span class=\"comment\">// else CAS failed due to workerCount change; retry inner loop</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 运行到这里说明工作线程数增加成功。</span></span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"variable\">workerStarted</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"variable\">workerAdded</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"type\">Worker</span> <span class=\"variable\">w</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        w = <span class=\"keyword\">new</span> <span class=\"title class_\">Worker</span>(firstTask);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"type\">Thread</span> <span class=\"variable\">t</span> <span class=\"operator\">=</span> w.thread;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (t != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">final</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">mainLock</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.mainLock;</span><br><span class=\"line\">            <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">            mainLock.lock();</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// Recheck while holding lock.</span></span><br><span class=\"line\">                <span class=\"comment\">// Back out on ThreadFactory failure or if</span></span><br><span class=\"line\">                <span class=\"comment\">// shut down before lock acquired.</span></span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> runStateOf(ctl.get());</span><br><span class=\"line\">                <span class=\"comment\">// running状态 || shutdown状态下清理队列中的剩余任务。</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (rs &lt; SHUTDOWN ||</span><br><span class=\"line\">                    (rs == SHUTDOWN &amp;&amp; firstTask == <span class=\"literal\">null</span>)) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 检查线程状态</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (t.isAlive()) <span class=\"comment\">// precheck that t is startable</span></span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IllegalThreadStateException</span>();</span><br><span class=\"line\">                    <span class=\"comment\">// 将新启动的线程添加到线程池中</span></span><br><span class=\"line\">                    workers.add(w);</span><br><span class=\"line\">                    <span class=\"comment\">// 更新线程池数量数且不超过最大值</span></span><br><span class=\"line\">                    <span class=\"type\">int</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> workers.size();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (s &gt; largestPoolSize)</span><br><span class=\"line\">                        largestPoolSize = s;</span><br><span class=\"line\">                    workerAdded = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">                mainLock.unlock();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 启动新添加的线程，这个线程首先执行firstTask，然后不停的从队列中取任务执行</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (workerAdded) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 执行ThreadPoolExecutor的runWorker方法</span></span><br><span class=\"line\">                t.start();</span><br><span class=\"line\">                workerStarted = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 线程启动失败，这从workers中移除w并递减workerCount</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (! workerStarted)</span><br><span class=\"line\">            <span class=\"comment\">// 递减workerCount会tryTerminate方法</span></span><br><span class=\"line\">            addWorkerFailed(w);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> workerStarted;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-330bdc6ab704c2da.png\" loading=\"lazy\"></p>\n<p>这块代码是在创建非核心线程时，即core为false。判断当前线程数是否大于等于maximumPoolSize，如果大于等于则返回false，即上边说到③中的创建线程失败的情况。</p>\n<p>addWorker方法的下半部分：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-8face7330471f805.png\" loading=\"lazy\"></p>\n<p>①. 创建Worker对象，用时也会实例化一个Thread对象。<br><br>②. 启动这个线程</p>\n<p>adWorker之后是runWorker，第一次启动会执行初始化传递过来的firstTask；然后会从workerQueue中取任务执行，如果队列为空则等待keepAliceTime这么长时间。</p>\n<ol start=\"3\">\n<li>再到Woker里面看看其实现</li>\n</ol>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-8a11d5489dd2a180.png\" loading=\"lazy\"></p>\n<p>可以看到在创建Worker时会调用threadFactory来创建一个线程，上面②中启动一个线程就会触发worker的run方法被线程调用。Worker实现了Runable接口。这里使用了委派设计模式</p>\n<ol start=\"4\">\n<li>接下来看看runWorker方法的逻辑</li>\n</ol>\n<p>runWorker源码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Main worker run loop.  Repeatedly gets tasks from queue and</span></span><br><span class=\"line\"><span class=\"comment\"> * executes them, while coping with a number of issues:</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * main worker循环运行，从队列中反复获取task并执行它们，同时处理许多问题：</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. We may start out with an initial task, in which case we</span></span><br><span class=\"line\"><span class=\"comment\"> * don&#x27;t need to get the first one. Otherwise, as long as pool is</span></span><br><span class=\"line\"><span class=\"comment\"> * running, we get tasks from getTask. If it returns null then the</span></span><br><span class=\"line\"><span class=\"comment\"> * worker exits due to changed pool state or configuration</span></span><br><span class=\"line\"><span class=\"comment\"> * parameters.  Other exits result from exception throws in</span></span><br><span class=\"line\"><span class=\"comment\"> * external code, in which case completedAbruptly holds, which</span></span><br><span class=\"line\"><span class=\"comment\"> * usually leads processWorkerExit to replace this thread.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 我们可能从一个初始任务开始，在这种情况下我们不需要获取第一个任务。</span></span><br><span class=\"line\"><span class=\"comment\"> * 否则，只要线程池正在运行，我们就会从getTask获取任务，如果它返回null，</span></span><br><span class=\"line\"><span class=\"comment\"> * 则worker由于线程池状态或配置参数的更改而退出。其他退出是由额外的代码中</span></span><br><span class=\"line\"><span class=\"comment\"> * 异常抛出引起的，在这种情况下，completedAbruptlyholds，通常会导致processWorkerExit替换此线程。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. Before running any task, the lock is acquired to prevent</span></span><br><span class=\"line\"><span class=\"comment\"> * other pool interrupts while the task is executing, and then we</span></span><br><span class=\"line\"><span class=\"comment\"> * ensure that unless pool is stopping, this thread does not have</span></span><br><span class=\"line\"><span class=\"comment\"> * its interrupt set.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 在运行任何任务之前，获取锁以防止执行时其线程池中断，然后我们</span></span><br><span class=\"line\"><span class=\"comment\"> * 确保出发线程池停止，否则此线程没有设置设置中断。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. Each task run is preceded by a call to beforeExecute, which</span></span><br><span class=\"line\"><span class=\"comment\"> * might throw an exception, in which case we cause thread to die</span></span><br><span class=\"line\"><span class=\"comment\"> * (breaking loop with completedAbruptly true) without processing</span></span><br><span class=\"line\"><span class=\"comment\"> * the task.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. 每个任务运行之前都会调用beforeExecute，可能会抛出异常，</span></span><br><span class=\"line\"><span class=\"comment\"> * 在这种情况下，我们会导致线程死掉(使用completedAbruptly打开循环为true)而不处理任务。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. Assuming beforeExecute completes normally, we run the task,</span></span><br><span class=\"line\"><span class=\"comment\"> * gathering any of its thrown exceptions to send to afterExecute.</span></span><br><span class=\"line\"><span class=\"comment\"> * We separately handle RuntimeException, Error (both of which the</span></span><br><span class=\"line\"><span class=\"comment\"> * specs guarantee that we trap) and arbitrary Throwables.</span></span><br><span class=\"line\"><span class=\"comment\"> * Because we cannot rethrow Throwables within Runnable.run, we</span></span><br><span class=\"line\"><span class=\"comment\"> * wrap them within Errors on the way out (to the thread&#x27;s</span></span><br><span class=\"line\"><span class=\"comment\"> * UncaughtExceptionHandler).  Any thrown exception also</span></span><br><span class=\"line\"><span class=\"comment\"> * conservatively causes thread to die.</span></span><br><span class=\"line\"><span class=\"comment\"> *  翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. 假设beforeExecute正常完成，我们运行任务，收集任何抛出的异常已发送到afterExecute。</span></span><br><span class=\"line\"><span class=\"comment\"> * 我们分别处理RuntimeException和Error(这两种异常规范保证我们的陷阱)和任意Throwables。</span></span><br><span class=\"line\"><span class=\"comment\"> * 因为我们无法在Runnable.run中重新抛出Throwables，所以我们在出路的时候将它包装在</span></span><br><span class=\"line\"><span class=\"comment\"> * Errors中(到了线程的UncaughtExceptionHandler)。任何抛出的异常导致线程死亡。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 5. After task.run completes, we call afterExecute, which may</span></span><br><span class=\"line\"><span class=\"comment\"> * also throw an exception, which will also cause thread to</span></span><br><span class=\"line\"><span class=\"comment\"> * die. According to JLS Sec 14.20, this exception is the one that</span></span><br><span class=\"line\"><span class=\"comment\"> * will be in effect even if task.run throws.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 在task.run完成之后，我们将调用afterExecute，这可能也会抛出异常，</span></span><br><span class=\"line\"><span class=\"comment\"> * 这也会导致线程死掉，根据JLS Sec 14.20这个例外是即使task.run抛出异常也将生效。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * The net effect of the exception mechanics is that afterExecute</span></span><br><span class=\"line\"><span class=\"comment\"> * and the thread&#x27;s UncaughtExceptionHandler have as accurate</span></span><br><span class=\"line\"><span class=\"comment\"> * information as we can provide about any problems encountered by</span></span><br><span class=\"line\"><span class=\"comment\"> * user code.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 异常机制的净效果是afterExecute和线程的UncaughtExceptionHandler有关user代码</span></span><br><span class=\"line\"><span class=\"comment\"> * 遇到的任何问题的准确信息。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> w the worker</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title function_\">runWorker</span><span class=\"params\">(Worker w)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Thread</span> <span class=\"variable\">wt</span> <span class=\"operator\">=</span> Thread.currentThread();</span><br><span class=\"line\">    <span class=\"type\">Runnable</span> <span class=\"variable\">task</span> <span class=\"operator\">=</span> w.firstTask;</span><br><span class=\"line\">    w.firstTask = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 允许中断</span></span><br><span class=\"line\">    w.unlock(); <span class=\"comment\">// allow interrupts</span></span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"variable\">completedAbruptly</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果getTask返回null，那么getTask中会将workerCount递减，如果异常了这个递减操作会在processWorkerExit中处理。</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (task != <span class=\"literal\">null</span> || (task = getTask()) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            w.lock();</span><br><span class=\"line\">            <span class=\"comment\">// If pool is stopping, ensure thread is interrupted;</span></span><br><span class=\"line\">            <span class=\"comment\">// if not, ensure thread is not interrupted.  This</span></span><br><span class=\"line\">            <span class=\"comment\">// requires a recheck in second case to deal with</span></span><br><span class=\"line\">            <span class=\"comment\">// shutdownNow race while clearing interrupt</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((runStateAtLeast(ctl.get(), STOP) ||</span><br><span class=\"line\">                 (Thread.interrupted() &amp;&amp;</span><br><span class=\"line\">                  runStateAtLeast(ctl.get(), STOP))) &amp;&amp;</span><br><span class=\"line\">                !wt.isInterrupted())</span><br><span class=\"line\">                wt.interrupt();</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                beforeExecute(wt, task);</span><br><span class=\"line\">                <span class=\"type\">Throwable</span> <span class=\"variable\">thrown</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    task.run();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (RuntimeException x) &#123;</span><br><span class=\"line\">                    thrown = x; <span class=\"keyword\">throw</span> x;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (Error x) &#123;</span><br><span class=\"line\">                    thrown = x; <span class=\"keyword\">throw</span> x;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (Throwable x) &#123;</span><br><span class=\"line\">                    thrown = x; <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(x);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">                    afterExecute(task, thrown);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">                task = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                w.completedTasks++;</span><br><span class=\"line\">                w.unlock();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        completedAbruptly = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        processWorkerExit(w, completedAbruptly);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-f29213e056b2f535.png\" loading=\"lazy\"></p>\n<p>线程调用runWorker，会while循环调用getTask方法从workerQueue队列里读取任务，然后执行任务。只要getTask方法不返回null，此线程就不会退出。</p>\n<ol start=\"5\">\n<li>在看看getTask方法实现</li>\n</ol>\n<p>getTask源码:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Performs blocking or timed wait for a task, depending on</span></span><br><span class=\"line\"><span class=\"comment\"> * current configuration settings, or returns null if this worker</span></span><br><span class=\"line\"><span class=\"comment\"> * must exit because of any of:</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 根据当前的配置设置，执行阻塞或定时等待task，如果因为如下的任何一个原因导致worker退出，则返回null。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. There are more than maximumPoolSize workers (due to</span></span><br><span class=\"line\"><span class=\"comment\"> *    a call to setMaximumPoolSize).</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. The pool is stopped.</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. The pool is shutdown and the queue is empty.</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. This worker timed out waiting for a task, and timed-out</span></span><br><span class=\"line\"><span class=\"comment\"> *    workers are subject to termination (that is,</span></span><br><span class=\"line\"><span class=\"comment\"> *    &#123;<span class=\"doctag\">@code</span> allowCoreThreadTimeOut || workerCount &gt; corePoolSize&#125;)</span></span><br><span class=\"line\"><span class=\"comment\"> *    both before and after the timed wait, and if the queue is</span></span><br><span class=\"line\"><span class=\"comment\"> *    non-empty, this worker is not the last thread in the pool.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 超过了maximumPoolSize个workers。(由于调用了setMaximumPoolSize)</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 线程池停止了</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. 线程池shutdown并且队列为空</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. worker超时等于一个task，超时的workers在超时等待之前和之后都会被终止(即，allowCoreThreadTimeOut || workerCount &gt; corePoolSize)</span></span><br><span class=\"line\"><span class=\"comment\"> * 如果队列不为空，那么这个worker不是这个线程池的最后一个线程。</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> task, or null if the worker must exit, in which case</span></span><br><span class=\"line\"><span class=\"comment\"> *         workerCount is decremented</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 返回task，如果worder意外退出，返回null，在这种情况下workerCount被递减。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Runnable <span class=\"title function_\">getTask</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"variable\">timedOut</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>; <span class=\"comment\">// Did the last poll() time out?</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 死循环</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取线程池状态</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> ctl.get();</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> runStateOf(c);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Check if queue empty only if necessary.</span></span><br><span class=\"line\">        <span class=\"comment\">// 1. rs &gt; shutdown, rs至少大于stop，这个时候不处理队列中的任务</span></span><br><span class=\"line\">        <span class=\"comment\">// 2. rs = shutdown，这个时候需要处理队列中的任务除非队列为空</span></span><br><span class=\"line\">        <span class=\"comment\">// 这两种情况都会返回null，让runWorker退出while循环，也就是当前线程执行完毕，所以workerCount必须递减</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rs &gt;= SHUTDOWN &amp;&amp; (rs &gt;= STOP || workQueue.isEmpty())) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 递减wokerCount的值</span></span><br><span class=\"line\">            decrementWorkerCount();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">wc</span> <span class=\"operator\">=</span> workerCountOf(c);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Are workers subject to culling?</span></span><br><span class=\"line\">        <span class=\"comment\">// 标记从队列中取任务时是否设置超时时间</span></span><br><span class=\"line\">        <span class=\"comment\">// 1. core thread允许被超时，那么超过corePoolSize的线程也必定允许被超时</span></span><br><span class=\"line\">        <span class=\"comment\">// 2. allowCoreThreadTimeOut(默认值就是false) || wc &gt; corePoolSize时，一般都是这种情况。core Thread即时空闲也不会被回收，只要超过corePoolSize的线程才会被回收。</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">timed</span> <span class=\"operator\">=</span> allowCoreThreadTimeOut || wc &gt; corePoolSize;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 从addWorker可以看到一般wc是不会大于maximumPoolSize，故wc &gt; maximumPoolSize是false，所以需要关心后面半句的情形</span></span><br><span class=\"line\">        <span class=\"comment\">// 1. timed = false，说明wc小于corePoolSize，说明当前运行的线程数小于核心线程数，队列take();</span></span><br><span class=\"line\">        <span class=\"comment\">// 1. timed = true, 说明当前运行的线程数大于核心核心线程数; timedOut == false，第一次循环。从队列中取出不为空的方法返回，或者poll跑异常了重试。</span></span><br><span class=\"line\">        <span class=\"comment\">// 2. timed = true, timedOut == true, 说明有poll操作有超时的;  wc &gt; 1 true，如果队列中不为空，从队列中取出不为空和方法方法。如果队列为空，方法null。</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((wc &gt; maximumPoolSize || (timed &amp;&amp; timedOut))</span><br><span class=\"line\">            &amp;&amp; (wc &gt; <span class=\"number\">1</span> || workQueue.isEmpty())) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// workerCount递减，方法null任务，接受当前线程</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (compareAndDecrementWorkerCount(c))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 1. 以指定的超时时间从队列中获取任务。</span></span><br><span class=\"line\">            <span class=\"comment\">// 2. core thread 默认没有超时</span></span><br><span class=\"line\">            <span class=\"type\">Runnable</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> timed ?</span><br><span class=\"line\">                workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) :</span><br><span class=\"line\">                workQueue.take();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (r != <span class=\"literal\">null</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> r;</span><br><span class=\"line\">            <span class=\"comment\">// 超时</span></span><br><span class=\"line\">            timedOut = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException retry) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 线程被中断重试</span></span><br><span class=\"line\">            timedOut = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-ce84682cc3c8f7dd.png\" loading=\"lazy\"></p>\n<p>①. 先不管allowCoreThreadTimeOut，这个变量的默认值是false，wc &gt; corePoolSize则是判断当前线程数是否大于corePoolSize。<br><br>②. 如果当前线程数大于corePoolSize，这回调用wokerQueue的poll方法获取任务，超时时间就是keepAliveTime。如果超过keepAliveTime时长，poll返回了null，上边提到的while循环就会退出，线程也就执行完了，如果当前线程数小于corePoolSize，则会调用wokerQueue的take方法阻塞在当前。</p>\n<ol start=\"6\">\n<li>在看看processWorkerExit是如何工作的</li>\n</ol>\n<p>processWorkerExit源码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Performs cleanup and bookkeeping for a dying worker. Called</span></span><br><span class=\"line\"><span class=\"comment\"> * only from worker threads. Unless completedAbruptly is set,</span></span><br><span class=\"line\"><span class=\"comment\"> * assumes that workerCount has already been adjusted to account</span></span><br><span class=\"line\"><span class=\"comment\"> * for exit.  This method removes thread from worker set, and</span></span><br><span class=\"line\"><span class=\"comment\"> * possibly terminates the pool or replaces the worker if either</span></span><br><span class=\"line\"><span class=\"comment\"> * it exited due to user task exception or if fewer than</span></span><br><span class=\"line\"><span class=\"comment\"> * corePoolSize workers are running or queue is non-empty but</span></span><br><span class=\"line\"><span class=\"comment\"> * there are no workers.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 为垂死的worker执行清理，仅仅是从worker线程中被调用的，除非设置了completedAbruptly。</span></span><br><span class=\"line\"><span class=\"comment\"> * 否则调整workerCount减去已经退出的账户，这个方法从woker set中移除线程，并且如果由于任务异常退出或者如果正在运行线程数小于corePoolSize</span></span><br><span class=\"line\"><span class=\"comment\"> * 或者队列非空但是没有worker，则可能导致线程池终止或替换worker。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> w the worker</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> completedAbruptly if the worker died due to user exception</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">processWorkerExit</span><span class=\"params\">(Worker w, <span class=\"type\">boolean</span> completedAbruptly)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 正常的话再runWorker的getTask方法中workerCount已经递减过了。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (completedAbruptly) <span class=\"comment\">// If abrupt, then workerCount wasn&#x27;t adjusted</span></span><br><span class=\"line\">        decrementWorkerCount();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">mainLock</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.mainLock;</span><br><span class=\"line\">    mainLock.lock();</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 累加的线程completedTasks</span></span><br><span class=\"line\">        completedTaskCount += w.completedTasks;</span><br><span class=\"line\">        <span class=\"comment\">// 从线程池中移除超时或者出现异常的线程</span></span><br><span class=\"line\">        workers.remove(w);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        mainLock.unlock();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 尝试停止线程池</span></span><br><span class=\"line\">    tryTerminate();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> ctl.get();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (runStateLessThan(c, STOP)) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 线程不是异常结束</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!completedAbruptly) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 线程池最小空闲数，允许core thread超时就是0，否则就是corePoolSize</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">min</span> <span class=\"operator\">=</span> allowCoreThreadTimeOut ? <span class=\"number\">0</span> : corePoolSize;</span><br><span class=\"line\">            <span class=\"comment\">// 如果min == 0但是队列不为空要保证有1个线程来执行队列中的任务</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (min == <span class=\"number\">0</span> &amp;&amp; ! workQueue.isEmpty())</span><br><span class=\"line\">                min = <span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"comment\">// 线程池还不为空那就不用担心了</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (workerCountOf(c) &gt;= min)</span><br><span class=\"line\">                <span class=\"keyword\">return</span>; <span class=\"comment\">// replacement not needed</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 1. 线程异常退出</span></span><br><span class=\"line\">        <span class=\"comment\">// 2. 线程池为空，但是队列中还有任务没有执行，看addWorker方法对这种情况的处理。</span></span><br><span class=\"line\">        addWorker(<span class=\"literal\">null</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>看看tryTerminate的源码</li>\n</ol>\n<p>processWorkerExit方法中会尝试调用tryTerminate来终止线程池，这个方法在任何可能导致线程池终止的动作后执行；比如减少workerCount或者shutdown状态下从队列中移除任务。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Transitions to TERMINATED state if either (SHUTDOWN and pool</span></span><br><span class=\"line\"><span class=\"comment\"> * and queue empty) or (STOP and pool empty).  If otherwise</span></span><br><span class=\"line\"><span class=\"comment\"> * eligible to terminate but workerCount is nonzero, interrupts an</span></span><br><span class=\"line\"><span class=\"comment\"> * idle worker to ensure that shutdown signals propagate. This</span></span><br><span class=\"line\"><span class=\"comment\"> * method must be called following any action that might make</span></span><br><span class=\"line\"><span class=\"comment\"> * termination possible -- reducing worker count or removing tasks</span></span><br><span class=\"line\"><span class=\"comment\"> * from the queue during shutdown. The method is non-private to</span></span><br><span class=\"line\"><span class=\"comment\"> * allow access from ScheduledThreadPoolExecutor.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * shutdown和线程池和队列为空，或者stop和线程池为空转换为terminate状态。</span></span><br><span class=\"line\"><span class=\"comment\"> * 如果否则有资格终止但workerCount非零，则中断空闲worker程序以确保关闭信号传播。</span></span><br><span class=\"line\"><span class=\"comment\"> * 必须在任何可能是线程池终止的操作之后调用此方法，在关闭期间减少worker count或者从队列中移除任务。</span></span><br><span class=\"line\"><span class=\"comment\"> * 该方法是非私有的允许从ScheduledThreadPoolExecutor访问。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title function_\">tryTerminate</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> ctl.get();</span><br><span class=\"line\">        <span class=\"comment\">// 以下状态直接返回：</span></span><br><span class=\"line\">        <span class=\"comment\">// 1. 线程池处于running状态</span></span><br><span class=\"line\">        <span class=\"comment\">// 2. runState &gt;= tidying 线程池已经停止了或者在停止。</span></span><br><span class=\"line\">        <span class=\"comment\">// 3. shutdown状态但是任务队列非空</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isRunning(c) ||</span><br><span class=\"line\">            runStateAtLeast(c, TIDYING) ||</span><br><span class=\"line\">            (runStateOf(c) == SHUTDOWN &amp;&amp; ! workQueue.isEmpty()))</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 只能是以下情形会继续下面的逻辑，结束线程池。</span></span><br><span class=\"line\">        <span class=\"comment\">// 1. shutdown状态，这时不在接受新任务而且队列也为空了</span></span><br><span class=\"line\">        <span class=\"comment\">// 2. stop状态，当调用了shutdownNow方法</span></span><br><span class=\"line\">        <span class=\"comment\">// workerCount不为0则还不能停止线程池，而且这时线程都处于空闲等待的状态。</span></span><br><span class=\"line\">        <span class=\"comment\">// 需要中断让线程醒过来，醒过来的线程才能继续处理shutdown的信号。</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (workerCountOf(c) != <span class=\"number\">0</span>) &#123; <span class=\"comment\">// Eligible to terminate</span></span><br><span class=\"line\">            <span class=\"comment\">// runWorker方法中w.unlock就是为了可以被中断，getTask方法也处理了中断。</span></span><br><span class=\"line\">            <span class=\"comment\">// ONLY_ONE; 这里只需要中断1个线程去处理shutdown信号就可以了。</span></span><br><span class=\"line\">            interruptIdleWorkers(ONLY_ONE);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">mainLock</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.mainLock;</span><br><span class=\"line\">        mainLock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 进入tidying状态</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ctl.compareAndSet(c, ctlOf(TIDYING, <span class=\"number\">0</span>))) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 子类重载，一些资源清理工作</span></span><br><span class=\"line\">                    terminated();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// terminate状态</span></span><br><span class=\"line\">                    ctl.set(ctlOf(TERMINATED, <span class=\"number\">0</span>));</span><br><span class=\"line\">                    <span class=\"comment\">// 继续awaitTermination</span></span><br><span class=\"line\">                    termination.signalAll();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            mainLock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// else retry on failed CAS</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>shutdown这个方法将runState设置为shutdown，会终止所有空闲的线程，shutdownNow方法将runState设置为stop。和shutdown方法的区别，这个方法会终止所有的线程。主要区别在于shutdown调用的是interrupttIdleWorkers这个方法，而shutdownNow实际上调用的是Worker类的interruptIfStarted方法：</p>\n<p>shutdown源代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Initiates an orderly shutdown in which previously submitted</span></span><br><span class=\"line\"><span class=\"comment\"> * tasks are executed, but no new tasks will be accepted.</span></span><br><span class=\"line\"><span class=\"comment\"> * Invocation has no additional effect if already shut down.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 开始有顺序的shutdown已经执行过的task，但是不会接受新的task</span></span><br><span class=\"line\"><span class=\"comment\"> * 如果已经shutdown了，则调用没有额外的影响。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;p&gt;This method does not wait for previously submitted tasks to</span></span><br><span class=\"line\"><span class=\"comment\"> * complete execution.  Use &#123;<span class=\"doctag\">@link</span> #awaitTermination awaitTermination&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * to do that.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 此方法不需要等待以前提交的task执行完，使用awaitTermination来做它。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@throws</span> SecurityException &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">shutdown</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">mainLock</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.mainLock;</span><br><span class=\"line\">    mainLock.lock();</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        checkShutdownAccess();</span><br><span class=\"line\">        <span class=\"comment\">// 线程池状态设置为shutdown，如果已经至少是这个状态那么则直接返回</span></span><br><span class=\"line\">        advanceRunState(SHUTDOWN);</span><br><span class=\"line\">        <span class=\"comment\">// 注意这里是中断所有的空闲线程：runWorker中等待的线程被中断，进入processWorkerExit</span></span><br><span class=\"line\">        interruptIdleWorkers();</span><br><span class=\"line\">        onShutdown(); <span class=\"comment\">// hook for ScheduledThreadPoolExecutor</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        mainLock.unlock();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// tryTerminate方法中会保证队列中剩余的任务也会得到执行。</span></span><br><span class=\"line\">    tryTerminate();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>shutdownNow源代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Attempts to stop all actively executing tasks, halts the</span></span><br><span class=\"line\"><span class=\"comment\"> * processing of waiting tasks, and returns a list of the tasks</span></span><br><span class=\"line\"><span class=\"comment\"> * that were awaiting execution. These tasks are drained (removed)</span></span><br><span class=\"line\"><span class=\"comment\"> * from the task queue upon return from this method.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 尝试停止所有活跃的正在执行的task，停止等待执行的task，</span></span><br><span class=\"line\"><span class=\"comment\"> * 并返回等待执行的task列表，从方法返回后，这些方法将被删除。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;p&gt;This method does not wait for actively executing tasks to</span></span><br><span class=\"line\"><span class=\"comment\"> * terminate.  Use &#123;<span class=\"doctag\">@link</span> #awaitTermination awaitTermination&#125; to</span></span><br><span class=\"line\"><span class=\"comment\"> * do that.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 此方法不需要等待主动执行的task的终止，使用awaitTermination来完成此操作。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;p&gt;There are no guarantees beyond best-effort attempts to stop</span></span><br><span class=\"line\"><span class=\"comment\"> * processing actively executing tasks.  This implementation</span></span><br><span class=\"line\"><span class=\"comment\"> * cancels tasks via &#123;<span class=\"doctag\">@link</span> Thread#interrupt&#125;, so any task that</span></span><br><span class=\"line\"><span class=\"comment\"> * fails to respond to interrupts may never terminate.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 除了尽最大努力停止正活跃的在执行的task外，没有其他保证。</span></span><br><span class=\"line\"><span class=\"comment\"> * 这个实现是通过Thread.interrupt取消任务的，因此未能响应的中断的task</span></span><br><span class=\"line\"><span class=\"comment\"> * 可能永远不会终止。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@throws</span> SecurityException &#123;<span class=\"doctag\">@inheritDoc</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> List&lt;Runnable&gt; <span class=\"title function_\">shutdownNow</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    List&lt;Runnable&gt; tasks;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">mainLock</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.mainLock;</span><br><span class=\"line\">    mainLock.lock();</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        checkShutdownAccess();</span><br><span class=\"line\">        <span class=\"comment\">// 设置线程池为stop状态，不再接受任务且不再执行队列中的任务</span></span><br><span class=\"line\">        advanceRunState(STOP);</span><br><span class=\"line\">        <span class=\"comment\">// 中断所有的线程</span></span><br><span class=\"line\">        interruptWorkers();</span><br><span class=\"line\">        <span class=\"comment\">// 返回队列中还没有执行的任务</span></span><br><span class=\"line\">        tasks = drainQueue();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        mainLock.unlock();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    tryTerminate();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> tasks;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>interruptIdleWorkers的源代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Interrupts threads that might be waiting for tasks (as</span></span><br><span class=\"line\"><span class=\"comment\"> * indicated by not being locked) so they can check for</span></span><br><span class=\"line\"><span class=\"comment\"> * termination or configuration changes. Ignores</span></span><br><span class=\"line\"><span class=\"comment\"> * SecurityExceptions (in which case some threads may remain</span></span><br><span class=\"line\"><span class=\"comment\"> * uninterrupted).</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 中断等待任务的线程(显示未被锁定)，以便检查终止或更改配置，</span></span><br><span class=\"line\"><span class=\"comment\"> * 忽略SecurityExceptions(在这种情况下，一些线程可能保持不间断)</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> onlyOne If true, interrupt at most one worker. This is</span></span><br><span class=\"line\"><span class=\"comment\"> * called only from tryTerminate when termination is otherwise</span></span><br><span class=\"line\"><span class=\"comment\"> * enabled but there are still other workers.  In this case, at</span></span><br><span class=\"line\"><span class=\"comment\"> * most one waiting worker is interrupted to propagate shutdown</span></span><br><span class=\"line\"><span class=\"comment\"> * signals in case all threads are currently waiting.</span></span><br><span class=\"line\"><span class=\"comment\"> * Interrupting any arbitrary thread ensures that newly arriving</span></span><br><span class=\"line\"><span class=\"comment\"> * workers since shutdown began will also eventually exit.</span></span><br><span class=\"line\"><span class=\"comment\"> * To guarantee eventual termination, it suffices to always</span></span><br><span class=\"line\"><span class=\"comment\"> * interrupt only one idle worker, but shutdown() interrupts all</span></span><br><span class=\"line\"><span class=\"comment\"> * idle workers so that redundant workers exit promptly, not</span></span><br><span class=\"line\"><span class=\"comment\"> * waiting for a straggler task to finish.</span></span><br><span class=\"line\"><span class=\"comment\"> * 翻译如下：</span></span><br><span class=\"line\"><span class=\"comment\"> * 如果true，最多中断一个worker，只有在启用终止时，才从tryTerminate调用这个，</span></span><br><span class=\"line\"><span class=\"comment\"> * 但是仍然有其他的worker，在这种情况下，在在所有线程当前都在等待的情况下，</span></span><br><span class=\"line\"><span class=\"comment\"> * 最多一个worker被中断以传播shutdown信号，中断任意线程，确保关闭开启后新来的</span></span><br><span class=\"line\"><span class=\"comment\"> * worker最终也会终止，总之，只中断一个空闲的worker就足够了，但是shutdown()中断</span></span><br><span class=\"line\"><span class=\"comment\"> * 所有的空闲worker，这样冗余的workers就会迅速退出，而不是等待一个掉队的任务完成。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">interruptIdleWorkers</span><span class=\"params\">(<span class=\"type\">boolean</span> onlyOne)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">mainLock</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.mainLock;</span><br><span class=\"line\">    mainLock.lock();</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Worker w : workers) &#123;</span><br><span class=\"line\">            <span class=\"type\">Thread</span> <span class=\"variable\">t</span> <span class=\"operator\">=</span> w.thread;</span><br><span class=\"line\">            <span class=\"comment\">// w.tryLock能够获到锁，说明该线程没有在运行，因为runWorker中执行任务会先lock</span></span><br><span class=\"line\">            <span class=\"comment\">// 因此保证了中断的肯定是空闲的线程</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!t.isInterrupted() &amp;&amp; w.tryLock()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    t.interrupt();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (SecurityException ignore) &#123;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">                    w.unlock();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (onlyOne)</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        mainLock.unlock();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Woker类中的方法interruptIfStarted源代码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">interruptIfStarted</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    Thread t;</span><br><span class=\"line\">    <span class=\"comment\">// 初始化时state为-1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getState() &gt;= <span class=\"number\">0</span> &amp;&amp; (t = thread) != <span class=\"literal\">null</span> &amp;&amp; !t.isInterrupted()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            t.interrupt();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (SecurityException ignore) &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["线程池"],"tags":["源码","线程池"]},{"url":"/java/2017-07-15-%E6%AD%BB%E7%A3%95Java%E5%B9%B6%E5%8F%91-%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90volatile%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/","content":"<p>并发程序导致的问题:</p>\n<ol>\n<li>缓存导致的可见性问题<blockquote>\n<p>一个线程对共享变量的修改，另外一个线程能够立即看到，我们称之为可见性 <br><br>多核时代，每颗cpu都有自己的缓存，线程A操作的是cpu1上的缓存，线程b操作的是cpu2上的缓存。</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">long</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">idx</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(idx++&lt;<span class=\"number\">1000</span>)&#123;</span><br><span class=\"line\">            count += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">long</span> <span class=\"title function_\">calc</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"type\">Test</span> <span class=\"variable\">test</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Test</span>();</span><br><span class=\"line\">        <span class=\"type\">Thread</span> <span class=\"variable\">th1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(()-&gt;test.add());</span><br><span class=\"line\">        <span class=\"type\">Thread</span> <span class=\"variable\">th2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(()-&gt;test.add());</span><br><span class=\"line\">        </span><br><span class=\"line\">        th1.start();</span><br><span class=\"line\">        th2.start();</span><br><span class=\"line\">        </span><br><span class=\"line\">        th1.join();</span><br><span class=\"line\">        th2.join();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> test.count();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>线程切换带来的原子性问题<blockquote>\n<p>操作系统允许某个进程执行一小段时间，例如50毫秒，过了50毫秒操作系统会重新选择一个1进程来执行(我们称为任务切换), 这个50毫秒成为时间片 <br><br>早期的操作系统基于进程来调度cpu的，不同的进程间是不共享内存空间的，所以进程间做任务切换就要切换内存映射地址，而一个进程创建的所有线程，都是共享一个内存空间的，所以线程做认为切换的成本就很低了。<br><br>java并发程序都是基于多线程的，自然也会涉及到任务切换，任务切换的时机大多数是在时间片结束的时候，我们现在基本上都使用高级语言编程，高级语言里一条语句往往需要很多条cpu指令完成，例如上面代码中的count+&#x3D;1，至少需要三条cpu指令<br><br>1). 首先，需要把变量count从内存中加载到cpu的寄存器 <br><br>2). 之后，在寄存器中执行+1操作 <br><br>3). 最后，将结果写入内存(缓存机制导致可能写入的是cpu缓存而不是内存) <br><br>操作系统做任务切换，可以发生在任何一条cpu指令执行完。是cpu指令，而不是高级语言的一条语句。<br><br>我们把一个或者多个操作在cpu执行的过程中不被中断的特性称为原子性。cpu能保证的的原子性操作是cpu指令级别的，而不是高级语言的操作符。</p>\n</blockquote>\n</li>\n<li>编程优化带来的有序性问题<blockquote>\n<p>有序性指的是就是程序按照代码的先后顺序执行。编译器为了优化性能，有时候会改变程序中语句的先后顺序。比如，程序中的: a &#x3D; 6: b &#x3D; 7; 编译器优化后可能变成b &#x3D; 7; a &#x3D; 6;</p>\n</blockquote>\n</li>\n</ol>\n<p>要写好并发程序，首先需要知道并发程序的问题在哪里，只有确定了靶子，才有可能把问题解决，毕竟所有的解决方案都是有针对性的，并发程序经常出现的诡异问题看上去非常无厘头，但是如果深究的话，无外乎就是自觉欺骗了我们，只要我们能够深刻的立即可见性，原子性，有序性在并发场景下的原理，很多并发bug都是可以理解，可以诊断的。</p>\n<p>在介绍可见性，原子性，有序性的时候，特意提到缓存导致的可见性问题，线程切换带来的原子性问题，编译优化带来的有序性问题，其实缓存，线程，编译优化的目的和我们写并发程序的目的是一样的，都是提高程序的性能，但是技术在解决一个问题的时候，必然会带来另外的问题，所以在采用一项技术的同时，一定要清楚它带来的问题是什么，以及如果规避。</p>\n<p>一个变量如果用volatile修饰了，这java可以确保所有线程看到这个变量的值是一致的，如果某个线程对volatile修饰的共享变量进行更新，那么其他线程可以立马看到这个更新，这就是所谓的可见性。</p>\n<h1 id=\"内存模型相关概念\"><a href=\"#内存模型相关概念\" class=\"headerlink\" title=\"内存模型相关概念\"></a>内存模型相关概念</h1><p>理解volatile其实还是有点难度的，它与java的内存模型有关。</p>\n<h2 id=\"操作系统语义\"><a href=\"#操作系统语义\" class=\"headerlink\" title=\"操作系统语义\"></a>操作系统语义</h2><p>计算机在运行程序是，每条指令都是在cpu中执行的，在执行过程中势必会涉及到数据的读写，我们知道程序运行过程中数据都是存储在主存中的， 这时就有一个问题，读写主存中的数据没有cpu中执行指令的速度快，如果任何的交互都需要与主存打交道则会大大降低效率，所以就有了cpu高速缓存，cpu高速缓存就是为了某个cpu独有，只与该cpu运行的线程有关。</p>\n<p>有了cpu高速缓存虽然解决了效率问题，但是它带来了一个新的问题，数据一致性。在程序运行中，会将运行所需要的数据复制到一份到cpu高速缓存中，在进行运算时cpu不再与主存打交道，而是直接从高速缓存中读写数据，只有当运行结束后，才会将数据刷新到主存中。举一个简单的例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">i = i + <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>当线程运行这段代码的时候，首先会从主内存中读取i的值，然后复制一份到cpu高速缓存中，然后cpu执行+1的操作。然后将数据i的值写入到缓存中，最后刷新到主内存中。</p>\n<p>其实这样做在单线程是没有问题的，有问题的是多线程：如下：</p>\n<p>假设有两个线程A和B都执行这个操作(i++), 按照我们正常的逻辑主存中i的值应该是3才对，但是事实并非如此。</p>\n<p>两个线程从主存中读取i的值(假设i的值是1)，到各自的高速缓存中，然后A线程执行了+1操作，并将结果写入高速缓存中，最后写入到主存中，此时主存中i&#x3D;2，这时B线程做了同样的操作，主存中i仍然是2，最终结果是2，并不是3，这就是缓存一致性问题。</p>\n<p>缓存一致性问题的解决方案：</p>\n<ol>\n<li>通过给总线加lock#锁的方式</li>\n<li>通过缓存一致性协议</li>\n</ol>\n<p>第一种方案：存在一个问题，他是采用一种独占的方式来实现的，即总线加lock#锁，只有一个cpu能够运行，其他cpu都得阻塞，效率较为低下。</p>\n<p>第二种方案：缓存一致性协议(MESI协议)，它确保每个缓存中使用的共享变量的副本是一致的，其核心思想如下：当某个cpu在写数据是，如果发现操作的变量是共享变量，则会通知其他cpu该变量的缓存行是无效的，因此其他cpu在读取该变量是，发现其无效就重新从主内存中加载数据。</p>\n<h2 id=\"java内存模型\"><a href=\"#java内存模型\" class=\"headerlink\" title=\"java内存模型\"></a>java内存模型</h2><p>上面从操作系统层次阐述了如何保证数据一致性，下面我们来看一下 Java 内存模型，稍微研究一下它为我们提供了哪些保证，以及在 Java 中提供了哪些方法和机制，来让我们在进行多线程编程时能够保证程序执行的正确性。</p>\n<p>在并发编程中我们一般都会遇到这三个基本概念：原子性、可见性、有序性。我们稍微看下volatile 。</p>\n<h3 id=\"原子性\"><a href=\"#原子性\" class=\"headerlink\" title=\"原子性\"></a>原子性</h3><blockquote>\n<p>原子性：即一个操作或者多个操作，要么全部执行并且执行的过程不会被任何因素打断，要么就都不执行。</p>\n</blockquote>\n<p>原子性就像数据库里面的事务一样，他们是一个团队，同生共死。其实理解原子性非常简单，我们看下面一个简单的例子即可：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">i = <span class=\"number\">0</span>;  <span class=\"comment\">// &lt;1&gt;</span></span><br><span class=\"line\">j = i ;  <span class=\"comment\">// &lt;2&gt;</span></span><br><span class=\"line\">i++;  <span class=\"comment\">// &lt;3&gt;</span></span><br><span class=\"line\">i = j + <span class=\"number\">1</span>; <span class=\"comment\">// &lt;4&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上面四个操作，有哪个几个是原子操作，那几个不是？如果不是很理解，可能会认为都是原子性操作，其实只有 1 才是原子操作，其余均不是。</p>\n<ul>\n<li>&lt;1&gt;在 Java 中，对基本数据类型的变量和赋值操作都是原子性操作。</li>\n<li>&lt;2&gt;：包含了两个操作：读取 i，将 i 值赋值给 j 。</li>\n<li>&lt;3&gt;：包含了三个操作：读取 i 值、i + 1 、将 +1 结果赋值给 i 。</li>\n<li>&lt;4&gt;：同 &lt;3&gt; 一样</li>\n</ul>\n<p>volatile 是无法保证复合操作的原子性</p>\n<h3 id=\"有序性\"><a href=\"#有序性\" class=\"headerlink\" title=\"有序性\"></a>有序性</h3><blockquote>\n<p>有序性：即程序执行的顺序按照代码的先后顺序执行。</p>\n</blockquote>\n<p>在 Java 内存模型中，为了效率是允许编译器和处理器对指令进行重排序，当然重排序它不会影响单线程的运行结果，但是对多线程会有影响。</p>\n<h1 id=\"剖析volatile原理\"><a href=\"#剖析volatile原理\" class=\"headerlink\" title=\"剖析volatile原理\"></a>剖析volatile原理</h1><blockquote>\n<p>volatile 可以保证线程可见性且提供了一定的有序性，但是无法保证原子性。在 JVM 底层，volatile 是采用“内存屏障”来实现的。</p>\n</blockquote>\n<p>上面那段话，有两层语义：</p>\n<ul>\n<li>保证可见性、不保证原子性</li>\n<li>禁止指令重排序</li>\n</ul>\n<p>第一层语义就不做介绍了，下面重点介绍指令重排序。</p>\n<p>在执行程序时为了提高性能，编译器和处理器通常会对指令做重排序：</p>\n<ul>\n<li>编译器重排序。编译器在不改变单线程程序语义的前提下，可以重新安排语句的执行顺序。</li>\n<li>处理器重排序。如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序。</li>\n</ul>\n<p>指令重排序对单线程没有什么影响，他不会影响程序的运行结果，但是会影响多线程的正确性。既然指令重排序会影响到多线程执行的正确性，那么我们就需要禁止重排序。那么JVM是如何禁止重排序的呢？</p>\n<blockquote>\n<p>程序次序规则：一个线程内，按照代码顺序，书写在前面的操作，happens-before 于书写在后面的操作。<br> 锁定规则：一个 unLock 操作，happens-before 于后面对同一个锁的 lock 操作。<br> volatile 变量规则：对一个变量的写操作，happens-before于后面对这个变量的读操作。<br>传递规则：如果操作 A happens-before 操作 B，而操作 B happens-before操作C，则可以得出，操作 A happens-before 操作C<br>线程启动规则：Thread 对象的 start 方法，happens-before 此线程的每个一个动作。<br>线程中断规则：对线程 interrupt 方法的调用，happens-before被中断线程的代码检测到中断事件的发生。<br>线程终结规则：线程中所有的操作，都 happens-before线程的终止检测，我们可以通过Thread.join()方法结束、Thread.isAlive() 的返回值手段，检测到线程已经终止执行。<br>对象终结规则：一个对象的初始化完成，happens-before 它的 finalize() 方法的开始</p>\n</blockquote>\n<p>我们着重看第三点 Volatile规则：对 volatile变量的写操作，happen-before 后续的读操作。为了实现 volatile 内存语义，JMM会重排序，其规则如下：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-0fe50eef5d127364.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<pre><code>当第二个操作是 volatile 写操作时，不管第一个操作是什么，都不能重排序。这个规则，确保 volatile 写操作之前的操作，都不会被编译器重排序到 volatile 写操作之后。\n</code></pre>\n<p>对 happen-before 原则有了稍微的了解，我们再来回答这个问题 JVM 是如何禁止重排序的？</p>\n<p>观察加入 volatile 关键字和没有加入 volatile 关键字时所生成的汇编代码发现，加入volatile 关键字时，会多出一个 lock 前缀指令。lock 前缀指令，其实就相当于一个内存屏障。内存屏障是一组处理指令，用来实现对内存操作的顺序限制。volatile 的底层就是通过内存屏障来实现的。下图是完成上述规则所需要的内存屏障：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-57509b5f520ccb58.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<p>volatile 暂且下分析到这里，JMM体系较为庞大，不是三言两语能够说清楚的，后面会结合 JMM 再一次对 volatile 深入分析。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>volatile 看起来简单，但是要想理解它还是比较难的，这里只是对其进行基本的了解。</p>\n<p>volatile 相对于 synchronized 稍微轻量些，在某些场合它可以替代 synchronized ，但是又不能完全取代 synchronized 。只有在某些场合才能够使用 volatile，使用它必须满足如下两个条件：</p>\n<pre><code>对变量的写操作，不依赖当前值。\n该变量没有包含在具有其他变量的不变式中。\n\nvolatile 经常用于两个两个场景：状态标记变量、Double Check 。\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2Ntc2Jsb2dzLmNvbS8/cD0yMDky\">http://cmsblogs.com/?p=2092<i class=\"fa fa-external-link-alt\"></i></span></p>\n"},{"url":"/java/%E9%98%BF%E9%87%8C%E4%B8%80%E9%81%93Java%E5%B9%B6%E5%8F%91%E9%9D%A2%E8%AF%95%E9%A2%98(%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90)/","content":"<p>大家先看看下面的这个问题，看看有没有问题呢？那里有问题呢?</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ThreadSafeCache</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> result;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getResult</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setResult</span><span class=\"params\">(<span class=\"type\">int</span> result)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.result = result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>多线程并发的同时进行set，get操作，A线程调用set方法，B线程不一定能对这个改变可见！！</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这个类很简单，里面有一个属性，有2个方法，get和set方法，一个用来赋值，一个用来获取属性值，在设置的方法上面添加了synchronized。</p>\n<p>隐含的信息: 多线程并发的是set和get操作，A线程调用set方法，B线程能够感受到变化吗？</p>\n<p>说道这里，问题就变成了synchronized在刚刚说的上下文里面能否保证可见性！！！</p>\n<h2 id=\"关键字synchronized的用法\"><a href=\"#关键字synchronized的用法\" class=\"headerlink\" title=\"关键字synchronized的用法\"></a>关键字synchronized的用法</h2><p>指定加锁对象：对给定的对象加锁，进入同步代码前需要获得给定对象的锁</p>\n<p>直接作用于实例方法：相当于对当前实例加锁，进入同步代码块前要获得当前对象实例的锁</p>\n<p>直接作用于静态方法：相当于对当前类加锁，进入同步代码块前要获得当前类的锁</p>\n<p>synchronized它的工作就是对需要同步的代码加锁，使得每一次只有一个线程可以进入同步块，从而保证线程之间的安全性。</p>\n<p>从这里我们可以知道，我们需要分析的属于的二种情况，也就是说多个线程如果同时进行set方法的时候，由于存在锁，所以会一个一个的进行set操作，并且是线程安全的，但是get方法并没有加锁，表示假如A线程在进行set的同时B线程可以进行get操作，并且可以多个线程同时进行get操作，但是同时最多只能有一个set操作。</p>\n<h2 id=\"Java内存模型-happens-before规则\"><a href=\"#Java内存模型-happens-before规则\" class=\"headerlink\" title=\"Java内存模型 happens-before规则\"></a>Java内存模型 happens-before规则</h2><p>内存模型使用happens-before的概念来阐述操作之间的内存可见性，在JMM中，如果一个操作执行的结果需要对另一个操作可见，那么这两个操作之间必须存在happens-before关系，这里提到的两个操作既可以是一个线程内，也可以是不同线程之间。</p>\n<p>与程序员密切相关的happens-before规则如下：</p>\n<p>程序顺序规则：一个线程中的每个操作，happens-before于该线程中的任意后续操作</p>\n<p>监视器锁规则：对一个监视器的解锁，happens-before于随后对这个监视器的加锁</p>\n<p>volatile变量规则：对一个volatile域的写，happens-before于任意后续对这个volatile域的读。</p>\n<p>传递性：如果A happens-before B，B happens-before C, 那么A happens-before C</p>\n<p>注意，两个操作之间具有happens-before关系，并不意味着前一个操作必须要在后一个操作之前执行！ happens-before仅仅要求前一个操作(执行的结果)对后一个操作可见，且前一个操作按顺序排在第二个操作之前(the first is volatile to and ordered before the second).</p>\n<p>其中有监视器锁规则：对一个监视器的解锁，happens-before与随后对这个监视器的加锁，这一条，仅仅是针对synchronized的set方法，而对于get方法并没有这方面的说明。</p>\n<p>其实在这种上下文下面一个synchronized的set方法，一个普通的get方法，A线程调用set方法，B线程，B线程不一定能对这个改变可见！！</p>\n<h2 id=\"volatile可见性\"><a href=\"#volatile可见性\" class=\"headerlink\" title=\"volatile可见性\"></a>volatile可见性</h2><p>前面happens-before原则就提到：volatile变量规则：对一个volatile域的写，happens-before与任意后续对这个volatile与的读，volatile从而保证了多线程的不可见性！！！</p>\n<p>volatile禁止内存重排序</p>\n<p>下面是JMM针对编译器制定的volatile重排序规则表</p>\n<p>能否重排序 | 第二个操作 | | |<br>| ---|--- | --- | --- | ---<br>第一个操作 | 普通读&#x2F;写 | volatile读 | volatile写<br>普通读&#x2F;写  |    |   |   NO<br>volatile读 |  NO    | NO    | NO<br>volatile写 |    | NO | NO</p>\n<p>为了实现volatile的内存语义，编译器在生成字节码时，会在指令序列前插入内存屏障来禁止特定类型的处理器重排序，</p>\n<p>下面是基于保守策略的JMM内存屏障插入策略</p>\n<p>在每一个volatile写操作的前面插入一个StoreStore屏障</p>\n<p>在每一个volatile写操作的后面插入一个StoreLoad屏障</p>\n<p>在每一个volatile读操作的后面插入一个LoadLoad屏障</p>\n<p>在每一个volatile读操作的后面插入一个LoadStore屏障。</p>\n<p>下面是保守策略下，volatile 写操作 插入内存屏障后生成的指令序列示意图：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/10297697-cb57c7483a58e500.png!web?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<p>下面是在保守策略下，volatile 读操作 插入内存屏障后生成的指令序列示意图：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/10297697-cab2dbc34f3e8dda.png!web?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<p>上述 volatile 写操作和 volatile 读操作的内存屏障插入策略非常保守。在实际执行时，只要不改变 volatile 写-读的内存语义，编译器可以根据具体情况省略不必要的屏障。</p>\n<h2 id=\"模拟\"><a href=\"#模拟\" class=\"headerlink\" title=\"模拟\"></a>模拟</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ypb.concurrent.stage2.chapter3;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VolatileAndSynchronizedTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 程序会一直卡在这边不动，表示set修改的200，get方法并不可见！！！</span></span><br><span class=\"line\"><span class=\"comment\">//        test1();</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//        test2();</span></span><br><span class=\"line\">        test3();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test3</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">VolatileTest</span> <span class=\"variable\">test</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">VolatileTest</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">8</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">                    test.setResult(x++);</span><br><span class=\"line\"></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;x = &quot;</span> + x);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;).start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;test.getResult() = &quot;</span> + test.getResult());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test2</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">        <span class=\"type\">VolatileTest</span> <span class=\"variable\">test</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">VolatileTest</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">8</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (test.getResult() &lt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">                    x++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;x = &quot;</span> + x);</span><br><span class=\"line\">            &#125;).start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        TimeUnit.MILLISECONDS.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        test.setResult(<span class=\"number\">200</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">        <span class=\"type\">SynchronizedTest</span> <span class=\"variable\">test</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SynchronizedTest</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">8</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (test.getResult() &lt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">                    x++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;x = &quot;</span> + x);</span><br><span class=\"line\">            &#125;).start();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        test.setResult(<span class=\"number\">200</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SynchronizedTest</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"type\">int</span> result;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getResult</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setResult</span><span class=\"params\">(<span class=\"type\">int</span> result)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.result = result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VolatileTest</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> <span class=\"type\">int</span> result;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getResult</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setResult</span><span class=\"params\">(<span class=\"type\">int</span> result)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.result = result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结论-1\"><a href=\"#结论-1\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>多线程并发的同时进行set、get操作， A线程调用set方法，B线程并一定能对这个改变可见！！！ ，上面的代码中，如果对get方法也加synchronized也是可见的，还是happens-before的 监视器锁规则：对一个监视器的解锁，happens-before 于随后对这个监视器的加锁。 ，只是volatile比synchronized更轻量级，所以本例直接用volatile。但是对于符合原子操作i++这里还是不行的还是需要synchronized。</p>\n"},{"title":"深究分布式缓存的几个点","url":"/redis/2018-10-28-%E6%B7%B1%E7%A9%B6%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98%E7%9A%84%E4%B9%9D%E4%B8%AA%E7%82%B9/","content":"<h1 id=\"redis简介\"><a href=\"#redis简介\" class=\"headerlink\" title=\"redis简介\"></a>redis简介</h1><p>redis是一个开源(BSD许可)的，内存中的数据结构存储系统，它可以用作数据库，缓存和消息中间件，它支持多种类型是数据结构，如字符串(String)，散列(hashes), 列表(lists), 集合(sets)，有序集合(sorted sets)与范围查询，bitmaps，hyperloglogs，和地理空间(geospatial) 索引半径查询。redis内置了复制(replication), lua脚本(lua scripting)，LRU驱动事件(LRU action), 事务(transactions) 和不同级别的磁盘持久化(persistence)，并通过redis哨兵(Sentinel)和自动分区(Cluster)提供了高可用性(high availability)。</p>\n<h1 id=\"为什么要用redis和为什么要用缓存\"><a href=\"#为什么要用redis和为什么要用缓存\" class=\"headerlink\" title=\"为什么要用redis和为什么要用缓存\"></a>为什么要用redis和为什么要用缓存</h1><p>主要从高性能和高并发这两点来看待这个问题。</p>\n<p><strong>高性能</strong></p>\n<p>假如用户第一个访问数据库中的某些数据，这个过程比较慢，因为是从磁盘上读取的，将该用户访问的数据存在缓存中，这样下次在访问这些数据的时候，就可以直接从内存中读取，操作缓存就是直接操作内存，所以速度相当快，如果数据库中的对应数据改变之后，同步改变缓存中相应的数据即可。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-12d1bb7c0057378f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<p><strong>高并发</strong></p>\n<p>直接操作缓存能够承受的请求是远远大于直接访问数据库的，所以我们可以考虑把数据库中部分数据转移到缓存中去，这样用户的一部分请求会直接到缓存中读取，而不用经过数据库。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-6cc3faccef5cc999?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<h1 id=\"为什么要用redis而不用map或者guava做缓存？\"><a href=\"#为什么要用redis而不用map或者guava做缓存？\" class=\"headerlink\" title=\"为什么要用redis而不用map或者guava做缓存？\"></a>为什么要用redis而不用map或者guava做缓存？</h1><p>缓存分本地缓存和分布式缓存，以java为例，使用自带的map或者guava实现的本地缓存，最主要的特点就是轻量以及快速，生命周期随着JVM的销毁而结束，并且在多实例的情况下，每个实例都需要各自存一份缓存，缓存不具有一致性。</p>\n<p>使用redis或memcached之类的缓存称为分布式缓存，在多实例的情况下，各实例共用一份缓存，缓存具有一致性，缺点是需要保持redis或者memcached服务的高可用，整个程序架构上较为复杂。</p>\n<h1 id=\"redis和memcached的区别\"><a href=\"#redis和memcached的区别\" class=\"headerlink\" title=\"redis和memcached的区别\"></a>redis和memcached的区别</h1><p>对于redis和memcached总结了下面四点。目前公司大部分使用的都是redis来实现缓存，而且redis自身也越来越强大起来。</p>\n<ol>\n<li>redis支持更加丰富的数据结构(支持更复杂的应用场景)：redis不仅仅支持简单的k&#x2F;v类型的数据，同时还提供了list, set, zset, hash等数据结构的存储，memcached仅支持简单的数据类型String。</li>\n<li>redis支持数据的持久化，可以将内存中的数据保存到磁盘中，重启的时候可以再次加载进行使用，而memcached把数据全部存在内存中。</li>\n<li>集群模式：memcached没有原生的的集群模式，需要依靠客户端来实现往集群中分片写入数据，但是redis目前是原生支持cluster模式的，redis官方就是支持redis cluster集群模式的，比memcached来说要好。</li>\n<li>memcached是多线程的，非阻塞IO复用的网络模型，redis是单线程的多路IO复用模型。</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>对比参数</th>\n<th>redis</th>\n<th>memcached</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>类型</td>\n<td>1.支持内存 <br> 2. 非关系型数据库</td>\n<td>1. 支持内存 <br> 2. key-value键值对形式 <br> 3. 缓存系统</td>\n</tr>\n<tr>\n<td>数据存储类型</td>\n<td>1. String <br> 2. List <br> 3. Set <br> 4. Hash <br> 5.Sorted Set 【俗称Zset】</td>\n<td>1. 文本型 <br> 2. 二进制类型(新版增加)</td>\n</tr>\n<tr>\n<td>查询【操作】类型</td>\n<td>1. 批量操作 <br> 2. 事务支持 <br> 3. 每个类型不同的CRUD</td>\n<td>1. CRUD <br> 2. 少量的其他命令</td>\n</tr>\n<tr>\n<td>附件功能</td>\n<td>1. 发布&#x2F;订阅模式 <br> 2. 主从模式 <br> 3. 序列化支持 <br> 4. 脚本支持【Lua脚本】</td>\n<td>多线程服务支持</td>\n</tr>\n<tr>\n<td>网络IO模型</td>\n<td>单线程模式</td>\n<td>多线程非阻塞IO模式</td>\n</tr>\n<tr>\n<td>事件库</td>\n<td>自封装简易事件库AeEvent</td>\n<td>贵族血统的LibEvent事件库</td>\n</tr>\n<tr>\n<td>持久化</td>\n<td>1. RDB <br> 2. AOF</td>\n<td>不支持</td>\n</tr>\n</tbody></table>\n<h1 id=\"redis常见数据结构已经使用场景分析\"><a href=\"#redis常见数据结构已经使用场景分析\" class=\"headerlink\" title=\"redis常见数据结构已经使用场景分析\"></a>redis常见数据结构已经使用场景分析</h1><ol>\n<li>String<blockquote>\n<p>常用命令: set, get, decr, incr, mget等.</p>\n</blockquote>\n</li>\n</ol>\n<p>String数据结构是最简单的key-value类型, value其实不仅仅可以是String, 也可以是数字,常规key-value缓存应用; 常规计数: 微博数, 粉丝数等.</p>\n<ol start=\"2\">\n<li>Hash<blockquote>\n<p>常用命令: hget, hset, hgetall等.</p>\n</blockquote>\n</li>\n</ol>\n<p>Hash是一个String类型的field和value的映射表, hash特别适合用于存储对象, 后续操作的时候, 你可以直接仅仅修改这个对象中的某个字段的值. 比如我们可以使用Hash数据结构来存储用户信息, 商品信息等等. 比如下面我们就用hash类型存放我本人的一些信息:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">key=happy518</span><br><span class=\"line\">value=&#123;</span><br><span class=\"line\">    &quot;id&quot;: 1,</span><br><span class=\"line\">    &quot;name&quot;: &quot;happy518&quot;,</span><br><span class=\"line\">    &quot;age&quot;: 29,</span><br><span class=\"line\">    &quot;location&quot;: &quot;beijing&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>List<blockquote>\n<p>常用命令: lpush, rpush, lpop, rpop, lrange等</p>\n</blockquote>\n</li>\n</ol>\n<p>list就是链表, redis list的应用场景非常多, 也是redis最重要的数据结构之一, 比如微博的关注列表, 粉丝列表, 消息列表等功能都可以用redis的list结构来实现.</p>\n<p>redis list的实现是一个双向链表, 既可以支持反向查询和遍历, 更方便操作, 不过带来了部分额外的内存开销.</p>\n<p>另外可以通过lrange命令, 就是从某个元素开始读取多个元素, 可以基于list实现分页查询, 这是一个很棒的功能, 基于redis实现简单的高性能分页, 可以做到类似微博那种下拉不断分页的东西(一页一页的往下走), 性能高.</p>\n<ol start=\"4\">\n<li>Set<blockquote>\n<p>常用命令: sadd, spop, smembers, sunion等.</p>\n</blockquote>\n</li>\n</ol>\n<p>set对外提供的功能与list类似是一个列表的功能, 特殊之处在于set是可以自动排重的.</p>\n<p>当你需要存储一个列表数据, 又不希望出现重复数据时, set是一个很好的选择, 并且set提供了判断某个成员是否在一个set集合内的重要接口, 这也是list所不能提供的, 可以基于set轻易实现交集, 并集, 差集的操作.</p>\n<p>比如: 在微博应用中, 可以将一个用户所有的关注人存在一个集合中, 将其所有粉丝存在一个集合, redis可以非常方便的实现如同关注, 共同粉丝, 共同喜好等功能, 这个过程就是求交集的过程, 具体命令如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sinterstore key1 key2 key3 // 将交集存在key1内</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>Sorted Set<blockquote>\n<p>常用命令: zadd, zrange, zrem, zcard等.</p>\n</blockquote>\n</li>\n</ol>\n<p>和set相比, sorted set增加了y一个权重参数score, 使得集合中的元素能够按照score进行有序排列. </p>\n<p>比如: 在直播系统中, 实时排行信息包含直播间在线用户列表, 各种礼物排行榜, 弹幕消息(可以理解为按消息维度的消息排行榜)等信息, 适合使用redis中的sorted set结构进行存储.</p>\n<h1 id=\"redis设置过期\"><a href=\"#redis设置过期\" class=\"headerlink\" title=\"redis设置过期\"></a>redis设置过期</h1><p>redis中有个设置时间过期的功能, 即对存储在redis数据库中的值可以设置一个过期时间.<br>作为一个缓存数据库, 这是非常实用的, 如我们一般项目中的token或者一些登录信息, 尤其是短信验证码都是有时间限制的, 按照传统的数据库处理方式, 一般都是自己判断过期, 这样无疑会严重影响项目性能.</p>\n<p>我们set key的时候, 都可以给一个expire time, 就是过期时间, 通过过期时间我们可以指定这个key可以存活的时间.</p>\n<p>如果假设你设置了一个一批key只能存活1小时, 那么接下来1小时后, redis是怎么对这批key进行删除的?</p>\n<p><strong>定期删除+惰性删除</strong></p>\n<p>通过名字大概就能猜出这两个删除方式的意思了.</p>\n<ul>\n<li>定时删除:</li>\n</ul>\n<p>redis默认是每隔100ms就随机抽取一些设置了过期时间的key, 检查其是否过期, 如果过期就删除, 注意这里是随机抽取的, 为什么要随机呢? 你想一想假设redis存了十几万个key, 每隔100ms就遍历所有设置过期时间的key的话, 就会给cpu带来很大的负载.</p>\n<ul>\n<li>惰性删除:</li>\n</ul>\n<p>定期删除可能会导致很多过期key到了时间并没有被删除掉. 所以就有了惰性删除, 假如你的过期key, 靠定期删除没有被删除掉, 还停留在内存里, 除非你的系统去查一下那个key, 才会被redis给删除掉. 这就是所谓的惰性删除.</p>\n<p>但是仅仅通过设置过期时间还是有问题的, 我们想一下: 如果定期删除溜掉了很多过期的key, 然后你也没有及时去查, 也就没走惰性删除, 此时会怎么样? 如果大量过期key堆积在内存里, 导致redis内存快耗尽了, 怎么解决了这个问题? redis内存淘汰机制.</p>\n<h1 id=\"redis内存淘汰机制\"><a href=\"#redis内存淘汰机制\" class=\"headerlink\" title=\"redis内存淘汰机制\"></a>redis内存淘汰机制</h1><p>(msql里面有2000w数据, redis中只存20w的数据, 如何保证redis中的数据都是热点数据?)</p>\n<p><strong>redis提供6种数据淘汰策略</strong></p>\n<ol>\n<li>volatile-lru: 从已设置过期时间的数据集(server.db[i].expires)中挑选最近最少使用的数据淘汰.</li>\n<li>volatile-ttl: 从已设置过期时间的数据集(server.db[i].expires)中挑选将要过期的数据淘汰.</li>\n<li>volatile-random: 从已设置过期时间的数据集(server.db[i].expires)中任意选择数据淘汰.</li>\n<li>allkeys-lru: 当内存不足以容纳新写入数据时, 在健空间中, 移除最近最少使用的key(这个是最常用的).</li>\n<li>allkeys-random: 从数据集(server.db[i].dict)中任意选择数据淘汰.</li>\n<li>no-enviction: 禁止驱逐数据, 也就是说当内存不足以容纳新写入数据时, 新写入操作会报错.</li>\n</ol>\n<h1 id=\"redis持久化机制\"><a href=\"#redis持久化机制\" class=\"headerlink\" title=\"redis持久化机制\"></a>redis持久化机制</h1><p>(怎么保证redis挂掉之后在重启数据可以进行恢复)</p>\n<p>很多时候我们需要持久化数据也就是将内存中的数据写入到硬盘里面, 大部分原因是为了之后重用数据(比如重启机器, 机器故障之后回复数据), 或者是为了防止系统故障而将数据备份到一个远程位置.</p>\n<p>redis不同与Memcached的很重一点就是, redis支持持久化, 而且支持两种不同的持久化策略,<br>redis的一种持久化方式叫做快照(snapshotting, RDB), 另一种方式是只追加文件(append-only file, AOF), 这两种方法各有千秋, 下面详细介绍这两种持久化方式是什么, 怎么用. 如果选择适合自己的持久化方式.</p>\n<p><strong>快照(snapshotting)持久化 RDB</strong></p>\n<p>redis可以通过创建快照来获得存储在内存里面的数据在某个时间点上的副本, redis创建快照之后, 可以对快照进行备份, 可以将快照复制到其他服务器从而创建具有相同数据的服务器副本(redis主从结构, 主要用来提高redis性能), 还可以将快照留在原地以便重启服务器的时候使用.</p>\n<p>快照持久化是redis默认采用的持久化方式, 在redis.conf配置文件中默认有如下配置</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 在900秒(15分钟)之后, 如果至少有1个key发生变化, redis就会自动触发BGSAVE命令创建快照.</span><br><span class=\"line\">save 900 1 </span><br><span class=\"line\"></span><br><span class=\"line\"># 在300秒(5分钟)之后, 如果至少有10个key发生变化, redis就会自动触发BGSAVE命令创建快照.</span><br><span class=\"line\">save 300 10</span><br><span class=\"line\"></span><br><span class=\"line\"># 在60秒(1分钟)之后, 如果至少有10000个key发生变化, redis就会自动出发BGSAVE命令创建快照</span><br><span class=\"line\">save 60 10000</span><br></pre></td></tr></table></figure>\n\n<p><strong>AOF(append-only file)持久化</strong></p>\n<p>与快照持久化相比, AOF持久化的实时性更好, 因此已成为主流的持久化方案, 默认情况下redis是没有开启aof方式的持久化, 可以通过appendonly参数开启:</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">appendonly yes</span><br></pre></td></tr></table></figure>\n<p>开启AOF持久化后每一条会更改redis中数据的命令, redis就会将该命令写入磁盘中的AOF文件. aof文件的保持位置和rdb文件的位置相同, 都是通过dir参数设置的, 默认的文件名是appendonly.aof.</p>\n<p>在redis的配置文件中存在三种不同的AOF持久化方式, 它们分别是:</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 每次有数据修改时都会写入AOF文件, 这样会严重降低redis的速度</span><br><span class=\"line\">appendfsync always</span><br><span class=\"line\"></span><br><span class=\"line\"># 每秒同步一次, 显示地将多个写命令同步到磁盘</span><br><span class=\"line\">appendfsync everysec</span><br><span class=\"line\"></span><br><span class=\"line\"># 让操作系统决定何时同步</span><br><span class=\"line\">appendfsync no</span><br></pre></td></tr></table></figure>\n<p>为了兼顾数据和写入性能, 用户可以考虑appendfsync everysec选项, 让redis每秒同步一次aof文件, redis性能几乎没收到任何影响, 而且这样即使出现系统崩溃, 用户最多只丢失一秒之内产生的数据, 当磁盘忙于执行写入操作的时候, redis还会优雅的放慢自己的速度以便适应磁盘的最大写入速度.</p>\n<p><strong>补充内容: AOF重写</strong></p>\n<p>AOF重写可以产生一个新的AOF文件, 这个新的AOF文件和原有的AOF文件所保存的数据库状态一样, 但体谅更小.</p>\n<p>AOF重写是一个有歧义的名字, 该功能是通过读取数据库中的键值对来实现的, 程序无须对现有AOF文件进行任何读入, 分析或者写入操作.</p>\n<p>在执行BGREWRITEAOF命令时, redis服务器会维护一个AOF重写缓冲区, 该缓冲区会在子进程创建新AOF文件期间, 记录服务器执行的所有写命令, 当子进程完成创建新AOF文件的工作之后, 服务器会将重写缓冲区中的所有内容追加到新的AOF文件的末尾, 使得新旧两个AOF文件所保持的数据库状态一致, 最后, 服务器用新的AOF文件替换旧的AOF文件, 以此来完成AOF文件重写操作.</p>\n<h1 id=\"缓存雪崩和缓存穿透问题解决方案\"><a href=\"#缓存雪崩和缓存穿透问题解决方案\" class=\"headerlink\" title=\"缓存雪崩和缓存穿透问题解决方案\"></a>缓存雪崩和缓存穿透问题解决方案</h1><p><strong>缓存雪崩</strong></p>\n<p>简介: 缓存同一时间大面积的失效, 所以, 后面的请求都会落到数据库上, 造成数据库短时间内承受大量请求而崩掉.</p>\n<p>解决办法:</p>\n<ul>\n<li>事前: 尽量保证整个redis集群的高可用性, 发现机器宕机尽快补上, 选择h合适的内存淘汰策略.</li>\n<li>事中: 本地ehcache缓存 + hystrix限流和降级, 避免Mysql崩掉.</li>\n<li>事后: 利用redis持久化机制保存的数据尽快恢复缓存.<br><img src=\"http://upload-images.jianshu.io/upload_images/14423059-f22d4aefeec2ca87?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></li>\n</ul>\n<p><strong>缓存穿透</strong></p>\n<p>简介: 一般是黑客故意去请求缓存中不存在的数据, 导致所有的请求都落到数据库上, 造成数据库短时间内承受大量请求而崩掉.</p>\n<p>解决办法: 有很多方法可以有效的解决缓存穿透问题, 最常见的则是采用布隆过滤器, 将所有可能存在的数据哈希到一个足够大的bitmap中, 一个一定不存在的数据会被这个bitmap拦截掉, 从而避免了对底层存储系统的查询压力, 另外也有一个更为简单粗暴的方法, 如果一个查询返回的数据结果为空, 不管是数据不存在, 还是系统故障, 我们仍然把这个空结果进行缓存, 但是它的过期时间会很短, 最长不超过5分钟.</p>\n","categories":["redis"],"tags":["redis"]},{"title":"redis命令行工具有趣的罕见用法","url":"/redis/2018-10-29-%E7%9F%AD%E5%B0%8F%E7%B2%BE%E6%82%8D%E4%B9%8B%20Redis%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%95%E8%A7%81%E7%94%A8%E6%B3%95/","content":"<p>我们每天都在使用redis内置的redis-cli，久而久之以为它就是一个简单的交互式redis数据结构手工操作程序，但是它背后q强大的功能绝大多数同学可能闻所未闻，今天我们一起下来挖掘这些鲜为人知的有趣用法。</p>\n<h1 id=\"执行单条命令\"><a href=\"#执行单条命令\" class=\"headerlink\" title=\"执行单条命令\"></a>执行单条命令</h1><p>平时在访问redis服务器，一般都会使用redis-cli进入交互模式，然后一问一答来读写服务器，这种情况下我们使用的是它的[交互模式]。还有另外一种[直接模式]，通过j将命令参数直接传递给redis-cli来执行指令并获取结果。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ redis-cli incrby foo 5</span><br><span class=\"line\">(integer) 5</span><br><span class=\"line\"></span><br><span class=\"line\">$ redis-cli incrby foo 5</span><br><span class=\"line\">(integer) 10</span><br></pre></td></tr></table></figure>\n<p>如果输出的内容比较大，还可以将输出c重定向到外部文件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ redis-cli info &gt; info.txt</span><br><span class=\"line\"></span><br><span class=\"line\">$ wc -l info.txt </span><br><span class=\"line\">120 info.txt</span><br></pre></td></tr></table></figure>\n<p>上面的命令指向的服务器是默认地址。如果想指定特定的服务器可以这样。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">// -n 2 表示使用地2个库，相当于 select 2</span><br><span class=\"line\">$ redis-cli -h localhost -p 6379 -n 2 ping</span><br><span class=\"line\">PONG</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"批量执行命令\"><a href=\"#批量执行命令\" class=\"headerlink\" title=\"批量执行命令\"></a>批量执行命令</h1><p>在平时线上开发过程中，有时候我们避免不了要手动造数据，然后倒入redis，通常我们会编写脚本来做这件事情，不过还有另外一直比较便捷的方式，那就是直接使用redis-clil来批量执行一系列指令。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ cat cmds.txt</span><br><span class=\"line\">set foo1 bar1</span><br><span class=\"line\">set foo2 bar2</span><br><span class=\"line\">set foo3 bar3</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">$ cat cmds.txt | redis-cli</span><br></pre></td></tr></table></figure>\n<p>上面的指令使用了Unix管道将catz指令的标准输出连接到redis-cli的标准输入，其实还可以直接使用输入重定向来批量之执行指令。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ redis-cli &lt; cmds.txt</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"set多行字符串\"><a href=\"#set多行字符串\" class=\"headerlink\" title=\"set多行字符串\"></a>set多行字符串</h1><p>如果一个字符串有多行，你希望将它传入set指令，redis-cli要如何做？可以使用-x选项，该选项会使用标准输入后的内容作为最后一个参数。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ cat str.txt</span><br><span class=\"line\">Ernest Hemingway once wrote,</span><br><span class=\"line\">&quot;The world is a fine place and worth fighting for.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">I agree with the second part.</span><br><span class=\"line\"></span><br><span class=\"line\">$ redis-cli -x set foo &lt; str.txt</span><br><span class=\"line\">OK</span><br><span class=\"line\"></span><br><span class=\"line\">$ redis-cli get foo</span><br><span class=\"line\">&quot;Ernest Hemingway once wrote,\\n\\&quot;The world is a fine place and worth fighting for.\\&quot;\\nI agree with the second part.\\n&quot;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"重复执行指令\"><a href=\"#重复执行指令\" class=\"headerlink\" title=\"重复执行指令\"></a>重复执行指令</h1><p>redis-cli还支持重复执行指令多次，每条执行执行之间设置一个时间间隔，如此便可以观察某条指令的输出内容时间变化。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">// 间隔1s，执行5次，观察qps的变化</span><br><span class=\"line\">$ redis-cli -r 5 -i 1 info | grep ops</span><br><span class=\"line\">instantaneous_ops_per_sec:43469</span><br><span class=\"line\">instantaneous_ops_per_sec:47460</span><br><span class=\"line\">instantaneous_ops_per_sec:47699</span><br><span class=\"line\">instantaneous_ops_per_sec:46434</span><br><span class=\"line\">instantaneous_ops_per_sec:47216</span><br></pre></td></tr></table></figure>\n<p>如果将次数设置为-1，那就是重复无数次永远的执行下去，如果不提供-i参数，那就是没有间隔，连续重复执行，在交互模式下也可以重复执行指令，形式上比较怪异，在指令前增加次数。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; 5 ping</span><br><span class=\"line\">PONG</span><br><span class=\"line\">PONG</span><br><span class=\"line\">PONG</span><br><span class=\"line\">PONG</span><br><span class=\"line\">PONG</span><br><span class=\"line\"></span><br><span class=\"line\"># 下面的指令很可怕，你的屏幕要愤怒了</span><br><span class=\"line\"></span><br><span class=\"line\">127.0.0.1:6379&gt; 10000 info</span><br><span class=\"line\">.......</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"导出csv\"><a href=\"#导出csv\" class=\"headerlink\" title=\"导出csv\"></a>导出csv</h1><p>redis-cli不能一次导出整个库的内容为csv，但是可以导出单条指令输出结果为csv格式。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ redis-cli rpush lfoo a b c d e f g</span><br><span class=\"line\">(integer) 7</span><br><span class=\"line\"></span><br><span class=\"line\">$ redis-cli --csv lrange lfoo 0 -1</span><br><span class=\"line\">&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;f&quot;,&quot;g&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">$ redis-cli hmset hfoo a 1 b 2 c 3 d 4</span><br><span class=\"line\">OK</span><br><span class=\"line\"></span><br><span class=\"line\">$ redis-cli --csv hgetall hfoo</span><br><span class=\"line\">&quot;a&quot;,&quot;1&quot;,&quot;b&quot;,&quot;2&quot;,&quot;c&quot;,&quot;3&quot;,&quot;d&quot;,&quot;4&quot;</span><br></pre></td></tr></table></figure>\n<p>当然这种导出功能比较弱，仅仅是一堆字符串用逗号隔开，不过你可以结合命令的批量执行看看多个指令的导出结果。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ redis-cli --csv -r 5 hgetall hfoo</span><br><span class=\"line\">&quot;a&quot;,&quot;1&quot;,&quot;b&quot;,&quot;2&quot;,&quot;c&quot;,&quot;3&quot;,&quot;d&quot;,&quot;4&quot;</span><br><span class=\"line\">&quot;a&quot;,&quot;1&quot;,&quot;b&quot;,&quot;2&quot;,&quot;c&quot;,&quot;3&quot;,&quot;d&quot;,&quot;4&quot;</span><br><span class=\"line\">&quot;a&quot;,&quot;1&quot;,&quot;b&quot;,&quot;2&quot;,&quot;c&quot;,&quot;3&quot;,&quot;d&quot;,&quot;4&quot;</span><br><span class=\"line\">&quot;a&quot;,&quot;1&quot;,&quot;b&quot;,&quot;2&quot;,&quot;c&quot;,&quot;3&quot;,&quot;d&quot;,&quot;4&quot;</span><br><span class=\"line\">&quot;a&quot;,&quot;1&quot;,&quot;b&quot;,&quot;2&quot;,&quot;c&quot;,&quot;3&quot;,&quot;d&quot;,&quot;4&quot;</span><br></pre></td></tr></table></figure>\n<p>看到这里应该明白--csv参数的效果就是对输出做了一次转换，用逗号隔开，经此而已。</p>\n<h1 id=\"执行lua脚本\"><a href=\"#执行lua脚本\" class=\"headerlink\" title=\"执行lua脚本\"></a>执行lua脚本</h1><p>在lua脚本，我们可以使用eval指令之执行脚本字符串，每次都是将脚本内容压缩成单行字符串在调用eval指令，这非常繁琐，而且可读性很差，redis-cli考虑到这点，它可以直接执行脚本文件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; eval &quot;return redis.pcall(&#x27;mset&#x27;, KEYS[1], ARGV[1], KEYS[2], ARGV[2])&quot; 2 foo1 foo2 bar1 bar2</span><br><span class=\"line\">OK</span><br><span class=\"line\"></span><br><span class=\"line\">127.0.0.1:6379&gt; eval &quot;return redis.pcall(&#x27;mget&#x27;, KEYS[1], KEYS[2])&quot; 2 foo1 foo2</span><br><span class=\"line\">1) &quot;bar1&quot;</span><br><span class=\"line\">2) &quot;bar2&quot;</span><br></pre></td></tr></table></figure>\n<p>下面我们以脚本的形式来执行上面的指令，参数形式有所不同，KEY和ARGV之间需要使用逗号分割，并且不需要提供KEY的数量参数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ cat mset.txt</span><br><span class=\"line\">return redis.pcall(&#x27;mset&#x27;, KEYS[1], ARGV[1], KEYS[2], ARGV[2])</span><br><span class=\"line\"></span><br><span class=\"line\">$ cat mget.txt</span><br><span class=\"line\">return redis.pcall(&#x27;mget&#x27;, KEYS[1], KEYS[2])</span><br><span class=\"line\"></span><br><span class=\"line\">$ redis-cli --eval mset.txt foo1 foo2, bar1 bar2</span><br><span class=\"line\">OK</span><br><span class=\"line\"></span><br><span class=\"line\">$ redis-cli --eval mget.txt foo1 foo2</span><br><span class=\"line\">1) &quot;bar1&quot;</span><br><span class=\"line\">2) &quot;bar2&quot;</span><br></pre></td></tr></table></figure>\n<p>如果你的lua脚本太长，--eval将大有用处。</p>\n<h1 id=\"监控服务器状态\"><a href=\"#监控服务器状态\" class=\"headerlink\" title=\"监控服务器状态\"></a>监控服务器状态</h1><p>我们可以使用--stat参数来实时监控服务器的状态，间隔1s实时输出一次。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ redis-cli --stat</span><br><span class=\"line\">------- data ------ --------------------- load -------------------- - child -</span><br><span class=\"line\">keys mem clients blocked requests connections</span><br><span class=\"line\">2 6.66M 100 0 11591628 (+0) 335</span><br><span class=\"line\">2 6.66M 100 0 11653169 (+61541) 335</span><br><span class=\"line\">2 6.66M 100 0 11706550 (+53381) 335</span><br><span class=\"line\">2 6.54M 100 0 11758831 (+52281) 335</span><br><span class=\"line\">2 6.66M 100 0 11803132 (+44301) 335</span><br><span class=\"line\">2 6.66M 100 0 11854183 (+51051) 335</span><br></pre></td></tr></table></figure>\n<p>如果你觉得间隔太短或者太长，可以使用-i参数调整输出间隔。</p>\n<h1 id=\"扫描大key-bigkeys\"><a href=\"#扫描大key-bigkeys\" class=\"headerlink\" title=\"扫描大key(bigkeys)\"></a>扫描大key(bigkeys)</h1><p>这个功能太实用了，我已经在线上试过无数次了，每次遇到redis偶然卡顿问题，第一个想到的就是示例中是否存在大KEY，大key的内存扩容以及释放d都会导致主线程卡顿，如果想知道里面有没有大key，可以自己写程序扫描，不过这太繁琐了，redis-cli提供了--bigkeys参数可以很快扫出内存里面大key，使用-i参数控制扫描间隔，避免扫描指令导致服务器的ops徒增报警。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">redis-cli -p 6380 --bigkeys</span><br><span class=\"line\"></span><br><span class=\"line\">... ...</span><br><span class=\"line\">-------- summary -------</span><br><span class=\"line\"></span><br><span class=\"line\">Sampled 526 keys in the keyspace!</span><br><span class=\"line\">Total key length in bytes is 1524 (avg len 2.90)</span><br><span class=\"line\"></span><br><span class=\"line\">Biggest string found &#x27;test&#x27; has 10005 bytes</span><br><span class=\"line\">Biggest   list found &#x27;commentlist&#x27; has 13 items</span><br><span class=\"line\"></span><br><span class=\"line\">524 strings with 15181 bytes (99.62% of keys, avg size 28.97)</span><br><span class=\"line\">2 lists with 19 items (00.38% of keys, avg size 9.50)</span><br><span class=\"line\">0 sets with 0 members (00.00% of keys, avg size 0.00)</span><br><span class=\"line\">0 hashs with 0 fields (00.00% of keys, avg size 0.00)</span><br><span class=\"line\">0 zsets with 0 members (00.00% of keys, avg size 0.00)</span><br></pre></td></tr></table></figure>\n<p>最后5行可知, 没有set,hash,zset几种数据结构的数据, string类型有524个, list类型有两个, 通过bigkeys可知, 最大string结构的key是test, 最大list结构的key是commentList.</p>\n<p>需要注意的是, 这个bigkeys得到的最大, 不一定是最大, 说明原因前, 首先说明bigkeys的原理, 非常简单, 通过scan命令遍历, 各种不同的数据结构的key, 分别通过不同的命令得到最大的key.</p>\n<ul>\n<li>如果是string结构, 通过strlen判断.</li>\n<li>如果是list结构, 通过llen判断.</li>\n<li>如果是hash结构, 通过hlen判断.</li>\n<li>如果是set结构, 通过scard判断.</li>\n<li>如果是zset结构, 通过zcard判断.</li>\n</ul>\n<p>正因为这种的判断方式, 虽然string结构肯定可以正确的删选出来最占用内存, 也就是最大的key, 但list不一定, 例如, 现在有两个list类型的key, 分别是numberlist--[0, 1, 2], stringlist--[&quot;123456789123456789&quot;], 由于通过llen判断, 所以numberlist要大于stringlist. 而事实上stringlist更占用内存, 其他三种数据结构hash, set, sorted set都会存在这个问题, 使用bigkeys一定要注意这一点.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ redis-cli --bigkeys -i 0.01</span><br><span class=\"line\"># Scanning the entire keyspace to find biggest keys as well as</span><br><span class=\"line\"></span><br><span class=\"line\"># average sizes per key type. You can use -i 0.1 to sleep 0.1 sec</span><br><span class=\"line\"></span><br><span class=\"line\"># per 100 SCAN commands (not usually needed).</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[00.00%] Biggest zset found so far &#x27;hist:aht:main:async_finish:20180425:17&#x27; with 1440 members</span><br><span class=\"line\"></span><br><span class=\"line\">[00.00%] Biggest zset found so far &#x27;hist:qps:async:authorize:20170311:27&#x27; with 2465 members</span><br><span class=\"line\"></span><br><span class=\"line\">[00.00%] Biggest hash found so far &#x27;job:counters:6ya9ypu6ckcl&#x27; with 3 fields</span><br><span class=\"line\"></span><br><span class=\"line\">[00.01%] Biggest string found so far &#x27;rt:aht:main:device_online:68:&#123;-4&#125;&#x27; with 4 bytes</span><br><span class=\"line\"></span><br><span class=\"line\">[00.01%] Biggest zset found so far &#x27;machine:load:20180709&#x27; with 2879 members</span><br><span class=\"line\"></span><br><span class=\"line\">[00.02%] Biggest string found so far &#x27;6y6fze8kj7cy:&#123;-7&#125;&#x27; with 90 bytes</span><br></pre></td></tr></table></figure>\n<p>redis-cli对于每一种对象类型都会记录长度最大的key，对于每一种对象类型，刷新一次最高记录就会立即输出一次，它能保证输出长度为top1的key，但是top2和top3等key是无法保证可以扫描出来的，一般的处理方法是多扫描几次，或者是消灭了top1的key之后在扫描确认还有没有比较大的key。</p>\n<h1 id=\"采样服务器指令\"><a href=\"#采样服务器指令\" class=\"headerlink\" title=\"采样服务器指令\"></a>采样服务器指令</h1><p>现在线上有一台redis服务器的ops太高了，有很多业务模块都在使用这个redis，如何才能判断出来是哪个业务导致ops异常的高，这时可以对线上的服务器的指令进行采样，观察采样的指令大致就可以分析出ops占用比较高的业务点，这时就要是有monitor指令，它会将服务器瞬间执行的指令全部显示出来，不过使用的时候需要注意的是使用Ctrl+C中断，否则你的显示器会噼里啪啦太多指令瞬间让你眼花缭乱。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ redis-cli --host 192.168.x.x --port 6379 monitor</span><br><span class=\"line\">1539853410.458483 [0 10.100.90.62:34365] &quot;GET&quot; &quot;6yax3eb6etq8:&#123;-7&#125;&quot;</span><br><span class=\"line\">1539853410.459212 [0 10.100.90.61:56659] &quot;PFADD&quot; &quot;growth:dau:20181018&quot; &quot;2klxkimass8w&quot;</span><br><span class=\"line\">1539853410.462938 [0 10.100.90.62:20681] &quot;GET&quot; &quot;6yax3eb6etq8:&#123;-7&#125;&quot;</span><br><span class=\"line\">1539853410.467231 [0 10.100.90.61:40277] &quot;PFADD&quot; &quot;growth:dau:20181018&quot; &quot;2kei0to86ps1&quot;</span><br><span class=\"line\">1539853410.470319 [0 10.100.90.62:34365] &quot;GET&quot; &quot;6yax3eb6etq8:&#123;-7&#125;&quot;</span><br><span class=\"line\">1539853410.473927 [0 10.100.90.61:58128] &quot;GET&quot; &quot;6yax3eb6etq8:&#123;-7&#125;&quot;</span><br><span class=\"line\">1539853410.475712 [0 10.100.90.61:40277] &quot;PFADD&quot; &quot;growth:dau:20181018&quot; &quot;2km8sqhlefpc&quot;</span><br><span class=\"line\">1539853410.477053 [0 10.100.90.62:61292] &quot;GET&quot; &quot;6yax3eb6etq8:&#123;-7&#125;&quot;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"诊断服务器延迟\"><a href=\"#诊断服务器延迟\" class=\"headerlink\" title=\"诊断服务器延迟\"></a>诊断服务器延迟</h1><p>平时我们诊断两台服务器的延迟一般是使用Unix的ping指令，redis也提供了延迟诊断的指令，不过它的原理不太一样，它是诊断d当前机器和redis服务器之间的指令(ping指令)时延, 它不仅仅是物理网络的时延，还和当前redis主线程是否忙碌有关，如果你发现Unix的ping指令时延很小，而redis的时延很大，说明redis服务器在执行指令时有微弱的卡顿。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ redis-cli --host 192.168.x.x --port 6379 --latency</span><br><span class=\"line\">min: 0, max: 5, avg: 0.08 (305 samples)</span><br></pre></td></tr></table></figure>\n<p>时延的单位是ms，redis-cli还能显示时延的分布情况，而且是图形化输出。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ redis-cli --latency-dist</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-f337861feec0a30e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<h1 id=\"远程rdb备份\"><a href=\"#远程rdb备份\" class=\"headerlink\" title=\"远程rdb备份\"></a>远程rdb备份</h1><p>执行下面的命令就可以将远程的redis实例备份到本地机器，远程服务器会执行一次bgsave操作，将远程的的rdb文件传输到客户端，远程rdb备份让我们有一种&quot;秀才不出门，全知天下事&quot;的感觉。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ redis-cli --host 192.168.x.x --port 6379 --rdb ,/usr.rdb</span><br><span class=\"line\">SYNC sent to master, writing 2501265095 bytes to &#x27;./user.rdb&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">Transfer finished with success.</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"模拟从库\"><a href=\"#模拟从库\" class=\"headerlink\" title=\"模拟从库\"></a>模拟从库</h1><p>如果你想观察主从服务器之间都同步了那些数据，可以使用redis-cli模拟从库。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ redis-cli -h 192.168.x.x -p 6379 --slave</span><br><span class=\"line\">SYNC with master, discarding 51778306 bytes of bulk transfer...</span><br><span class=\"line\"></span><br><span class=\"line\">SYNC done. Logging commands from master.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>从库连上主库的第一件事情就是全量同步，所以看到上面的指令卡顿这很正常，待首次全量同步完成后，就会输出增量的aof日志。</p>\n<h1 id=\"keys\"><a href=\"#keys\" class=\"headerlink\" title=\"keys\"></a>keys</h1><p>因为使用keys这个命令，导致出现性能毛刺，这个命令的时间复杂度是0(n), 而且redis又是单线程执行的，在执行keys时即使是时间复杂度只有o(1), set或者get这种简单命令也会堵塞，从而导致这个时间点性能抖动，甚至可能出现timeout。</p>\n<blockquote>\n<p>强烈建议生产环境屏蔽keys命令</p>\n</blockquote>\n<h1 id=\"scan\"><a href=\"#scan\" class=\"headerlink\" title=\"scan\"></a>scan</h1><p>既然keys命令不允许使用，那么有什么替代方案呢，有，那就是scan命令，如果把keys命令比作类似select * from users where username like &quot;%fei%&quot;这种SQL，那么scan应该是select * from users where id &gt; ? limit 10;这种命令。</p>\n<p>官方文档用法如下：</p>\n<blockquote>\n<p>SCAN cursor [MATCH pattern] [COUNT count]</p>\n</blockquote>\n<p>初始化执行scan命令例如 scan0。SCAN命令是一个基于游标的迭代器，这意味着命令每次被调用都需要使用上一次这个调用返回的游标作为该次调用的游标参数，以此来延续之前的迭代过程，当SCAN命令的游标参数被设置为0时，服务器将开始一次新的迭代，而当redis服务器向用户返回值为0的游标时，表示迭代已结束，这是唯一迭代结束的判定方式，而不能通过返回结果集是否为空判断迭代结束。</p>\n<p>使用方式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; scan 0 </span><br><span class=\"line\">1) &quot;0&quot;                 </span><br><span class=\"line\">2) 1) &quot;foo&quot;</span><br></pre></td></tr></table></figure>\n<p>返回结果分为两部分: 第一部分即1) 就是下一次迭代游标，第二部分即2) 就是本次迭代结果集。</p>\n<h1 id=\"slowlog\"><a href=\"#slowlog\" class=\"headerlink\" title=\"slowlog\"></a>slowlog</h1><p>上面提到不能使用keysm命令，如果就有开发这么做了呢，我们该如何得知，与其他任意存储系统例如mysql， mongodb可以查看慢日志一样，redis也可以，即通过slowlog命令，用法如下：</p>\n<blockquote>\n<p>SLOWLOG subcommand [argument]</p>\n</blockquote>\n<p>subcommand主要有：</p>\n<ul>\n<li>get: 用法：slowlog get [argument], 获取argument参数指定数量的慢日志。</li>\n<li>len: 用法：slowlog len, 总慢日志数量。</li>\n<li>reset: 用法: slowlog reset, 清空慢日志.</li>\n</ul>\n<p>执行结果如下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6380</span>&gt; slowlog get <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">1</span>) <span class=\"number\">1</span>) (integer) <span class=\"number\">2</span></span><br><span class=\"line\">   <span class=\"number\">2</span>) (integer) <span class=\"number\">1532656201</span></span><br><span class=\"line\">   <span class=\"number\">3</span>) (integer) <span class=\"number\">2033</span></span><br><span class=\"line\">   <span class=\"number\">4</span>) <span class=\"number\">1</span>) <span class=\"string\">&quot;flushddbb&quot;</span></span><br><span class=\"line\"><span class=\"number\">2</span>) <span class=\"number\">1</span>) (integer) <span class=\"number\">1</span>  ----  慢日志编码，一般不用care</span><br><span class=\"line\">   <span class=\"number\">2</span>) (integer) <span class=\"number\">1532646897</span>  ----  导致慢日志的命令执行的时间点，如果api有timeout，可以通过对比这个时间，判断可能是慢日志命令执行导致的</span><br><span class=\"line\">   <span class=\"number\">3</span>) (integer) <span class=\"number\">26424</span>  ----  导致慢日志执行的redis命令，通过<span class=\"number\">4</span>)可知，执行config rewrite导致慢日志，总耗时26ms+</span><br><span class=\"line\">   <span class=\"number\">4</span>) <span class=\"number\">1</span>) <span class=\"string\">&quot;config&quot;</span></span><br><span class=\"line\">      <span class=\"number\">2</span>) <span class=\"string\">&quot;rewrite&quot;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>命令耗时超过多少才会保存到slowlog中,可以通过命令config set slowlog-log-slower-than 2000 配置并且不需要重新启动redis, 注意: 单位是微秒, 2000微妙即2毫秒.</p>\n</blockquote>\n<h1 id=\"rename-command\"><a href=\"#rename-command\" class=\"headerlink\" title=\"rename-command\"></a>rename-command</h1><p>为了防止把问题带到生产环境, 我们可以通过配置文件重命名一些危险命令, 例如 keys等一些高危命令, 操作非常简单, 只需要在conf配置文件增加如下所示配置即可: </p>\n<blockquote>\n<p>rename-command flushdb flushddbb <br><br>rename-command flushall flushallall <br><br>rename-command keys keysys</p>\n</blockquote>\n<h1 id=\"monitor\"><a href=\"#monitor\" class=\"headerlink\" title=\"monitor\"></a>monitor</h1><p>假设生产环境没有屏蔽keys等一些高非命令, 并且slowlog中还不断有新的keys导致慢日志. 那我们如何揪出这些命令是由谁执行的呢? 这是就是monitor的用处, 用法如下:</p>\n<blockquote>\n<p>redis-cli -h 127.0.0.1 -p 6379 -n 0 monitor</p>\n</blockquote>\n<p>如果当前redis环境ops比较高, 那么建议结合linux管道命令优化, 只输出keys命令的执行情况:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[afei@redis ~]# redis-cli -p 6380 monitor | grep keys </span><br><span class=\"line\">1532645266.656525 [0 10.0.0.1:43544] &quot;keyss&quot; &quot;*&quot;</span><br><span class=\"line\">1532645287.257657 [0 10.0.0.1:43544] &quot;keyss&quot; &quot;44*&quot;</span><br></pre></td></tr></table></figure>\n<p>执行结果中很清楚的看到keys命令执行来源, 通过输出ip地址和端口信息, 就能在目标服务器上找到执行这条命令的进程, 揪出元凶, 勒令整改.</p>\n<h1 id=\"info\"><a href=\"#info\" class=\"headerlink\" title=\"info\"></a>info</h1><p>如果说哪个命令能最全面反映当前redis运行情况, 那非info莫属, 用法如下: </p>\n<blockquote>\n<p>INFO [section]</p>\n</blockquote>\n<p>section可选值有:</p>\n<ul>\n<li>Server: 运行的redis实例一些信息, 包括redis版本, 操作系统信息, 端口, GCC版本, 配置文件路径等.</li>\n<li>Clients: redis客户端信息, 包括已连接客户端数量, 阻塞客户端数量等;</li>\n<li>Memory: 使用内存, 峰值内存, 内存碎片率, 内存分配方式, 这几个参数都非常重要.</li>\n<li>Persistence: AOF和RDB持久化信息.</li>\n<li>Stats: 一些统计信息, 最重要的三个参数: OPS(instantaneous_ops_per_sec), keyspace_hits和keyspace_misses两个参数反应缓存命中率.</li>\n<li>Replication: redis集群信息.</li>\n<li>CPU: cpu相关信息.</li>\n<li>keyspace: redis中各个DB里key的信息.</li>\n</ul>\n<h1 id=\"config\"><a href=\"#config\" class=\"headerlink\" title=\"config\"></a>config</h1><p>config是一个非常有价值的命令, 主要体现在对于redis的运维, 因为生产环境一般是不允许随意重启的, 不能因为需要调优一些参数就修改conf配置文件并重启, redis作者早就想到了这一点, 通过config命令能热修改一些配置, 不需要重启redis实例, 可以通过如下命令查看那些参数可以热修改:</p>\n<blockquote>\n<p>config get *</p>\n</blockquote>\n<p>热修改就比较容易了, 执行如下命令即可:</p>\n<blockquote>\n<p>config set </p>\n</blockquote>\n<p>例如: config set slowlog-max-len 100, config set maxclients 1024</p>\n<p>这样修改的话, 如果以后由于某些原因redis实例故障需要重启, 那通过config热修改的参数就会被配置文件中的参数覆盖, 所以我们需要通过一个命令将config热修改的参数刷新到redis配置文件中持久化, 通过执行如下命令即可:</p>\n<blockquote>\n<p>config rewrite</p>\n</blockquote>\n<p>执行完该命令后, 我们能能在config文件中看到类似这种信息:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 如果conf中本来就有这个参数, 通过执行config set, 那么redis直接原地修改配置文件</span><br><span class=\"line\">maxclients 1024</span><br><span class=\"line\"></span><br><span class=\"line\"># 如果conf中没有这个参数, 通过执行config set, 那么redis会追加在Generated by CONFIG REWRITE字样后面</span><br><span class=\"line\"># Generated by CONFIG REWRITE</span><br><span class=\"line\">save 600 60</span><br><span class=\"line\">slowlog-max-len 100</span><br></pre></td></tr></table></figure>\n<h1 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h1><p>官方文档介绍的用法如下:</p>\n<blockquote>\n<p>SET key value [Ex seconds] [PX milliseconds [NX|XX]</p>\n</blockquote>\n<p>你可能用的比较多的就是set key value, 或者 SRTEX key seconds value, 所以很多同学用redis实现分布式锁分为两步, 首先执行SETNX key value, 然后执行EXPIRE key seconds. 很明显,这种实现有很严重的问题, 因为分两步执行不具备原子性, 如果执行第一个命令后出现某些未知异常导致无法执行EXPIRE key seconds, 那么分布式锁就会一直无法释放.</p>\n<p>通过SET命令实现分布式锁的正确姿势应该是SET key vlaue EX seconds NX (EX和PX任选, 取决于过期时间精度要求), 另外, value也有要求, 最好是一个类型UUID这种具备唯一性的字符串, 当然如果问你redis是否还有其他实现分布式锁的方案, 你能说出redlock.</p>\n","categories":["redis"],"tags":["redis"]},{"title":"redis可以用来做什么","url":"/redis/2018-11-01-%E5%BC%80%E7%AF%87%EF%BC%9A%E6%8E%88%E4%BA%BA%E4%BB%A5%E9%B1%BC%E4%B8%8D%E8%8B%A5%E6%8E%88%E4%BA%BA%E4%BB%A5%E6%B8%94%20%E2%80%94%E2%80%94%20Redis%20%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E5%81%9A%E4%BB%80%E4%B9%88%EF%BC%9F/","content":"<p>redis是互联网技术领域使用最为广泛的存储中间件，他是【Remote Dictionary Service】的首字母缩写， 也就是远程字典服务，redis以其超高的性能，完美的文档， 简洁易懂和丰富的客户端库支持在开源中间件领域广受好评，国内外很大大型互联网公司都在使用redis，比如Twitter，YouPorn，GitHub，腾讯，阿里，京东，华为，新浪微博等等，很多中小型公司也都有应用，也就是说，对redis的了解和应用实践已成为当下中高端后端开发绕不开的必备技能。</p>\n<h1 id=\"有redis面试想到的\"><a href=\"#有redis面试想到的\" class=\"headerlink\" title=\"有redis面试想到的\"></a>有redis面试想到的</h1><p>在面试后端工程师redis技能的时候，面试官通常问的第一个问题就是“redis能用来做什么？”， 第一个回答往往都会是缓存，缓存确实是redis使用最多的领域，它相比memcached而言更加易于理解，使用和控制。</p>\n<p>可是如果再进一步问&quot;还有呢？&quot;, 大多数同学都会开始邹眉头， 只有一小部分人会回答分布式锁，如果你就分布式锁在深入问下去，他们基本就会开始摇头，我们项目里面redis的锁方法都是架构师封装好的，拿过来直接使用，内部细节没有了解过，也没有必要了解。</p>\n<p>对于类似的场景， 我深有体会，因为关于redis的面试题，之前准备了很多，但是真正能用得上的却很少，当面试的同学频繁地回复不知道，没用过的时候，在继续深入追问已经毫无意义，这个时候就需要切换话题，偶尔遇上几个能持续很多回合的同学，他们总能使人眼前一亮，如果在扩展一下周边的知识，就会发现这些人往往也会有所涉猎。</p>\n<p>这样的面试经历事后也让我深刻反思，架构师的技能很高，对提升团队研发效率很有帮助，但是普通开发者如果习惯于在架构师封装好的东西之上，只关注做业务开发，那久而久之，在技术理解和成长上就会变得迟钝甚至麻木，从这个角度看，架构师也能成为普通开发者的”敌人“，他强大能力会让大家变成温室里的花朵，一旦遇到环境变化就会不知所措。</p>\n<p>其实很多业务场景，如果仅仅是会使用某项技术，构架，那是再简单不过了，但随着业务发展，系统的用户量，并发量涨上来之后，现有系统的问题j就会层出不穷地暴露出来，如果不能深入地了解系统，技术和框架背后的深层原理，很多问题根本无法理解到本质，更谈不上解决，临时抱佛脚有于事无补。</p>\n<p>所谓授人以鱼不如授人以渔，就是帮助后端开发者较为深入的理解redis背后的原理和实践经验，做到知其然也知其所以然，为未来进阶成长为架构师做好准备。</p>\n<h1 id=\"内容范围\"><a href=\"#内容范围\" class=\"headerlink\" title=\"内容范围\"></a>内容范围</h1><p>主要讲解笔者从实战中摸索总结的redis最常用最核心知识点，但限于篇幅和能力，并没有覆盖redis全部的内容知识点，比如redids内置的lua脚本引擎完全没有提到，之所不讲，是因为平时的工作中确实很少使用过它，就好比关系型数据库的存储过程，虽然功能很强大，但是确实很少使用，而且也不易维护。</p>\n<p>对于很多小企业来说，很多内容都是用不上的，因为系统的并发量没有达到一定的量级，这些高级功能根本没有b必要使用，不过机会总是留给那些有准备的人，如果突然有一天流量涨上来了，redis的这些稀有的高级功能势必能立刻派上用场。</p>\n<h1 id=\"redis可以做什么\"><a href=\"#redis可以做什么\" class=\"headerlink\" title=\"redis可以做什么?\"></a>redis可以做什么?</h1><p>redis的业务访问非常广泛，以新浪微博的帖子为例，梳理一下，redis可以用在那些地方？</p>\n<ol>\n<li>记录帖子的点赞数，评论数，和点击数。(hash)</li>\n<li>记录用户的帖子ID列表，便于快速显示用户的帖子列表(zset)</li>\n<li>记录帖子的标题，摘要，作者h和封面信息，用于列表页展示(hash)</li>\n<li>记录帖子的点赞用户ID列表，评论ID列表，用于显示和去重计数(set)</li>\n<li>缓存最近热帖内容(帖子内容空间占用比较大)，减少数据库压力(hash)</li>\n<li>记录帖子的相关文章ID，根据内容推荐相关帖子(list).</li>\n<li>如果帖子ID是整数自增的，可以使用redis来分配帖子ID(计数器)</li>\n<li>收藏帖子之间的关系(zset)</li>\n<li>记录热榜帖子ID列表，总热榜和分类热榜(zset)</li>\n<li>缓存用户的行为历史，进行恶意行为过滤(zset, hash)</li>\n</ol>\n<p>当然，实际情况下需求可能也没有这么多，因为在请求压力不大的情况下，很多数据都是可以直接从数据库中查询的，但请求压力一大，以前通过数据库直接读取的数据则必须挪到缓存中。</p>\n","categories":["redis"],"tags":["redis"]},{"title":"为什么redis是单线程的","url":"/redis/%E4%B8%BA%E4%BB%80%E4%B9%88redis%E6%98%AF%E5%8D%95%E7%BA%BF%E7%A8%8B%E7%9A%84%EF%BC%9F/","content":"<blockquote>\n<p>以前一直有一个误区，以为：高性能服务器一定是多线程来实现的, 原因很简单因为误区二导致的：多线程一定比单线程效率高。其实不然。</p>\n</blockquote>\n<p>redis核心就是如果我的数据全都在内存里，我单线程的去操作，就是效率最高的，为什么呢？因为多线程的本质就是cpu模拟出来多个线程的情况，这种模拟出来的情况就是一个代价，就是上下文的切换，对于一个内存系统来说，它没有上下文的切换就是效率最高的，redis用单个cpu绑定一块内存的数据，然后针对这块内存的数据进行多次读写的时候，是在一个cpu上完成的，所以它是但线程处理这个事情。在内存的情况下，这个方案就是最佳方案。</p>\n<p>因为一次cpu上下文切换大概在1500ns(纳秒)左右，从内存中读取1MB的连续数据，耗时大约为250us(微妙)(1us&#x3D;1000ns)，假设1MB的数据有多个线程读取1000次，那么就由1000次时间上的上下文切换。那么就由1500ns * 1000 &#x3D; 1500us，而我单线程读完1MB数据才250us，你光时间上下文切换就用了1500us了，我还没有算你每次读一点数据的时间呢。</p>\n<h4 id=\"那么什么时候用多线程的方案呢？\"><a href=\"#那么什么时候用多线程的方案呢？\" class=\"headerlink\" title=\"那么什么时候用多线程的方案呢？\"></a>那么什么时候用多线程的方案呢？</h4><p>答案是：下层的存储等慢速的情况，比如磁盘，内存是一个IOPS(每秒进行IO操作的次数)非常高的系统，因为我想申请一块内存就申请一块内存，销毁一块内存我就销毁一块内存，内存的申请和销毁是很容易的。而且内存是可以动态申请大小的。</p>\n<p>磁盘的特点是：IOPS很低，但是吞吐量很高，这就意味着，大量的读和写操作必须攒到一起，在提交到磁盘的时候，性能最高。为什么呢？</p>\n<p>如果我有一个事务组的操作(就是几个已经分开了的事务请求，比如写读写读写，这五个操作在一起)， 在内存中，因为IOPS非常高，我可以一个一个的完成，但是如果在磁盘中也有这种请求方式的话，我第一个写操作是这样完成的，我先从磁盘中寻址，大搞花费10ms(毫秒)，然后我读取一个数据可能花费1ms，然后我在计算(忽略不计)，在写会磁盘又是10ms，总共21ms</p>\n<p>第二个请求去读花了10ms，第三个又是写花费了21ms，然后我在读写，五个请求一共花费了21+10+21+10+21&#x3D;83ms，这还是理想的情况下，这如果在内存中，大概1ms不到。</p>\n<p>所以对于磁盘来说，他吞吐量这么大，那最好的方案就是我将N个请求一起放在一个buffer里，然后一起去提交。</p>\n<p>方法就是用异步：将请求和处理的线程不绑定，请求的线程将请求放在一个buffer里，然后等buffer快慢了，处理的线程不再去处理这个buffer，然后有这个buffer统一的去写如磁盘，或者读磁盘。这样效率就是最高的。</p>\n<p>对于慢速设备，这种处理方式是最佳的，慢速设备有磁盘，网络，ssd等。</p>\n<p>多线程，异步的方式处理问题是非常常见的，大名鼎鼎的netty就是这样操作的。</p>\n<h4 id=\"为和单核cpu绑定一块内存效率最高\"><a href=\"#为和单核cpu绑定一块内存效率最高\" class=\"headerlink\" title=\"为和单核cpu绑定一块内存效率最高\"></a>为和单核cpu绑定一块内存效率最高</h4><p>我们不能任由操作系统负载均衡，因为我们自己更加了解自己的程序，所有我们可以手动的为其分配cpu核，而不会过多的占用cpu，默认情况下单线程在进行系统调用的时候会随机使用cpu内核，为了优化redis，我们可以使用工具为单线程绑定固定的cpu内核，减少不必要的性能损耗！redis作为单进程模型的程序，为了充分利用多核cpu，常常在一台server上启动多个实例，而为了减少切换的开销，我们有必要为每个实例指定其所运行的cpu。</p>\n<p>linux上taskset可以将某个进程绑定到一个特定的cpu。你比操作系统更了解自己的程序，为了避免调度器愚蠢的调度你的程序，或是为了在多线程程序中避免失效造成的开销，</p>\n<p>redis的瓶颈在网络上。</p>\n","categories":["redis"],"tags":["redis"]},{"title":"jdk8学习总结","url":"/jdk8/2018-09-25-jdk8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","content":"<h1 id=\"JDK8概述\"><a href=\"#JDK8概述\" class=\"headerlink\" title=\"JDK8概述\"></a>JDK8概述</h1><p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-05d2bd0bee473a5d.png\" loading=\"lazy\"><br>java8，也就是jdk1.8，是意义深远的一个版本，是java5之后一个大的版本升级，让java语言和库获得新生。<br>新特性包括:</p>\n<ol>\n<li>随着大数据的兴起，函数式编程在处理大数据的优势开始体现，引入了lambda函数式编程</li>\n<li>使用了Stream彻底改变了集合的使用方式，只关注结果，不关心过程</li>\n<li>良好设计的日期&#x2F;时间API</li>\n<li>增强的并发&#x2F;并行api</li>\n</ol>\n<h1 id=\"为什么需要lamdba表达式\"><a href=\"#为什么需要lamdba表达式\" class=\"headerlink\" title=\"为什么需要lamdba表达式\"></a>为什么需要lamdba表达式</h1><p>在java编程中，我们无法将函数作为一个参数传递给一个方法，也无法声明一个返回一个函数的方法</p>\n<h1 id=\"什么是lambda表达式\"><a href=\"#什么是lambda表达式\" class=\"headerlink\" title=\"什么是lambda表达式\"></a>什么是lambda表达式</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Lambda：In programming languages such as Lisp, Python and Ruby lambda is an operator</span><br><span class=\"line\">used to denote anonymous functions or closures, following the usage of lambda calculus</span><br></pre></td></tr></table></figure>\n<p>带有参数变量的表达式，是一段可以传递的代码，可以被一次或者多次执行，是一种精简的字面写法，其实就是匿名内部类中&quot;一定&quot;要做的工作省略掉，然后JVM通过推导把简化的表达式还原。<br>java在JDK8之前，匿名内部类的写法必须创建一个内部类子类的对象，重写内部类中的方法，其实我们关心的是重写内部类的方法，不需要创建内部类的子类对象，但是由于java的面向对象，只能有对象调用方法，不能直接调用方法，而lambda表达式弥补了这一缺陷。</p>\n<h1 id=\"lambda表达式的作用\"><a href=\"#lambda表达式的作用\" class=\"headerlink\" title=\"lambda表达式的作用\"></a>lambda表达式的作用</h1><ol>\n<li>lambda表达式为java添加了缺失的函数式编程的特性</li>\n<li>在函数式编程的语言中，lambda表达式的类型是函数，但是在java中，lambda表达式是对象，它们必须依附于一类特殊的对象类型-函数式接口(functional interface)</li>\n<li>如果一个接口中定义了Object类中的方法，是不算抽象方法的，例如一个接口中定义了抽象方法test和toString两个方法，他也是函数式接口</li>\n<li>java lambda表达式是一种匿名函数；它没有声明的方法，即没有访问修饰符，返回值声明和名字</li>\n<li>传递行为，而不仅仅是值</li>\n<li>提升抽象层次</li>\n<li>API重用性更好</li>\n</ol>\n<h1 id=\"lambda表达式的格式\"><a href=\"#lambda表达式的格式\" class=\"headerlink\" title=\"lambda表达式的格式\"></a>lambda表达式的格式</h1><p>(参数列表) -&gt; {expression表达式或者方法体}</p>\n<ul>\n<li>一个lambda表达式可以有零个或多个参数</li>\n<li>参数的类型既可以明确声明，也可以根据上下文来推断</li>\n<li>所有的参数需包含在圆括号内，参数之间使用逗号相隔</li>\n<li>空圆括号代表参数列表为空，</li>\n<li>当只有一个参数，且其类型可推导是，圆括号可以省略</li>\n<li>lambda表达式的主体可包含零条或者多条语句</li>\n<li>如果lambda表达式的主体只有一条语句，花括号可以省略。匿名函数的返回类型与该主体表达式一致</li>\n<li>如果lambda表达式的主体包含一条以上，则表达式必须包含在花括号{}中，形成代码块，匿名函数和返回值类型与代码块的返回值类型一致，若没有返回则为空。</li>\n</ul>\n","categories":["jdk8"],"tags":["jdk8","源码","lamdaba"]},{"title":"jdk8函数式接口学习总结","url":"/jdk8/2018-09-26-jdk8%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3/","content":"<p>Lambda设计者们为了让现有的功能与Lambda表达式良好兼容，考虑了很多方法，于是产生了函数式接口，函数式接口指的是自有一个函数的接口，这个接口可以隐式转换为Lambda表达式，java.lang.Runable和java.util.concurrent.Callable是函数式接口的最佳例子。在实践中，函数式接口非常脆弱；只要某个开发者在改接口中添加了一个函数，则该接口就不再是函数式接口进而导致编译失败，为了克服这种代码层面的脆弱性，并显式说明某个接口是函数式接口，Java8提供了一个特殊的注解，@FunctionalInterface(Java库中的所有相关接口都已经带有这个注解了)</p>\n<p>函数式接口的提出是为了给Lambda表达式的使用提供了更好的支持。</p>\n<h2 id=\"什么是函数式接口\"><a href=\"#什么是函数式接口\" class=\"headerlink\" title=\"什么是函数式接口\"></a>什么是函数式接口</h2><p>简单来说就是定义了一个抽象方法的接口(Object类的public方法除外), 就是函数式接口。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Functional</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">method</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>不过需要注意的，默认方法和静态方法不会破坏函数式接口的定义，因此如下代码是合法的。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Functional</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">method</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">default</span> <span class=\"keyword\">void</span> <span class=\"title function_\">defaultMethod</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"接口的默认方法和静态方法\"><a href=\"#接口的默认方法和静态方法\" class=\"headerlink\" title=\"接口的默认方法和静态方法\"></a>接口的默认方法和静态方法</h2><p>Java8使用两个新概念扩展了接口的含义：默认方法和静态方法。默认方法使得接口有点类似traits，不过要实现的目标不一样。默认方法使得开发者可以在不破坏二进制兼容的前提下，往现存的接口中添加新的方法，即不强制那些实现了该接口的类也同时实现这个新加的方法。</p>\n<p>默认方法和抽象方法之间的区别在于抽象方法需要实现，而默认方法不需要。接口的默认方法会被这个接口的实现类继承或覆写。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Defaulable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">default</span> String <span class=\"title function_\">noRequired</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Default implementation&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">static</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;static method&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DefaulableImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Defaulable</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OverridableImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Defaulable</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">noRequired</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Overriable Implementation&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DefaulableTest</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(Sytings[] args &#123;</span></span><br><span class=\"line\"><span class=\"params\">        Defaulable d = DefaultableImpl::new;</span></span><br><span class=\"line\"><span class=\"params\">        System.out.println(d.noRequired()</span>);</span><br><span class=\"line\">     </span><br><span class=\"line\">        d = OverridableImpl::<span class=\"keyword\">new</span>;</span><br><span class=\"line\">        System.out.println(d.noRequired());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在jdk8中很多接口会新增方法，为了保证1.8向下兼容，1.7版本中的接口实现类不用给每个都重新实现新添加的接口方法，引入了default默认实现，static的用法是直接用接口名去调用方法即可。当一个类继承父类实现了接口时，若后两者方法名相同，则优先继承父类中的同名方法，即“类优先”，如果实现了两个同名的的接口，则要求实现类必须手动声明默认实现那个接口中的方法。</p>\n<h2 id=\"常见的函数式接口\"><a href=\"#常见的函数式接口\" class=\"headerlink\" title=\"常见的函数式接口\"></a>常见的函数式接口</h2><ol>\n<li><p>Comsumer<T>: 消费型接口，有一个入参，无返回值</T></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ComsumerTest</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ComsumerTest</span> <span class=\"variable\">test</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ComsumerTest</span>();</span><br><span class=\"line\">        test.changeStr(<span class=\"string\">&quot;hello world&quot;</span>, str -&gt; System.out.print(str.toUpperCase()));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">changeStr</span><span class=\"params\">(String str, Comsumer&lt;String&gt; comsumer)</span> &#123;</span><br><span class=\"line\">        consumer.accept(str);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Supplier<T>: 供给型接口，无入参，有返回值</T></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SupplierTest</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args &#123;</span></span><br><span class=\"line\"><span class=\"params\">        SupplierTest test = new SupplierTest()</span>;</span><br><span class=\"line\">        test.getValue(() -&gt; <span class=\"string\">&quot;hello world&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> String <span class=\"title function_\">getValue</span><span class=\"params\">(Supplier&lt;String&gt; supplier)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> supplier.get();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Function&lt;T, R&gt;: 函数型接口，有一个入参，有返回值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FunctionTest</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args &#123;</span></span><br><span class=\"line\"><span class=\"params\">        FunctionTest test = new FunctionTest()</span>;</span><br><span class=\"line\">        test.changeNum(<span class=\"number\">100L</span>, x -&gt; x + <span class=\"number\">200L</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long <span class=\"title function_\">changeNum</span><span class=\"params\">(Long num, Function&lt;Long, Long&gt; function)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> function.apply(num);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Predicate<T>: 断言型接口，有参数有返回值，返回值是boolean类型。</T></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PredicateTest</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args &#123;</span></span><br><span class=\"line\"><span class=\"params\">        PredicateTest test = new PredicateTest()</span>;</span><br><span class=\"line\">        test.test(<span class=\"string\">&quot;hello&quot;</span>, str -&gt; str.length() &gt; <span class=\"number\">5</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> boolen <span class=\"title function_\">test</span><span class=\"params\">(String str, Predicate&lt;String&gt; predicate)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> predicate.test(str);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在四大核心的函数式接口基础上，还提供了诸如BiFunction，BinaryOperation, ToIntFunction等扩展的函数式接口。</p>\n</li>\n</ol>\n<p>总结： 函数式接口的提出是为了让我们更加方便的使用Lambda表达式，不需要自己手动创建一个函数式接口，直接拿来用即可。</p>\n<h2 id=\"方法的引用\"><a href=\"#方法的引用\" class=\"headerlink\" title=\"方法的引用\"></a>方法的引用</h2><p>方法引用实际上是一个Lambda表达式的一种语法糖</p>\n<p>语法糖是指的是计算机语言中添加的某种语法，这种语法对语言的功能并没有影响，但是更方便程序员使用，通常来说使用语法糖能够增加程序的可读性，从而减少程序代码出错的机会。<br>语法糖可以给我们带来方便，是一种便捷的写法，编译器会帮我们做转换，而且可以提高开发编码的效率，在性能上也不会带来损失。</p>\n<p>方法引用的例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; strs = Arrays.asList(<span class=\"string\">&quot;hello&quot;</span>, <span class=\"string\">&quot;world&quot;</span>, <span class=\"string\">&quot;hello world&quot;</span>);</span><br><span class=\"line\">strs.foreach(System.out::println);</span><br></pre></td></tr></table></figure>\n\n<p>方法引用的本质是一个[函数指针] function pointer</p>\n<h1 id=\"方法引用共分为4类\"><a href=\"#方法引用共分为4类\" class=\"headerlink\" title=\"方法引用共分为4类\"></a>方法引用共分为4类</h1><ol>\n<li>构造方法引用: 格式 -&gt; ClassName::new</li>\n<li>静态方法引用: 格式 -&gt; ClassName::static_method</li>\n<li>某个类的成员方法的引用: 格式 -&gt; ClassName::method<br>lambda参数列表中第一个参数是实例方法的调用者，第二个参数是实例方法的参数。</li>\n<li>某个对象实例的成员方法的引用: 格式 -&gt; instance::method</li>\n</ol>\n<p>方法引用使得开发者可以直接引用现存的方法，Java类的构造方法或者实例，方法引用和Lambda表达式配合使用，是的java类的构造方法看起来紧凑而简洁，没有很多复杂的模块代码;</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodReferenceDemo</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> MethodReferenceDemo <span class=\"title function_\">create</span><span class=\"params\">(Supplier&lt;MethodReferenceDemo&gt; supplier)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> supplier.get();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">collide</span><span class=\"params\">(MethodReferenceDemo demo)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Collide&quot;</span> + demo.toString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">follow</span><span class=\"params\">(MethodReferenceDemo another)</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Following the&quot;</span> + another.toString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">repair</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Repaired&quot;</span> + <span class=\"built_in\">this</span>.toString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 方法引用</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args &#123;</span></span><br><span class=\"line\"><span class=\"params\">        </span></span><br><span class=\"line\"><span class=\"params\">        // 第一种方法引用的类型就是构造器引用，语法是Class::new，或者更一般的形式Class&lt;T&gt;::new。注意，这个构造器没有参数。</span></span><br><span class=\"line\"><span class=\"params\">        MethodReferenceDemo demo = MethodReferenceDemo.create(MethodReferenceDemo::new)</span>;</span><br><span class=\"line\">        List&lt;MethodReferenceDemo&gt; demos = Arratys.asList(demo);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 第二种方法引用的类型是静态方法引用，语法是Class::static_method。</span></span><br><span class=\"line\">        demos.forEach(MethodReferenceDemo::collide);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 第三种方法引用的类型是某个类的成员方法的引用，语法是Class::method。注意，这个方法没有定义入参。(lambda表达式列表中的第一个参数是实例方法的调用者，第二个参数是实例方法的参数)</span></span><br><span class=\"line\">        demos.forEach(MethodReferenceDemo::repair);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 第四种方法引用的类型是某个实例对象的成员方法的引用，语法是instance::method。</span></span><br><span class=\"line\">        demos.forEach(demo::follow);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意: </p>\n<ol>\n<li>lambda表达式中调用者的参数列表与返回值类型，要与函数式接口中抽象方法的函数列表和返回值保持一种。</li>\n<li>若lambda参数列表中的第一个参数是实例方法的调用者，而第二个参数是实例方法的参数时，可以使用ClassName::method.</li>\n</ol>\n","categories":["jdk8"],"tags":["jdk8","源码","函数式接口"]},{"title":"jdk8方法引用详解","url":"/jdk8/2018-09-27-jdk8Stream%E6%B5%81%E8%AF%A6%E8%A7%A3/","content":"<p>新增的Streams API将生成函数式编程引入了Java库中，这是目前为止最大的一次对java库的完善，以便开发者能够写出更加有效，更加简洁和紧凑的代码。</p>\n<h2 id=\"Stream流特性解释：\"><a href=\"#Stream流特性解释：\" class=\"headerlink\" title=\"Stream流特性解释：\"></a>Stream流特性解释：</h2><p>Stream接口还包含了几个基本类型的子接口，如IntStream， LongStream，DoubleStream<br><br><br>关于流和其他集合具体的区别，可以参照下面的列表；</p>\n<ol>\n<li>不存储数据。流是基于数据源的对象，它本身不存储数据元素，而是通过管道将数据源的元素传递给操作。</li>\n<li>函数式编程。流的操作不会修改数据源，例如filter不会将数据源中的元素删除。</li>\n<li>延迟操作。流的很多操作如filter，map等中间操作都是延迟的，只有等到终点操作才会将按照操作顺序执行。</li>\n<li>可以解绑。对于无限流量的流，有些操作是可以在有限的时间内完成的，比如limit(n)，findFirst(), 这些操作可实现短路(Short-circuting),访问到有限的元素后就可以返回。</li>\n<li>纯消费。流的元素只能访问一次，类似Iterator，操作没有回头路，如果你想从头重新访问流元素，对不起，你得重新生成一个新的流。</li>\n</ol>\n<p>流的操作是以管道的方式串起来的，流管道包含一个数据源，接着包含零到N个中间操作，最后一一个终点操作结束。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Streams</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">Status</span> &#123;</span><br><span class=\"line\">        OPEN, CLOSE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Task</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"meta\">@Getter</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Status status;</span><br><span class=\"line\">        <span class=\"meta\">@Getter</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Integer points;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"title function_\">Task</span><span class=\"params\">(<span class=\"keyword\">final</span> Status status, <span class=\"keyword\">final</span> Integer points)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.status = status;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.points = points;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> String.format(<span class=\"string\">&quot;[%s, %d]&quot;</span>, status, points);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        List&lt;Task&gt; tasks = Arrays.toList(</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">Task</span>(Status.OPEN, <span class=\"number\">5</span>),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">Task</span>(Status.OPEN, <span class=\"number\">13</span>)</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">Task</span>(Status.CLOSE, <span class=\"number\">8</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> tasks.stream().filter(t -&gt; Status.OPEN == t.getStatus).mapToInt(Task::getPoints).sum();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Total points:&quot;</span> + sum);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">reduce</span> <span class=\"operator\">=</span> tasks.stream().parallel().map(t -&gt; t.getPoints).reduce(<span class=\"number\">0</span>, Integer::sum);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Total points(all tasks)&quot;</span> + reduce);</span><br><span class=\"line\">        </span><br><span class=\"line\">        Map&lt;Integer, List&lt;Task&gt;&gt; map = tasks.stream().collect(Collectors.groupinBy(Task::getPoints));</span><br><span class=\"line\">        System.out.println(map);</span><br><span class=\"line\">        </span><br><span class=\"line\">        List&lt;String&gt; strs = tasks.stream().mapToInt(Task::getPoints).asLongStream().mapToDouble(p -&gt; p / reduce).boxed().mapToLong(w -&gt; (<span class=\"type\">long</span>)(w * <span class=\"number\">100</span>)).mapToObj(per -&gt; pre + <span class=\"string\">&quot;%&quot;</span>).collect(Collectors.toList());</span><br><span class=\"line\">        System.out.println(strs);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>首先，tasks集合被转换成steam表示，其次，在stream上的filter操作会过滤所有CLOSE的task，第三，mapToInt操作基于每个task实例的Task::getPoints方法将task流转换成Integer集合，最后，通过sum方法计算总和，得出最后的结果。</p>\n<p>晚期操作(例如forEach或者sum)，会遍历steam并得出结果或者附带结果，在执行晚期操作之后，steam处理线以及完毕了，就不能使用了，在几乎所有情况下，晚期操作都是立刻对stream进行遍历。</p>\n<h2 id=\"Stream特征：\"><a href=\"#Stream特征：\" class=\"headerlink\" title=\"Stream特征：\"></a>Stream特征：</h2><h3 id=\"并行Parallelism\"><a href=\"#并行Parallelism\" class=\"headerlink\" title=\"并行Parallelism\"></a>并行Parallelism</h3><p>所有的流操作都可以串行或者并行执行，除非显示地创建并行流，否则Java库中创建的都是串行流。Collection.stream()为集合创建串行流。Collection.parallelStream()为集合创建并行流。IntStream.range(int, int)创建的是串行流，通过parallel()方法可以将串行流转换成并行流，sequential()方法将流转成串行流。</p>\n<p>除非方法的javadoc中指明在并行执行的时候结果是不确定(比如findAny，forEach)，否则串行和并行的执行结果是一样的。</p>\n<h3 id=\"不干涉Non-interface\"><a href=\"#不干涉Non-interface\" class=\"headerlink\" title=\"不干涉Non-interface\"></a>不干涉Non-interface</h3><p>流可以从非线程安全的集合中创建，当流的管道执行d的时候，非concurrent数据源不应该被改变。下面的代码会抛出java.util.ConcurrentModificationException异常;</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; strs = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;(Arrays.asList(<span class=\"string\">&quot;one&quot;</span>, <span class=\"string\">&quot;two&quot;</span>));</span><br><span class=\"line\">strs.forEach(s -&gt; strs.add(<span class=\"string\">&quot;three&quot;</span>));</span><br></pre></td></tr></table></figure>\n<p>在设置中间操作的时候，是可以更改数据源的，只有在执行终点操作的时候，才有可能出现并发问题(抛出异常，或者不期望的结果)，比如下面的代码不会抛出异常：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; strs = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;(Arrays.asList(<span class=\"string\">&quot;one&quot;</span>, <span class=\"string\">&quot;two&quot;</span>));</span><br><span class=\"line\">Stream&lt;String&gt; stream = strs.stream();</span><br><span class=\"line\">strs.add(<span class=\"string\">&quot;three&quot;</span>);</span><br><span class=\"line\">stream.forEach(System.out::println);</span><br></pre></td></tr></table></figure>\n<p>对于concurrent数据源，不会有这样的问题，比如下面的代码运行正常：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; strs = <span class=\"keyword\">new</span> <span class=\"title class_\">CopyOnWriteArrayList</span>&lt;&gt;(Arrays.asList(<span class=\"string\">&quot;one&quot;</span>, <span class=\"string\">&quot;two&quot;</span>));</span><br><span class=\"line\">strs.stream().forEach(strs.add(<span class=\"string\">&quot;three&quot;</span>));</span><br></pre></td></tr></table></figure>\n<p>虽然我们上面例子是在终点操作中队非并发数据源进行修改，但是非并发数据源也可能在其它线程中修改，同样会有并发问题。</p>\n<h3 id=\"无状态Stateless-behaviors\"><a href=\"#无状态Stateless-behaviors\" class=\"headerlink\" title=\"无状态Stateless behaviors\"></a>无状态Stateless behaviors</h3><p>大部分流操作的参数都是函数式接口，可以使用lambda表达式实现，它们用来描述用户的行为，称之为行为参数(behavioral parameters)。</p>\n<p>如果这些行为参数有状态，则流操作的结果可能是不确定的，比如下面的代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; strs = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;(Arrays.asList(<span class=\"string\">&quot;one&quot;</span>, <span class=\"string\">&quot;two&quot;</span>));</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">State</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">boolean</span> s;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"type\">State</span> <span class=\"variable\">state</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">State</span>();</span><br><span class=\"line\">strs.stream().map(e -&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(state.s) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;OK&quot;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        state.s = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> e;</span><br><span class=\"line\">&#125;).forEach(System.out::println);</span><br></pre></td></tr></table></figure>\n<p>上面的代码在并行执行时多次的执行结果可能是不同的，这是因为这个lambda表达式是由状态的。</p>\n<h3 id=\"副作用Side-effects\"><a href=\"#副作用Side-effects\" class=\"headerlink\" title=\"副作用Side-effects\"></a>副作用Side-effects</h3><p>有副作用的行为参数是被鼓励使用的。</p>\n<p>副作用指的是行为参数在执行的时候有输入输出，比如网络输入输出等。</p>\n<p>这是因为java不保证这些副作用对其它现场可见，也不保证相同管道上的同样元素的不同操作运行在同一个线程中。</p>\n<p>很多有副作用的行为参数可以被无副作用的实现，一般来说，println()这样的副作用代码不会有伤害。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 副作用代码</span></span><br><span class=\"line\">List&lt;String&gt; strs = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">Stream.filter(s -&gt; pattern.matcher(s).matchers()).forEach(s -&gt; strs.add(s));</span><br></pre></td></tr></table></figure>\n<p>上面代码可以修改成无副作用的。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; strs = Stream.filter(s -&gt; pattern.matcher(s).matchers()).collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"排序Ordering\"><a href=\"#排序Ordering\" class=\"headerlink\" title=\"排序Ordering\"></a>排序Ordering</h3><p>某些流的返回的元素是有确定顺序的，我们称之为encounter order。这个顺序是流提供它的元素顺序，比如数组的encounter order是它的元素的排列顺序，List是它的迭代顺序(iteration order), 对于HashSet，它本身就没有encounter order。</p>\n<p>一个流是否是encounter order主要依赖数据源和它的中间操作，比如数据源List和Array上创建的流是有序的(ordered)，但是HashSet创建的流不是有序的。</p>\n<p>sorted()方法可以将流转换成有序的，unordered可以将流转换成无序的，除此之外，一个操作可能会影响流的有序性，比如map方法，他会用不同的值甚至类型替换流中的元素，所以输入元素的有序性已经变得没有意义了，但是对于filter方法来说，它只是丢掉一些值而已，输入元素的有序性还是保障的。</p>\n<p>对于串行流，流有序与否不会影响其性能，只是会影响确定性(determinism),无序流多次执行的结果可能是不一样的。</p>\n<p>对于并行流，去掉有序这个约束可能会影响其性能，比如distinct，groupingBy这些聚合操作。</p>\n<h3 id=\"结合性Associativity\"><a href=\"#结合性Associativity\" class=\"headerlink\" title=\"结合性Associativity\"></a>结合性Associativity</h3><p>一个操作或者函数op满足结合性意味着满足下面的条件：<br>(a op b) op c &#x3D;&#x3D; a op (b op c)</p>\n<p>对于并发流来说，如果操作满足结合性，我们就可以并行计算：<br>a op b op c op d &#x3D;&#x3D; (a op b ) op (c op d)<br>比如min，max以及字符串连接都是满足结合性的。</p>\n<h2 id=\"Stream创建方式\"><a href=\"#Stream创建方式\" class=\"headerlink\" title=\"Stream创建方式\"></a>Stream创建方式</h2><p>可以通过多种方式创建流：</p>\n<ol>\n<li>通过集合的stream()方法或者parallelStream(). 比如Arrays.asList(1, 2, 3).stream();</li>\n<li>通过Arrays.stream(Object[])方法，比如Arrays.stream(new int[]{1, 2, 3}).</li>\n<li>使用流的静态方法，比如Stream.of(Object[]), IntStream.range(int, int)或者Stream.iterate(Object, UnaryOperator), 如Stream.iterate(0, n -&gt; n * 2), 或者generate(Supplier<T> s)，如Stream.generate(Math::random).</T></li>\n<li>BufferedReader.lines()从文件中获取行的流。</li>\n<li>Files类的操作路径的方法，如list，find，walk等。</li>\n<li>随机数流Random.ints().</li>\n<li>其他一些l类提供创建流的方法，比如BiSet.strema()，Pattern.splitAsStream(), 和JarFile.stream().</li>\n<li>更底层的使用StreamSupport，它提供了将Spliterator转换成流的方法。</li>\n</ol>\n<h2 id=\"中间操作intermediate-operations\"><a href=\"#中间操作intermediate-operations\" class=\"headerlink\" title=\"中间操作intermediate operations\"></a>中间操作intermediate operations</h2><p>中间操作将会返回一个新的流，并且操作是延迟执行的(lazy)，它不会修改原始的数据源，而且是在终点操作开始的时候才真正开始执行，这个Scala集合的转换操作不同，Scala集合转换操作会生成一个新的中间集合，显而易见java的这种设计会减少中间对象的生成。</p>\n<h3 id=\"常见流的中间操作\"><a href=\"#常见流的中间操作\" class=\"headerlink\" title=\"常见流的中间操作\"></a>常见流的中间操作</h3><p><strong>distinct</strong></p>\n<p>distinct保证输出的流中包含唯一的元素，它是通过Object.equals(Object)来检查是否包含相同的元素。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">List&lt;String&gt; strs = Stream.of(<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;c&quot;</span>, <span class=\"string\">&quot;d&quot;</span>, <span class=\"string\">&quot;a&quot;</span>).distinct().collect(Collectors.toList());</span><br><span class=\"line\">System.out.println(strs);</span><br></pre></td></tr></table></figure>\n\n<p><strong>filter</strong></p>\n<p>filter返回流中只包含满足断言(predicate)的数据。<br>下面的代码返回流中的偶数集合。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">List&lt;Integer&gt; ints = IntStream.range(<span class=\"number\">1</span>, <span class=\"number\">10</span>).filter(i -&gt; i % <span class=\"number\">2</span> == <span class=\"number\">0</span>).boxed().collect(Collectors.toList());</span><br><span class=\"line\">System.out.println(ints);</span><br></pre></td></tr></table></figure>\n\n<p><strong>map</strong></p>\n<p>map方法将流中的元素映射成另外的值，新的值类型可以和原来的元素类型不同。<br>下面的代码中将字符串映射成它的哈希码(ASCII值)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">List&lt;Integer&gt; ints = Stream.of(<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;c&quot;</span>).map(s -&gt; s.hashcode()).collect(Collectors.toList());</span><br><span class=\"line\">System.out.println(ints);</span><br></pre></td></tr></table></figure>\n\n<p><strong>flatMap</strong></p>\n<p>flatMap方法混合了map和flatten的功能，它将映射后的流的元素全部放入到一个新的流中，它的方法定义如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">poetry</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Where, before me, are the ages that have gone?/n&quot;</span> + <span class=\"string\">&quot;And where, behind me, are the coming generations?/n&quot;</span> + <span class=\"string\">&quot;I think of heaven and earth, without limit, without end,/n&quot;</span> + <span class=\"string\">&quot;And I am all alone and my tears fall down.&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Arrays.stream(poetry.split(<span class=\"string\">&quot;/n&quot;</span>)).flatMap(line -&gt; Arrays.stream(line.split(<span class=\"string\">&quot; &quot;</span>)).map(w -&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(w.endsWith(<span class=\"string\">&quot;,&quot;</span>) || w.endsWith(<span class=\"string\">&quot;.&quot;</span>) || w.endWith(<span class=\"string\">&quot;?&quot;</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> w.substring(<span class=\"number\">0</span>, w.length() -<span class=\"number\">1</span>).trim().toLowerCase();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> w.trim().toLowerCase();</span><br><span class=\"line\">&#125;).distinct().sorted().collect(Collectors.toList()).forEach(System.out::println);</span><br></pre></td></tr></table></figure>\n\n<p><strong>limit</strong></p>\n<p>limit方法制定数量的元素的流，对于串行流，这个方法是有效的，这是因为它只需要返回前n个元素即可，但是对于有序的并行流，它可能花费相对较长的时间，如果你不在意有序，可以将有序并行流转换成无序的，可以提高性能。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">List&lt;Integer&gt; ints = IntStream.range(<span class=\"number\">1</span>, <span class=\"number\">100</span>).limit(<span class=\"number\">5</span>).boxed().collect(Collectors.toList()).forEach(System.out::println);</span><br></pre></td></tr></table></figure>\n\n<p><strong>peek</strong></p>\n<p>peek方法会使用一个Consumer消费流中的元素，但是返回的流中还是包含原来流中的元素。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">String[] strs = &#123;<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;c&quot;</span>, <span class=\"string\">&quot;d&quot;</span>&#125;;</span><br><span class=\"line\">Arrays.toList(strs).stream().peek(System.out::println);</span><br></pre></td></tr></table></figure>\n\n<p><strong>sorted</strong><br>sorted()将流中的元素按照自然顺序方式进行排列，如果元素没有实现Comparable，则终点操作会抛出java.lang.ClassCastException异常。sorted(Comparator&lt;? super T&gt; comparator)可以指定排列方式。</p>\n<p>对于有序流，排序是稳定的，对于非有序流，不保证排序稳定。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">String[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[]&#123;<span class=\"string\">&quot;b_123&quot;</span>, <span class=\"string\">&quot;c+124&quot;</span>, <span class=\"string\">&quot;b#632&quot;</span>, <span class=\"string\">&quot;d_123&quot;</span>&#125;;</span><br><span class=\"line\">Arrays.stream(arr).sorted((s1, s2) -&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s1.charAt(<span class=\"number\">0</span>) == s2.charAt(<span class=\"number\">0</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s1.substring(<span class=\"number\">2</span>).compareTo(s2.substring(<span class=\"number\">2</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> s1.charAt(<span class=\"number\">0</span>) - s2.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;).collect(Collectors.toList()).forEach(System.out::println);</span><br></pre></td></tr></table></figure>\n\n<p><strong>skip</strong></p>\n<p>skip返回丢弃了前n个元素的流，如果流中的元素小于或者等于n，返回空的流;</p>\n<h2 id=\"终点操作terminal-operations\"><a href=\"#终点操作terminal-operations\" class=\"headerlink\" title=\"终点操作terminal operations\"></a>终点操作terminal operations</h2><p><strong>match</strong></p>\n<p>这一组方法用来检查流中的元素是否满足断言。</p>\n<ul>\n<li>allMatch只有在所有的元素都满足断言时才返回true，否则false，流为空是总是返回true。</li>\n<li>anyMatch只有在任意一个元素满足断言时就返回true，否则false。</li>\n<li>noneMatch只有在所有的元素都不满足断言时才返回true，否则false。<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">System.out.println(Stream.of(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>).allMatch(i -&gt; i &gt; <span class=\"number\">0</span>)); <span class=\"comment\">// true</span></span><br><span class=\"line\">System.out.println(Stream.of(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>).anyMatch(i -&gt; i &gt; <span class=\"number\">0</span>)); <span class=\"comment\">// true</span></span><br><span class=\"line\">System.out.println(Stream.of(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>).noneMatch(i -&gt; i &gt; <span class=\"number\">0</span>)); <span class=\"comment\">// false</span></span><br><span class=\"line\">System.out.println(Stream.&lt;Integer&gt;empty().allMatch(i -&gt; i &gt; <span class=\"number\">0</span>)); <span class=\"comment\">// true</span></span><br><span class=\"line\">System.out.println(Stream.&lt;Integer&gt;empty().antMatch(i -&gt; i &gt; <span class=\"number\">0</span>)); <span class=\"comment\">// false</span></span><br><span class=\"line\">System.out.println(Stream.&lt;Integer&gt;empty().noneMatch(i -&gt; i &gt; <span class=\"number\">0</span>)); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>count</strong></p>\n<p>count方法返回流中的元素的数量，它的实现是:<br>mapToLong(e -&gt; 1L).sum();</p>\n<p><strong>collect</strong></p>\n<p>使用一个Collector执行mutable reduction操作，辅助类Collectors提供了很多Collector, 可以满足我们日常需求，你也可以创建新的collector实现特定的需求，他是一个值得关注的类，你需要熟悉特定的收集器，如聚合类averagingInt，最大值maxBy和最小值minBy，计数counting，分组groupingBy，字符串连接joining，分区partioningBy，汇总summarizingInt，化简reducing，转换toX等。</p>\n<ul>\n<li>find</li>\n</ul>\n<p>findAny()返回任意一个元素，如果流是空，返回空的Optional，对于并行流来说，它只需要返回任意一个元素即可，所以性能可能要好于findFirst()，但是有可能多次执行的时候返回的结果不一样。findFirst()返回第一个元素，如果流是空，返回空的Optional。</p>\n<ul>\n<li>forEach和forEachOrdered</li>\n</ul>\n<p>forEach遍历流的每一个元素，执行制定的action，它是一个终点操作，和peek方法不同，这个方法不担保按照encounter order顺序执行，如果对于有序流按照它的encounter order顺序执行，你可以使用forEachOrdered方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Stream.of(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>).forEach(System.out::println);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>最大值和最小值</li>\n</ul>\n<p>max返回流中的最大值，min返回流中的最小值。</p>\n<ul>\n<li>reduce</li>\n</ul>\n<p>第一个方法使用流中的第一个参数作为初始值，后面两个方法则使用一个提供的初始值。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Optional&lt;Integer&gt; opt = Stream.of(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>).reduce((x, y) -&gt; x + y);</span><br><span class=\"line\"><span class=\"type\">Integer</span> <span class=\"variable\">total</span> <span class=\"operator\">=</span> Stream.of(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>).reduce(<span class=\"number\">0</span>, (x, y) -&gt; x + y);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>toArray()</li>\n</ul>\n<p>将流中的元素放入到一个数值中。</p>\n","categories":["jdk8"],"tags":["jdk8","源码","stream"]},{"title":"jdk8的optional深入详解","url":"/jdk8/2018-10-21-jdk8%E7%9A%84optional%E6%B7%B1%E5%85%A5%E8%AF%A6%E8%A7%A3/","content":"<h1 id=\"为什么提供Optional类\"><a href=\"#为什么提供Optional类\" class=\"headerlink\" title=\"为什么提供Optional类\"></a>为什么提供Optional类</h1><p>在我们的开发中，NullPointerException可谓是随处可见，为了避免空指针异常，我们常常需要进行一些防御式的检查，所以在代码中常常可见if(obj !&#x3D; null)这样的判断，是非常讨厌的，碰到NPE，就需要对代码逐行检查是那个对象为空，带来大量不必要的精力耗费，抛出NPE异常不是用户操作的错误，而是开发人员的错误，开发人员使用了为空的对象造成的，应该避免，那么只能在每个方法中加入非空检查，阅读性和维护性都比较差</p>\n<p>出现Optional主要是为了解决NPE(NullPointerExption)的问题。<br>现在很多语言都对NPE做了一定程度上的规避，使用的都是Optional</p>\n<p>在Java8之前，Google Guava引入了Optionals类来解决NPE，从而避免源码被各种null检查污染，以便开发者学出更加整洁的代码，Java8也将Optional加入了官方库。</p>\n<p>如下面这些代码的手工非空检查</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addAddressToCustomer</span><span class=\"params\">(Customer customer, Address newAddress)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(customer == <span class=\"literal\">null</span> || newAddress == <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(customer.getAddress() == <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        customer.setAddresses(<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    customer.addAddress(newAddress);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>另外还有一些开发人员喜欢通过非空检查来实现业务逻辑，空对象不应该用来决定系统的行为，它们是意外的Exception值，应当被看成是错误，而不是业务逻辑状态。</p>\n<p>当我们一个方法返回List集合，应该总是返回一个空的List，而不是null，这样允许调用者能够遍历它而不必检查null，否则就抛出NPE。</p>\n<p>但是如果我们根据标识键ID查询数据库，没有查询到，需要返回一个空对象怎么办，有人建议抛NPE。其实这不符合函数方法一进一出的原则，变成了一个函数方法两个返回值，一个是正常返回，一个出错Exception，函数式编程范式告诫我们不要轻易抛Exception。</p>\n<p>幸好在JDK8中，java为了我们提供了一个Optional类，Optional类能让我们省掉繁琐的非空的判断。可以将Optional看成是需要我们使用某个T值的方法之间某种中间人或者协调者Mediator，而不是一个普通的对象的包装器。</p>\n<p>如果你有一个值返回类型T, 你有一个方法需要使用这个值，那么你可以让Optional<T> 处于中间，确保它们之间交互进行，而不必要人工介入。</T></p>\n<p>这样。协调者Optional<T>能够照顾T的值提供给你的方法做为输入参数，在这种情况下，如果T为空，可以确保不会出错，这样在T值为空时，也可以让一切都正常运行，你也可以让Optional<T>执行其他动作，如执行一段代码块等待，这样它就实际上是语言机制的很好补充。</T></T></p>\n<h1 id=\"Optional的类源码\"><a href=\"#Optional的类源码\" class=\"headerlink\" title=\"Optional的类源码\"></a>Optional的类源码</h1><h2 id=\"Optional类的java-doc\"><a href=\"#Optional类的java-doc\" class=\"headerlink\" title=\"Optional类的java doc\"></a>Optional类的java doc</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * A container object which may or may not contain a non-null value.</span><br><span class=\"line\"> * If a value is present, &#123;@code isPresent()&#125; will return &#123;@code true&#125; and</span><br><span class=\"line\"> * &#123;@code get()&#125; will return the value.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;p&gt;Additional methods that depend on the presence or absence of a contained</span><br><span class=\"line\"> * value are provided, such as &#123;@link #orElse(java.lang.Object) orElse()&#125;</span><br><span class=\"line\"> * (return a default value if value not present) and</span><br><span class=\"line\"> * &#123;@link #ifPresent(java.util.function.Consumer) ifPresent()&#125; (execute a block</span><br><span class=\"line\"> * of code if the value is present).</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * &lt;p&gt;This is a &lt;a href=&quot;../lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt;</span><br><span class=\"line\"> * class; use of identity-sensitive operations (including reference equality</span><br><span class=\"line\"> * (&#123;@code ==&#125;), identity hash code, or synchronization) on instances of</span><br><span class=\"line\"> * &#123;@code Optional&#125; may have unpredictable results and should be avoided.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @since 1.8</span><br><span class=\"line\"> */</span><br><span class=\"line\"> 一个容器对象，可能包含也可能不包含非null值。</span><br><span class=\"line\"> 这是基于值的类，在Optional的实例上使用身份敏感操作(包括引用相等，hashcode或者同步)可能会产生不可预期的结果，应该避免使用。</span><br><span class=\"line\">不要使用==比较两个Optional对象</span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n<p>1： 类中的变量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">EMPTY: 一个空的Optional实例，用来通过empty()重置被封装的对象值为空</span><br><span class=\"line\">value: 一个不是空的optional实例，被封装对象</span><br></pre></td></tr></table></figure>\n<p>2：类中public方法：</p>\n<p>Optional中为了我们提供的方法。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">of</td>\n<td>把指定的值封装为Optional对象，如果指定的值null，否则抛出NullPointerException</td>\n</tr>\n<tr>\n<td align=\"center\">empty</td>\n<td>创建一个空的Optional对象</td>\n</tr>\n<tr>\n<td align=\"center\">ofNullable</td>\n<td>把指定的值封装为Optional对象，如果指定的值null，则创建一个空的Optional对象</td>\n</tr>\n<tr>\n<td align=\"center\">get</td>\n<td>如果创建的Optional中有值存在，则返回此值，否则抛出NoSuchElementException</td>\n</tr>\n<tr>\n<td align=\"center\">orElse</td>\n<td>如果创建的Optional中有值存在，则返回此值，否则返回一个默认值</td>\n</tr>\n<tr>\n<td align=\"center\">orElseGet</td>\n<td>如果创建的Optional中有值存在，则返回此值，否则返回一个由Supplier接口生成的值</td>\n</tr>\n<tr>\n<td align=\"center\">orElseThrow</td>\n<td>如果创建的Optional中有值存在，返回此值，否则抛出一个由指定的Supplier接口生成的异常</td>\n</tr>\n<tr>\n<td align=\"center\">filter</td>\n<td>如果创建的Optional中的值满足filter中的条件，则返回包含改值的optional对象，否则返回一个空的optional对象</td>\n</tr>\n<tr>\n<td align=\"center\">map</td>\n<td>如果创建的optional的值存在，对改值执行提供的Function函数调用</td>\n</tr>\n<tr>\n<td align=\"center\">flatMap</td>\n<td>如果创建的Optional的值存在，就对该值执行提供的Function函数调用，返回一个Optional对象，否则就返回一个空的Optional对象</td>\n</tr>\n<tr>\n<td align=\"center\">isPresent</td>\n<td>如果创建的Optional中的值存在，返回true，否则返回false</td>\n</tr>\n<tr>\n<td align=\"center\">ifPresent</td>\n<td>如果创建的Optional中的值存在，则执行该方法的调用，否则什么也不做</td>\n</tr>\n</tbody></table>\n<p>详细说明：</p>\n<p><strong>of</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个值为张三的String类型的Optional</span></span><br><span class=\"line\">Optional&lt;String&gt; opt = Optional.of(<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 如果我们用of方法创建Optionald对象时，所传入的值为null，则抛出NPE</span></span><br><span class=\"line\">Optional&lt;String&gt; opt = Optional.of(<span class=\"literal\">null</span>);</span><br></pre></td></tr></table></figure>\n<p><strong>ofNullable</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 为指定的值创建Optional对象，不管所传入的值为null，不为null，所创建的时候都不会报错</span></span><br><span class=\"line\">Optional&lt;String&gt; opt = Optional.ofNullable(<span class=\"literal\">null</span>);</span><br><span class=\"line\">Optional&lt;String&gt; opt = Optional.ofNullable(<span class=\"string\">&quot;张三&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p><strong>empty</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个空的String类型的Optional对象</span></span><br><span class=\"line\">Optional&lt;String&gt; opt = Optional.empty();</span><br></pre></td></tr></table></figure>\n<p><strong>get</strong></p>\n<p>如果们创建的Optional对象中有值则返回此值，如果没有值存在，则会抛出NoSuchElementException异常。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">OPtional&lt;Sting&gt; opt = Optional.ofNullable(<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">System.out.println(opt.get()); <span class=\"comment\">// 张三</span></span><br><span class=\"line\"></span><br><span class=\"line\">opt = Optional.empty();</span><br><span class=\"line\">System.out.println(opt.get()); <span class=\"comment\">// 抛异常</span></span><br></pre></td></tr></table></figure>\n<p><strong>orElse</strong></p>\n<p>如果创建的Optional中有值存在，则返回此值，否则返回一个默认值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Optional&lt;String&gt; opt = Optional.of(<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">System.out.println(opt.orElse(<span class=\"string\">&quot;zhangsan&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">opt = Optional.empty();</span><br><span class=\"line\">System.out.println(opt.orElse(<span class=\"string\">&quot;lisi&quot;</span>));</span><br></pre></td></tr></table></figure>\n<p><strong>orElseGet</strong></p>\n<p>如果创建的Optional中有值存在，这返回此值，否则返回一个有Supplier接口生成的值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Optional&lt;Sting&gt; opt = Optional.of(<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">System.out.println(opt.orElseGet(() -&gt; <span class=\"string\">&quot;lisi&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">opt = Optional.empty();</span><br><span class=\"line\">System.out.println(opt.orElseGet(() -&gt; <span class=\"string\">&quot;orElseGet&quot;</span>));</span><br></pre></td></tr></table></figure>\n<p><strong>orElseThrow</strong></p>\n<p>如果创建的Optional中有值存在，则返回此值，否则抛出由指定Supplier接口生成的异常</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Optional&lt;String&gt; opt = Optional.of(<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">System.out.println(opt.orElseThrow(CustomException::<span class=\"keyword\">new</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">opt = Optional.empty();</span><br><span class=\"line\">System.out.println(opt.orElseThrow(CustomException::<span class=\"keyword\">new</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CustomException</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">RuntimeException</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">CustomException</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>(<span class=\"string\">&quot;自定义异常&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">CustomException</span><span class=\"params\">(String msg)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(msg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>filter</strong></p>\n<p>如果创建的OPtional中值满足filter的条件，则返回该值的Optional对象，否则返回一个空的Optional对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Optional&lt;String&gt; opt = Optional.of(<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">System.out.println(opt.filter(s -&gt; s.length() &gt; <span class=\"number\">5</span>).orElse(<span class=\"string\">&quot;wangwu&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">opt = Optional.empty();</span><br><span class=\"line\">System.out.println(opt.filter(s -&gt; s.length() &gt; <span class=\"number\">5</span>).orElse(<span class=\"string\">&quot;lisi&quot;</span>));</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意Optional中的filter方法和Stream中的filter方法是有点不一样的，Stream中的filter方法是对一堆元素进行过滤，而Optional中的filter方法只是对一个元素进行过滤，可以把Optional看成是最多只包含一个元素的Stream。</p>\n</blockquote>\n<p><strong>map</strong></p>\n<p>如果创建的Optional中的值存在，对该值执行Function函数的调用</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// map方法执行传入的lambda表达式对Optional实例的值进行修改，修改后的返回值仍然是一个Optional对象</span></span><br><span class=\"line\">Optional&lt;String&gt; opt = Optional.of(<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">System.out.println(opt.map(s -&gt; s.toUpperCase()).orElse(<span class=\"string\">&quot;error&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">opt = Optioanl.empty();</span><br><span class=\"line\">System.out.println(opt.map(s -&gt; s.toUpperCase()).orElse(<span class=\"string\">&quot;error&quot;</span>));</span><br></pre></td></tr></table></figure>\n<p><strong>flatMap</strong></p>\n<p>如果创建的Optional中的值存在，就对该值执行提供的Function函数调用，返回一个Optional类型的值，否则就返回一个空的Optional对象，faltMap与map(Function)方法类似，区别在于faltMap中的mapper返回的值必须是Optional, map方法的mapping函数返回值可以是任意类型T，调用结束时，flatMap不会对结果用Optional封装。</p>\n<p>如果有值，将为其执行mapping函数返回Optional类型的返回值，否则返回空Optional。<br>flatMap与map(Function)方法类似，区别在于flatMap中的mapping返回值必须是Optional类型，调用结束时，flatMap不会对结果用Optional封装。而map方法的mapping函数返回值可以是任意类型的T。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// map方法中的lambda表达式返回值可以是任意类型，[在map函数返回之前会包装为Optional</span></span><br><span class=\"line\"><span class=\"comment\">// 但flatMap方法中的lambda表达式返回值必须是Optional实例</span></span><br><span class=\"line\">Optional&lt;String&gt; opt = Optional.of(<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">System.out.println(opt.flatMap(s -&gt; Optional.of(<span class=\"string\">&quot;lisi&quot;</span>)).orElse(<span class=\"string\">&quot;error&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">opt = Optional.empty();</span><br><span class=\"line\">System.out.println(opt.flatMap(s -&gt; Optional.empty)).orElse(<span class=\"string\">&quot;error&quot;</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>ifPresent</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ifPresent方法的参数是一个Customer的实现类，Customer类包含一个抽象方法，该抽象方法对传入的值进行处理，只是没有返回值。</span></span><br><span class=\"line\">Optional&lt;String&gt; opt = Optional.of(<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">opt.ifPresent(s -&gt; System.out.println(<span class=\"string\">&quot;我被处理了....&quot;</span> + s));</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><ul>\n<li>Optional类就是对对象进行封装用Optional中的方法更优雅的处理NPE的情况。</li>\n<li>一般用法：在方法返回的时候通过of或者ofNullable方法转换成相对应对象，在调用的时候通过Optional提供的方法去做边界处理。常用作参数返回值</li>\n<li>特别是和Stream结合的时候。需要一个默认值或者指定的异常的时候非常需要这种优雅的方式去处理。</li>\n<li>提供的map。faltMap。filter主要用来更好的使用，特别是faltMap避免出现Optional&lt;Optional<T>这种类型。</T></li>\n</ul>\n","categories":["jdk8"],"tags":["jdk8","源码","optional"]},{"title":"JVM系列之gc算法和垃圾收集器","url":"/jvm/2018-04-03-JVM%E7%B3%BB%E5%88%97%E4%B9%8Bgc%E7%AE%97%E6%B3%95%E5%92%8C%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/","content":"<p>这篇文章将为大家介绍GC都有哪几种算法，以及JVM都有哪些垃圾收集器。它们的工作原理。</p>\n<h1 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1><p>垃圾收集(Garbage Collection)通常被称为&quot;GC&quot;，它诞生于1960年MIT的Lisp语言，经过半个多世纪，目前已经十分成熟了，jvm中，程序计数器，虚拟机栈、本地方法栈都是随着线程而生随线程而灭，栈帧随着方法的进入和退出做入栈和出栈操作，实现了自动的内存清理，因此,我们的内存垃圾回收主要集中于java堆和方法区中，在程序运行期间，这部分内存的分配是使用都是动态的。</p>\n<p>垃圾回收机制主要解决下面三个问题：</p>\n<ul>\n<li>那些内存区域需要回收</li>\n<li>什么时候回收</li>\n<li>如何回收</li>\n</ul>\n<p>在前面对内存划分中，程序计数器，虚拟机栈和本地方法栈都是随线程生和死的，栈中的栈桢随着方法的调用有序的进栈和出栈，每个栈桢上分配的内存大小在类结构确定时就已知了，所以这些区域内存的分配和回收都是具有确定性的，很容易回收，当方法调用结束或者线程结束，占用的内存就可以被回收。而在java堆和方法区中，每个类需要的内存都可能不一样，一个方法中多个分支需要的内存也可能不一样，这些都只有在运行期才能知道创建那些对象，所以这部分内存的分配和回收都是动态的，垃圾回收也主要对这部分的内存进行回收。</p>\n<p>理论上，如果一个对象已死，那么此时它占用的内存就应该被回收，但是判断一个对象的生死，并不是那么容易，就像我们也常说，一些人虽然活着但就像死了一样，而一些人虽然死了但仍然活在我们心中，在程序生死可不能这么模棱两可，所以必须要有判断生死的方法。</p>\n<h1 id=\"对象存活判断\"><a href=\"#对象存活判断\" class=\"headerlink\" title=\"对象存活判断\"></a>对象存活判断</h1><p>判断对象是否存活一般有两种方式：</p>\n<p><strong>引用计数法：</strong> </p>\n<p>每个对象有一个引用计数属性，新增一个引用是计数加1，引用释放是计数减1，计数为0，就说明不存在对该对象的引用了，那这个对象就没有存活的意义了，也就是说这个对象是死的，可被回收。</p>\n<p>缺点：这种判断方法虽然简单高效，但是不能解决对象之间循环引用的问题，例如A对象和B对象都是同一个类的对象实例，A中字段instance引用对象B，B对象字段instance引用对A，如果垃圾收集器想回收A对象，那么A对象的引用计数值要为0，也就是要清除B中字段instance对A的引用，那么就需要清除B对象，而B对象有被A中的字段instance引用着，需要清除A对象，想要回收A对象，A的引用计数值要为0.....，这样就形成了循环，A和B都不能被回收。</p>\n<p><strong>可达性分析(Reachability Analysis)：</strong> </p>\n<p>从GC Roots开始向下搜索，搜索所走过的路径成为引用链。<br>当一个对象到GC Roots没有任何引用链相连时，就说明这个对象无法被使用了，或者说对象已死可被回收了。GC Roots是一个特殊的对象，且绝对不能被其他对象所引用，不然也会出现像引用计数器那样有循环引用的问题</p>\n<p>在java语言中，GC Roots包括：</p>\n<ul>\n<li>虚拟机栈中引用的对象</li>\n<li>方法区中类静态属性实体引用的对象</li>\n<li>方法区中常量引用的对象</li>\n<li>本地方法栈中JNI引用的对象</li>\n</ul>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%8F%AF%E8%BE%BE%E6%80%A7%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95%E5%88%A4%E5%AE%9A%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E5%9B%9E%E6%94%B6.jpg\" loading=\"lazy\"></p>\n<p>上面这两种判断方式都和&quot;引用&quot;有关，引用计数算法需要计算对象的引用数量，可达性分析算法需要判断对象是否有可达的引用链，引用也是一个很模糊的概念，为了更加清晰的描述java中的对象引用，在JDK1.2后，java将引用分为强引用(strong reference)，软引用(soft reference)和弱引用(weak reference)，虚引用(phantom reference)4种，并且除了强引用外都有与之对应的java类。分别是引用的基类Reference，软引用类SoftReference，弱引用类WeakReference，虚引用类PhantomReference。</p>\n<p>强引用很常见，类似Object obj &#x3D; new Object(); 这种引用就是强引用。</p>\n<p>软引用是用来描述一些有用但非必须的对象引用，当内存紧张的时候，才会把这些对象列为回收对象，进行二次回收，如果回收之后还是没有足够的内存，就会出现内存异常。</p>\n<p>弱引用也是用来描述非必须的对象引用，但是引用的强度要比软引用弱，不管内存是否充足，被弱引用关联的对象都将在下一次垃圾收集时被回收。</p>\n<p>虚引用又称为是幽灵引用或者是幻影引用，是最弱的引用关系，一个对象是否有虚引用，完全不会对该对象的生死造成影响，也无法用虚引用来取得一个对象实例。为一个对象设置虚引用关联的唯一目的就是，在这个对象被垃圾收集器回收时收到一个系统的死亡通知，通俗的说就是让对象死的明明白白。</p>\n<h2 id=\"生存还是死亡，这是个问题，\"><a href=\"#生存还是死亡，这是个问题，\" class=\"headerlink\" title=\"生存还是死亡，这是个问题，\"></a>生存还是死亡，这是个问题，</h2><p>在可达性分析算法中，即使是不可达对象，也并非要立即执行&quot;死刑&quot;，它们暂时处于&quot;死缓&quot;。就像C++中，对象死亡要调用析构函数一样，java中的对象在死亡是也有一个类似的finalize()方法，但是两者的作用并不相同，不可达的对象第一次会被标记并进行一次筛选，筛选的条件就是好这个finallize()方法，当对象没有覆盖finalize()方法，或者finalize()方法被虚拟机调用了而这个对象还没有回收，finalize()方法都不会执行，如果判断需要执行finalize()方法，这个对象就会被放到一个队列中，有低优先级的单独线程执行对象中的finnalize()方法，如果在finnalize()方法中，该对象被引用链上的其他的可达对象关联了，那么这个对象就可以被移出这个&quot;即将回收&quot;队列，从而死里逃生，这个finalize()方法可以说是对象逃脱死亡命运的最后一次机会，如果还没有逃脱，这个对象就真正要被垃圾收集器回收了，但是这个机会每个对象只有一次，第一次是可以逃脱的，第二次再进入这个队列，无论如何也逃脱不了被回收的命运。</p>\n<p>判断常量是否应该被废弃的方法比较简单，而判断一个类是无用的类，则需要满足下面三个条件：</p>\n<ul>\n<li>该类的所有实例对象都已经被回收了，也即java堆内存中没有该类的对象实例。</li>\n<li>加载该类的类加载器已经被回收了</li>\n<li>该类对应的java.lang.Class对象在任何地方都没有被引用，也即无法通过反射访问该类。</li>\n</ul>\n<h1 id=\"垃圾收集算法\"><a href=\"#垃圾收集算法\" class=\"headerlink\" title=\"垃圾收集算法\"></a>垃圾收集算法</h1><h2 id=\"标记-清除算法\"><a href=\"#标记-清除算法\" class=\"headerlink\" title=\"标记-清除算法\"></a>标记-清除算法</h2><p>&quot;标记-清除&quot;(Mark-Sweep)算法，如它的名字一样，算法分为&quot;标记&quot;和&quot;清除&quot;两个阶段：首先标记出所有需要回收的对象，在标记完成后统计回收掉所有被标记的对象。之所以它是最基础的收集算法，是因为后续的收集算法都是基于这种思路并对其缺点进行改进而得到的。</p>\n<p>它的主要缺点有两个：一个是效率问题，标记和清除过程的效率都不高，另外一个是空间问题，标记清除之后会产生大量不连续的内存碎片，空间碎片太多可能会导致，当程序在以后的运行过程中需要分配较大对象时无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/gc_garbage1.png\" loading=\"lazy\"></p>\n<h2 id=\"复制算法\"><a href=\"#复制算法\" class=\"headerlink\" title=\"复制算法\"></a>复制算法</h2><p>&quot;复制&quot;(Copying)的收集算法，它将可用内存按容量划分为大小相等的两块，每次只使用其中的一块，当这一块的内存用完了，就将还存活的对象复制到另一块上面，然后再把已经使用过的内存空间一次性清理掉。</p>\n<p>这样使得每次都是对其中的一块内存进行回收，内存分配时也就不用考虑内存碎片等复杂情况，只要移动堆顶指针，按顺序分配内存即可，实现简单，运行高效，只是这种算法的代价是将内存缩小为原来的一半，持续复制长期生存的对象则导致效率低下。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/gc_garbage2.png\" loading=\"lazy\"></p>\n<h2 id=\"标记-整理算法\"><a href=\"#标记-整理算法\" class=\"headerlink\" title=\"标记-整理算法\"></a>标记-整理算法</h2><p>复制收集算法在对象存活率较高时就要执行较多的复制操作，效率将会变低，更关键的是，如果不想浪费50%的空间，就需要有额外的空间进行分配担保，以应对被使用的内存中所有对象100%存活的极端情况，所以在老年代一般不能直接选用这种算法。</p>\n<p>根据老年代的特点，有人提出了另外一种&quot;标注-整理&quot;(Mark-Compact)算法，标记过程仍然与&quot;标记-清除&quot;算法一样，但后续步骤不是直接对可回收对象进行清理，而是让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/gc_garbage3.png\" loading=\"lazy\"></p>\n<h2 id=\"分代收集算法\"><a href=\"#分代收集算法\" class=\"headerlink\" title=\"分代收集算法\"></a>分代收集算法</h2><p>GC分代的基本假设：绝大部分对象的生命周期都非常短暂，存活时间短。</p>\n<p>&quot;分代收集&quot;(Generational Collection)算法，把java堆分为新生代和老年代，这样就可以根据各个年代的特点采用最适合的收集算法，在新生代中，每次垃圾收集时都会发现有大批对象死去，只有少量存活，那就选用复制算法，只需要付出少量存活对象的复制成本就可以完成收集，而老年代中因为对象存活率较高，没有额外空间对它进行分配担保，就必须采用&quot;标记-清理&quot;和&quot;标记-整理&quot;算法来进行回收。</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%88%86%E4%BB%A3%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95.jpg\" loading=\"lazy\"></p>\n<h1 id=\"垃圾收集器\"><a href=\"#垃圾收集器\" class=\"headerlink\" title=\"垃圾收集器\"></a>垃圾收集器</h1><blockquote>\n<p>如果说收集算法是内存回收的方法论，垃圾收集器就是内存回收的具体实现</p>\n</blockquote>\n<p>不同版本的JDK选择的垃圾收集器也可能不同，我们可以在命令行中查看已安装的JDK的默认垃圾收集器， java -XX:+PrintCommondLinesFlags -version</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E6%9F%A5%E7%9C%8B%E9%BB%98%E8%AE%A4%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8.jpg\" loading=\"lazy\"></p>\n<p>我的机器上装的是JDK8，parallelGC是该版本JDK默认采用的垃圾收集器组合，包括PS scavenge(新生代收集器)和PS Mark Sweep(老年代收集器)。也可以通过下面的代码打印出来正在使用的收集器。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GCTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        List&lt;GarbageCollectorMXBean&gt; beans = ManagementFactory.getGarbageCollectorMxBeans();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(GarbageCollectorMXBean bean : beans) &#123;</span><br><span class=\"line\">            System.out.println(bean.getName());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里也给出一张垃圾收集器组合相关的常用参数表</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>UseSerialGC</td>\n<td>虚拟机运行在Clinet模式下的默认值，使用Serial + Serial Old收集器组合回收内存</td>\n</tr>\n<tr>\n<td>UseParNewGC</td>\n<td>使用ParNew + Serial Old收集器组合回收内存</td>\n</tr>\n<tr>\n<td>UseConcMarkSweep</td>\n<td>使用ParNew + CMS + Serial Old收集器组合回收内存</td>\n</tr>\n<tr>\n<td>UseParllelGC</td>\n<td>虚拟机运行在server模式下的默认值，使用PS Parllel + Serial Old(PS MarkSweep)收集器组合回收内存</td>\n</tr>\n</tbody></table>\n<p>在介绍垃圾收集器之前，我们先想象一下打扫卫生的场景，如果一边有人打扫，一边又有人扔垃圾，那么卫生能打扫干净吗？答案肯定是不能的，那怎么才能打扫干净呢？你可能会说打扫卫生的时候不能有人再扔垃圾了，没错就是这样，在java虚拟机中，垃圾收集器就像打扫卫生的人，可能有一个也可能有多个，对应也就是单线程和多线程，其他线程就像是扔垃圾的人。垃圾收集器打扫卫生肯定也是需要时间的，这个时间不能有其他线程&quot;扔垃圾&quot;，也既是暂停其他线程使用直到垃圾收集器结束，在java虚拟机中，这种事情叫做&quot;Stop The World&quot;, 简称STW。计算机运行速度很快，如果把STW的时间缩短到很短，人们根本察觉不到。</p>\n<h2 id=\"serial收集器\"><a href=\"#serial收集器\" class=\"headerlink\" title=\"serial收集器\"></a>serial收集器</h2><p>串行收集器是最古老，最稳定以及效率高的收集器，可能会产生较长时间的卡顿，只使用一个线程去回收，新生代和老年代使用串行回收； 新生代复制算法，老年代标记-压缩算法；垃圾收集的过程中会Stop the World(服务暂停)</p>\n<p>如果是在单CPU环境下，Serial收集器没有线程交互的开销，理论上是可以获得最高的单线程执行效率，STW的时间也可以控制在几十到几百毫秒内。这个时间是完全可以接受的。</p>\n<p><strong>参数控制：</strong> -XX:+UseSerialGC 串行收集器</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/gc_garbage4.png\" loading=\"lazy\"></p>\n<h2 id=\"Serial-Old收集器\"><a href=\"#Serial-Old收集器\" class=\"headerlink\" title=\"Serial Old收集器\"></a>Serial Old收集器</h2><p>Serial Old收集器是Serial收集器的老年代版本，同样也是一个单线程收集器，使用了标记-整理算法。由于PS MarkSweep收集器与Serial Old收集器的实现非常接近，所以在许多官方资料中都是直接以Serial Old代替Ps MarkSweep。PS MarkSweep收集器可以看做是Serial Old收集器的别名</p>\n<h2 id=\"parNew收集器\"><a href=\"#parNew收集器\" class=\"headerlink\" title=\"parNew收集器\"></a>parNew收集器</h2><p>parNew收集器其实就是serial收集器的多线程版本，收集算法，STW，对象分配的规则，回收策略都与Serial收集器完全一样。新生代并行，老年代串行；新生代复制算法，老年代标记-压缩算法</p>\n<p>parNew虽然有多线程的优势，但是在但CPU和多CPU环境下，效果并不一定比Serial好，至少在单CPU环境下是肯定不如Serial的，看起来人多力量大，但由于线程交互开销时间，效果比不理想，多线程的好处在于更高效的利用CPU。提高CPU的吞吐量，让CPU空闲时间减少。</p>\n<p><strong>参数控制：</strong> -XX:+UseParNewGC parNew收集器   -XX:ParallelGCThreads 限制线程总数</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/gc_garbage5.png\" loading=\"lazy\"></p>\n<h2 id=\"parallel收集器\"><a href=\"#parallel收集器\" class=\"headerlink\" title=\"parallel收集器\"></a>parallel收集器</h2><p>Parallel Scavenge收集器类似于parNew收集器，parallel收集器更关注系统的吞吐量，可以通过参数来打开自适应调节策略，虚拟机会根据当前系统的运行情况收集性能监控信息，动态调整这些参数以提供最合适的停顿时间或最大吞吐量；也可以通过参数控制GC的时间不大于多少毫秒或者比例，新生代复制算法，老年代标记-压缩</p>\n<p><strong>参数控制：</strong> -XX:+UseParallelGC 使用parallel收集器+老年代串行</p>\n<h2 id=\"parallel-Old收集器\"><a href=\"#parallel-Old收集器\" class=\"headerlink\" title=\"parallel Old收集器\"></a>parallel Old收集器</h2><p>parallel old是parallel scavenge收集器的老年代版本，使用多线程和&quot;标记-整理&quot;算法。这个收集器是在JDK1.6中开始提供的。</p>\n<p>在Parallel Old收集器出现之前，选择了Parallel Scavenge收集器作为新生代的收集器，就只能线程Serial Old收集器作为老年代收集器，这样肯定是对多CPU的浪费，所以Parallel Scavenge收集器 + Parallel Old收集器，对于多CPU环境吞吐量要求高的环境，算是强强联合。</p>\n<p><strong>参数控制：</strong> -XX:UseParallelOldGC 使用parallel收集器+老年代并行</p>\n<h2 id=\"CMS收集器\"><a href=\"#CMS收集器\" class=\"headerlink\" title=\"CMS收集器\"></a>CMS收集器</h2><p>CMS(Concurrent Mark Sweep)收集器是一种以获取最短回收停顿时间为目标的收集器，目前很大一部分的java应用都集中在互联网站h或B&#x2F;S系统的服务端上，这类应用尤其重视服务的响应速度，希望系统停顿时间最短，以给用户带来较好的体验。</p>\n<p>从名字(包含&quot;Mark Sweep&quot;)上就可以看出CMS收集器是基于&quot;标记-清除&quot;算法实现的，它的运作过程相对前面几种收集器来说要更复杂一些，整个过程分为4个步骤，包括：</p>\n<ul>\n<li>初始标记(CMS initial mark)</li>\n<li>并发标记(CMS concurrent mark)</li>\n<li>重新标记(CMS remark)</li>\n<li>并发清除(CMS concurrent sweep)</li>\n</ul>\n<p>其中初始标记，重新标记这两个步骤仍然要&quot;Stop the World&quot;，初始标记仅仅只是标记一下GC Roots能直接关联到的对象，速度很快，并发标记阶段就是进行GC Roots Tracing的过程，而重新标记阶段则是为了修正并发期间，因用户程序继续运作而导致标记产生变动的那一部分对象的标记记录，这个阶段的停顿时间一般会比初始标记时间稍长一些，但远比并发标记的时间短。</p>\n<p>由于整个过程中耗时最长的并发标记和并发清除，收集器线程都可以与用户线程一起工作，所以总体上来说，CMS收集器的内存回收过程是与用户线程一起并发执行的。老年代收集器(新生代使用的是ParNew)</p>\n<p><strong>优点：</strong> 并发收集，低停顿<br><strong>缺点：</strong> 产生大量空间碎片，并发阶段会降低吞吐量</p>\n<p><strong>参数控制：</strong></p>\n<blockquote>\n<p>-XX:+UseConcMarkSweepGC 使用CMS收集器<br>-XX:+UseCMSCompactAtFullCollection Full GC后，进行一次碎片整理；整理过程是独占的，会引起停顿时间变长<br>-XX:+CMSFullGCsBeforeCompaction 设置进行几次Full GC后，进行一次碎片整理<br>-XX:ParallelCMSThreads 设定CMSd 线程数量(一般情况下可以约等于可用CPU数量)</p>\n</blockquote>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/gc_garbage6.png\" loading=\"lazy\"></p>\n<h2 id=\"G1收集器\"><a href=\"#G1收集器\" class=\"headerlink\" title=\"G1收集器\"></a>G1收集器</h2><p>G1是目前技术发展最前沿成果之一，Hotspot开发团队赋予它的使命是未来可以替换掉JDK1.5中发布的CMS收集器。与CMS收集器相比G1收集器有如下特点：</p>\n<ol>\n<li><strong>空间整合：</strong> G1收集器采用&quot;标记-整理&quot;算法，不会产生内存空间碎片。分配大对象时不会因为无法找到连续空间而提前触发下一次GC。</li>\n<li><strong>可预测停顿：</strong> 这是G1的另一大优势，降低停顿时间是G1和CMS的共同关注点，但G1除了追求低停顿外，还能建立可预测的停顿时间模型，能让使用者明确指定在一个长度为N毫秒的时间片段内，消耗在垃圾收集上的时间不得超过N毫秒，这几乎已经是实时Java(RTSJ)的垃圾收集器的特征了。</li>\n</ol>\n<p>上面提到的垃圾收集器，收集的范围都是整个新生代和老年代，为G1不再是这样，使用G1收集器时，java堆的内存分布与其他收集器有很大差别，它将整个java堆划分为多个大小相等的独立区域(Region)，虽然还保留有新生代和老年代的概念，但新生代和老年代不再是物理隔阂了，它们都是一部分(可以不连续)Region的集合。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/gc_garbage7.jpg\" loading=\"lazy\"></p>\n<p>G1的新生代收集跟ParNew类似，当新生代占用达到一定比例的时候，开始触发收集，和CMS类似，G1收集器收集老年代对象会有短暂的停顿。优先回收垃圾最多的区域。</p>\n<p>收集步骤：</p>\n<ul>\n<li>标记阶段, 首先初始标记(initial mark),这个阶段是停顿的(Stop the World Event), 并且会触发一次普通Mintor GC, 对应GC log: GC pause(young)(initial-mark)</li>\n<li>Root Region Scanning, 程序运行过程中会回收survivor区(存活到老年代)，这一过程必须在young GC之前完成。</li>\n<li>ConCurrent Marking，在整个堆中进行并发标记(和应用程序并发执行)，此过程可能被young GC中断。在并发标记阶段，若发现区域对象中的所有对象都是垃圾，那么这个区域会立即回收(图中X部分)，同时，并发标记过程中，会计算每个区域的对象活性(区域中存活对象的比例)</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/gc_garbage8.png\" loading=\"lazy\"></p>\n<ul>\n<li>Remark，在标记，会有短暂停顿(STW)，在标记阶段是用来收集，并发标记阶段产生的新的垃圾(并发阶段和应用程序一同运行)，G1中采用了比CMS更快的初始快照算法：snapshot-at-the-beginning(SATB)。</li>\n<li>Copy&#x2F;Clean up, 多线程清除失活对象，会有STW，G1将回收区域的存活对象拷贝到新区域，清除RememberSets, 并发清空回收区域并把它返回到空闲区域链表中。</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/gc_garbage9.png\" loading=\"lazy\"></p>\n<ul>\n<li>复制&#x2F;清除过后，回收区域的活性对象已经被集中回收到深蓝色和深绿色区域。</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/gc_garbage10.png\" loading=\"lazy\"></p>\n<h1 id=\"常用的收集器组合\"><a href=\"#常用的收集器组合\" class=\"headerlink\" title=\"常用的收集器组合\"></a>常用的收集器组合</h1><p>几种垃圾收集器的组合如下图所示：</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%E7%BB%84%E5%90%88.jpg\" loading=\"lazy\"></p>\n<table>\n<thead>\n<tr>\n<th>服务器</th>\n<th>新生代GC策略</th>\n<th>老年代GC策略</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>组合1</td>\n<td>Serial</td>\n<td>Serial Old</td>\n<td>Serial和Serial Old都是单线程进行GC，特点就是GC时暂停所有应用线程</td>\n</tr>\n<tr>\n<td>组合2</td>\n<td>Serial</td>\n<td>CMS + Serial Old</td>\n<td>CMS(Concurrent Mark Sweep)是并发GC，实现GC线程和应用线程并发工作，不需要暂停所有应用线程。另外，当CMS进行GC失败，会自动使用Serial Old策略进行GC。</td>\n</tr>\n<tr>\n<td>组合3</td>\n<td>ParNew</td>\n<td>CMS</td>\n<td>使用-XX:+UseParNewGC选项来开启，ParNew是Serial的并行版本，可以指定GC线程数，默认GC线程数为CPU的数量。可以使用-XX:ParallelGCThreads选项指定GC线程数，如果指定了选项-XX:+UseConcMarkSweepGC选项，则新生代默认使用ParNew GC策略。</td>\n</tr>\n<tr>\n<td>组合4</td>\n<td>ParNew</td>\n<td>Serial Old</td>\n<td>使用-XX:UseParNewGC选项开启。新生代使用ParNew GC策略，老年代默认使用Serial Old GC策略</td>\n</tr>\n<tr>\n<td>组合5</td>\n<td>Parallel Scavenge</td>\n<td>Serial Old</td>\n<td>Parallel Scavenge策略主要是关注一个可控的吞吐量，应用程序运行时间&#x2F;(应用程序运行时间 + GC时间)，可见这会使得CPU的利用率尽可能的高，适用于后台持久运行的应用程序，而不适用于交互较多的应用程序。</td>\n</tr>\n<tr>\n<td>组合6</td>\n<td>Parallel Scavenge</td>\n<td>Parallel Old</td>\n<td>Parallel Old是Serial Old的并发版本</td>\n</tr>\n<tr>\n<td>组合7</td>\n<td>G1GC</td>\n<td>G1GC</td>\n<td>-XX:+UnlockExperimentalVMOptions, -XX:+UseG1GC 开启；-XX:+MaxGCPauseMillis&#x3D;50 暂停目标时间，-XX:+GCPauseIntervalMillis&#x3D;200; 暂停间隔目标; -XX:+G1YoungGenSize&#x3D;512m 年轻代大小，-XX:SurvivorRatio&#x3D;6 幸存区比例</td>\n</tr>\n</tbody></table>\n","categories":["JVM"],"tags":["JVM"]},{"title":"JVM系列之jvm调优的常用命令","url":"/jvm/2018-04-04-JVM%E7%B3%BB%E5%88%97%E4%B9%8Bjvm%E8%B0%83%E4%BC%98%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","content":"<p>运用JVM自带的命令可以方便的在生成环境监控和打印堆栈日志信息帮助我们来定位问题！虽然jvm调优成熟的工具已经有很多：jconsole，大名鼎鼎的visualvm，IBM的Memory Analyzer等等。但是在生成环境出现问题的时候，一方面工具的使用会有所限制，另一方面喜欢装X的我们，总喜欢在出现问题的时候在终端输入一些命令来解决。所以的工具几乎都是依赖于jdk的接口和底层的这些命令，研究这些命令的使用也让我们更能了解JVM构成和特征。</p>\n<p>SUN JDK监控和故障处理命令有jps、jstat、jmap、jhat、jstack、jinfo等。下面做一一介绍</p>\n<h1 id=\"jps\"><a href=\"#jps\" class=\"headerlink\" title=\"jps\"></a>jps</h1><p>JVM Process Status Tool. 显示指定系统内所有的hotspot虚拟机进程</p>\n<h2 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jps [options] [hostid]</span><br></pre></td></tr></table></figure>\n<h2 id=\"option参数\"><a href=\"#option参数\" class=\"headerlink\" title=\"option参数\"></a>option参数</h2><blockquote>\n<ul>\n<li>-l: 输出主类全名或jar路径</li>\n<li>-q: 只输出LVMID</li>\n<li>-m: 输出jvm启动时传递给main()的参数</li>\n<li>-v: 输出jvm启动时显示指定的JVM参数</li>\n</ul>\n</blockquote>\n<p>其中[option]、[hostid]参数也可以不写。</p>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jps -l -m</span><br><span class=\"line\">28920 org.apache.catalina.startup.Bootstrap start</span><br><span class=\"line\">11589 org.apache.catalina.startup.Bootstrap start</span><br><span class=\"line\">25816 sun.tools.jps.Jps -l -m</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"jstat\"><a href=\"#jstat\" class=\"headerlink\" title=\"jstat\"></a>jstat</h1><p>jstat(JVM Statistics Monitoring)是用于监视虚拟机运行时状态信息的命令，它可以显示出虚拟机进程中的类装载，内存，垃圾收集，JIT编译等运行数据。</p>\n<h2 id=\"命令格式-1\"><a href=\"#命令格式-1\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstat [option] LVMID [interval [count]</span><br></pre></td></tr></table></figure>\n<h2 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h2><blockquote>\n<ul>\n<li>option: 操作参数</li>\n<li>LVMID: 本地虚拟机进程ID</li>\n<li>interval: 连续输出的时间间隔</li>\n<li>count: 连续输出的次数</li>\n</ul>\n</blockquote>\n<p><strong>option参数总览</strong></p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Displays...</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>class</td>\n<td>class loader的行为统计。Statistics on the behavior of the class loader</td>\n</tr>\n<tr>\n<td>compiler</td>\n<td>Hotspot JIT编译器行为统计。statistics of the behavior of the Hotspot Just-in-time compiler</td>\n</tr>\n<tr>\n<td>gc</td>\n<td>垃圾回收堆的行为统计。statistics of the behavior of the garbage collected heap</td>\n</tr>\n<tr>\n<td>gccapacity</td>\n<td>各个垃圾回收代容量(young, old, perm)和他们响应的空间统计。statistics of the capacities of the generations and their corresponding sapces</td>\n</tr>\n<tr>\n<td>gcutil</td>\n<td>垃圾回收统计概述。summary of garbage collection statistics</td>\n</tr>\n<tr>\n<td>gccause</td>\n<td>垃圾收集统计概述(同-gcutil)，附加最近两次垃圾回收事件的原因。summary of garage collection statistics(same as -gcutil), with the cause of the last and</td>\n</tr>\n<tr>\n<td>gcnew</td>\n<td>新生代行为统计。statistics of behavior of the new generation</td>\n</tr>\n<tr>\n<td>gcnewcapacity</td>\n<td>新生代与其相应的内存空间统计。 statistics of the sizes of the new generation and its corresponding spaces</td>\n</tr>\n<tr>\n<td>gcold</td>\n<td>老年代和永生代行为统计。statistics of the behavior of the old and permanent generations</td>\n</tr>\n<tr>\n<td>gcoldcapacity</td>\n<td>老年代行为统计。statistics of the sizes of the old generation</td>\n</tr>\n<tr>\n<td>gcpermcapacity</td>\n<td>永生代行为统计。statistics of the sizes of the permanent generation</td>\n</tr>\n<tr>\n<td>printcompilation</td>\n<td>Hotspot编译方法统计。Hotspot compilation method statistics</td>\n</tr>\n</tbody></table>\n<p><strong>option参数详解</strong></p>\n<p>-class</p>\n<p>监视类装载，卸载数量，总空间以及耗费的时间</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstat -class 11589</span><br><span class=\"line\">Loaded  Bytes  Unloaded  Bytes     Time   </span><br><span class=\"line\">  7035  14506.3     0     0.0       3.67</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>Loaded：加载class的数量</li>\n<li>Bytes: class字节大小</li>\n<li>Unloaded: 未加载class的数量</li>\n<li>Bytes: 未加载class的字节大小</li>\n<li>Time: 加载时间</li>\n</ul>\n</blockquote>\n<p>-compiler</p>\n<p>输出JIT编译过的方法数量耗时等。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstat -compiler 1262</span><br><span class=\"line\">Compiled Failed Invalid   Time   FailedType FailedMethod</span><br><span class=\"line\">    2573      1       0    47.60          1 org/apache/catalina/loader/WebappClassLoader findResourceInternal</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>Compiled: 编译数量</li>\n<li>Failed: 编译失败的数量</li>\n<li>Invalid: 无效数量</li>\n<li>Time: 编译耗时</li>\n<li>FailedType: 失败类型</li>\n<li>FailedMethod: 失败方法的全限定名</li>\n</ul>\n</blockquote>\n<p>-gc</p>\n<p>垃圾回收堆的行为统计， <strong>常用命令</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstat -gc 1262</span><br><span class=\"line\">S0C    S1C     S0U     S1U   EC       EU        OC         OU        PC       PU         YGC    YGCT    FGC    FGCT     GCT   </span><br><span class=\"line\">26112.0 24064.0 6562.5  0.0   564224.0 76274.5   434176.0   388518.3  524288.0 42724.7    320    6.417   1      0.398    6.815</span><br></pre></td></tr></table></figure>\n\n<p><strong>C即Capacity总容量，U即Used已使用的容量</strong></p>\n<blockquote>\n<ul>\n<li>S0C: survivor0区的总容量</li>\n<li>S1C: survivor1区的总容量</li>\n<li>S0U: survivor0区已使用的容量</li>\n<li>S1U: survivor1区已使用的容量</li>\n<li>EC: Eden区总容量</li>\n<li>EU: Eden区已使用的容量</li>\n<li>OC: Old区的总容量</li>\n<li>OU: Old区已使用的容量</li>\n<li>PC: 当前的容量(kb)</li>\n<li>PU: perm区的使用(kb)</li>\n<li>YGC: 新生代垃圾回收次数</li>\n<li>YGCT: 新生代垃圾回收时间</li>\n<li>FGC: 老年代垃圾回收次数</li>\n<li>FGCT: 老年代垃圾回收时间</li>\n<li>GCT: 垃圾回收总消耗时间</li>\n</ul>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstat -gc 1262 2000 20</span><br></pre></td></tr></table></figure>\n<p>这个命令意思是每隔2000ms就输出1262的gc情况，一共输出20次</p>\n<p>-gccapacity</p>\n<p>用gc，不够还会输出java堆各区域使用到的最大，最小空间。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstat -gccapacity 1262</span><br><span class=\"line\">NGCMN    NGCMX     NGC    S0C   S1C       EC         OGCMN      OGCMX      OGC        OC       PGCMN    PGCMX     PGC      PC         YGC    FGC </span><br><span class=\"line\">614400.0 614400.0 614400.0 26112.0 24064.0 564224.0   434176.0   434176.0   434176.0   434176.0 524288.0 1048576.0 524288.0 524288.0    320     1 </span><br></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>NGCMN: 新生代占用的最小空间</li>\n<li>NGCMX: 新生代占用的最大空间</li>\n<li>OGCMN: 老年代占用的最小空间</li>\n<li>OGCMX: 老年代占用的最大空间</li>\n<li>OGC: 当前老年代的容量(kb)</li>\n<li>OC: 当前老年代的空间(kb)</li>\n<li>PGCMN: perm占用的最小空间</li>\n<li>PGCMX: perm占用的最大空间</li>\n</ul>\n</blockquote>\n<p>-gcutil</p>\n<p>用-gc，不过输出的是已使用空间占总空间的百分比</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstat -gcutil 28920</span><br><span class=\"line\">S0     S1     E      O      P       YGC     YGCT    FGC    FGCT     GCT    LGCC                 GCC                 </span><br><span class=\"line\"> 12.45   0.00  33.85   0.00   4.44      4    0.242     0    0.000    0.242   Allocation Failure   No GC </span><br></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>LGCC: 最近垃圾回收的原因</li>\n<li>GCC: 当前垃圾回收的原因</li>\n</ul>\n</blockquote>\n<p>-gcnew</p>\n<p>统计新生代的行为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstat -gcnew 28920</span><br><span class=\"line\">S0C      S1C      S0U        S1U  TT  MTT  DSS      EC        EU         YGC     YGCT  </span><br><span class=\"line\"> 419392.0 419392.0 52231.8    0.0  6   6    209696.0 3355520.0 1172246.0  4       0.242</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>TT: Tenuring threshold(提升阈值)</li>\n<li>MTT: 最大的Tenuring threshold</li>\n<li>DSS: survivor区域大小(kb)</li>\n</ul>\n</blockquote>\n<p>-gcnewcapacity</p>\n<p>新生代与其相应的内存空间的统计</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstat -gcnewcapacity 28920</span><br><span class=\"line\">NGCMN      NGCMX       NGC      S0CMX     S0C     S1CMX     S1C       ECMX        EC        YGC   FGC </span><br><span class=\"line\"> 4194304.0  4194304.0  4194304.0 419392.0 419392.0 419392.0 419392.0  3355520.0  3355520.0     4     0</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>NGC: 当前年轻代的容量(kb)</li>\n<li>SOCMX: 最大的survivor0空间(kb)</li>\n<li>SOC: 当前survivor空间(kb)</li>\n<li>ECMX: 最大Eden空间(kb)</li>\n<li>EC: 当前Eden空间(kb)</li>\n</ul>\n</blockquote>\n<p>-gcold</p>\n<p>统计老年代的行为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstst -gcold 28929</span><br><span class=\"line\">PC       PU        OC           OU       YGC    FGC    FGCT     GCT   </span><br><span class=\"line\">1048576.0  46561.7   6291456.0     0.0      4      0      0.000    0.242</span><br></pre></td></tr></table></figure>\n\n<p>-gcoldcapacity</p>\n<p>统计老年代的大小和空间</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstat -gcoldcapacity 28920</span><br><span class=\"line\">OGCMN       OGCMX        OGC         OC         YGC   FGC    FGCT     GCT   </span><br><span class=\"line\">  6291456.0   6291456.0   6291456.0   6291456.0     4     0    0.000    0.242</span><br></pre></td></tr></table></figure>\n\n<p>-gcpermcapacity</p>\n<p>永生代行为统计</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstat -gcpermcapacity 28920</span><br><span class=\"line\">PGCMN      PGCMX       PGC         PC      YGC   FGC    FGCT     GCT   </span><br><span class=\"line\"> 1048576.0  2097152.0  1048576.0  1048576.0     4     0    0.000    0.242</span><br></pre></td></tr></table></figure>\n\n<p>-printcompilation</p>\n<p>Hotspot编译方法统计</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstat -printcompilation 28920</span><br><span class=\"line\">Compiled  Size  Type Method</span><br><span class=\"line\">    1291      78     1    java/util/ArrayList indexOf</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>Compiled: 被执行的编译任务的数量</li>\n<li>Size: 方法字节码的字节数</li>\n<li>Type: 编译类型</li>\n<li>Method: 编译方法的类名和方法名。类名使用&quot;&#x2F;&quot;代替&quot;.&quot;，作为空间分隔符。方法名是给出类的方法名，格式是一致于Hotspot -XX:+PrintComplation选项</li>\n</ul>\n</blockquote>\n<h1 id=\"jmap\"><a href=\"#jmap\" class=\"headerlink\" title=\"jmap\"></a>jmap</h1><p>jmap(JVM Memory Map)命令用于生成Head dump文件，如果不使用这个命令，还可以使用-XX:+HeapDumpOnOutOfMemoryError参数来让虚拟1机出现OOM的时候自动生成dump文件。jmap不仅能生成dump文件，还可以查询finalize执行队列，java堆和永久代的详细信息，如当前使用率，当前使用的是哪种收集器等。</p>\n<h2 id=\"命令格式-2\"><a href=\"#命令格式-2\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jmap [option] LVMID</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"option参数-1\"><a href=\"#option参数-1\" class=\"headerlink\" title=\"option参数\"></a>option参数</h2><blockquote>\n<ul>\n<li>dump: 生成堆转储快照</li>\n<li>finalizerinfo: 显示F-Queue队列等待Finalize线程执行finalize方法的对象</li>\n<li>heap: 显示java堆详细信息</li>\n<li>histo: 显示堆中对象的统计信息</li>\n<li>permstat: to print permanent generation statistics</li>\n<li>F: 当-dump没有响应时，强制生成dump快照</li>\n</ul>\n</blockquote>\n<h2 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>-dump</p>\n<p>常用格式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jmap -dump:live,format=b,file=&lt;filename&gt; pid</span><br></pre></td></tr></table></figure>\n\n<p>dump堆到文件，format指定输出格式，live指明是活着的对象，file指定文件名</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jmap -dump:live,format=b,file=dump.hprof 28920</span><br><span class=\"line\">Dumping heap to /home/xxx/dump.hprof ...</span><br><span class=\"line\">Heap dump file created</span><br></pre></td></tr></table></figure>\n<p>dump.hprof这个后缀是为了后续可以直接使用MAT(memory analysis tool)打开。</p>\n<p>-finalizerinfo</p>\n<p>打印等待回收对象的信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jmap -finalizerinfo 28920</span><br><span class=\"line\">Attaching to process ID 28920, please wait...</span><br><span class=\"line\">Debugger attached successfully.</span><br><span class=\"line\">Server compiler detected.</span><br><span class=\"line\">JVM version is 24.71-b01</span><br><span class=\"line\">Number of objects pending for finalization: 0</span><br></pre></td></tr></table></figure>\n<p>可以看到当前F-Queue队列中并没有等待finalizer线程执行finalize方法的对象</p>\n<p>-heap</p>\n<p>打印heap的概要信息，GC使用的算法，heap的配置及wise heap的使用情况，可以用此来判断内存目前的使用情况以及垃圾回收情况</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jmap -heap 28920</span><br><span class=\"line\">Attaching to process ID 28920, please wait...</span><br><span class=\"line\">Debugger attached successfully.</span><br><span class=\"line\">Server compiler detected.</span><br><span class=\"line\">JVM version is 24.71-b01  </span><br><span class=\"line\"></span><br><span class=\"line\">using thread-local object allocation.</span><br><span class=\"line\">Parallel GC with 4 thread(s)//GC 方式  </span><br><span class=\"line\"></span><br><span class=\"line\">Heap Configuration: //堆内存初始化配置</span><br><span class=\"line\"> MinHeapFreeRatio = 0 //对应jvm启动参数-XX:MinHeapFreeRatio设置JVM堆最小空闲比率(default 40)</span><br><span class=\"line\"> MaxHeapFreeRatio = 100 //对应jvm启动参数 -XX:MaxHeapFreeRatio设置JVM堆最大空闲比率(default 70)</span><br><span class=\"line\"> MaxHeapSize      = 2082471936 (1986.0MB) //对应jvm启动参数-XX:MaxHeapSize=设置JVM堆的最大大小</span><br><span class=\"line\"> NewSize          = 1310720 (1.25MB)//对应jvm启动参数-XX:NewSize=设置JVM堆的‘新生代’的默认大小</span><br><span class=\"line\"> MaxNewSize       = 17592186044415 MB//对应jvm启动参数-XX:MaxNewSize=设置JVM堆的‘新生代’的最大大小</span><br><span class=\"line\"> OldSize          = 5439488 (5.1875MB)//对应jvm启动参数-XX:OldSize=&lt;value&gt;:设置JVM堆的‘老生代’的大小</span><br><span class=\"line\"> NewRatio         = 2 //对应jvm启动参数-XX:NewRatio=:‘新生代’和‘老生代’的大小比率</span><br><span class=\"line\"> SurvivorRatio    = 8 //对应jvm启动参数-XX:SurvivorRatio=设置年轻代中Eden区与Survivor区的大小比值 </span><br><span class=\"line\"> PermSize         = 21757952 (20.75MB)  //对应jvm启动参数-XX:PermSize=&lt;value&gt;:设置JVM堆的‘永生代’的初始大小</span><br><span class=\"line\"> MaxPermSize      = 85983232 (82.0MB)//对应jvm启动参数-XX:MaxPermSize=&lt;value&gt;:设置JVM堆的‘永生代’的最大大小</span><br><span class=\"line\"> G1HeapRegionSize = 0 (0.0MB)  </span><br><span class=\"line\"></span><br><span class=\"line\">Heap Usage://堆内存使用情况</span><br><span class=\"line\">PS Young Generation</span><br><span class=\"line\">Eden Space://Eden区内存分布</span><br><span class=\"line\"> capacity = 33030144 (31.5MB)//Eden区总容量</span><br><span class=\"line\"> used     = 1524040 (1.4534378051757812MB)  //Eden区已使用</span><br><span class=\"line\"> free     = 31506104 (30.04656219482422MB)  //Eden区剩余容量</span><br><span class=\"line\"> 4.614088270399305% used //Eden区使用比率</span><br><span class=\"line\">From Space:  //其中一个Survivor区的内存分布</span><br><span class=\"line\"> capacity = 5242880 (5.0MB)</span><br><span class=\"line\"> used     = 0 (0.0MB)</span><br><span class=\"line\"> free     = 5242880 (5.0MB)</span><br><span class=\"line\"> 0.0% used</span><br><span class=\"line\">To Space:  //另一个Survivor区的内存分布</span><br><span class=\"line\"> capacity = 5242880 (5.0MB)</span><br><span class=\"line\"> used     = 0 (0.0MB)</span><br><span class=\"line\"> free     = 5242880 (5.0MB)</span><br><span class=\"line\"> 0.0% used</span><br><span class=\"line\">PS Old Generation //当前的Old区内存分布</span><br><span class=\"line\"> capacity = 86507520 (82.5MB)</span><br><span class=\"line\"> used     = 0 (0.0MB)</span><br><span class=\"line\"> free     = 86507520 (82.5MB)</span><br><span class=\"line\"> 0.0% used</span><br><span class=\"line\">PS Perm Generation//当前的 “永生代” 内存分布</span><br><span class=\"line\"> capacity = 22020096 (21.0MB)</span><br><span class=\"line\"> used     = 2496528 (2.3808746337890625MB)</span><br><span class=\"line\"> free     = 19523568 (18.619125366210938MB)</span><br><span class=\"line\"> 11.337498256138392% used  </span><br><span class=\"line\"></span><br><span class=\"line\">670 interned Strings occupying 43720 bytes.</span><br></pre></td></tr></table></figure>\n<p>可以很清楚的看到java堆中各个区域目前的情况。</p>\n<p>-histo</p>\n<p>打印堆的对象统计，包括对象数，内存大小等等(因为在dump:live前会进行full gc，如果带上live则只统计活对象，因此不加live的堆大小要大于加live堆的大小</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jmap -histo:live 28920 | more</span><br><span class=\"line\">num     #instances         #bytes  class name</span><br><span class=\"line\">----------------------------------------------</span><br><span class=\"line\">   1:         83613       12012248  &lt;constMethodKlass&gt;</span><br><span class=\"line\">   2:         23868       11450280  [B</span><br><span class=\"line\">   3:         83613       10716064  &lt;methodKlass&gt;</span><br><span class=\"line\">   4:         76287       10412128  [C</span><br><span class=\"line\">   5:          8227        9021176  &lt;constantPoolKlass&gt;</span><br><span class=\"line\">   6:          8227        5830256  &lt;instanceKlassKlass&gt;</span><br><span class=\"line\">   7:          7031        5156480  &lt;constantPoolCacheKlass&gt;</span><br><span class=\"line\">   8:         73627        1767048  java.lang.String</span><br><span class=\"line\">   9:          2260        1348848  &lt;methodDataKlass&gt;</span><br><span class=\"line\">  10:          8856         849296  java.lang.Class</span><br><span class=\"line\">  ....</span><br></pre></td></tr></table></figure>\n<p>仅仅打印了前面10行</p>\n<p>xml class name是对象类型，说明如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">B  byte</span><br><span class=\"line\">C  char</span><br><span class=\"line\">D  double</span><br><span class=\"line\">F  float</span><br><span class=\"line\">I  int</span><br><span class=\"line\">J  long</span><br><span class=\"line\">Z  boolean</span><br><span class=\"line\">[  数组，如[I表示int[]</span><br><span class=\"line\">[L+类名 其他对象</span><br></pre></td></tr></table></figure>\n\n<p>-permstat</p>\n<p>打印java堆内存的永久代保存区域的类加载器的智能统计信息。对于每个类加载器而言，它的名称，活跃度，地址，父类加载器，它所加载的类的数量和大小都会被打印。此外，包含的字符串数量和大小也会被打印。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jmap -permstat 28920</span><br><span class=\"line\">Attaching to process ID 28920, please wait...</span><br><span class=\"line\">Debugger attached successfully.</span><br><span class=\"line\">Server compiler detected.</span><br><span class=\"line\">JVM version is 24.71-b01</span><br><span class=\"line\">finding class loader instances ..done.</span><br><span class=\"line\">computing per loader stat ..done.</span><br><span class=\"line\">please wait.. computing liveness.liveness analysis may be inaccurate ...</span><br><span class=\"line\"></span><br><span class=\"line\">class_loader            classes bytes   parent_loader           alive?  type  </span><br><span class=\"line\">&lt;bootstrap&gt;             3111    18154296          null          live    &lt;internal&gt;</span><br><span class=\"line\">0x0000000600905cf8      1       1888    0x0000000600087f08      dead    sun/reflect/DelegatingClassLoader@0x00000007800500a0</span><br><span class=\"line\">0x00000006008fcb48      1       1888    0x0000000600087f08      dead    sun/reflect/DelegatingClassLoader@0x00000007800500a0</span><br><span class=\"line\">0x00000006016db798      0       0       0x00000006008d3fc0      dead    java/util/ResourceBundle$RBClassLoader@0x0000000780626ec0</span><br><span class=\"line\">0x00000006008d6810      1       3056      null          dead    sun/reflect/DelegatingClassLoader@0x00000007800500a0</span><br></pre></td></tr></table></figure>\n\n<p> -F 强制模式。如果指定的pid没有响应，请使用jmap -dump或者jmap -histo选项，此模式下，不支持live子选项。 </p>\n<h1 id=\"jhat\"><a href=\"#jhat\" class=\"headerlink\" title=\"jhat\"></a>jhat</h1><p>jhat(JVM Heap Analysis Tool)命令是和jmap搭配使用的，用来分析jmap生成的dump快照，jhat内置了一个微型的HTTP&#x2F;HTML服务器，生成dump的分析结果后，可以在浏览器中查看，在此需要注意，一般不会直接在服务器上进行分析。因为jhat是一个耗时并且耗费硬件资源的过程，一般把服务器生成的dump文件复制到本地服务器或者其它服务器上进行分析。</p>\n<h2 id=\"命令格式-3\"><a href=\"#命令格式-3\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jhat [dumpfile]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参数-1\"><a href=\"#参数-1\" class=\"headerlink\" title=\"参数\"></a>参数</h2><blockquote>\n<ul>\n<li>-stack false|true 关闭对象分配调用栈跟踪(tracking object allocation call statck)。如果分配位置信息在堆转储中不可用，则必须将此标志设置为false。默认值为true</li>\n<li>-refs false|true 关闭对象引用跟踪(tracking of reference to objects). 默认值为true，默认情况下，返回的指针是指向其他特定对象的对象，如反向链接或输入引用(references or incoming references),会统计&#x2F;计算堆中的所有对象。</li>\n<li>-port port-number设置jhat HTTP server的端口号，默认值7000</li>\n<li>-exclude exclude-flie指定对象查询是需要排除的数据成员列表文件(a file that lists data members that should be excluded from the reachable objects query). 例如。如果文件列表列出了java.lang.String.value，那么当从某个特定对象Object o计算可达的对象列表时，引用路径涉及java.lang.String.value的都会被排除。</li>\n<li>-baseline exclude-file指定一个基准堆转储(baseline heap dump). 在两个heap dumps中有相同的Object ID的对象会被标记为不是新的(marked as not being new)。其他对象被标记为新的(new). 在比较两个不同的堆转储时很有用。</li>\n<li>-debug int设置debug级别，0表示不输出调试信息，值越大则表示输出更详细的debug信息</li>\n<li>-version 启动后显示版本信息就退出。</li>\n<li>J<flag> 因为jhat命令实际上会启动一个JVM来执行，通过-J可以在启动JVM时传入一些启动参数，例如：-J-Xmx512m，则指定运行jhat的java虚拟机使用的最大堆内存为512m。如果需要使用多个JVM参数，则传入多个-Jxxxx。</flag></li>\n</ul>\n</blockquote>\n<h2 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例\"></a>示例</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jhat -J-Xmx512m dum.hprof</span><br><span class=\"line\">eading from dump.hprof...</span><br><span class=\"line\">Dump file created Fri Mar 11 17:13:42 CST 2016</span><br><span class=\"line\">Snapshot read, resolving...</span><br><span class=\"line\">Resolving 271678 objects...</span><br><span class=\"line\">Chasing references, expect 54 dots......................................................</span><br><span class=\"line\">Eliminating duplicate references......................................................</span><br><span class=\"line\">Snapshot resolved.</span><br><span class=\"line\">Started HTTP server on port 7000</span><br><span class=\"line\">Server is ready.</span><br></pre></td></tr></table></figure>\n\n<p>中间的J-Xmx512m是在dump快照很大的情况下分配512m内存去启动HTTP服务器，运行完之后就可以在浏览器打开<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo3MDAw6L+b6KGM5b+r54Wn5YiG5p6Q5aCG5b+r54Wn5YiG5p6Q5Li76KaB5Zyo5pyA5ZCO6Z2i55qESGVhcA==\">http://localhost:7000进行快照分析堆快照分析主要在最后面的Heap<i class=\"fa fa-external-link-alt\"></i></span> Histogram里，里面根据class列出dump时所有存活对象。</p>\n<p><strong>分析同样一个dump快照，MAT需要的额外内存比jhat要小的很多，所以建议使用MAT来进行分析</strong></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>打开浏览器<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo3MDAwLOivpemhtemdouaPkOS+m+S6huWHoOS4quafpeivouWKn+iDveWPr+S+m+S9v+eUqA==\">http://localhost:7000,该页面提供了几个查询功能可供使用<i class=\"fa fa-external-link-alt\"></i></span></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">All classes including platform</span><br><span class=\"line\">Show all members of the rootset</span><br><span class=\"line\">Show instance counts for all classes (including platform)</span><br><span class=\"line\">Show instance counts for all classes (excluding platform)</span><br><span class=\"line\">Show heap histogram</span><br><span class=\"line\">Show finalizer summary</span><br><span class=\"line\">Execute Object Query Language (OQL) query</span><br></pre></td></tr></table></figure>\n\n<p>一般查看堆异常情况主要看这个两个部分，show instance counts for all classes(excluding platform), 平台外的所有对象信息。如下图：</p>\n<p><img src=\"http://ityouknow.com/assets/images/2016/jvm-jhat-excluding-paltform.png\" loading=\"lazy\"></p>\n<p>show heap histogram以树状图形形式展示堆情况。如下图：</p>\n<p><img src=\"http://ityouknow.com/assets/images/2016/jvm-jhat-heap-histogram.png\" loading=\"lazy\"></p>\n<p>具体排查时需要结合代码，观察是否大量应该被回收的对象在一直被引用或者是否有占用内存特别大的对象无法被回收。</p>\n<p><strong>一般情况下，会down到客户端用工具来分析。</strong></p>\n<h1 id=\"jstack\"><a href=\"#jstack\" class=\"headerlink\" title=\"jstack\"></a>jstack</h1><p>jstack用于生成java虚拟机当前时刻的线程快照，线程快照是当前java虚拟机内每一条线程正在执行的方法堆栈集合，生成线程快照的主要目的是定位出现长时间卡顿的原因，如线程间死锁，死循环，请求外部资源导致的长时间等待等等，线程出现卡顿的时候提供jstack来查看各个线程的调用堆栈，就可以知道没有响应的线程到底在后台做什么事情，或者等待什么资源，如果java程序崩溃生成core文件，jstack工具可以用来获取core文件的java  stack和native stack的信息，从而可以轻松的知道java程序是如果崩溃和在程序何处发生的问题，另外，jstack工具还可以附属到正在运行的java程序中，看到当时的java程序的java stack和native stack的信息，如果现在运行的java程序呈现hung的状态，jstack是非常有用的。</p>\n<h2 id=\"命令格式-4\"><a href=\"#命令格式-4\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstack [option] LVMID</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"option参数-2\"><a href=\"#option参数-2\" class=\"headerlink\" title=\"option参数\"></a>option参数</h2><blockquote>\n<ul>\n<li>-F: 当正在输出请求不被响应时，强制输出线程堆栈</li>\n<li>-l: 除堆栈外，显示关于锁的附件信息</li>\n<li>-m: 如果调用到本地方法的话，可以显示c&#x2F;c++的堆栈</li>\n</ul>\n</blockquote>\n<h2 id=\"示例-3\"><a href=\"#示例-3\" class=\"headerlink\" title=\"示例\"></a>示例</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstack -l 11494 | more</span><br><span class=\"line\">2016-07-28 13:40:04</span><br><span class=\"line\">Full thread dump Java HotSpot(TM) 64-Bit Server VM (24.71-b01 mixed mode):</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;Attach Listener&quot; daemon prio=10 tid=0x00007febb0002000 nid=0x6b6f waiting on condition [0x0000000000000000]</span><br><span class=\"line\">   java.lang.Thread.State: RUNNABLE</span><br><span class=\"line\"></span><br><span class=\"line\">   Locked ownable synchronizers:</span><br><span class=\"line\">        - None</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;http-bio-8005-exec-2&quot; daemon prio=10 tid=0x00007feb94028000 nid=0x7b8c waiting on condition [0x00007fea8f56e000]</span><br><span class=\"line\">java.lang.Thread.State: WAITING (parking)</span><br><span class=\"line\">\tat sun.misc.Unsafe.park(Native Method)</span><br><span class=\"line\">\t- parking to wait for  &lt;0x00000000cae09b80&gt; (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)</span><br><span class=\"line\">\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)</span><br><span class=\"line\">\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)</span><br><span class=\"line\">\tat java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)</span><br><span class=\"line\">\tat org.apache.tomcat.util.threads.TaskQueue.take(TaskQueue.java:104)</span><br><span class=\"line\">\tat org.apache.tomcat.util.threads.TaskQueue.take(TaskQueue.java:32)</span><br><span class=\"line\">\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)</span><br><span class=\"line\">\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)</span><br><span class=\"line\">\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)</span><br><span class=\"line\">\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)</span><br><span class=\"line\">\tat java.lang.Thread.run(Thread.java:745)</span><br><span class=\"line\"></span><br><span class=\"line\">Locked ownable synchronizers:</span><br><span class=\"line\">\t- None</span><br><span class=\"line\">  .....</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>这里面有一篇文章解释的很好 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ob2xsaXNjaHVhbmcuY29tL2FyY2hpdmVzLzExMA==\">分析打印出来的文件内容<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h1 id=\"jinfo\"><a href=\"#jinfo\" class=\"headerlink\" title=\"jinfo\"></a>jinfo</h1><p>jinfo(JVM Configuration info) 这个命令作用是实时查看和调整虚拟机运行参数，之前的jps -v命令只能查看到显示指定的参数，如果想要查看未被显示指定的参数的值就需要使用jinfo了。</p>\n<h2 id=\"命令格式-5\"><a href=\"#命令格式-5\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jinfo [oprion] [args] LVMID</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"oprion参数\"><a href=\"#oprion参数\" class=\"headerlink\" title=\"oprion参数\"></a>oprion参数</h2><blockquote>\n<ul>\n<li>-flag: 输出指定args参数的值</li>\n<li>-flags: 不需要args参数，输出所有JVM参数的值</li>\n<li>-sysprops: 属性系统属性，等同于System.getProperties();</li>\n</ul>\n</blockquote>\n<h2 id=\"示例-4\"><a href=\"#示例-4\" class=\"headerlink\" title=\"示例\"></a>示例</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jinfo -flag CMSInitiatingOccupancyFraction 11494 </span><br><span class=\"line\">XX:CMSInitiatingOccupancyFraction=80</span><br></pre></td></tr></table></figure>","categories":["JVM"],"tags":["JVM"]},{"title":"JVM系列之java gc分析","url":"/jvm/2018-04-05-JVM%E7%B3%BB%E5%88%97%E4%B9%8Bjava%20gc%E5%88%86%E6%9E%90/","content":"<h1 id=\"如何获取java-GC日志\"><a href=\"#如何获取java-GC日志\" class=\"headerlink\" title=\"如何获取java GC日志\"></a>如何获取java GC日志</h1><p>一般情况下可以通过两种方式来获取GC日志，一种是使用命令动态动态查看，一个是在容器中设置相关参数打印GC日志</p>\n<h2 id=\"命令动态查看\"><a href=\"#命令动态查看\" class=\"headerlink\" title=\"命令动态查看\"></a>命令动态查看</h2><p>java自带的工具行命令，jstat可以用来动态监控JVM内存的使用，统计垃圾回收的各项信息。</p>\n<p>比如常用命令，jstat -gc 统计垃圾回收堆的行为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstat -gc 1262</span><br><span class=\"line\">S0C    S1C     S0U     S1U   EC       EU        OC         OU        PC       PU         YGC    YGCT    FGC    FGCT     GCT   </span><br><span class=\"line\">26112.0 24064.0 6562.5  0.0   564224.0 76274.5   434176.0   388518.3  524288.0 42724.7    320    6.417   1      0.398    6.815</span><br></pre></td></tr></table></figure>\n\n<p>也可以设置间隔固定时间来打印</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jstat -gc 1262 2000 20 </span><br></pre></td></tr></table></figure>\n<p>这个命令意思就是每隔2000ms输出1262的gc情况，一共输出20次</p>\n<h2 id=\"GC参数\"><a href=\"#GC参数\" class=\"headerlink\" title=\"GC参数\"></a>GC参数</h2><p>JVM的GC日志的主要参数包括如下几个：</p>\n<ul>\n<li>-XX:+PrintGC 输出GC日志</li>\n<li>-XX:+PrintGCDetails 输出GC的详细日志</li>\n<li>-XX:+PrintGCTimeStamps 输出GC的时间戳(以基准时间的形式</li>\n<li>-XX:+PrintGCDateStamps 输出GC的时间戳(以日期的形式，如2018-04-05</li>\n<li>-XX:+PrintHeapAtGC 在进行GC的前后打印出堆的信息</li>\n<li>-Xloggc:..&#x2F;logs&#x2F;gc.log 日志文件的输出路径</li>\n</ul>\n<p>在生产环境中，根据需要配置的参数来监控JVM运行情况。</p>\n<h2 id=\"tomcat设置示例\"><a href=\"#tomcat设置示例\" class=\"headerlink\" title=\"tomcat设置示例\"></a>tomcat设置示例</h2><p>我们经常在tomcat的启动参数中添加JVM相关参数，这里有一个典型的实例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">JAVA_OPTS=&quot;-server -Xms2000m -Xmx2000m -Xmn800m -XX:PermSize=64m -XX:MaxPermSize=256m -XX:SurvivorRatio=4 -verbose:gc -Xloggc:$CATALINA_HOME/logs/gc.log -Djava.awt.headless=true -XX:PrintGCTimeStamps -XX:+PrintGCDetails -Dsun.rmi.dgc.server.gcInterval=600000 -Dsun.rmi.dgc.client.gcInterval=600000 -XX:+UseConcMarkSweepGC -XXMaxTenuringThreshold=15&quot;</span><br></pre></td></tr></table></figure>\n\n<p>根据上面的参数我们来做一下解析：</p>\n<ul>\n<li>-Xms2000m -Xmx2000 -Xmn800m -XX:PermSize&#x3D;64m -XX:MaxPermSize&#x3D;256m Xms是JVM启动时堆初始的大小，Xmx为JVM最大堆大小，Xmn为新生代的大小，PermSize为永久代的初始大小，MaxPermSize为永久代的最大空间</li>\n<li>-XX:SurvivorRatio&#x3D;4 SurvivorRatio为新生代空间中的Eden区和救助空间Survivor区的大小比值，默认是8，而两个Survivor区与一个Eden区的比值为2:8，一个Survivor区占整个新生代的1&#x2F;10，调小这个参数将增大survivor区，让对象尽量在Survivor区呆长一点，减少进入老年代的对象，去掉救助空间的想法是让大部分不能马上回收的数据尽快进入老年代，加快老年代的回收频率，减少年老代暴涨的可能性，这个是通过将-XX:SurvivorRatio设置成比较大的值(如65536)来做到的。</li>\n<li>-verbose:gc -Xloggc:$CATALINA_HOME&#x2F;logs&#x2F;gc.log 将虚拟机每次垃圾回收的信息写到日志文件中，文件名由file指定，文件格式是平文件，内容和-verbose:gc输出内容相同。</li>\n<li>-Djava.awt.headless&#x3D;true Headless模式是系统的一种配置模式，在该模式下，系统缺少了显示设备，键盘或鼠标。</li>\n<li>-XX:+PrintGCTimeStamps -XX:PrintGCDetails 设置GC日志的格式</li>\n<li>-Dsun.rmi.dgc.server.gcInterval&#x3D;600000 -Dsun.rmi.dgc.client.gcInterval&#x3D;600000 指定rmi调用gc的时间间隔</li>\n<li>-XX:+UseConcMarkSweepGC -XX:MaxTenuringThreshold&#x3D;15 采用并发gc方式，经过15次minor gc后进入年老代</li>\n</ul>\n<h1 id=\"如何分析GC日志\"><a href=\"#如何分析GC日志\" class=\"headerlink\" title=\"如何分析GC日志\"></a>如何分析GC日志</h1><p>摘录GC日志一部分</p>\n<p>Young GC回收日志：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">2016-07-05T10:43:18.093+0800: 25.395: [GC [PSYoungGen: 274931K-&gt;10738K(274944K)] 371093K-&gt;147186K(450048K), 0.0668480 secs] [Times: user=0.17 sys=0.08, real=0.07 secs]</span><br></pre></td></tr></table></figure>\n\n<p>Full GC回收日志</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">2016-07-05T10:43:18.160+0800: 25.462: [Full GC [PSYoungGen: 10738K-&gt;0K(274944K)] [ParOldGen: 136447K-&gt;140379K(302592K)] 147186K-&gt;140379K(577536K) [PSPermGen: 85411K-&gt;85376K(171008K)], 0.6763541 secs] [Times: user=1.75 sys=0.02, real=0.68 secs]</span><br></pre></td></tr></table></figure>\n\n<p>通过上面日志分析得出，PSYoungGen、ParOldGen、PSPermGen属于Parllel收集器，其中PSYoungGen表示gc回收前后年轻代的内存变化，ParOldGen表示gc回收前后老年代的内存变化，PSPermGen表示gc回收前后永久区的内存变化。young gc主要是针对年轻代进行内存回收比较频繁，耗时短，full gc会对整个堆内存进行回收，耗时长，因此一般尽量减少full gc的次数</p>\n<p>通过两张图非常明显看出gc日志构成：</p>\n<p>Young GC日志：</p>\n<p><img src=\"http://ityouknow.com/assets/images/2017/jvm/Young%20GC.png\" loading=\"lazy\"></p>\n<p>Full GC日志：</p>\n<p><img src=\"http://ityouknow.com/assets/images/2017/jvm/Full%20GC.png\" loading=\"lazy\"></p>\n<h1 id=\"GC分析工具\"><a href=\"#GC分析工具\" class=\"headerlink\" title=\"GC分析工具\"></a>GC分析工具</h1><h2 id=\"GChisto\"><a href=\"#GChisto\" class=\"headerlink\" title=\"GChisto\"></a>GChisto</h2><p>GChisto是一款专业分析gc日志的工具，可以通过gc日志来分析: Minor GC、Full GC的时间，频率等等。通过列表，报告，图表等不同的形式来反应gc的情况，虽然界面略显粗糙，但是功能还是不错的。</p>\n<p>配置好本地的jdk环境之后，双击GChisto.jar。在弹出的输入框中点击add，选择gc.log日志</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/g1.jpg\" loading=\"lazy\"></p>\n<ul>\n<li>GC Pause Stats: 可以查看GC的次数，GC的时间，GC的开销，最大GC时间和最小GC时间等，以及相应的柱状图</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/g2.jpg\" loading=\"lazy\"></p>\n<ul>\n<li>GC Pause Distribution: 查看GC停顿的详细分布，x轴表示垃圾收集停顿时间，y轴表示是停顿次数</li>\n<li>GC Timeline: 显示整个时间线上的垃圾收集</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/g3.jpg\" loading=\"lazy\"></p>\n<p>不过这款工具已经不再维护</p>\n<h2 id=\"GCEasy\"><a href=\"#GCEasy\" class=\"headerlink\" title=\"GCEasy\"></a>GCEasy</h2><p>这是一个web工具，在线使用非常方便。</p>\n<p>地址: <span class=\"exturl\" data-url=\"aHR0cDovL2djZWFzeS5pby8=\">gceasy<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>进入官网，将打包好的zip或者gz为后缀的压缩包上传，过一会就会拿到分析结果。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/gceasy1.png\" loading=\"lazy\"></p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/gceasy2.png\" loading=\"lazy\"></p>\n<p>推荐使用此工具进行gc分析</p>\n<h2 id=\"fastThread\"><a href=\"#fastThread\" class=\"headerlink\" title=\"fastThread\"></a>fastThread</h2><p>这是一个web工具，主要用来分析thread dumps中存在的问题.</p>\n<p>地址：<span class=\"exturl\" data-url=\"aHR0cDovL2Zhc3R0aHJlYWQuaW8v\">fastThread<i class=\"fa fa-external-link-alt\"></i></span>;</p>\n<h1 id=\"CMS-GC日志分析\"><a href=\"#CMS-GC日志分析\" class=\"headerlink\" title=\"CMS GC日志分析\"></a>CMS GC日志分析</h1><p>今天总结了CMS的一些特点和要点，让我们先简单的看下整个堆内存年轻代和老年代的收集器组合(以下配合java8完美支持，其他版本可能稍有不同), 其中标红线的则是我们今天要着重讲的内容: </p>\n<p>垃圾回收器的可用组合</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-77fc799a8c8c4ff3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<h1 id=\"ParNew-and-CMS\"><a href=\"#ParNew-and-CMS\" class=\"headerlink\" title=\"ParNew and CMS\"></a>ParNew and CMS</h1><p>&quot;Concurrent Mark ans Sweep&quot;是CMS的全称，官方给予的名称是&quot;Mostly Concurrent Mark and Sweep Garbage Collector&quot;;</p>\n<ul>\n<li>年轻代: 采用stop-the-world mark-copy算法</li>\n<li>老年代: 采用Mostly Concurrent mark-sweep算法</li>\n<li>设计目标: 老年代收集的时候避免长时间的卡顿。</li>\n</ul>\n<p>能够达成这样个目标主要因为以下两个原因: </p>\n<ol>\n<li>他不会花时间整理压缩老年代，而是维护了一个叫做free-lists的数据结构，该数据结构用来管理那些回收再利用的的内存空间；</li>\n<li>mark-sweep分为多个阶段，其中一大部分阶段GC的工作是和Application threads的工作线程同时进行的(当然，gc线程会和用户线程竞争CPU资源), 默认的GC的工作线程为你服务器物理CPU核数的1&#x2F;4</li>\n</ol>\n<p>补充: 当你的服务器是多核同时你的目标是低延迟时，那该GC的搭配则是你的不二选择。</p>\n<h2 id=\"GC日志初体验\"><a href=\"#GC日志初体验\" class=\"headerlink\" title=\"GC日志初体验\"></a>GC日志初体验</h2><p>首先对整个GC日志有一个大概的认知</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">2016-08-23T02:23:07.219-0200: 64.322: [GC (Allocation Failure) 64.322: [ParNew: 613404K-&gt;68068K(613440K), 0.1020465 secs] 10885349K-&gt;10880154K(12514816K), 0.1021309 secs] [Times: user=0.78 sys=0.01, real=0.11 secs]2016-08-23T02:23:07.321-0200: 64.425: [GC (CMS Initial Mark) [1 CMS-initial-mark: 10812086K(11901376K)] 10887844K(12514816K), 0.0001997 secs] [Times: user=0.00 sys=0.00, real=0.00 secs]</span><br><span class=\"line\">2016-08-23T02:23:07.321-0200: 64.425: [CMS-concurrent-mark-start]</span><br><span class=\"line\">2016-08-23T02:23:07.357-0200: 64.460: [CMS-concurrent-mark: 0.035/0.035 secs] [Times: user=0.07 sys=0.00, real=0.03 secs]</span><br><span class=\"line\">2016-08-23T02:23:07.357-0200: 64.460: [CMS-concurrent-preclean-start]</span><br><span class=\"line\">2016-08-23T02:23:07.373-0200: 64.476: [CMS-concurrent-preclean: 0.016/0.016 secs] [Times: user=0.02 sys=0.00, real=0.02 secs]</span><br><span class=\"line\">2016-08-23T02:23:07.373-0200: 64.476: [CMS-concurrent-abortable-preclean-start]</span><br><span class=\"line\">2016-08-23T02:23:08.446-0200: 65.550: [CMS-concurrent-abortable-preclean: 0.167/1.074 secs] [Times: user=0.20 sys=0.00, real=1.07 secs]</span><br><span class=\"line\">2016-08-23T02:23:08.447-0200: 65.550: [GC (CMS Final Remark) [YG occupancy: 387920 K (613440 K)]65.550: [Rescan (parallel) , 0.0085125 secs]65.559: [weak refs processing, 0.0000243 secs]65.559: [class unloading, 0.0013120 secs]65.560: [scrub symbol table, 0.0008345 secs]65.561: [scrub string table, 0.0001759 secs][1 CMS-remark: 10812086K(11901376K)] 11200006K(12514816K), 0.0110730 secs] [Times: user=0.06 sys=0.00, real=0.01 secs]</span><br><span class=\"line\">2016-08-23T02:23:08.458-0200: 65.561: [CMS-concurrent-sweep-start]</span><br><span class=\"line\">2016-08-23T02:23:08.485-0200: 65.588: [CMS-concurrent-sweep: 0.027/0.027 secs] [Times: user=0.03 sys=0.00, real=0.03 secs]</span><br><span class=\"line\">2016-08-23T02:23:08.485-0200: 65.589: [CMS-concurrent-reset-start]</span><br><span class=\"line\">2016-08-23T02:23:08.497-0200: 65.601: [CMS-concurrent-reset: 0.012/0.012 secs] [Times: user=0.01 sys=0.00, real=0.01 secs]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Minor-GC\"><a href=\"#Minor-GC\" class=\"headerlink\" title=\"Minor GC\"></a>Minor GC</h2><p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-baaf1a321fe18c65.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<blockquote>\n<ul>\n<li><ol>\n<li>2016-08-23T02:23:07.219-0200 - GC发生的时间</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>64.322 - GC开始，相对JVM启动的时间，单位是秒</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>GC - 区别MinorGC和FullGC的标识，这次代表的是MinorGC</li>\n</ol>\n</li>\n<li><ol start=\"4\">\n<li>Allocation Failure - MinorGC的原因，在这个case里边，由于年轻代不满足申请的空间，因此触发了MinorGC</li>\n</ol>\n</li>\n<li><ol start=\"5\">\n<li>ParNew - 收集器的名称，他预示了年轻代使用一个并行的 mark-copy stop-the-world垃圾收集器</li>\n</ol>\n</li>\n<li><ol start=\"6\">\n<li>613404K-&gt;68068K - 收集前后年轻代的使用情况</li>\n</ol>\n</li>\n<li><ol start=\"7\">\n<li>(613440K) - 整个年轻代的容量</li>\n</ol>\n</li>\n<li><ol start=\"8\">\n<li>0.1020465 secs - 这个解释用原汁原味的解释 Duration for the collection w&#x2F;o final cleanup.</li>\n</ol>\n</li>\n<li><ol start=\"9\">\n<li>10885349K-&gt;10880154K - 收集前后整个堆的使用情况</li>\n</ol>\n</li>\n<li><ol start=\"10\">\n<li>(12514816K) - 整个堆的容量</li>\n</ol>\n</li>\n<li><ol start=\"11\">\n<li>0.1021309 secs - ParNew收集器标记和复制年轻代活着的对象所花费的时间(包括和老年代通讯的开销，对象晋升到老年代时间，垃圾收集周期结束一些最后的清除对象的花销)</li>\n</ol>\n</li>\n<li>12 [Times: user&#x3D;0.78 sys&#x3D;0.01, real&#x3D;0.11 secs] - GC事件在不同维度的耗时，具体用英文解释起来更加合理：</li>\n</ul>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">user – Total CPU time that was consumed by Garbage Collector threads during this collection</span><br><span class=\"line\">sys – Time spent in OS calls or waiting for system event</span><br><span class=\"line\">real – Clock time for which your application was stopped. With Parallel GC this number should be close to (user time + system time) divided by the number of threads used by the Garbage Collector. In this particular case 8 threadswere used. Note that due to some activities not being parallelizable, it always exceeds the ratio by a certain amount.</span><br></pre></td></tr></table></figure>\n\n<p><strong>我们来分析下对象晋升问题(原文中的计算方法有问题)</strong></p>\n<p>开始的时候，整个堆大小是<strong>10885349K</strong>，年轻代大小是<strong>613404K</strong>，这说明老年代大小是<strong>10885349-613404&#x3D;10271945K</strong></p>\n<p>收集完成之后：整个堆大小是<strong>10880154K</strong>, 年轻代大小是<strong>68068K</strong>，这说明老年代大小是<strong>10880154-68068&#x3D;10812086K</strong></p>\n<p>老年代的大小增加了：<strong>10812086-10271945&#x3D;608209K</strong>, 也就是说 年轻代到老年代promot了<strong>608209K</strong>的数据;</p>\n<p><strong>图像分析</strong></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-750d0ea036ff12f2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<h2 id=\"Full-x2F-Major-GC\"><a href=\"#Full-x2F-Major-GC\" class=\"headerlink\" title=\"Full&#x2F;Major GC\"></a>Full&#x2F;Major GC</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">2016-08-23T11:23:07.321-0200: 64.425: [GC (CMS Initial Mark)1 [1 CMS-initial-mark: 10812086K(11901376K)] 10887844K(12514816K), 0.0001997 secs] [Times: user=0.00 sys=0.00, real=0.00 secs]</span><br><span class=\"line\">2016-08-23T11:23:07.321-0200: 64.425: [CMS-concurrent-mark-start]</span><br><span class=\"line\">2016-08-23T11:23:07.357-0200: 64.460: [: 0.035/0.035 secs] [Times: user=0.07 sys=0.00, real=0.03 secs]</span><br><span class=\"line\">2016-08-23T11:23:07.357-0200: 64.460: [CMS-concurrent-preclean-start]</span><br><span class=\"line\">2016-08-23T11:23:07.373-0200: 64.476: [CMS-concurrent-preclean3: 0.016/0.016 secs] [Times: user=0.02 sys=0.00, real=0.02 secs]</span><br><span class=\"line\">2016-08-23T11:23:07.373-0200: 64.476: [CMS-concurrent-abortable-preclean-start]</span><br><span class=\"line\">2016-08-23T11:23:08.446-0200: 65.550: [CMS-concurrent-abortable-preclean4: 0.167/1.074 secs] [Times: user=0.20 sys=0.00, real=1.07 secs]</span><br><span class=\"line\">2016-08-23T11:23:08.447-0200: 65.550: [GC (CMS Final Remark5)</span><br><span class=\"line\">[YG occupancy: 387920 K (613440 K)]65.550: [Rescan (parallel) , 0.0085125 secs]65.559: </span><br><span class=\"line\">[weak refs processing, 0.0000243 secs]65.559: [class unloading, 0.0013120 secs]65.560: </span><br><span class=\"line\">[scrub symbol table, 0.0008345 secs]65.561: [scrub string table, 0.0001759 secs][1 CMS-remark: 10812086K(11901376K)] 11200006K(12514816K), 0.0110730 secs] </span><br><span class=\"line\">[Times: user=0.06 sys=0.00, real=0.01 secs]</span><br><span class=\"line\">2016-08-23T11:23:08.458-0200: 65.561: [CMS-concurrent-sweep-start]</span><br><span class=\"line\">2016-08-23T11:23:08.485-0200: 65.588: [CMS-concurrent-sweep6: 0.027/0.027 secs] [Times: user=0.03 sys=0.00, real=0.03 secs]</span><br><span class=\"line\">2016-08-23T11:23:08.485-0200: 65.589: [CMS-concurrent-reset-start]</span><br><span class=\"line\">2016-08-23T11:23:08.497-0200: 65.601: [CMS-concurrent-reset7: 0.012/0.012 secs] [Times: user=0.01 sys=0.00, real=0.01 secs]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Initial-Mark\"><a href=\"#Initial-Mark\" class=\"headerlink\" title=\"Initial Mark\"></a>Initial Mark</h3><p>这是CMS中两次STW事件中的一次，它有两个目标：1是标记老年代中所有的GC Roots；2是标记被年轻代中活着的对象引用的对象</p>\n<p><strong>标记结果如下:</strong></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-0c8ca783c2382439.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<p><strong>分析:</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-74a5697e358355f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<blockquote>\n<ul>\n<li><ol>\n<li>2016-08-23T11:23:07.321-0200: 64.42 - GC事件开始，包括时钟时间和相对JVM启动的相对时间，下面所有的阶段改时间的含义相同</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>CMS Inital Mark - 收集阶段，开始收集所有的GC Roots和直接引用到的对象</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>10812086K - 当前老年代的使用情况</li>\n</ol>\n</li>\n<li><ol start=\"4\">\n<li>(11901376K) - 老年代可用容量</li>\n</ol>\n</li>\n<li><ol start=\"5\">\n<li>10887844K - 当前整个堆的使用情况</li>\n</ol>\n</li>\n<li><ol start=\"6\">\n<li>(12514816K) - 整个堆的容量</li>\n</ol>\n</li>\n<li><ol start=\"7\">\n<li>[0.0001997 secs] [Times: user&#x3D;0.00 sys&#x3D;0.00, real&#x3D;0.00 secss] - 时间计量</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"Concurrent-Mark\"><a href=\"#Concurrent-Mark\" class=\"headerlink\" title=\"Concurrent Mark\"></a>Concurrent Mark</h3><p>这个阶段会遍历整个老年代并且标记所有存活的对象，从&quot;初始化标记&quot;阶段找到的GC Roots开始，并发标记的特点是和应用程序同时运行。并不是老年代的所有存活对象都会被标记，因为标记的同时应用程序会改变一些对象的引用等。</p>\n<p><strong>标记结果如下:</strong></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-0d6f2f4de5668c57.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<p>在上边的图中，一个引用的箭头已经远离了当前对象(current obj)</p>\n<p><strong>分析:</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-865e91e4d17efc81.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<blockquote>\n<ul>\n<li><ol>\n<li>CMS-concurrent-mark - 并发收集阶段，这个阶段会遍历整个老年代并且标记活着的对象；</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>035&#x2F;0.035 secs - 展示该阶段持续时间和时钟时间</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>[Times: user&#x3D;0.07 sys&#x3D;0.00, real&#x3D;0.03 secs] - 同上</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"Concurrent-Preclean\"><a href=\"#Concurrent-Preclean\" class=\"headerlink\" title=\"Concurrent Preclean\"></a>Concurrent Preclean</h3><p>这个阶段又是一个并发阶段，和应用程序并行运行，不会中断他们，前一个阶段在并行运行的时候，一些对象的引用已经发生了变化，当这些引用发生变化的时候，JVM会标记堆的这个区域为DirtyCard(包含被标记但是改变了的对象，被认为&quot;dirty&quot;), 这就是Card Marking。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-b5b0973bb64e6631.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<p>在pre-clean阶段，那些能够从dirty card对象到达的对象也会被标记，这个标记做完之后，dirty card标记就会被清除了，如下：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-47d9f708e5e16afc.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<p>另外，一些必要的清扫工作也会做，还会做一些final remark阶段需要的准备工作；</p>\n<p><strong>分析</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-f10ff331c0cf5497.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<blockquote>\n<ul>\n<li><ol>\n<li>CMS-concurrent-preclean - 这个阶段负责前一个阶段标记了又发生改变的对象标记</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>0.016&#x2F;0.016 secs – 展示该阶段持续的时间和时钟时间；</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>[Times: user&#x3D;0.02 sys&#x3D;0.00, real&#x3D;0.02 secs] - 同上</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"Concurrent-Abortable-Preclean\"><a href=\"#Concurrent-Abortable-Preclean\" class=\"headerlink\" title=\"Concurrent Abortable Preclean\"></a>Concurrent Abortable Preclean</h3><p>又一个并发阶段不会停止应用程序线程。这个阶段尝试着去承担STW的Final Remark阶段足够多的工作，这个阶段持续的时间依赖好多的因素，由于这个阶段是重复做相同的事情直到发送abort的条件(比如：重复的次数，多少量的工作，持续的时间等等)之一才会停止。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-89c894db956a4c6c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<blockquote>\n<ul>\n<li><ol>\n<li>CMS-concurrent-abortable-preclean - 可终止的并发清理</li>\n</ol>\n</li>\n<li>2.0.167&#x2F;1.074 secs – 展示该阶段持续的时间和时钟时间（It is interesting to note that the user time reported is a lot smaller than clock time. Usually we have seen that real time is less than user time, meaning that some work was done in parallel and so elapsed clock time is less than used CPU time. Here we have a little amount of work – for 0.167 seconds of CPU time, and garbage collector threads were doing a lot of waiting. Essentially, they were trying to stave off for as long as possible before having to do an STW pause. By default, this phase may last for up to 5 seconds）；</li>\n<li><ol start=\"3\">\n<li>[Times: user&#x3D;0.20 sys&#x3D;0.00, real&#x3D;1.07 secs] - 同上</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n<p>这个阶段很大程度的影响着即将来临的Final Remark的停顿，有相当一部分重要的configuration options和失败的模式</p>\n<h3 id=\"Final-Remark\"><a href=\"#Final-Remark\" class=\"headerlink\" title=\"Final Remark\"></a>Final Remark</h3><p>这个阶段是CMS中第二个并且是最后一个STW的阶段，该阶段的任务是完成标记整个老年代的所有存活对象，由于之前的预处理是并发的，它可能跟不上应用程序改变的速度，这个时候，STW是非常重要的来完成这个严酷考验阶段。</p>\n<p>通常CMS尽量运行Final Remark阶段在老年代是足够的干净的时候，目的是清除紧接着的连续的几个STW阶段。</p>\n<p><strong>分析</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-6f0db229f27a2a7e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<blockquote>\n<ul>\n<li><ol>\n<li>2016-08-23T11:23:08.447-0200: 65.550 – 同上；</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>CMS Final Remark - 收集阶段，这个阶段会标记老年代全部的存活对象，包括哪些在并发标记阶段更改的或者新创建的引用对象</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>YG occupancy: 387920 K (613440 K) – 年轻代当前占用情况和容量；</li>\n</ol>\n</li>\n<li><ol start=\"4\">\n<li>[Rescan (parallel) , 0.0085125 secs] - 这个阶段在在引用停止的阶段完成对象存活的标记工作</li>\n</ol>\n</li>\n<li><ol start=\"5\">\n<li>[weak refs processing, 0.0000243 secs] 65.559 - 第一个子阶段，随着这个阶段的进行处理弱引用</li>\n</ol>\n</li>\n<li><ol start=\"6\">\n<li>[class unloading, 0.0013120 secs] 65.560 - 第二个子阶段(that is unloading the unused classes，with the duration and timestamp of the phase);</li>\n</ol>\n</li>\n<li><ol start=\"7\">\n<li>scrub string table, 0.0001759 secs - 最后一个子阶段(that is cleaning up symbol and string tables which hold class-level metedata and internalized string respectively)</li>\n</ol>\n</li>\n<li><ol start=\"8\">\n<li>10812086K(11901376K) - 在这个阶段之后老年代占有的内存大小和老年代的容量</li>\n</ol>\n</li>\n<li><ol start=\"9\">\n<li>11200006K(12514816K) - 在这个阶段之后整个堆的内存大小和整个堆的容量</li>\n</ol>\n</li>\n<li><ol start=\"10\">\n<li>0.0110730 secs - 这个阶段的持续时间</li>\n</ol>\n</li>\n<li><ol start=\"11\">\n<li>[Times: user&#x3D;0.06 sys&#x3D;0.00, real&#x3D;0.01 secs] - 同上</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n<p>通过以上5个阶段的标记，老年代所有存活的对象已经被标记并且现在要通过Garbage Collector采用清扫的方式回收那些不能用的对象了。</p>\n<h3 id=\"Concurrent-Sweep\"><a href=\"#Concurrent-Sweep\" class=\"headerlink\" title=\"Concurrent Sweep\"></a>Concurrent Sweep</h3><p>和应用线程同时进行，不需要STW。这个阶段的目的就是移除那些不用的对象，回收他们占用的空间并且为将来使用。</p>\n<p><strong>如图</strong></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-fbf890fbc563bd65.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<p><strong>分析</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-a9443958a8a4fc00.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<blockquote>\n<ul>\n<li><ol>\n<li>CMS-concurrent-sweep - 这个阶段主要是清除那些没有被标记的对象并且回收空间</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>0.027&#x2F;0.027 secs – 展示该阶段持续的时间和时钟时间；</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>[Times: user&#x3D;0.03 sys&#x3D;0.00, real&#x3D;0.03 secs] - 同上</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"Concurrent-Reset\"><a href=\"#Concurrent-Reset\" class=\"headerlink\" title=\"Concurrent Reset\"></a>Concurrent Reset</h3><p>这个阶段并发执行，重新设置CMS算法内部的数据结构，准备下一个CMS生命周期的使用</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-a1e58513c54003b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<blockquote>\n<ul>\n<li><ol>\n<li>CMS-concurrent-reset - 这个阶段重新设置CMS算法内部的数据结构，为下一个收集阶段做准备。</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>0.012&#x2F;0.012 secs - 展示该阶段持续的时间和时钟时间</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>[Times: user&#x3D;0.01 sys&#x3D;0.00, real&#x3D;0.01 secs] - 同上</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n","categories":["JVM"],"tags":["JVM"]},{"title":"JVM系列之java类加载机制","url":"/jvm/2018-04-01-JVM%E7%B3%BB%E5%88%97%E4%B9%8Bjava%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/","content":"<h1 id=\"什么是类的加载\"><a href=\"#什么是类的加载\" class=\"headerlink\" title=\"什么是类的加载\"></a>什么是类的加载</h1><p>类的加载指的是将类的.class文件中的二进制数据读入到内存中，将其放到运行时数据区的方法区内，然后在堆区创建一个java.lang.Class对象，用来封装类在方法区内的数据结构。类的加载的最终产品是位于堆区中的Class对象，Class对象封装了类在方法区内的数据结构，并且向java程序员提供了访问方法区内的数据结构的接口。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jvm-1.png\" loading=\"lazy\"></p>\n<p>类加载器并不需要等到某个类被&quot;首次主动使用&quot;时在加载它，JVM规范允许类加载在预料某个类将要被使用时就预先加载它，如果在预先加载的过程中遇到了.class文件缺失或者存在错误，类加载器必须在程序首次主动使用该类时才会报告错误(LinkageError错误)，如果这个类一直没有被程序主动使用，那么类加载器就不会报告错误。</p>\n<p><strong>加载.class文件的方式</strong></p>\n<ul>\n<li>从本地系统中直接加载</li>\n<li>通过网络下载.class文件</li>\n<li>从zip,jar等归档文件中加载.class文件</li>\n<li>从专有数据库中提取.class文件</li>\n<li>将java源文件动态编译为.class文件</li>\n</ul>\n<h1 id=\"类的生命周期\"><a href=\"#类的生命周期\" class=\"headerlink\" title=\"类的生命周期\"></a>类的生命周期</h1><p><img src=\"http://www.itmind.net/assets/images/2017/jvm/class.png\" loading=\"lazy\"></p>\n<p>其中类加载的过程包括了加载，验证，准备，解析，初始化五个阶段，在这五个阶段中，加载，验证，准备和初始化这四个阶段发生的顺序是确定的，而解析阶段则不一定，它在某些情况下可以在初始化阶段之后开始，这是为了支持java语言的运行时绑定(也称之为动态绑定)，另外注意这里的几个阶段是按顺序开始，而不是按照顺序进行或者完成，因为这些阶段通常都是相互交叉地混合进行的，通常在一个阶段执行过程中调用或者激活另一个阶段。</p>\n<blockquote>\n<p>这里简要的说下Java中的绑定: 绑定指的是把一个方法的调用与方法所在的类(方法主体)关联起来，对于java来说，绑定分为静态绑定和动态绑定：</p>\n<ul>\n<li>静态绑定：即前期绑定。在程序执行前方法已经被绑定，此时有编译器或者其它连接程序实现，针对java，简单的可以理解为程序编译期的绑定，在java当中方法只有final，static，private和构造方法是前期绑定的。</li>\n<li>动态绑定：即晚期绑定，也叫做运行时绑定，在运行时根据具体对象的类型进行绑定，在java中，几乎所有的方法都是后期绑定的。</li>\n</ul>\n</blockquote>\n<h2 id=\"加载\"><a href=\"#加载\" class=\"headerlink\" title=\"加载\"></a>加载</h2><p>查询并加装类的二进制数据加载时类加载过程的第一个阶段，在加载阶段，虚拟机需要完成以下三件事情：</p>\n<ul>\n<li>通过一个类的全限定名来获取其定义的二进制字节流。</li>\n<li>将这个字节流所代表的静态存储结构转换为方法区的运行时数据结构。</li>\n<li>在java堆中生成一个代表这个类的java.lang.Class对象，作为对方法区这是数据的访问入口。</li>\n</ul>\n<p>相对于类加载的其他阶段而言，加载阶段(准备的说，是加载阶段获取类的二进制字节流的动作)是可控性最强的阶段，因为开发人员既可以使用系统提供的类加载器来完成加载，也可以自定义自己的类加载器来完成加载。</p>\n<p>加载阶段完成后，虚拟机外部的二进制字节流就按照虚拟机所需的格式存储在方法区之中，而且在java堆中也创建一个java.lang.Class类的对象，这样便可以通过这个对象访问方法区中的这些数据。</p>\n<h2 id=\"连接\"><a href=\"#连接\" class=\"headerlink\" title=\"连接\"></a>连接</h2><p><strong>验证：确保被加载的类的正确性</strong></p>\n<p>验证是连接阶段的第一步，这一阶段的目的是为了确保Class文件的字节流中包含的信息符合当前虚拟机的要求，并且不会危害虚拟机自身的安全。验证阶段大致会完成4个阶段的验证动作：</p>\n<ul>\n<li>文件格式验证：验证字节流是否符合Class文件格式的规范; 例如：是否以0xCAFEBABE开头，主次版本号是否在当前虚拟机的处理范围之内，常量池中的常量是否有不被支持的类型。</li>\n<li>元数据验证：对字节码描述的信息进行语义分析(注意：对比javac编译阶段的语义分析)，以保证其描述的信息符合java语言规范的要求；例如：这个类是否有父类，除了java.lang.Object之外。</li>\n<li>字节码验证：通过数据流和控制流分析，确定程序语义是合法的，符合逻辑的。</li>\n<li>符号引用验证：确保解析动作能够正确执行。</li>\n</ul>\n<p>验证阶段是非常重要的，但不是必须的，它对程序运行期没有影响，如果所引用的类型经过反复验证，可以考虑采用 -Xverifynone参数来关闭大部分的类验证措施，以缩短虚拟机类加载的时间。</p>\n<p><strong>准备：为类的静态变量分配内存，并将其初始化为默认值</strong></p>\n<p>准备阶段是正式为类变量分配内存并设置类变量初始值的阶段，这些内存都将在方法区中分配，对于该阶段有以下几点需要注意：</p>\n<ul>\n<li>这时候进行内存分配的仅包括类变量(static)，而不包括实例变量，实例变量会在对象实例化时随着对象一块分配在java堆中。</li>\n<li>这里所设置的初始值通常情况下是数据类型的默认的零值(如0， 0L，null，false等), 而不是被在java代码中被显式地赋予的值。</li>\n</ul>\n<p>假设一个类变量的定义为: public static int value &#x3D; 3;</p>\n<p>那么变量value在准备阶段过后的初始化默认值就是0，而不是3，因为这个时候尚未开始执行任何java方法，而把value赋值为3的public static指令是在程序编译后，存放在类构造器&lt;clinit&gt;()方法之中的，所以把value赋值为3的动作将在初始化阶段才会执行。</p>\n<blockquote>\n<p>这里还需要注意如下几点：</p>\n<ul>\n<li>对基本数据类型来说，对应类变量和全局变量，如果不显式地对其赋值而直接使用，则系统会为其赋予默认的零值，而对于局部变量来说，在使用前必须显式地为其赋值，否则编译时不通过。</li>\n<li>对于同时被static和final修饰的常量，必须在声明的时候就为其显式的赋值，否则编译时不通过；而只被final修饰的常量则既可以在声明时显式地为其赋值，也可以在类初始化时显式地为其赋值，总之，在使用前必须为其显式地赋值，系统不会为其赋予默认零值。</li>\n<li>对于引用数据类型reference来说，如数组引用，对象引用等，如果没有对其进行显式地赋值而直接使用，系统都会为其赋予默认的零值，即null。</li>\n<li>如果在数组初始化时没有对数组中的各元素赋值，那么其中的元素将根据对应的数据类型而被赋予默认的零值。</li>\n</ul>\n</blockquote>\n<ul>\n<li>如果类字段的字段属性表中存在ConstantValue属性，即同时被final和static修饰，那么在准备阶段变量value就会被初始化为ConstantValue属性所指定的值。在初始化阶段就不会再次被初始化了，即不会在&lt;clinit&gt;()中在次赋值，而如果是final static修饰的引用类型变量就会生成&lt;clinit&gt;()并在初始化阶段执行。</li>\n</ul>\n<p>假设上面的类变量value被定义为： public static final int value &#x3D; 3;</p>\n<p>编译时javac就会将value生成ConstantValue属性，在准备阶段虚拟机j就会根据ConstantValue的设置将value赋值为3。我们可以理解为static final常量在编译期就将其结果放入了调用它的常量池中。</p>\n<p><strong>解析: 把类中的符号引用转换为直接引用</strong></p>\n<p>解析阶段是虚拟机将常量池内的符号引用替换为直接引用的过程，解析动作主要针对类或者接口，字段，类方法，接口方法，方法类型，方法句柄和调用点限定符7类符合引用进行。符合引用就是一组符合来描述目标，可以是任何字面量。</p>\n<p>直接引用就是直接指向目标的指针，相对偏移量或者一个间接定位到目标的句柄。</p>\n<p><strong>初始化</strong></p>\n<p>类初始化是类加载过程的最后一步，到了此阶段，才真正开始执行类中定义的java程序代码，在准备阶段，类变量已经被赋过一次系统要求的默认值，而在初始化阶段，则是根据程序指定的主观计划去初始化变量和其它资源，或者可以从另外一个角度来表达：初始化阶段是执行类构造器&lt;clinit&gt;()方法的过程。</p>\n<p>初始化，为类的静态变量赋予正确的初始值，JVM负责对类进行初始化，主要对类变量进行初始化，在Java中对类变量进行初始值设定有两种方式：</p>\n<ol>\n<li>声明类变量的初始指定值</li>\n<li>使用静态代码块为类变量指定初始值</li>\n</ol>\n<p>JVM初始化步骤:</p>\n<ul>\n<li>假如这个类还没有被加载或者连接，则程序先加载并连接该类</li>\n<li>假如该类的直接父类还没有被初始化，则先初始化其直接父类</li>\n<li>假如类中有初始化语句，则系统依次执行这些初始化语句</li>\n</ul>\n<p>java虚拟机规范为类的初始化时机做了严格定义：&quot;initialize on first active user&quot;, 在首次主动使用时初始化；</p>\n<p>类初始化时机：只有当对类的主动使用的时候才会导致类的初始化，类的主动使用包括以下六种：</p>\n<ul>\n<li>创建类的实例，也就是new的方式</li>\n<li>访问某个类或者接口的静态变量，或者对该静态变量赋值</li>\n<li>调用类的静态方法</li>\n<li>反射 (如Class.forName(&quot;com.hualala.shop.Test&quot;))，但它有可能导致ClassNotFoundException</li>\n<li>初始化某个类的子类，则其父类也会被初始化</li>\n<li>Java虚拟机启动时被标明为启动的类(Java Test), 直接使用java命令来运行某个主类</li>\n<li>静态域被访问，而且不是常量，即不是被static final修饰的字段。</li>\n<li>在顶层类中执行assert语句。</li>\n</ul>\n<p>初始化阶段主要执行类构造器&lt;clinit&gt;()方法。&lt;clinit&gt;()方法是由编译器自动收集类中所有类变量的赋值动作和静态代码块中的语句合并产生的，编译器收集的顺序是由语句在源文件中出现的顺序所决定的，静态语句块中只能访问到定义在静态语句块之前的变量，定义在它之后的变量，则前面的静态代码块中可以赋值，但是不能访问，另外需要注意以下几个比较重要的地方：</p>\n<ol>\n<li>&lt;clinit&gt;()方法与实例构造器&lt;init&gt;()方法不同，它不需要显式地调用父类构造器，虚拟机会保证子类的&lt;clinit&gt;()方法执行前，父类的&lt;clinit&gt;()方法已经执行完毕，因此，在虚拟机中第一个被执行的&lt;clinit&gt;()方法的类肯定是java.lang.Object.</li>\n<li>&lt;clinit&gt;()是在类初始化时候执行的，所以当一个类实例化是肯定要保证这个类被正确的加载(包括类加载，连接，初始化), 所以&lt;clinit&gt;()肯定优先于实例构造器&lt;init&gt;();</li>\n<li>&lt;clinit&gt;()方法对于类或者接口来说不是必须的，如果一个类中没有静态代码块，也就没有对类变量的赋值操作，那么编译器可以不为这个类生成&lt;clinit&gt;()方法。</li>\n<li>接口中不能使用静态代码块，但仍然有类变量(final static修饰，且非ConstValue属性常量)初始化的复制操作，因此接口和类一样会生成&lt;clinit&gt;()方法，但是接口类的不同的是：执行接口的&lt;clinit&gt;()方法不需要先执行父接口的&lt;clinit&gt;()方法，只有当父接口中定义的变量被使用时，父接口才会被初始化，另外，接口的实现类在初始化时也一样不会执行接口的&lt;clinit&gt;()方法。只有当接口的静态变量被使用时才会被初始化，所以可以基于这种机制来实现一种单例模式的写法：</li>\n</ol>\n<ul>\n<li>虚拟机会保证一个类的&lt;clinit&gt;()方法在多线程环境中被正确地加锁和同步，如果多个线程同时初始化一个类，那么只会有一个线程去执行这个类的&lt;clinit&gt;()方法，其他线程都需要阻塞等待，直到活跃线程执行&lt;clinit&gt;()方法完毕后，如果在一个类的&lt;clinit&gt;()方法中有很耗时的操作，那么就可能造成多个线程阻塞，在实际应用中这种阻塞是很隐蔽的，以下的单例模式的写法就是根据类加载机制的线程安全性来实现单例模式的初始化。</li>\n</ul>\n<p><strong>可以使用javap -v 字节码文件验证</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Singleton</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Singleton</span> <span class=\"variable\">instance</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Singleton</span>();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title function_\">Singleton</span><span class=\"params\">()</span> &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Singleton <span class=\"title function_\">getInstance</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> instance;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>类初始化总结：</p>\n<ul>\n<li>类初始化的过程就是在类的静态变量已经被准备阶段赋予默认的零值之后重新赋值或者初始化过程，即&lt;clinit&gt;()方法的执行过程。</li>\n<li>&lt;clinit&gt;()是有编译器编译代码时安装代码编写顺序收集类的静态变量赋值和静态代码块的集合</li>\n<li>&lt;clinit&gt;()在类或者接口首次访问时初始(包括类Class.forName，new实例，反射，newInstance()，静态变量的访问和赋值，静态方法被访问)时执行。</li>\n<li>子类的&lt;clinit&gt;()晚于父类的&lt;clinit&gt;(), 即执行子类的&lt;clinit&gt;()会触发父类的&lt;clinit&gt;()执行。</li>\n<li>接口和类一样也可以有静态变量(接口中字段不修饰默认就是static), 但是不能有静态代码块，所以也会编译器初始化接口时也会生成&lt;clinit&gt;()方法，与类不同的是接口的&lt;clinit&gt;()执行不会触发父接口的&lt;clinit&gt;()执行，接口的实现类也不会触发接口的&lt;clinit&gt;()。</li>\n<li>&lt;clinit&gt;()执行是多线程安全的。</li>\n</ul>\n<p><strong>结束生命周期</strong></p>\n<p>在如下几种情况下，Java虚拟机将结束生命周期</p>\n<ul>\n<li>执行了System.exit()方法</li>\n<li>程序正常执行结束</li>\n<li>程序在执行过程中遇到了异常或者错误而异常终止</li>\n<li>由于操作系统出现错误而导致Java虚拟机进程终止</li>\n</ul>\n<h1 id=\"类缓存\"><a href=\"#类缓存\" class=\"headerlink\" title=\"类缓存\"></a>类缓存</h1><p>我们知道标准的javase类加载器可以按照要求来查找类，一旦某个类被加载到类加载器中，它将维持加载(也就是缓存)一段时间。在有方法被调用的时候，一般都是直接在缓存中直接获取该类并创建它的一个副本引用。</p>\n<p>需要注意的是，虽然有类缓存的存在可以是性能提高，但JVM中的垃圾回收机还是会回收这些Class对象的。</p>\n<p><strong>一般来说，类都只被加载了一次!</strong></p>\n<p>一个简单的测试demo</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">public class Demo1 &#123;</span><br><span class=\"line\">    public static void main(String[] args) throws ClassNotFoundException &#123;</span><br><span class=\"line\">        // 当A对象被创建的时候，先会执行静态代码块，在执行A的构造方法</span><br><span class=\"line\">        A a = new A();</span><br><span class=\"line\">        System.out.println(a.width); // 输出顺序为 创建初始化类A--&gt; 创建A对象 --&gt; width = 300</span><br><span class=\"line\">        </span><br><span class=\"line\">        // 只会打印 创建A对象，不会在加载第二次</span><br><span class=\"line\">        A a2 = new A();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    private class A &#123;</span><br><span class=\"line\">        public static int width = 100;</span><br><span class=\"line\">        public static final int MAX = 200;</span><br><span class=\"line\">        </span><br><span class=\"line\">        static &#123;</span><br><span class=\"line\">            System.out.println(&quot;静态初始化A类&quot;);</span><br><span class=\"line\">            width = 300;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        public A()&#123;</span><br><span class=\"line\">            System.out.println(&quot;创建A对象&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"对象在内存中存储\"><a href=\"#对象在内存中存储\" class=\"headerlink\" title=\"对象在内存中存储\"></a>对象在内存中存储</h1><p>在Hotspot虚拟机中，对象在内存中的存储也是很有规律的，存储的布局可以分为三块区域：对象头区域，实例数据区域和对其填充区域。</p>\n<p>对象头的一部分用于存储对象自身运行时的数据，另外部分存储的是类型指针，即对象指向类元数据指针，虚拟机通过这个指针来确定这个对象属于那个类。</p>\n<p>实例数据区是对象存储的真正有效的信息，即在程序中定义的各种类型的字段数据，这部分数据有一部分是从父类继承过来的，也有在子类中定义的。</p>\n<p>对其填充并不一定是必然存在的，因为Hotspot虚拟机内存管理的要求是给对象分配内存大小必须是8字节的整数倍，所以不够的部分需要填充。又因为对象头部信息正好是8字节的整数倍，所以对其填充补全的是实例数据区域，对其填充的数据并没有特殊的含义，仅仅是起到填充占位符的作用。</p>\n<h2 id=\"计算对象在内存中占用的空间大小\"><a href=\"#计算对象在内存中占用的空间大小\" class=\"headerlink\" title=\"计算对象在内存中占用的空间大小\"></a>计算对象在内存中占用的空间大小</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.ypb.codetest.sizeofobject;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.instrument.Instrumentation;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Array;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Modifier;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayDeque;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Deque;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@ClassName</span>: SizeOfObject</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span>: 测试一个对象占用多少字节(对象占用字节大小工具类)</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> yangpengbing</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2019-04-28-10:50</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> V1.0.0</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SizeOfObject</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">static</span> Instrumentation inst;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">premain</span><span class=\"params\">(String args, Instrumentation instP)</span> &#123;</span><br><span class=\"line\">\t\tinst = instP;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 直接计算当前对象占用空间的大小，包括当前类及超类的基本类型实例字段的大小</span></span><br><span class=\"line\"><span class=\"comment\">\t * 引用类型实例字段引用大小，实例基本类型数组占用空间大小，实例引用类型数组引用本身占用空间大小</span></span><br><span class=\"line\"><span class=\"comment\">\t * 但是不包括超类继承下来的和当前类声明的实例引用字段的对象本身的大小，实例引用数组的对象本身的大小</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> obj</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">long</span> <span class=\"title function_\">sizeOf</span><span class=\"params\">(Object obj)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> inst.getObjectSize(obj);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">long</span> <span class=\"title function_\">fullSizeOf</span><span class=\"params\">(Object obj)</span> <span class=\"keyword\">throws</span> IllegalAccessException &#123;</span><br><span class=\"line\">\t\tSet&lt;Object&gt; visited = <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;();</span><br><span class=\"line\">\t\tDeque&lt;Object&gt; deque = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayDeque</span>&lt;&gt;();</span><br><span class=\"line\">\t\tdeque.add(obj);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">long</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (deque.size() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">Object</span> <span class=\"variable\">o</span> <span class=\"operator\">=</span> deque.poll();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// sizeOf的时候已经计算基本类型和引用的长度，包括数组</span></span><br><span class=\"line\">\t\t\tsize += skipObject(visited, o) ? <span class=\"number\">0L</span> : sizeOf(o);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tClass&lt;?&gt; clazz = o.getClass();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (clazz.isArray()) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// [I, [F 基本类型名字长度是2</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (clazz.getName().length() &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, len = Array.getLength(o); i &lt; len; i++) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"type\">Object</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> Array.get(o, i);</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (Objects.nonNull(temp)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\">// 非基本类型需要深度遍历其对象</span></span><br><span class=\"line\">\t\t\t\t\t\t\tdeque.add(temp);</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (Objects.nonNull(clazz)) &#123;</span><br><span class=\"line\">\t\t\t\t\tField[] fields = clazz.getDeclaredFields();</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">for</span> (Field field : fields) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// 静态不计，基本类型不重复计算</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (Modifier.isStatic(field.getModifiers()) || field.getType().isPrimitive()) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\tfield.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"type\">Object</span> <span class=\"variable\">fieldValue</span> <span class=\"operator\">=</span> field.get(o);</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (Objects.isNull(fieldValue)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\tdeque.add(fieldValue);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tclazz = clazz.getSuperclass();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> size;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * String.intern的对象不计，计算过的不计，也避免死循环</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> visited</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> obj</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">skipObject</span><span class=\"params\">(Set&lt;Object&gt; visited, Object obj)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> String &amp;&amp; obj == ((String) obj).intern()) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> visited.contains(obj);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.ypb.codetest.sizeofobject;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SizeOfObjectTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:-UseCompressedOops(关闭指针压缩): sizeOf(new A()) = 24 = 16(header) + 4(instance data) + 4(padding)</span></span><br><span class=\"line\"><span class=\"comment\">\t *      推导过程：new A(), 普通对象引用，没有开启压缩，对象头16个字节，基本数据类型int 4个字节，16+4=20, 不能被8整除，需要padding填充对其，</span></span><br><span class=\"line\"><span class=\"comment\">\t *          而padding的字节数是[0, 8) 3*8 = 24 - 20 = 4，所以padding填充对其的字节数是4</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:+UseCompressedOops(开启指针压缩): sizeOf(new A()) = 16 = 12(header) + 4(instance data) + 0(padding)</span></span><br><span class=\"line\"><span class=\"comment\">\t *      推导过程：new A()，普通对象引用， 开启压缩，对象头是12个字节，基本数据类型int 4个字段， 12+4 = 16, 能被8整除，故padding为0</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> a;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:-UseCompressedOops: sizeOf(new B()) = 24 = 16(header) + (4+4)(instance data) + 0(padding)</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:+UseCompressedOops: sizeOf(new B()) = 24 = 12(header) + (4+4)(instance data) + 4(padding)</span></span><br><span class=\"line\"><span class=\"comment\">\t * -------------------------------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:-UseCompressedOops: sizeOf(new B[3]) = 24(header) + 3*8(instance data) = 24+24 + 0(padding) = 48</span></span><br><span class=\"line\"><span class=\"comment\">\t *      推导过程：new B[3] 未开启压缩：数组对象头(24)，引用类型, 数组长度3(3*8) = 24+24 + 0(padding)</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:+UseCompressedOops: sizeOf(new B[3]) = 16(header) + 3*4(instance data) = 16+12 + 4(padding) = 32</span></span><br><span class=\"line\"><span class=\"comment\">\t *      推导过程：new B[3] 开启压缩，数组对象头(16)，引用类型，数组长度为3(4*3) = 16+12 + 4(padding)</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">B</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> a;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> b;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:-UseCompressedOops: sizeOf(new B2()) = 16(header) + (4(int) + 8(Integer))(instance data) = 28 + 4(padding) = 32(4 * 8)</span></span><br><span class=\"line\"><span class=\"comment\">\t *      推导过程：new B2() 未开启指针压缩: 普通对象头(16), 基本数据类型int(4), reference引用类型，未开启压缩(8) = 16 + 4 + 8 = 28 + 4(padding) = 4*8</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:+UseCompressedOops: sizeOf(new B2()) = 12(header) + (4 + 4)(instance data) = 20 + 4(padding) = 24(8 * 3)</span></span><br><span class=\"line\"><span class=\"comment\">\t *      推导过程：new B2(), 开启指针压缩：普通对象头(12), 基本数据类型int(4), reference引用类型，开启压缩(4) = 12 + 4 + 4 = 20 + 4(padding) = 3*8;</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">B2</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> b2a;</span><br><span class=\"line\">\t\tInteger b2b;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:-UseCompressedOops: sizeOf(new C()) = 16(header) + (4+8+4)(instance data) = 40 ???</span></span><br><span class=\"line\"><span class=\"comment\">\t *  16(header) + (4(a)+4(ba)+8(as))(instance data) = 16+ 16 = 32 + 0(padding)</span></span><br><span class=\"line\"><span class=\"comment\">\t * // TODO 这个计算和RamUsageEstimator.shallowSizeOf(new C())在相同的情况下计算的结果不一致。 sizeOf计算的是40，另一个计算的是32</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:+UseCompressedOops: sizeOf(new C()) = 12(header) + (4+4+4)(instance date) = 24 + 0(padding) = 24</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">C</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> ba;</span><br><span class=\"line\">\t\tB[] as = <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"title function_\">C</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; as.length; i++) &#123;</span><br><span class=\"line\">\t\t\t\tas[i] = <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:-UseCompressedOops: sizeOf(new C1()) = 16(header) + (4+8)(instance data) = 28 + 4(padding) = 32</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:+UseCompressedOops: sizeOf(new C1()) = 12(header) + (4+4)(instance data) = 20 + 4(padding) = 24</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">C1</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> ba;</span><br><span class=\"line\">\t\tB[] bs = <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"title function_\">C1</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; bs.length; i++) &#123;</span><br><span class=\"line\">\t\t\t\tbs[i] = <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:-UseCompressedOops: sizeOf(new C2()) = 16(header) + (4+8+4+4)(instance data) = 36 + 4(padding) = 40</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:+UseCompressedOops: sizeOf(new C2()) = 12(header) + (4+4+4+4)(instance data) = 28 + 4(padding) = 32</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">C2</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">B</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> ba;</span><br><span class=\"line\">\t\tB[] bs = <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"title function_\">C2</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; bs.length; i++) &#123;</span><br><span class=\"line\">\t\t\t\tbs[i] = <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:-UseCompressedOops: sizeOf(new C3()) = 16(header) + 8(Instance data) + 0(padding) = 24</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:+UseCompressedOops: sizeOf(new C3()) = 12(header) + 4(Instance data) + 0(padding) = 16</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">C3</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tB[] bs = <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"title function_\">C3</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; bs.length; i++) &#123;</span><br><span class=\"line\">\t\t\t\tbs[i] = <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:-UseCompressedOops: sizeOf(new D()) = 16(header) + (4+8+4+4)(Instance data) = 36 + 4(padding) = 40</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:+UseCompressedOops: sizeOf(new D()) = 12(header) + (4+4+4+4)(Instance data) = 28 + 4(padding) = 32</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">D</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">B</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> da;</span><br><span class=\"line\">\t\tInteger[] di = <span class=\"keyword\">new</span> <span class=\"title class_\">Integer</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:-UseCompressedOops: sizeOf(new E()) = 16(header) + (4+4+4)(instance data) = 16+12 + 4(padding) = 32</span></span><br><span class=\"line\"><span class=\"comment\">\t * -XX:+UseCompressedOops: sizeOf(new E()) = 12(header) + (4+4+4)(instance data) = 12+12 + 0(padding) = 24</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">E</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> ea;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> eb;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * java -javaagent:./target/test.jar -XX:-UseCompressedOops -classpath ./target/test.jar com.ypb.codetest.sizeofobject.SizeOfObjectTest</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@throws</span> IllegalAccessException</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IllegalAccessException &#123;</span><br><span class=\"line\"><span class=\"comment\">//\t\tC c = new C();</span></span><br><span class=\"line\"><span class=\"comment\">//\t\tSystem.out.println(&quot;RamUsageEstimator.shallowSizeOf(new C()) = &quot; + RamUsageEstimator.shallowSizeOf(c));</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new C()) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">C</span>()));</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new C1()) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">C1</span>()));</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new C2()) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">C2</span>()));</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new C3()) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">C3</span>()));</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;./target/classes&quot;</span>).getAbsolutePath());</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new Object()) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>()));</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new A()) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">A</span>()));</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new B()) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">B</span>()));</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new B2()) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">B2</span>()));</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new B[3]) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">B</span>[<span class=\"number\">3</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new C()) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">C</span>()));</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.fullSizeOf(new C()) = &quot;</span> + SizeOfObject.fullSizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">C</span>()));</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new D()) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">D</span>()));</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.fullSizeOf(new D()) = &quot;</span> + SizeOfObject.fullSizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">D</span>()));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t\t-XX:-UseCompressedOops: sizeOf(new int[3]) = 24(header) + (4*3)(instance data) = 24 + 12 + 4(padding) = 40</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t-XX:+UseCompressedOops: sizeOf(new int[3]) = 16(header) + (4*3)(instance data) = 16 + 12 + 4(padding) = 32</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new int[3]) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">3</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t\t-XX:-UseCompressedOops: sizeOf(new Integer(1)) = 16(header) + (4)(instance data) = 16 + 4 + 4(padding) = 24</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t-XX:+UseCompressedOops: sizeOf(new Integer(1)) = 12(header) + (4)(instance data) = 12 + 4 + 0(padding) = 16</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new Integer(1)) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">Integer</span>(<span class=\"number\">1</span>)));</span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t-XX:-UseCompressedOops: sizeOf(new Integer[0]) = 24(header) + (0)(instance data) = 24 + 0 + 0(padding) = 24</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t-XX:+UseCompressedOops: sizeOf(new Integer[0]) = 16(header) + (0)(instance data) = 16 + 0 + 0(padding) = 16</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new Integer[0]) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">Integer</span>[<span class=\"number\">0</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t\t-XX:-UseCompressedOops: sizeOf(new Integer[1]) = 24(header) + (4)(instance data) = 24 + 4 + 4(padding) = 32</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t-XX:+UseCompressedOops: sizeOf(new Integer[1]) = 16(header) + (4)(instance data) = 16 + 4 + 4(padding) = 24</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new Integer[1]) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">Integer</span>[<span class=\"number\">1</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t\t-XX:-UseCompressedOops: sizeOf(new Integer[2]) = 24(header) + (4*2)(instance data) = 24 + 8 + 0(padding) = 32</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t-XX:+UseCompressedOops: sizeOf(new Integer[2]) = 16(header) + (4*2)(instance data) = 16 + 8 + 0(padding) = 24</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new Integer[2]) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">Integer</span>[<span class=\"number\">2</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t\tSystem.out.println(&quot;SizeOfObject.sizeOf(new Integer[3]) = &quot; + SizeOfObject.sizeOf(new Integer[3]));</span></span><br><span class=\"line\"><span class=\"comment\">//\t\tSystem.out.println(&quot;SizeOfObject.sizeOf(new Integer[4]) = &quot; + SizeOfObject.sizeOf(new Integer[4]));</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t\t-XX:-UseCompressedOops: sizeOf(new A[3]) = 24(header) + (4*3)(instance data) = 24 + 12 + 4(padding) = 40</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t-XX:+UseCompressedOops: sizeOf(new A[3]) = 16(header) + (4*3)(instance data) = 16 + 12 + 4(padding) = 32</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new A[3]) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">A</span>[<span class=\"number\">3</span>]));</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;SizeOfObject.sizeOf(new E()) = &quot;</span> + SizeOfObject.sizeOf(<span class=\"keyword\">new</span> <span class=\"title class_\">E</span>()));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**************************** 学习笔记(2019年4月28日) ******************************/</span></span><br><span class=\"line\"><span class=\"comment\">//\tJava对象的内存布局：对象头(header)，实例数据(instance data)和对齐填充(padding)， 不同环境结果可能存在差异，我所在的环境是64为hotspot虚拟机，64位的windows系统</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t对象头： 对象头在32位操作系统上是8bytes，64位操作系统是16bytes  eg: SizeOfObject.sizeOf(new Object());</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t实例数据：</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t基本类型(primitive type)的内存占用如下：</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t+-------------------+--------------------------------------------+------------------------------------+</span></span><br><span class=\"line\"><span class=\"comment\">//\t    |   primitive type  |   memory required(bytes字节)(64位无压缩)     |  64位压缩(-XX:+UseCompressedOops)  |</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t+-------------------+--------------------------------------------+------------------------------------+</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t|   boolean         |   1                                        |   1                                |</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t+-------------------+---------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"comment\">//\t    |   byte            |   1                                        |   1                                |</span></span><br><span class=\"line\"><span class=\"comment\">//\t    +-------------------+---------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t|   short           |   2                                        |   2                                |</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t+-------------------+---------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t|   char            |   2                                        |   2                                |</span></span><br><span class=\"line\"><span class=\"comment\">//\t    +-------------------+---------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"comment\">//\t    |   int             |   4                                        |   4                                |</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t+-------------------+---------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t|   float           |   4                                        |   4                                |</span></span><br><span class=\"line\"><span class=\"comment\">//\t    +-------------------+---------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t|   long            |   8                                        |   8                                |</span></span><br><span class=\"line\"><span class=\"comment\">//\t    +-------------------+---------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"comment\">//      |   double          |   8                                        |   8                                |</span></span><br><span class=\"line\"><span class=\"comment\">//\t    +-------------------+---------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"comment\">//\t    |   普通对象头       |   16                                       |  12                                |</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t+-------------------+---------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t|   数组对象头       |   24                                       |  16                                |</span></span><br><span class=\"line\"><span class=\"comment\">//\t    +-------------------+---------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t|   reference(引用) |    8                                       |   4                                |</span></span><br><span class=\"line\"><span class=\"comment\">//\t    +-----------------------------------------------------------------------------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t    reference类型在32位系统上是4个字节，在64位系统上是8个字节</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t对其填充：</span></span><br><span class=\"line\"><span class=\"comment\">//\t\thotspot的对其方式为8字节对齐</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t(对象头+实例数据+padding) % 8  = 0 &amp;&amp; 0 &lt;= padding &lt; 8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t计算对象本身占用的大小和对象总空间占用的大小的区别：</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t1. 本身占用的大小，对象中除了基本类型之外，其他类型都按照引用类型来计算，不要计算引用中的对象的大小</span></span><br><span class=\"line\"><span class=\"comment\">//\t    2. 总空间占用的大小，要计算对象中每一个对象的大小，引用中的对象也需要计算，在累加活动总空间。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t对象本身的大小</span></span><br><span class=\"line\"><span class=\"comment\">//\t    直接计算当前对象占用空间大小，包括当前类以及父类的基本类型实例字段大小，引用类型实例字段大小，实例基本类型数组大小总占用空间，实例引用类型数组本身占用的大小，</span></span><br><span class=\"line\"><span class=\"comment\">//\t    但不包括父类继承下来的h饿当前类声明的实例引用的对象本身的大小，实例引用数组引用的对象本身的大小</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//\t当前对象占用的空间总大小</span></span><br><span class=\"line\"><span class=\"comment\">//\t    递归计算当前对象占用空间总大小，包括当前类和父类的实例字段大小以及实字段引用对象大小</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t递归计算复合对象占用的内存的时候需要注意的是：对齐填充是以每个对象为单位进行的 https://images0.cnblogs.com/i/288950/201405/281956463229130.png</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"访问对象\"><a href=\"#访问对象\" class=\"headerlink\" title=\"访问对象\"></a>访问对象</h1><p>我们创建对象的目的就是为了使用对象，那么如何访问一个对象呢，我们知道java虚拟机栈中的局部变量表，存放的数据处理基本的数据类型以外，还有对象引用(reference)类型。引用类型比较特殊，在java虚拟机规范中，只是规定这是指向一个对象的引用，但并没有规定这个类型的具体实现，也即是如何定位对象，访问对象在堆中的具体位置，在不同的虚拟机中，对象的访问方式也是不同的，主流的1访问方式有<strong>使用句柄</strong>和<strong>直接指针</strong>两种。</p>\n<p><strong>使用句柄</strong></p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E9%80%9A%E8%BF%87%E5%8F%A5%E6%9F%84%E8%AE%BF%E9%97%AE%E5%AF%B9%E8%B1%A1.jpg\" loading=\"lazy\"></p>\n<p>如果使用句柄访问方式，将会在堆中划分一块内存区域作为句柄池。如上图所示，reference中存储的是对象的句柄地址，而句柄中包含的才是对象实例和对象类型各自的具体地址，所以可以看出，使用句柄是一种间接使用指针访问对象和方式。</p>\n<p><strong>直接指针</strong></p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E9%80%9A%E8%BF%87%E7%9B%B4%E6%8E%A5%E6%8C%87%E9%92%88%E8%AE%BF%E9%97%AE%E5%AF%B9%E8%B1%A1.jpg\" loading=\"lazy\"></p>\n<p>如果使用直接指针访问方式，java堆就必须考虑如何放置访问对象有关的信息，reference中直接存储的是对象地址。</p>\n<p>两种访问方式各有优势：使用句柄访问方式的最大好处是reference中存储的是稳定的句柄地址，在对象被移动时只需要改变句柄中的对象类型数据指针，而reference本身不需要被修改，而使用直接指针访问方式最大的好处就是速度更快，他节省了一次指针定位的时间开销。在Hotspot虚拟机中采用的是第二中访问方式，但使用句柄方式来访问的情况在软件开发中也很常见。</p>\n<blockquote>\n<p><strong>小结</strong><br>Java堆就像是游戏玩家出生的新手村，承载着一个对象来的java世界的梦想，资源分配，初始的装备，以及对象的区分和查找，每一步都和对象以后的命运息息相关。</p>\n</blockquote>\n<h1 id=\"类加载器\"><a href=\"#类加载器\" class=\"headerlink\" title=\"类加载器\"></a>类加载器</h1><p>寻找类加载器，先来看一个小例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hualala.test.classloader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ClassLoaderTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ClassLoader</span> <span class=\"variable\">loader</span> <span class=\"operator\">=</span> Thread.currentThread().getContextClassLoader();</span><br><span class=\"line\">        System.out.println(loader);</span><br><span class=\"line\">        System.out.println(loader.getParent());</span><br><span class=\"line\">        System.out.println(loader.getParent().getParent());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>运行后，输出结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sun.misc.launcher$AppClassLoader@64fef26a</span><br><span class=\"line\">sum.misc.launcher$ExtClassLoader@1ddd40f3</span><br><span class=\"line\">null</span><br></pre></td></tr></table></figure>\n\n<p>从上面的结果可以看出，并没有获取到ExtClassLoader的父Loader，原因是Bootstrap ClassLoader(引导类加载器)是用C语言实现的，找不到一个确定的返回父Loader的方式，于是就返回null。</p>\n<p>这几种类加载器的层次关系如下图所示：</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/calssloader.png\" loading=\"lazy\"></p>\n<blockquote>\n<p>注意：这里父类加载器并不是通过继承关系来实现的，而是采用组合实现的。</p>\n</blockquote>\n<p>站在java虚拟机的角度讲，只存在两种不同的类加载器：</p>\n<p><strong>启动类加载器：</strong> 它使用C++实现的(这里仅限于Hotspot，也就是JDK1.5之后默认的虚拟机，有很多其他的虚拟机是用java实现的)，是虚拟机自身的一部分；</p>\n<p><strong>所有其他的类加载器：</strong> 这些类加载器都由java语言实现的，独立于虚拟机之外，并且全部继承自抽象类java.lang.ClassLoader，这些类加载需要有启动加载器加载到内存中之后才能去加载其他的类。</p>\n<p>站在java开发人员角度来看，类加载器可以大致分为三类：</p>\n<p><strong>启动类加载器：</strong> Bootstrap ClassLoader，负责加载存放在JDK\\jre\\lib(JDK代表的是JDK的安装目录)下，或被-Xbootclasspath参数指定的路径中的，并且能被虚拟机识别的类库(如rt.jar, 所有的java.开头的类均被Bootstrap ClassLoaderj加载)。启动类加载器是无法被Java程序直接引用的.</p>\n<p><strong>扩展类加载器：</strong> Extension ClassLoader，该加载由sum.misc.launcher$ExtClassLoader实现，它负责加载JDk\\jre\\lib\\ext目录中，或者由java.ext.dirs系统变量指定的路径中的所有类库(如javax.开头的类), 开发这可以直接使用扩展类加载器.</p>\n<p><strong>应用程序类加载器：</strong> Application ClassLoader，该类加载器有sum.misc.launcher$AppClassLoader来实现，它负责加载用户类路径(ClassPath)所指定的类，开发者可以直接使用这个类加载器，如果应用程序中没有定义过自己的类加载器，一般情况下这个就是程序默认的类加载器。</p>\n<p>应用程序都是由这三种类加载器相互配合进行加载的，如果有必要，我们还可以加入自定义的类加载器。因为JVM自带的ClassLoader只是懂得从本地文件系统加载标准的java class文件，因此如果编写了自己的ClassLoader，便可以做到如下几点：</p>\n<ul>\n<li>在执行非置信代码之前，自动验证数字签名。</li>\n<li>动态的创建符合用户特定需要的定制化构建类</li>\n<li>从特定的场所获取java class，比如数据库中和网络中</li>\n</ul>\n<p>java类加载器有两个比较重要的特征：层次组织结构和代理模式。层次组织结构值得是每个类加载器都有一个父类加载器，通过getParent()方法可以获取到，类加载器通过这种父亲-后代的方式组织在一起，形成树状层次结构。代理模式则指的是通过一个类加载器既可以自己完成java类的定义工作，也可以代理给其它的类加载器来完成。由于这种代理模式的存在，启动一个类的加载过程和最终定义这个类的类加载器可能并不是一个，前者称为初始类加载器，而后者称为定义类加载器，两者的关联在于：一个java类的定义类加载器是该类所导入的其它java类的初始类加载器，比如类A通过import导入了B类，那么有类A的定义加载器负责启动类B的加载过程。</p>\n<p><strong>JVM类加载机制</strong></p>\n<ul>\n<li><strong>全盘负责</strong> 当一个类加载器负责加载某个Class文件时，该Class所依赖的和引用的其他Class也将由该类加载器负责加载。除非显示使用另外一个类加载器来载入。</li>\n<li><strong>父类委托</strong> 先让父类加载器试图加载该类，只有在父类加载器无法加载该类时才尝试从自己的类路径中加载该类</li>\n<li><strong>缓存机制</strong> 缓存机制将会保证所有已经加载过的Class都会被缓存，当程序中需要使用某个Class时，类加载器先从缓存区寻找该Class，只有缓存区不存在，系统才会读取该类对应的二进制数据，并将其转换成Class对象，存入缓存区，这就是为什么修改了Class后，必须重启JVM，程序的修改才会生效</li>\n</ul>\n<h1 id=\"类的加载\"><a href=\"#类的加载\" class=\"headerlink\" title=\"类的加载\"></a>类的加载</h1><p>类的加载是通过类加载器(ClassLoader)完成的，它既可以是饿汉式<a href=\"%E5%8F%AA%E8%A6%81%E6%9C%89%E5%85%B6%E4%BB%96%E7%B1%BB%E5%BC%95%E7%94%A8%E4%BA%86%E5%AE%83%E5%B0%B1%E5%8A%A0%E8%BD%BD\">eagerly load</a>加载类，也可以是懒汉式<a href=\"%E7%AD%89%E5%88%B0%E7%B1%BB%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%91%E7%94%9F%E7%9A%84%E6%97%B6%E5%80%99%E6%89%8D%E5%8A%A0%E8%BD%BD\">lazy load</a>。这跟不同的JVM虚拟机实现有关，然而它又是受JLS保证的(当有静态初始化需求的时候才被加载).</p>\n<p>类加载器有三种方式：</p>\n<ol>\n<li>命令行启动应用时候有JVM初始化加载。</li>\n<li>通过Class.forName()方法动态加载。</li>\n<li>通过ClassLoader.loadClass()方法动态加载。</li>\n</ol>\n<p>例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hualala.test.classloader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LoaderTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ClassNotFoundException &#123;</span><br><span class=\"line\">        <span class=\"type\">ClassLoader</span> <span class=\"variable\">loader</span> <span class=\"operator\">=</span> HelloWorld.class.getClassLoader();</span><br><span class=\"line\">        System.out.println(loader);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 使用ClassLoader.loadClass()来加载类，不会执行初始化块</span></span><br><span class=\"line\">        loader.loadClass(<span class=\"string\">&quot;Test2&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 使用Class.forName()来加载类，默认会执行初始化块</span></span><br><span class=\"line\">        Class.forName(<span class=\"string\">&quot;Test2&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 使用Class.forName()加载类，并指定ClassLoader，初始化不会执行静态代码块</span></span><br><span class=\"line\">        Class.forName(<span class=\"string\">&quot;Test2&quot;</span>, <span class=\"literal\">false</span>, loader);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>dmeo类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test2</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;静态代码块执行了！！！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>分别切换加载方式，会有不同的输出结果。</p>\n<p><strong>Class.forName()和ClassLoader.loadClass()区别</strong></p>\n<ul>\n<li>Class.forName(): 将类的.class文件加载到jvm中之外，还会对类进行解释，执行类的static块。</li>\n<li>ClassLoader.loadClass(): 只干一件事情，就是把.class文件加载到jvm之中，不会执行类中的static块。只有在newInstance才会去执行static代码块。</li>\n<li>Class.forName(name, initialize, loader): 带参数也可控制是否加载static代码块，并且只有调用了newInstance()方法采用调用构造函数，创建类的对象。</li>\n</ul>\n<h1 id=\"双亲委派模型\"><a href=\"#双亲委派模型\" class=\"headerlink\" title=\"双亲委派模型\"></a>双亲委派模型</h1><p><img src=\"http://upload-images.jianshu.io/upload_images/14423059-54897a5d741e7f0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" loading=\"lazy\"></p>\n<p>双亲委派模型的工作流程是：如果一个类加载器收到了类加载的请求，它首先不会自己去尝试加载这个类，而是把请求委派给父加载器去完成，依次向上，因此，所有的类价值请求最终都会应该被传递到顶层的启动类加载器中，只有当父加载器在加载它的搜索范围内中没有找到所需的类时，即无法完成该加载，子加载器才会尝试自己去加载该类。</p>\n<p>双亲委派机制：</p>\n<ol>\n<li>当AppClassLoader加载一个class时，它首先不会自己去尝试加载这个类，而是把加载请求委派给父加载器ExtClassLoader去完成。</li>\n<li>当ExtClassLoader加载一个class时，它首先不会自己去尝试加载这个类，而是把加载请求委派给BootstrapClassLoader去完成。</li>\n<li>如果BootstrapClassLoader加载失败(例如在$JAVA_HOME&#x2F;jre&#x2F;lib里为找到该class)，会使用ExtClassLoader来尝试加载；</li>\n<li>如ExtClassLoader也加载失败，这会使用AppClassLoader来加载，如果AppClassLoader也加载失败，则会报出异常ClassNotFoundException。</li>\n</ol>\n<p>ClassLoader源码分析：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> Class&lt;?&gt; loadClass(String name) <span class=\"keyword\">throws</span> ClassNotFoundException &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> loadClass(name, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"keyword\">synchronized</span> Class&lt;?&gt; loadClass(String name, <span class=\"type\">boolean</span> resolve) <span class=\"keyword\">throws</span> ClassNotFoundException &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 首先判断该类型是否已经被加载过</span></span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> findClass(name);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (c == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果没有被加载，就委派给父类加载器或者委派给启动类加载器加载</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (parent != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 如果存在父类加载器，就会委派给父类加载器加载</span></span><br><span class=\"line\">                c = parent.loadClass(name, <span class=\"literal\">false</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 如果不存在父类加载器，就检查是否由启动类加载器加载的类，通过调用本地方法native Class findBootstrapClass(String name);</span></span><br><span class=\"line\">                </span><br><span class=\"line\">                c = findBoostrapClass0(name);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 如果父类加载器和启动类加载器都不完能任务，才调用自身的加载功能</span></span><br><span class=\"line\">            c = findClass(name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(resolve) &#123;</span><br><span class=\"line\">        resolveClass(c);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>双亲委派模型的意义：</p>\n<ul>\n<li>系统类防止内存中出现多份同样的字节码</li>\n<li>保证java程序安全稳定运行</li>\n<li>双亲委派机制是为了保证JAVA核心库的类型安全(这种机制保证了不会出现用户能自定义java.lang.Object类的情况). 保证核心类无法被用户定义</li>\n</ul>\n<h1 id=\"自定义类加载器\"><a href=\"#自定义类加载器\" class=\"headerlink\" title=\"自定义类加载器\"></a>自定义类加载器</h1><p>通常情况下，我们都是直接使用系统类加载器，但是，有时候，我们也需要自定义类加载器，比如应用的是通过网络来传输java类的字节码，为了保证安全性，这些字节码经过了加密处理，这时类加载器就无法对其进行加载，这样这需要自定义类加载器来实现，自定义类加载器一般都是继承ClassLoader类，从上面对loadClass方法来分析来看，我们只需要重写findClass方法即可，下面我们通过一个实例来演示自定义类加载器的流程：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hualala.test.classloader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyClassLoader</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">ClassLoader</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String root;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Class&lt;?&gt; findClass(String name) <span class=\"keyword\">throws</span> ClassNotFoundException &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] classData = loadClassData(name);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(classData == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ClassNotFoundException</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> defineClass(name, classData, <span class=\"number\">0</span>, classData.length);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">byte</span>[] loadClassData(String name) &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">fileName</span> <span class=\"operator\">=</span> root + File.separatorChar + name.replace(<span class=\"string\">&#x27;.&#x27;</span>, File.separatorChar) + <span class=\"string\">&quot;.class&quot;</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">InputStream</span> <span class=\"variable\">ins</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(fileName);</span><br><span class=\"line\">            <span class=\"type\">ByteArrayOutputStream</span> <span class=\"variable\">baos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ByteArrayOutputStream</span>();</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">bufferSize</span> <span class=\"operator\">=</span> <span class=\"number\">1024</span>;</span><br><span class=\"line\">            <span class=\"type\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[bufferSize];</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">length</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>((length = ins.read(buffer)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                baso.write(buffer, <span class=\"number\">0</span>, length);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">return</span> baos.toByteArray();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(IOException e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getRoot</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setRoot</span><span class=\"params\">(String root)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.root = root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">MyClassLoader</span> <span class=\"variable\">loader</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span>  <span class=\"title class_\">MyClassLoader</span>();</span><br><span class=\"line\">        loader.setRoot(<span class=\"string\">&quot;E:\\\\temp&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        Class&lt;?&gt; testClass = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            testClass = loader.loadClass(<span class=\"string\">&quot;com.hualala.test.classloader.Test2&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">Object</span> <span class=\"variable\">obj</span> <span class=\"operator\">=</span> testClass.newInstance();</span><br><span class=\"line\">            System.out.println(obj.getClass().getClassLoader());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>自定义类加载器的核心在于对字节码文件的获取，如果是加密的字节码则需要在该类中对文件进行解密，由于这里只是演示，我并没有对class文件进行加密，因此没有解密的过程，这里有几点需要注意：</p>\n<ol>\n<li>这么需要传递的文件名需要是类的全限定性名称，即&quot;com.hualala.test.classloader.Test2&quot;格式的，因为defineClass方法是按照这种格式进行处理的。</li>\n<li>最好不要重写loadClass方法，因为这样容易破坏双亲委托模式。</li>\n<li>这类Test类本身可以被AppClassLoader类加载，因此我们不能把com&#x2F;hualala&#x2F;test&#x2F;classloader&#x2F;Test2.class放在类路径下，否则，由于双亲委托机制的存在，会直接导致该类有AppClassLoader加载，而不会通过我们自定义类加载器加载。</li>\n</ol>\n<h1 id=\"了解另外两个类加载器\"><a href=\"#了解另外两个类加载器\" class=\"headerlink\" title=\"了解另外两个类加载器\"></a>了解另外两个类加载器</h1><h2 id=\"线程上下文类加载器\"><a href=\"#线程上下文类加载器\" class=\"headerlink\" title=\"线程上下文类加载器\"></a>线程上下文类加载器</h2><p>java提供了很多服务提供者接口(Service Provider Interface SPI)，允许第三方为这些接口提供实现，SPI实现的java类一般是由系统类加载来加载的。</p>\n<p><strong>双亲委派机制已经类加载器的问题</strong></p>\n<ul>\n<li>一般情况下，保证同一个类中所关联的其他类都是有当前类的类加载器所加载的。</li>\n<li>JDBC API，它有实现的driver部分(mysql，sql server), 我们的JDBC API都是有BOOT或者EXT来载入的，但是JDBC driver却是有EXT或者APP载入的，那么就由可能找不到driver了，在java领域中，其实只要分成这种API+SPI的，都会遇到这种问题。</li>\n<li>常见的SPI有JDBC，JCE，JNDI，JAXP和JBI等，这些SPI接口都是有java核心库来提供。比如：JAXP的SPI接口定义包含在javax.xml.parses包中。SPI的接口是java核心库的一部分，是由引导类加载其负责加载的，SPI实现的JAVA类一般是由系统类加载器来加载的，引导类加载器无法找到SPI的具体实现类的，因为它只负责加载java核心库。(系统加载器也叫做应用加载器 System Classloader 或 Application Classloader)</li>\n</ul>\n<p><strong>线程类加载器是为了抛弃双亲委派加载链模式</strong></p>\n<p>每个线程都有一个关联的上下文类加载器，如果你使用new Thread()方式来创建线程，新线程将继承其父线程的上下文类加载器，如果程序对线程上下文加载器没有任何改动的话，程序中所有的线程将使用系统类加载器作为线程上下文加载器</p>\n<blockquote>\n<ul>\n<li>两个方法：</li>\n<li><ol>\n<li>Thread.currentThread().getContextClassLoader(); &#x2F;&#x2F; 获取线程上下文加载器</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>Thread.currentThread().setContextClassLoader(); &#x2F;&#x2F; 设置线程上下文加载器</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n<p>java默认的线程上下文类加载器是应用类加载器(AppClassLoader)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">// Now create the class loader to use to launch the application</span><br><span class=\"line\">try &#123;</span><br><span class=\"line\">    loader = AppClassLoader.getAppClassLoader(extcl);</span><br><span class=\"line\">&#125; catch(Exception e)&#123;</span><br><span class=\"line\">    throw new InternalError(&quot;could not create application class loader&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Also set the context class loader for the primordial thread</span><br><span class=\"line\">Thread.currentThread().setContextClassLoader(loader);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Tomcat服务器的类加载器\"><a href=\"#Tomcat服务器的类加载器\" class=\"headerlink\" title=\"Tomcat服务器的类加载器\"></a>Tomcat服务器的类加载器</h1><h2 id=\"tomcat不能使用系统默认的类加载器\"><a href=\"#tomcat不能使用系统默认的类加载器\" class=\"headerlink\" title=\"tomcat不能使用系统默认的类加载器\"></a>tomcat不能使用系统默认的类加载器</h2><ul>\n<li>如果tomcat跑你的web项目使用的是系统的类加载器是相当危险的，你可以直接操作系统的各个目录了。</li>\n<li>对应运行在javaee容器中的web应用来说，类加载器的实现与一般的java应用有所不同。</li>\n<li>每个web应用都对应一个类加载器实例，该类加载器也是使用代理模式，所不同的是它首先尝试去加载某个类，如果找不到再代理给父类加载器。这与一般的加载器的顺序是相反的，但也是为了安全考虑，这样核心库就不再查询范围之内了。</li>\n<li>为了安全tomcat需要实现自己的类加载器(限制你只能把类写在指定的地方，否则就不给你加载)。</li>\n</ul>\n","categories":["JVM"],"tags":["JVM"]},{"title":"JVM系列之jvm内存结构","url":"/jvm/2018-04-02-JVM%E7%B3%BB%E5%88%97%E4%B9%8BJVM%E5%86%85%E5%AD%98%E7%BB%93%E6%9E%84/","content":"<p>所有的java开发人员可能会遇到这样的困惑？我该为堆内存设置多大空间呢？OutOfMemoryError的异常到底涉及到运行时数据的那块区域？该怎么解决呢？其实如果你经常解决服务器性能问题，那么这些问题就会变得非常常见，了解JVM内存也是为了服务器出现性能问题的时候可以快速的了解哪块内存区域出现问题，以便于快速的解决生产故障。</p>\n<p>先看一张图，这张图很清晰的说明JVM内存结构布局。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jvm03.png\" loading=\"lazy\"></p>\n<p>JVM内存结构主要有三大块：堆内存，方法区和栈，堆内存是JVM中最大的一块内存区域，有年轻代和老年代组成，而年轻代内存有被分成三部分: Eden空间，From Survivor空间和To Survivor空间，默认情况下年轻代按照8:1:1的比例来分配；</p>\n<p>方法区存储类信息，常量，静态变量等数据，是线程共享的区域，为与java堆区分，方法区还有一个别名Non-Heap(非堆)；栈有分为java虚拟机栈和本地方法栈主要用于方法的执行。</p>\n<h1 id=\"JVM内存的参数配置与调优\"><a href=\"#JVM内存的参数配置与调优\" class=\"headerlink\" title=\"JVM内存的参数配置与调优\"></a>JVM内存的参数配置与调优</h1><p>在通过一张图来了解如果通过参数来控制各区域的内存大小</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jvm04.png\" loading=\"lazy\"></p>\n<p>堆内存的接口和内存限制参数</p>\n<p><img src=\"http://1.file.leanote.top/59dd8e27ab644110ea00037f/1507692006806_6.png?e=1542619030&token=ym9ZIrtxjozPN4G9he3-FHPOPxAe-OQmxzol5EOk:ynl6-k9K6esU6ow1iTUM2oXbw3Q\" loading=\"lazy\"></p>\n<p>控制参数：</p>\n<ul>\n<li>-Xms设置堆的最小空间大小</li>\n<li>-Xmx设置堆的最大空间大小</li>\n<li>-XX:NewSize设置新生代最小空间大小</li>\n<li>-XX:MaxNewSize设置新生代最大空间大小</li>\n<li>-XX:PermSize设置永久代最小空间大小</li>\n<li>-XX:MaxPermSize设置永久代最大空间大小</li>\n<li>-Xss设置每个线程的栈空间大小</li>\n</ul>\n<p>JDK8之后JVM没有方法区概念，所以没有PermSize参数设置取而代之的是Metaspace，参数设置为</p>\n<ul>\n<li>-XX:MetaspaceSize, 初始空间大小，达到该值就会触发垃圾收集器进行类型卸载，同时GC会对该值进行调整：如果释放了大量的空间，就会适当降低该值。如果释放了很小的空间，那么在不超过MaxMetaspaceSize时，适当提高该值。</li>\n<li>-XX:MaxMetaspaceSize，最大空间，默认是没有限制的。<blockquote>\n<p>除了上面两个指定大小的选项以外，还有两个GC相关的属性：</p>\n</blockquote>\n</li>\n<li>-XX:MinMetaspaceFreeRatio，在GC之后，最小的metaspace剩余空间容量的百分比，减少为分配空间所导致的垃圾收集</li>\n<li>-XX:MaxMetaspaceFreeRatio，在GC之后，最大的metaspace剩余空间容量的百分比，减少为释放空间所导致的垃圾收集</li>\n</ul>\n<p>没有直接设置老年代的参数，但是可以通过设置堆空间大小和新生代空间大小两个参数来间接控制。</p>\n<blockquote>\n<p>老年代空间大小&#x3D;堆空间大小-新生代空间大小</p>\n</blockquote>\n<p>从更高的一个堆纬度再次来看JVM和系统调用之间的关系</p>\n<p>内存是计算机中运行系统和软件的场所，将内存划分为不同的区域只是人为添加的概念，目的是为了更好的描述Java虚拟机对内存的管理。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jvm05.png\" loading=\"lazy\"><br><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%86%85%E5%AD%98%E5%88%92%E5%88%86.png\" loading=\"lazy\"></p>\n<p>方法区和堆内存是所有线程共享的内存区域，而java栈和本地方法栈，程序计数器是线程私有的内存区域。</p>\n<p>下面我们详细介绍每个区域的作用；</p>\n<h1 id=\"Java堆-Heap\"><a href=\"#Java堆-Heap\" class=\"headerlink\" title=\"Java堆(Heap)\"></a>Java堆(Heap)</h1><p>对于大多数应用来说，java堆(Java Heap)是java虚拟机管理内存中最大的一块，Java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建，此内存的唯一目的就是存放对象实例，几乎所有的对象实例都在这里分配内存。</p>\n<p>java堆是垃圾收集器管理的主要区域，因此很多时候也被称为&quot;GC堆&quot;. 如果从内存回收的角度看，由于现在收集器基本上都是采用分代收集算法，所以Java堆中还可以细分为：新生代和老年代；在细分一点的有Eden空间，From Survivor空间和To Survivor空间等。</p>\n<p>根据Java虚拟机规范的规定，Java堆可以处于物理上不连续的内存当中，只要逻辑上是连续的即可，就像我们的磁盘空间一样，在实现时，既可以实现固定大小的，也可以是可扩展的，不过当前主流的虚拟机都是按照可扩展来实现的(通过-Xms和-Xmx控制)。</p>\n<p>如果在堆中没有内存完成实例分配，并且堆内存也无法再扩展时，将会抛出OutOfMemoryError异常。</p>\n<h1 id=\"方法区-Method-Area\"><a href=\"#方法区-Method-Area\" class=\"headerlink\" title=\"方法区(Method Area)\"></a>方法区(Method Area)</h1><p>方法区(Method Area)与堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息，常量，静态变量，即时编译器编译后的代码等数据。虽然Java虚拟机规范把方法区描述成为堆的一个逻辑部分，但是它却有一个别名叫做Non-Heap(非堆)，目前应该是与Java堆区分开来。</p>\n<p>在方法区中，有一部分被称为运行时常量池，常量池除了用于存放在编译期生成的各种字面量和符号引用外，还存储了直接引用。运行时常量池具有动态性，常量并不一定是在编译期才会被放入常量池，在运行期间也有可能有新的常量进入池中，如调用String类的intern()方法就会将字符串对象放入字符串常量池中。</p>\n<p>对于习惯于在HotSpot虚拟机上开发和部署程序的开发者来说，很多人愿意把方法区称之为&quot;永久代&quot;(Permanent Generation), 本质上两者并不等价，仅仅是因为HotSpot虚拟机的设计团队选择把GC分代收集扩展至方法区，或者说使用永久代来实现方法区而已。</p>\n<p>Java虚拟机规范对这个区域的限制非常宽松，除了和Java堆一样不需要连续的内存和可以选择固定大小或者扩展外，还可以选择不实现垃圾收集，相对而言，垃圾收集行为在这个区域是相对比较少出现的，但并非数据进入了方法区就如永久代的名字一样&quot;永久&quot;存在了，这个区域的内存回收目标主要是针对常量池的回收和对类型的卸载，一般来说这个区域的回收成绩比较难以令人满意，尤其是类型的卸载，条件相当苛刻，但是这部分区域的回收确实是有必要的。</p>\n<p>根据Java虚拟机规范的规定，当方法区无法满足内存分配需求时，将会抛出OutOfMemoryError异常。</p>\n<p>方法区有时候被称为持久代(PermGen)</p>\n<p><img src=\"http://ifeve.com/wp-content/uploads/2015/05/JUtH_20121024_RuntimeDataAreas_2_MemoryModel-1.png\" loading=\"lazy\"></p>\n<p>所有的对象在实例化后整个运行周期内，都会被存放在堆内存中，堆内存又被划分为不同的部分：伊甸区(Eden)，幸存者区域(Survivor Space)，老年代(Old Generation Space).</p>\n<p>方法的执行都是伴随着线程的，原始类型的本地变量以及引用都存放在线程栈中，而引用关联的对象比如String，都存放在堆内存中，为了更好的理解上面这段话，我们可以看一个例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.log4j.Logger;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Logger</span> <span class=\"variable\">LOGGER</span> <span class=\"operator\">=</span> Logger.getLogger(HelloWorld.class.getName());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sayHello</span><span class=\"params\">(String message)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">SimpleDateFormat</span> <span class=\"variable\">formatter</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;dd.MM.YYYY&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">today</span> <span class=\"operator\">=</span> formatter.format(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>());</span><br><span class=\"line\">        LOGGER.info(today + <span class=\"string\">&quot;: &quot;</span> + message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这段程序的数据在内存中的存放如下：</p>\n<p><img src=\"http://ifeve.com/wp-content/uploads/2015/05/JUtH_20121024_RuntimeDataAreas_4_MemoryModel.png\" loading=\"lazy\"></p>\n<p>通过JConsole工具可以查看运行中的java程序的一些信息，堆内存分配，线程的数量以及加载的类的个数：</p>\n<p><img src=\"http://ifeve.com/wp-content/uploads/2015/05/JUtH_20121024_RuntimeDataAreas_5_JConsole.png\" loading=\"lazy\"></p>\n<h1 id=\"程序计数器-Program-Counter-Register\"><a href=\"#程序计数器-Program-Counter-Register\" class=\"headerlink\" title=\"程序计数器(Program Counter Register)\"></a>程序计数器(Program Counter Register)</h1><p>程序计数器(Program Counter Register)是一块较小的内存空间，它的作用可以看做是当前线程所执行的字节码的行号指示器，在虚拟机的概念模型中(仅是概念模型，各种虚拟机可能会通过一些更高效的方式去实现), 字节码解释器工作时就是通过改变这个计数器的值来获取下一条需要执行的字节码指令，多支，循环，调转，异常处理，线程恢复等基础功能都需要依赖这个计数器来完成。</p>\n<p>由于java虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的，在任何一个确定的时刻，一个处理器(对于多核处理器来说是一个内核)只会执行一条线程中的指令。因此，为了线程切换后恢复到正确的执行位置，每条线程都需要有一个独立的计数器，各条线程之间的计数器互不影响，独立存储，我们称这类内存区域为线程私有的内存。</p>\n<p>如果线程正在执行的是一个Java方法，这个计数器记录的值是正在执行的虚拟机字节码指定的地址。如果正在执行的是native方法，这个计时器值为空(undefined)。</p>\n<p><strong>此内存区域是唯一一个在Java虚拟机规范中没有规定任何OutOfMemoryError异常的区域。</strong></p>\n<h1 id=\"JVM栈-JVM-Stacks\"><a href=\"#JVM栈-JVM-Stacks\" class=\"headerlink\" title=\"JVM栈(JVM Stacks)\"></a>JVM栈(JVM Stacks)</h1><p>与程序计数器一样，Java虚拟机栈(java virtual machine stacks)也是线程私有的，<strong>它的生命周期与线程相同，虚拟机栈描述的是Java方法执行的内存模型</strong>，每个方法被执行的时候都会同时创建一个栈桢(stack frame)用于存储局部变量表，操作栈，动态链接，方法出口等信息，** 每一个方法被调用直至执行完成的过程，对应着一个栈桢在虚拟机栈中从入栈到出栈的过程。**<br>局部变量表存放了编译期可知的各种基本数据类型(boolean、byte、char、short、int、float、long、double)、对象引用(referencel类型，它不等同于对象本身，根据不同的虚拟机实现，它可能是一个指向对象起始值的引用指针，也可能是指向一个代表对象地址的句柄或者其它与此对象相关的位置)和returnAddress类型(指向了一条字节码指令的地址)。</p>\n<p>其中64位长度的long和double类型的数据会占用2个局部变量空间(slot)，其余的数据类型只占用1个slot，局部变量表所需要的内存空间在编译期完成分配，当进入一个方法时，这个方法需要在帧中分配多大的局部变量表空间是完全确定的，在方法运行期间不会改变局部变量表的大小。</p>\n<p>栈这种数据结构，特点是后进先出(LIFO)， 栈中的数据元素就是栈桢。下图就是栈桢这样数据在java栈中的结构图</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E6%A0%88%E5%B8%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.png\" loading=\"lazy\"></p>\n<p>在java虚拟机规范中，对这个区域规范了两种异常情况：如果线程请求的栈深度大于虚拟机所允许的深度，将抛出StackOverflowError异常；如果虚拟机栈可以动态扩展(当前大部分java虚拟机都是动态可扩展的，只不过java虚拟机规范中也允许固定长度的虚拟机栈)，当扩展时无法申请到足够的内存时会抛出OutOfMemoryError异常。</p>\n<h1 id=\"本地方法栈-Native-Method-Stacks\"><a href=\"#本地方法栈-Native-Method-Stacks\" class=\"headerlink\" title=\"本地方法栈(Native Method Stacks)\"></a>本地方法栈(Native Method Stacks)</h1><p>本地方法栈(native method stacks)与虚拟机栈所发挥的作用是非常相似的，其区别不够是虚拟机栈为虚拟机执行java方法(也就是字节码)服务，而本地方法栈则是为虚拟机提供调用native方法的服务。虚拟机规范中对本地方法栈中的方法使用的语言，使用方式与数据结构并没有强制规定，因此具体的虚拟机可以自由实现它，甚至有的虚拟机(譬如Hotspot虚拟机)直接就把本地方法栈和虚拟机栈合二为一，与虚拟机栈一样，本地方法栈区域也会抛出StackOverflowError和OutOfMemoryError异常。</p>\n<h1 id=\"直接内存\"><a href=\"#直接内存\" class=\"headerlink\" title=\"直接内存\"></a>直接内存</h1><p>直接内存并不在Java虚拟机管理的内存区域内，也不是Java虚拟机规范中定义的内存区域，直接内存是java程序不经过java虚拟机分配，直接使用外部主机的物理内存，这在一些场景中(如文件复制)可能提高性能，但是在使用过程中，也需要注意内存大小的限制(包括物理和系统级的限制)，否则也会抛出OutOfMemoryError异常。</p>\n<h1 id=\"内存异常\"><a href=\"#内存异常\" class=\"headerlink\" title=\"内存异常\"></a>内存异常</h1><p>虽然说有Java虚拟机帮助我们管理内存，但在管理过程中仍然有内存异常发生的可能，具体的说就是，除了前面内存划分中说到的程序计数器外，其他区域都有OutOfMemoryError异常发生的可能。</p>\n<p>我们可以给java虚拟机设置参数来模拟这些异常的发生，不同的java虚拟机运行结果可能不同，这里使用的是orcale公司的虚拟机。</p>\n<blockquote>\n<p>特别说明：下面如果没有特殊说明，默认使用的是JDK8的虚拟机</p>\n</blockquote>\n<h2 id=\"java堆内存异常\"><a href=\"#java堆内存异常\" class=\"headerlink\" title=\"java堆内存异常\"></a>java堆内存异常</h2><p>Java堆是用于存储对象实例的，所以只要不断地创建对象，来把java堆区域填满，并且保证垃圾回收机制不能清除这些对象，就可以模拟出java堆内存的异常。</p>\n<p>模拟程序代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 模拟java堆内存异常</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HeapOOM</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 声明静态内部类，声明周期和外部类一样，使垃圾收集器无法回收这些对象占用的内存空间</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OOMObject</span> &#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args &#123;</span></span><br><span class=\"line\"><span class=\"params\">        List&lt;OOMObject&gt; objs = new ArrayList&lt;&gt;()</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            objs.add(<span class=\"keyword\">new</span> <span class=\"title class_\">OOMObject</span>());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里使用MAT(Memory Analyzer Tools)内存分析插件来对内存异常进行分析，IDE使用的是Eclipse，当然idea可以是可以安装的。</p>\n<p>在eclipse的debug配置页面，设置jvm参数</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/Debug%E8%AE%BE%E7%BD%AE.jpg\" loading=\"lazy\"></p>\n<p>jvm debug参数设置如下：<br>-verbose:gc -Xms20M -Xmx20M -XX:+PrintGCDetails -XX:+HeapDumpOnOutOfMemoryError -XX:+HeapDumpPath&#x3D;D:\\workspace\\java\\dump</p>\n<p>参数说明：</p>\n<p>-Xms和-Xmx参数表示的是设置java堆的最小值和最大值，这里都是20M，-XX后面可以添加一些额外的设置，PrintGCDetails表示打印出来垃圾收集时的详细信息，HeapDumpOnOutOfMemoryError表示发送OutOfMemoryError错误时记录内存快照，HempDumpPath后面是存放内存快照文件的地址。</p>\n<p>debug结果如下：</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/Java%E5%A0%86%E5%BC%82%E5%B8%B8%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.jpg\" loading=\"lazy\"></p>\n<p>从上图中可以看出，java堆内存(Heap space)出现了OutOfMemoryError的错误，并且在我们指定的文件夹中生成了内存异常时的快照文件，在使用MAT内存分析工具之前，我们还要知道内存溢出和内存泄漏的区别。我们在前面没有将OutOfMemoryError错误翻译成内存泄漏或内存异常错误。而是使用原本的英文，也是为了准确性考虑，因为内存泄漏和内存溢出都只是导致异常出血的原因，该事情的结果才产生了OutOfMemoryError错误。</p>\n<p><strong>内存泄漏和内存溢出的区别：</strong></p>\n<ul>\n<li>内存泄漏是指程序员在申请内存后，无法释放已申请的内存空间，内存泄漏会导致内存资源耗光，通俗的说就是对象站着内存空间无法归还给系统。</li>\n<li>内存溢出是指程序员申请内存使用时，发现内存空间不能满足使用，很常见的例子就是在存一个很大数时超过了该数值类型的最大值，通俗的说就是程序使用内存空间时发现无法满足自己的要求。</li>\n</ul>\n<p>知道了内存泄漏和内存溢出的区别，我们再来使用MAT工具分析内存快照，首先调出MAT视图，然后在&quot;File&quot;选项中选择&quot;Open Heap Dump&quot;打开内存快照文件。</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E8%B0%83%E5%87%BAMAT%E8%A7%86%E5%9B%BE.jpg\" loading=\"lazy\"><br><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E6%89%93%E5%BC%80%E5%86%85%E5%AD%98%E5%BF%AB%E7%85%A7%E6%96%87%E4%BB%B6.jpg\" loading=\"lazy\"></p>\n<p>打开快照文件后，可以清晰的看出内存异常问题存在的地方(problem suscept)。</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%86%85%E5%AD%98%E5%BF%AB%E7%85%A7.jpg\" loading=\"lazy\"></p>\n<p>点击Details可以看出具体的细节。</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%85%B7%E4%BD%93%E7%BB%86%E8%8A%82.jpg\" loading=\"lazy\"></p>\n<p>可以看到OOMOnject占用的内存空间很大，查看该对象是否有到GC Roots的引用链，导致垃圾收集器无法回收对象占用的内存空间。这里可以看到由于内存空间被占用后无法回收导致的OutOfMemoryError异常，异常产生的原因是内存泄漏。</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E6%9F%A5%E7%9C%8B%E6%B3%84%E9%9C%B2%E5%AF%B9%E8%B1%A1%E5%88%B0GCRoots%E7%9A%84%E5%BC%95%E7%94%A8%E9%93%BE.gif\" loading=\"lazy\"></p>\n<h2 id=\"栈内存异常\"><a href=\"#栈内存异常\" class=\"headerlink\" title=\"栈内存异常\"></a>栈内存异常</h2><p>在Hotspot虚拟机中并不区分java虚拟机栈和本地方法栈，栈的容量可以通过-Xss参数来设定。</p>\n<p>在java虚拟机规范中描述了两种栈出现的异常：</p>\n<ul>\n<li>如果线程请求的栈深度大于虚拟机所允许的深度，抛出StackOverflowError异常。</li>\n<li>如果虚拟机栈在动态扩展时无法申请到足够的内存，抛出OutOfMemoryError异常。</li>\n</ul>\n<p>栈的深度是由栈的内存空间决定的，请求的栈越深，也即是已经使用栈空间占用越大，所以上面规定的两种异常都是有重叠之处的，一种异常也可能会导致另外一种异常的发生，到底是栈的内存空间大小引起的内存异常还是已使用的栈内存空间太大引起的内存异常。</p>\n<p>减少栈内存的容量和定义大量的局部变量来增加栈桢中局部变量表的长度，在理论上都是可以产生StackOverflowError异常和OutOfMemory异常的。</p>\n<p>但是下面的代码只能产生StackOverflowError异常。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 栈StackOverflowError异常</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JVMStackSOF</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">stackLength</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 递归函数</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">stackLeak</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        stackLength++;</span><br><span class=\"line\">        </span><br><span class=\"line\">        stackLeak();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">JVMStackSOF</span> <span class=\"variable\">sof</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JVMStackSOF</span>();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            sof.stackLeak();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>debug的参数为：-verbose:gc -Xss128K -XX:+PrintGCDetails -XX:+HeapDumpOnOutOfMemoryError -XX:+HeapDumpPath&#x3D;D:\\worksapce\\java\\dump</p>\n<p>debug结果如下：只产生了StackOverflowError异常。</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E6%A0%88%E5%BC%82%E5%B8%B8%E7%BB%93%E6%9E%9C1.jpg\" loading=\"lazy\"></p>\n<p>而在多线程环境中测试，才可以模拟出OutOfMemoryError异常。</p>\n<p><strong>特别提醒：此代码运行时会导致系统假死，具有一定的风险性，请在运行前保存好其他文件。</strong></p>\n<p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">// 栈OutOfMemoryError异常</span><br><span class=\"line\">public class JVMStackOOM &#123;</span><br><span class=\"line\">    private void dontStop() &#123;</span><br><span class=\"line\">        while(true)&#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // 危险代码请勿随便尝试</span><br><span class=\"line\">    public void stackLeakByThread() &#123;</span><br><span class=\"line\">        // 死循环不断创建线程</span><br><span class=\"line\">        while(true) &#123;</span><br><span class=\"line\">            new Thread(()-&gt; doneStop()).start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        JVMStackOOM oom = new JVMStackOOM();</span><br><span class=\"line\">        oom.stackLeakByThread();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>由于在做这项危险的测试时，系统死掉了，所以笔者并没有得出实际结果，根据&lt;&lt;深入理解java虚拟机：JVM高级特性和最佳实践&gt;&gt;，这里给出理论结果，也可以在虚拟机系统中尝试运行此代码，但也可能会出现外部系统假死的情况，读者可以自己去尝试。</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E6%A0%88%E5%BC%82%E5%B8%B8%E7%BB%93%E6%9E%9C2.jpg\" loading=\"lazy\"></p>\n<h2 id=\"方法区内存异常\"><a href=\"#方法区内存异常\" class=\"headerlink\" title=\"方法区内存异常\"></a>方法区内存异常</h2><p>方法区有运行时常量池，如果向常量池中添加大量的内容，就可以导致方法区内存异常，可以通过-XX:PermSize和-XX:MaxPermSize来限制方法区的大小，进而限制常量池的容量，常量池在编译期可以放入常量，在运行时可以再添加新的常量，因为不存在内存被占用无法回收，所以这里的异常不是内存泄漏导致的，而是内存溢出。</p>\n<p>代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RuntimeConstantPoolOOM</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] agrs)</span> &#123;</span><br><span class=\"line\">        List&lt;String&gt; strs = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            list.add(String.of(i++).intern());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>经过实际测试，发现JDK6会出现下面内存异常的情况，而在JDK7和JDK8中，发现垃圾收集器会不断的回收常量池的旧常量所占用的内存，以便新的常量可以进入，从而避免了常量池内存异常发生，这说明新版本的JDK对这部分做了优化。</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E6%96%B9%E6%B3%95%E5%8C%BA%E5%B8%B8%E9%87%8F%E6%B1%A0%E5%86%85%E5%AD%98%E5%BC%82%E5%B8%B8.jpg\" loading=\"lazy\"></p>\n<p>方法区用来存放类的相关信息，如类名，访问修饰符，常量池，字段描述，方法描述等，是方法区内存异常的大致思路是产生大量的类填满方法区，直到方法区内存溢出。由于实验操作起来比较麻烦。可以通过字节码增强技术，直接操作字节码来动态的生成大量的类，比较没有测试过，所以这里也是使用书中的运行结果。</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E6%96%B9%E6%B3%95%E5%8C%BA%E5%86%85%E5%AD%98%E5%BC%82%E5%B8%B8.jpg\" loading=\"lazy\"></p>\n<h2 id=\"直接内存异常\"><a href=\"#直接内存异常\" class=\"headerlink\" title=\"直接内存异常\"></a>直接内存异常</h2><p>直接内存的大小可以通过 -XX:MaxDirectMemorySize来指定，如果不指定默认是和java堆的最大值(-Xmx)一样，可以通过使用Unsafe类申请内存，有该类的使用限制，只有引导类的加载器才会返回对象实例，所以只能通过反射来获取Unsafe类的实例，但是在Eclipse中导入该类的包会报错，解决方法参考文章</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3lhb2NoYW5nbGlhbmcxNTkvYXJ0aWNsZS9kZXRhaWxzLzUwNTU2Nzcy\">elipse中解决import sun.misc.Unsafe报错的方法<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 模拟自己内存异常</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DirectMemoryOOM</span> &#123;</span><br><span class=\"line\">    pivate <span class=\"keyword\">static</span> <span class=\"type\">final</span> <span class=\"variable\">_1Mb</span> <span class=\"operator\">=</span> <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">Field</span> <span class=\"variable\">field</span> <span class=\"operator\">=</span> Unsafe.class.getDeclaredFields()[<span class=\"number\">0</span>];</span><br><span class=\"line\">        f.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"type\">Unsafe</span> <span class=\"variable\">safe</span> <span class=\"operator\">=</span> (Unsafe)field.get(<span class=\"literal\">null</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 申请内存</span></span><br><span class=\"line\">            safe.allocateMemory(_1Mb);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>debug参数： -verbose:gc -Xmx20M -Xms20M -XX:MaxDirectMemorySize&#x3D;100M -XX:+PrintGCDetails</p>\n<p>由于在eclipse中使用jdk1.6和jdk1.7运行该程序时会直接闪退，无法得到输出的异常，所以直接在控制台中使用jdk1.8编译运行该程序。运行结果如下：</p>\n<p><img src=\"https://wenshixin.gitee.io/blog/2018/08/28/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98%E5%BC%82%E5%B8%B8.jpg\" loading=\"lazy\"></p>\n<p><strong>注意：模拟内存异常是一件危险的事情，所以务必在测试前保存好各种文件，以免造成文件内容丢失.</strong></p>\n<h1 id=\"JVM那个区域出现的OutOfMemoryError\"><a href=\"#JVM那个区域出现的OutOfMemoryError\" class=\"headerlink\" title=\"JVM那个区域出现的OutOfMemoryError\"></a>JVM那个区域出现的OutOfMemoryError</h1><p>对内存结构清晰的认识同样可以帮助理解不同的OutOfMemoryError：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Exception in thread <span class=\"string\">&quot;main&quot;</span>: java.lang.OutOfMemoryError: java heap space</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>原因：</strong> 对象不能分配到堆内存中</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Exception in thread <span class=\"string\">&quot;main&quot;</span>: java.lang.OutOfMemoryError: PerGen space</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>原因：</strong> 类或方法不能被加载到持久代，他可能出现在一个程序加载很多类的时候，比如引用了很多第三方的库；</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Exception in thread <span class=\"string\">&quot;main&quot;</span>: java.lang.OutOfMemoryError：Requested array size exceeds VM limit</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>原因：</strong> 创建的数组大于堆内存的空间</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Exception in thread <span class=\"string\">&quot;main&quot;</span>：java.lang.OutOfMemoryError：request &lt;size&gt; bytes <span class=\"keyword\">for</span> &lt;reason&gt;，Out of swap space?</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>原因：</strong> 本地方法内存分配失败，JNI，本地库和java虚拟机都会从本地堆中分配内存空间。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Exception in thread <span class=\"string\">&quot;main&quot;</span>：java.lang.OutOfMemoryError：&lt;reason&gt; &lt;satck trace&gt;(navite method)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>原因：</strong> 同样也是本地方法内存分配失败，只不过是JNI或者本地方法或者java虚拟机发现</p>\n</blockquote>\n","categories":["JVM"],"tags":["JVM"]},{"title":"JVM系列之java服务gc参数调优案例","url":"/jvm/2018-04-06-JVM%E7%B3%BB%E5%88%97%E4%B9%8Bjava%E6%9C%8D%E5%8A%A1gc%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98%E6%A1%88%E4%BE%8B/","content":"<h1 id=\"背景以及遇到的问题\"><a href=\"#背景以及遇到的问题\" class=\"headerlink\" title=\"背景以及遇到的问题\"></a>背景以及遇到的问题</h1><p>我们的java HTTP服务属于OLTP类型，对成功率和响应速度的要求比较高，在生存环境中出现偶然的成功率突然下降后又自动恢复的情况。如下图所示:</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/articlex.png\" loading=\"lazy\"></p>\n<p>JVM和GC相关的参数如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">-Xmx22528m</span><br><span class=\"line\">-Xms22528m</span><br><span class=\"line\">-XX:NewRatio=2</span><br><span class=\"line\">-XX:+UseConcMarkSweepGC</span><br><span class=\"line\">-XX:+UseParNewGC</span><br><span class=\"line\">-XX:+CMSParallelRemarkEnabled</span><br></pre></td></tr></table></figure>\n\n<p>总结来说，由于服务器中大量使用cache, 所以堆大小开到了22G，GC算法使用CMS，开启了降低标记卡(CMSParallelRemarkEnabled), 设置了年轻代为并行收集，年轻代和老年代比如为1:2</p>\n<p>JVM GC日志相关的参数如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">-Xloggc:/data/gc.log</span><br><span class=\"line\">-XX:GCLogFileSize=10m</span><br><span class=\"line\">-XX:NumberOfGCLogFiles=10</span><br><span class=\"line\">-XX:+UseGCLogFileRotation</span><br><span class=\"line\">-XX:+PrintGCDateStamps</span><br><span class=\"line\">-XX:+PrintGCTimeStamps</span><br><span class=\"line\">-XX:+PrintGCDetails</span><br><span class=\"line\">-XX:+DisableExplicitGC</span><br><span class=\"line\">-verbose:gc</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"问题的解决过程\"><a href=\"#问题的解决过程\" class=\"headerlink\" title=\"问题的解决过程\"></a>问题的解决过程</h1><h2 id=\"排除应用程序的内存使用问题\"><a href=\"#排除应用程序的内存使用问题\" class=\"headerlink\" title=\"排除应用程序的内存使用问题\"></a>排除应用程序的内存使用问题</h2><p>首先使用jmap查看内存使用情况:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">jmap -histo:live PID</span><br></pre></td></tr></table></figure>\n<p>这个命令把程序中当前的对象按照个数和占用的空间排序以后打印出来。这里没有发现使用异常的对象。</p>\n<h2 id=\"排除cache内容过多的问题\"><a href=\"#排除cache内容过多的问题\" class=\"headerlink\" title=\"排除cache内容过多的问题\"></a>排除cache内容过多的问题</h2><p>如果cache内容过多也会导致JVM老年代容易被用满导致频繁GC，因此调出GC日志进行查看，发现每次GC以后内存使用一般是从20G降到5G多，因此常驻内存的cache不是导致GC长时间卡顿的根本原因，对于GC log的查看有多种方式，使用Visualvm比较直观，需要使用VisualGC:</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/articlex_VisualVM.png\" loading=\"lazy\"></p>\n<p>从图中可以看出Eden和老年代d 空间分配，由于整体内存是21G，设置-XX:NewRatio&#x3D;2, 因此老年代14G，Eden+S0+S1&#x3D;7G</p>\n<h2 id=\"调整GC时间点-成功率抖动问题加重\"><a href=\"#调整GC时间点-成功率抖动问题加重\" class=\"headerlink\" title=\"调整GC时间点(成功率抖动问题加重)\"></a>调整GC时间点(成功率抖动问题加重)</h2><p>如果GC需要处理的内存量比较大，执行时间也就比较长，STW时间也就更长，按照这个思路调整CMS启动的时间点，希望提早GC，也就是让GC变得更加频繁但是期望每次执行的时间较少，添加了下面这两个参数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">-XX:+UseCMSInitiatingOccupancyOnly</span><br><span class=\"line\">-XX:CMSInitiatingOccupancyFraction=50</span><br></pre></td></tr></table></figure>\n<p>意思是说在Old区使用了50%的时候触发GC，实验后发现GC的频率有所增加，但是每次GC造成的成功率降低的现象并没有减弱，因此弃用这两个参数。</p>\n<h2 id=\"调整对象在年轻代内存中的驻留的时间-效果不明显\"><a href=\"#调整对象在年轻代内存中的驻留的时间-效果不明显\" class=\"headerlink\" title=\"调整对象在年轻代内存中的驻留的时间(效果不明显)\"></a>调整对象在年轻代内存中的驻留的时间(效果不明显)</h2><p>如果能够降低老年代GC的频率也可以达到降低GC影响的目的，因此尝试让对象在年轻代内存中进行更长时间的驻留，提升这些对象在年轻代GC时候被销毁的概率。使用参数-XX:MaxTenuringThreshold&#x3D;31调整以后收效不明显。</p>\n<blockquote>\n<p>备注:</p>\n<ol>\n<li>MaxTenuringThreshold在1.5.0_05之前最大值可以设置成31，1.5.0_06以后最大值可以设置为15，超过15会被认为无限大。</li>\n<li>提升年轻代GC被销毁的频率，只是调整这个参数效果不大，第二次age的值会重新计算。</li>\n</ol>\n</blockquote>\n<h2 id=\"CMS-Remark之前强制进行年轻代的GC\"><a href=\"#CMS-Remark之前强制进行年轻代的GC\" class=\"headerlink\" title=\"CMS-Remark之前强制进行年轻代的GC\"></a>CMS-Remark之前强制进行年轻代的GC</h2><p>首先补充一下CMS的相关知识，在CMS整个过程中有两个步骤是STW的，如图红色部分：</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/articlex_cms.png\" loading=\"lazy\"></p>\n<p>CMS并没有暂停，而是用两次短暂停来替代串行标记整理算法的长暂停，它的收集周期是这样的：</p>\n<ul>\n<li><ol>\n<li>初始标记(CMS-Inital-mark): 从root对象开始标记存活的对象</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>并发标记(CMS-concurrent-mark)</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>重新标记(CMS-remark): 暂停所有应用程序线程，重新标记并发标记阶段遗漏的对象(在并发标记阶段结束后对象状态更新导致)</li>\n</ol>\n</li>\n<li><ol start=\"4\">\n<li>并发清除(CMS-concurrent-sweep)</li>\n</ol>\n</li>\n<li><ol start=\"5\">\n<li>并发重设状态等待下次CMS的触发(CMS-concurrent-reset)</li>\n</ol>\n</li>\n</ul>\n<p>通过GC日志和成功率下降的时间点进行比对发现并不是每一次老年代GC都会导致成功率下降，但是从中发现了一个规律。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/cms_gc1.png\" loading=\"lazy\"></p>\n<p>前面两次GC CMS-Remark过程在4s左右造成了成功率的下降，但是第三次GC并没有对成功率造成明显的影响，CMS-Remark只有0.18s. java HTTP服务是通过nginx进行反向代理的，nginx设置超时时间是3s，所以如果GC卡顿在3s以内就不会对成功率造成太大的影响。</p>\n<p>从GC日志中又发现一个信息：</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/cms_gc2.png\" loading=\"lazy\"> </p>\n<p>在文档和相关资料中没有找到蓝色部分的含义，猜测是remark处理的内存量，处理的越多就越慢，添加下面两个参数强制在remark阶段和Full GC阶段之前先进行一次年轻代的GC，这样需要进行处理的内存量就不会太多。</p>\n<blockquote>\n<p>备注：</p>\n<ol>\n<li>蓝色部分的含义: remark标记需要清理对象的容量</li>\n<li>Full GC阶段之前先进行一次年轻代的GC的意义是：Young区对象引用了Old区的对象，如果在Old区进行清理之前不进行Young区整理，就会导致Old区被Young区引用的对象无法释放。</li>\n</ol>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">-XX:+ScavengeBeforeFullGC</span><br><span class=\"line\">-XX:+CMSScavengeBeforeRemark</span><br></pre></td></tr></table></figure>\n\n<p>调优以后效果很明显，下面是两台配置完全相同的服务器在同一时间的成功率和响应时间监控图，第一个是没有添加强制年轻代GC的参数。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/end1.png\" loading=\"lazy\"><br><img src=\"http://www.itmind.net/assets/images/2017/jvm/end2.png\" loading=\"lazy\"></p>\n<h1 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h1><ol>\n<li>在CMS-remark阶段需要对堆中所有的内存对象进行处理，如果在这个阶段之前强制执行一次年轻代GC会大量减少remark需要处理的内存数量，进而降低JVM卡顿对成功率的影响。</li>\n<li>对应java HTTP服务，JVM的卡顿时间应该小于HTTP客户端的调用超时时间，否则JVM卡顿会对成功率造成影响。</li>\n</ol>\n","categories":["JVM"],"tags":["JVM"]},{"title":"JVM系列之jvm调优工具","url":"/jvm/2018-04-07-JVM%E7%B3%BB%E5%88%97%E4%B9%8Bjvm%E8%B0%83%E4%BC%98%E5%B7%A5%E5%85%B7/","content":"<p>最近在整理一些关于介绍JVM的文章，发现有一些还没有补充全面，其中就包括如何利用工具来监控调优前后的性能变化。工具作为图形化界面来展示更能直观的发现问题，另一方面一些耗费性能的分析(dump文件分析) 一般也不会在生成环境直接分析，往往dump下来的文件大1G左右，人工分析效率低下，因此利用工具来分析JVM相关问题，往往可以达到事半功倍的效果。</p>\n<p>jvm监控分析工具一般分为两类，一种是jdk自带的工具，一种是第三方的分析工具，jdk自带工具一般在jdk bin目录下，以exe的形式直接点击就可以使用，其中包含分析工具已经很强大了，几乎涉及了方方面面，但是我们最常用的只有两个，jconsole和jvisualvm，第三方的分析工具比较多，各自的侧重点不同，比较有代表性的：MAT GChisto等。</p>\n<p>对于大型java应用程序来说，再精细的测试也难以堵住所有的漏洞，即便我们在测试阶段进行了大量卓有成效的工作，很多问题还是会在生成环境下暴露出来，并且很难在测试环境中进行重现，JVM能够记录下来问题发生时系统的部分运行状态，并将其存储在堆转储(Heap Dump)文件中，从而为我们分析和诊断问题提供了重要的依据，其中visual VM和MAT是dump文件的分析利器。</p>\n<h1 id=\"jdk自带的工具\"><a href=\"#jdk自带的工具\" class=\"headerlink\" title=\"jdk自带的工具\"></a>jdk自带的工具</h1><h2 id=\"jconsole\"><a href=\"#jconsole\" class=\"headerlink\" title=\"jconsole\"></a>jconsole</h2><p>jconsole(java monitoring and management console)是java5开始，在jdk中自带的java监控和管理控制台，用于对jvmn中内存，线程和类等监控，是一个基于jmx(java management extensions)的gui性能监测工具。jconsole使用jvm的扩展机制获取并展示虚拟机中运行的应用程序的性能和资源消耗等信息。</p>\n<p>自己在jdk&#x2F;bin目录下点击jconsole.exe即可启动，界面如下：</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jconsole01.jpg\" loading=\"lazy\"></p>\n<p>在弹出的框中可以选择本机的监控本地的java应用，也可以选择远程的java服务来监控，如果监控远程服务需要在tomcat中启动脚本中添加如下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">-Dcom.sun.management.jmxremote.port=6969</span><br><span class=\"line\">-Dcom.sun.management.jmxremote.ssl=false</span><br><span class=\"line\">-Dcom.sun.management.jmxremote.authenticate=false</span><br></pre></td></tr></table></figure>\n\n<p>连接进去之后，就可以看到jconsole概览图和主要的功能：概述，内存，线程，类，vm，mbeans。</p>\n<ul>\n<li>概述 以图表的方式显示出堆内存使用量，活动线程数，已加载的类，cpu占用率的折线图，可以非常清晰的观察在程序执行过程中的变动情况。</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jconsole02.jpg\" loading=\"lazy\"></p>\n<ul>\n<li>内存 主要展示了内存的使用情况，同时可以查看堆和非堆内存的变化值对比，也可以点击执行GC来触发GC的执行</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jconsole03.jpg\" loading=\"lazy\"></p>\n<ul>\n<li>线程 主界面展示线程数的活动数和峰值，同时点击左下方线程可以查看线程的详细信息，比如线程的状态是什么，堆栈内容等，同时也可以点击&quot;检测死锁&quot;来检查线程之间是否有死锁的情况。</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jconsole04.jpg\" loading=\"lazy\"></p>\n<ul>\n<li>类 主要展示已加载类的相关信息。</li>\n<li>VM概要 展示jvm所有信息总览，包括基本信息，线程相关，堆相关，操作系统，vm参数等</li>\n<li>mbean 查看mbean的属性和方法等。</li>\n</ul>\n<h2 id=\"jvisualvm\"><a href=\"#jvisualvm\" class=\"headerlink\" title=\"jvisualvm\"></a>jvisualvm</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>jvisualvm是一个工具，它提供了一个可视界面，用于查看java虚拟机(jvm virtual machine)上运行的基于java技术的应用程序(java应用程序)的详细信息。visualvm对JDK工具所检索的jvm软件相关数据进行组织，并通过一种使您可以快速查看有多个java应用程序的数据的方式提供该信息，您可以查看本地应用程序已经远程主机上运行的应用程序的相关数据。此外，还可以捕获有关jvm软件实例的数据，并将该数据保存到本地系统，以供后期查看或者与其他用户共享。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jvisualvm.jpg\" loading=\"lazy\"></p>\n<p>jvisualvm是jdk自带的最牛逼的调优工具了，也是我们平时使用最多的调优工具，几乎涉及到jvm调优的方法面面，同样是在jdk&#x2F;bin目录下面双击jvisualvm.exe就可以启动起来和jconsole一样可以选择本地和远程，如果需要监控远程同样需要配置相关参数，主界面如下：</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jvisualvm01.jpg\" loading=\"lazy\"></p>\n<p>visualvm可以根据需要安装不同的插件，每个插件的关注点不同，有点主要监控gc，有的主要监控内存，有点监控线程等。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jvisualvm02.jpg\" loading=\"lazy\"></p>\n<p>如何安装：</p>\n<blockquote>\n<ul>\n<li><ol>\n<li>从主菜单中选择&quot;工具&quot;--&gt;&quot;插件&quot;</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>在&quot;可用插件&quot;标签中，选中该插件的&quot;安装&quot;复选框，点击&quot;安装&quot;</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>逐步完成插件安装程序.</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n<p>我这里以eclipse(pid 22296)为例，双击后直接展开，主界面展示了系统和jvm两大块内容，点击右下方jvm参数和系统属性可以参考详细的参数信息。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jvisualvm03.jpg\" loading=\"lazy\"></p>\n<p>因为visualvm插件太多，我这里主要介绍常用三个：监控，线程，visual gc</p>\n<p>监控的主页其实也就是，cpu，内存，类，线程图表</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jvisualvm04.jpg\" loading=\"lazy\"></p>\n<p>线程和jconsole功能没有太大的区别</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jvisualvm05.jpg\" loading=\"lazy\"></p>\n<p>visual gc是常常使用的一个功能，可以明显的看到年轻代，老年代的内存变化，以及gc频率，gc的时间等。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jvisualvm06.jpg\" loading=\"lazy\"></p>\n<p>以上的功能其实jconsole几乎都有，visual vm更全面更直观一些，另外visualvm非常多的其他功能，可以分析dump的内存快照，dump出来的线程快照并且进行分析等，还有其他很多插件大家可以自己去探索。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/jvisualvm07.jpg\" loading=\"lazy\"> </p>\n<h1 id=\"第三方调优工具\"><a href=\"#第三方调优工具\" class=\"headerlink\" title=\"第三方调优工具\"></a>第三方调优工具</h1><h2 id=\"MAT\"><a href=\"#MAT\" class=\"headerlink\" title=\"MAT\"></a>MAT</h2><h3 id=\"MAT是什么\"><a href=\"#MAT是什么\" class=\"headerlink\" title=\"MAT是什么\"></a>MAT是什么</h3><p>mat(memory analyzer tool)，一个基于eclipse的内存分析工具，是一个快速，功能丰富的java heap分析工具，它可以帮助我们查看内存泄漏和减少内存消耗，使用内存分析工具从众多对象中进行分析，快速的计算出在内存中对象的占用大小，看看是谁阻止了垃圾回收器的回收工作，并可以通过报表直观的查看到可能造成这种结果的对象。</p>\n<p>通常内存泄漏分析被认为是一件很有难度的工作，一般有团队中的资深人士进行，不过要介绍的mat被认为是一个傻瓜式的堆转储文件分析工具，你只需要轻轻点击一下鼠标就可以生成一个专业的分析报告，和其他内存泄漏分析工具相比，mat的使用非常容易，基本可以实现一键到位，即使是新手也能够快速上手使用。</p>\n<p>MAT以eclipse插件的形式来安装，具体的安装过程就不走这里描述了，可以利用visualvm或者是jmap命令生成堆文件，导入elipse mat中生成分析报告。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/mat01.jpg\" loading=\"lazy\"></p>\n<p>生成报表的同时，在dump文件的同级目录下生成三份(dump_top_consumers.zip，dump_leak_Suspects.zip，dump_top_components.zip)分析结果的html文件，方便发送给相关同事来查看。</p>\n<p>需要关注的是下面的Actions、Reports、Step by step区域：</p>\n<ul>\n<li>Histogram： 列出内存中的对象，对象的个数已经大小，支持正则表达式查找，也可以计算出该类所有对象的retained size</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/mat02.jpg\" loading=\"lazy\"></p>\n<ul>\n<li>Dominator Tree：；列出最大的对象以及其依赖存活的Object(大小是以Retained Heap为标准排序的)</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/mat03.jpg\" loading=\"lazy\"></p>\n<ul>\n<li>Top Customers：通过图形列出最大的object</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/mat04.jpg\" loading=\"lazy\"></p>\n<ul>\n<li>Duplicate classes：检测由多个类加载器加载的类</li>\n<li>Leak Suspects：内存泄漏分析</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/mat05.jpg\" loading=\"lazy\"></p>\n<ul>\n<li>Top Components：列出大于总堆数的百分之一的报表。</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/mat06.jpg\" loading=\"lazy\"></p>\n<ul>\n<li>Component Report：分析对象属于同一个包或者被同一个类加载器加载</li>\n</ul>\n<p>以上只是一个初级的介绍，mat还有更强大的使用，比如对比堆内存，在生产环境中往往为了定位问题，每隔几分钟dump出一个内存快照，随后在对比不同时间的堆内存的变化来发现问题。</p>\n<h2 id=\"GChisto\"><a href=\"#GChisto\" class=\"headerlink\" title=\"GChisto\"></a>GChisto</h2><p>GChisto是一款专业分析gc日志的工具，可以通过gc日志来分析：Minor GC，Full GC的时间，频率等等，通过列表，报表，图表等不同的形式来反应gc的情况，虽然界面略显粗糙，但是功能还是不错的。</p>\n<p>配置好本地的jdk环境之后，双击GChisto.jar，在弹出的输入框中点击add选择gc.log日志。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/g1.jpg\" loading=\"lazy\"></p>\n<ul>\n<li>GC Pause Stats: 可以查看gc的次数，gc的时间，gc的开销，最大gc时间和最小gc时间等，以及相应的柱状图</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/g2.jpg\" loading=\"lazy\"></p>\n<ul>\n<li>GC Pause Distribution：查看GC停顿的详细分布，x轴表示垃圾收集停顿时间，y轴表示是停顿次数。</li>\n<li>GC Timeline：显示整个时间线上的垃圾收集</li>\n</ul>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/g3.jpg\" loading=\"lazy\"></p>\n<p>不过这款工具已经不再维护，不能识别最新jdk的日志文件。</p>\n<h2 id=\"gcviewer\"><a href=\"#gcviewer\" class=\"headerlink\" title=\"gcviewer\"></a>gcviewer</h2><p>GCViewer也是一款分析小工具，用于可视化查看由Sun&#x2F;Orcale，IBM、HP和BEA java虚拟机产生的垃圾收集器的日志，gcviewer个人感觉显示的界面比较乱没有GChisto更专业一些。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/gv.jpg\" loading=\"lazy\"></p>\n<h2 id=\"GC-easy\"><a href=\"#GC-easy\" class=\"headerlink\" title=\"GC easy\"></a>GC easy</h2><p>这是一个web工具，在线使用非常方便</p>\n<p>地址：<span class=\"exturl\" data-url=\"aHR0cDovL2djZWFzeS5pby8=\">gc easy<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>进入官网，将打包好的zip或者gz为后缀的压缩包，过一会就会拿到分析结果。</p>\n<p><img src=\"http://www.itmind.net/assets/images/2017/jvm/gceasy1.png\" loading=\"lazy\"><br><img src=\"http://www.itmind.net/assets/images/2017/jvm/gceasy2.png\" loading=\"lazy\"></p>\n<p>推荐使用此工具进行gc分析</p>\n","categories":["JVM"],"tags":["JVM"]},{"title":"shell学习笔记-变量替换","url":"/shell/learn-shell-001/","content":"<h2 id=\"变量替换\"><a href=\"#变量替换\" class=\"headerlink\" title=\"变量替换\"></a>变量替换</h2><table>\n<thead>\n<tr>\n<th>语法</th>\n<th>说明</th>\n<th>示例(variable_1&#x3D;&quot;I love you,Do you love me&quot;)</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>${变量#匹配规则}</td>\n<td>从头开始匹配，最短删除</td>\n<td>var1&#x3D;${variable_1#*ov}</td>\n</tr>\n<tr>\n<td>${变量##匹配规则}</td>\n<td>从头开始匹配，最长删除</td>\n<td>var2&#x3D;${variable_1##*ov}</td>\n</tr>\n<tr>\n<td>${变量%匹配规则}</td>\n<td>从尾开始匹配，最短删除</td>\n<td>var3&#x3D;${variable_1%ov*}</td>\n</tr>\n<tr>\n<td>${变量%%匹配规则}</td>\n<td>从尾部开始匹配，最长删除</td>\n<td>var4&#x3D;${variable_1%%ov*}</td>\n</tr>\n<tr>\n<td>${变量&#x2F;旧字符串&#x2F;新字符串}</td>\n<td>替换变量内的就字符串为新字符串，只替换第一个</td>\n<td>var5&#x3D;${PATH&#x2F;bin&#x2F;BIN}</td>\n</tr>\n<tr>\n<td>${变量&#x2F;&#x2F;旧字符串&#x2F;新字符串}</td>\n<td>替换变量内的旧字符串为新字符串，全部替换</td>\n<td>var6&#x3D;${PATH&#x2F;&#x2F;bin&#x2F;BIN}</td>\n</tr>\n</tbody></table>\n<h2 id=\"字符串处理\"><a href=\"#字符串处理\" class=\"headerlink\" title=\"字符串处理\"></a>字符串处理</h2><ul>\n<li><p>计算字符串长度</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">len=$&#123;#var&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取字符索引位置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">expr index &quot;$var&quot; substr</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取子串长度</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">expr match &quot;$var&quot; substr</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>截取字符串</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"variable\">$&#123;var:position&#125;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">$</span><span class=\"language-bash\">&#123;var:position:length&#125;</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">: -position 之间有空格</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$</span><span class=\"language-bash\">&#123;string: -position&#125; or <span class=\"variable\">$&#123;string:(position)&#125;</span></span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","categories":["shell"],"tags":["shell"]},{"title":"JVM系列之jvm知识点总览","url":"/jvm/2018-04-08-JVM%E7%B3%BB%E5%88%97%E4%B9%8Bjvm%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E8%A7%88/","content":"<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pdHlvdWtub3cuY29tL2phdmEvMjAxNy8wMy8wMS9qdm0tb3ZlcnZpZXcuaHRtbA==\">http://www.ityouknow.com/java/2017/03/01/jvm-overview.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n","categories":["JVM"],"tags":["JVM"]},{"title":"JVM系列之如何优化java gc","url":"/jvm/2018-04-09-JVM%E7%B3%BB%E5%88%97%E4%B9%8B%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96java%20gc/","content":"<p>从前面的内容，我们了解到不同的GC算法的执行过程，GC的工作原理，新生代和老年代的概念，JDK7中你需要了解的5种GC类型以及每一种GC对性能的影响。这篇文章基于实际生产环境中的案例，介绍几个GC优化的最佳参数设置。</p>\n<h1 id=\"GC优化是必要的吗\"><a href=\"#GC优化是必要的吗\" class=\"headerlink\" title=\"GC优化是必要的吗?\"></a>GC优化是必要的吗?</h1><p>或者更准确的说，GC优化对java基础服务来说是必要的吗？答案是否定的，事实上GC优化对java基础服务来说在有些场合是可以省去的，但前提是这些正在运行的java系统，必须包含以下参数或者行为：</p>\n<ul>\n<li>内存大小已经通过-Xms和-Xmx参数指定过。</li>\n<li>运行在server模式下(使用-server参数)</li>\n<li>系统中没有残留超时日志之类的错误日志。</li>\n</ul>\n<p>换句话说，如果你在运行时没有手动设置内存大小并且打印出了过多的超时日志，那你就需要对系统进行GC优化。</p>\n<p>不过你需要时刻谨记一句话：GC tuning is the last task to be done</p>\n<p>现在来想一想GC优化的最根本原因，垃圾收集器的工作原理就是清除java创建的对象，垃圾收集器需要清理的对象数量以及要执行的gc数量均取决于已创建的对象数量，因此，为了使你的系统在gc上表现良好，首先需要减少创建对象的数量。</p>\n<p>俗话说&quot;冰冻三尺非一日之寒&quot;, 我们在编码时要首先把下面这些小细节做好，否则一些琐碎的不良代码累积起来将gc的工作变得繁重而难于管理：</p>\n<ul>\n<li>使用StringBuilder或者StringBuffer来代替Stirng</li>\n<li>尽量少输出日志</li>\n</ul>\n<p>尽管如此，仍然会有我们束手无策的情况，xmlh和json解析过程往往占用了最多的内存，即使我们已经尽可能得减少用String，少输出日志，仍然会有大量的临时内存(大约10-100MB)被用来解析xml和json文件，但我们有很难弃用xml和json，在此只需要知道这一过程会占用大量内存即可。</p>\n<p>如果在经过几次重复的优化后应用程序的内存占用情况有所改善，那么就可以启动GC优化了</p>\n<p>GC优化的两个目的：</p>\n<ul>\n<li><ol>\n<li>进入老年代的对象数量降到最低</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>减少Full的执行时间</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"将进入老年代的对象数量降到最低\"><a href=\"#将进入老年代的对象数量降到最低\" class=\"headerlink\" title=\"将进入老年代的对象数量降到最低\"></a>将进入老年代的对象数量降到最低</h2><p>除了可以在JDK7以及更高版本中使用G1收集器以外，其他分代GC都是有Oracle JVM提供的，关于分代GC，就是对象在Eden区被创建，随后被转移到Survivor区，在此之后剩余的对象会被转入到老年代，也有一些对象由于占用内存过大，在Eden区被创建后直接被传入老年代，老年代GC相对来说比新生代GC更耗时，因此，减少进入老年代的对象数量可以显著降低Full GC的频率，你可能以为减少进入老年代的对象数量意味着把它们留在新生代，事实正好相反，新生代内存的大小是可以调节的。</p>\n<h2 id=\"降低Full-GC的时间\"><a href=\"#降低Full-GC的时间\" class=\"headerlink\" title=\"降低Full GC的时间\"></a>降低Full GC的时间</h2><p>Full GC的执行时间比Minor GC要长的多，因此，如果在Full GC上花费过多的时间(超过1s)，将可能出现超时错误。</p>\n<ul>\n<li>如果通过减少老年代内存来减少Full GC时间，可能会引起OutOfMemoryError或者导致Full GC的频率升高。</li>\n<li>另外，如果通过增加老年代内存来降低Full GC的频率，Full GC的时间可能因此增加。</li>\n</ul>\n<p>因此，你需要把老年代的大小设置成一个合适的值。</p>\n<h1 id=\"影响GC性能的参数\"><a href=\"#影响GC性能的参数\" class=\"headerlink\" title=\"影响GC性能的参数\"></a>影响GC性能的参数</h1><p>不要幻想着&quot;如果有人用他设置的GC参数获取了不错的性能，我们为什么不复制他的参数设置呢？&quot;，因为对于不同的web服务，他们创建对象的大小和生命周期都不相同。</p>\n<p>举一个简单的例子：如果一个任务的执行条件是A、B、C、D和E，另外一个完全相同的任务执行条件只有A和B，那么那一个任务执行速度更快呢，作为常识来讲，答案很明显是后者。</p>\n<p>Java GC参数的设置也是这个道理，设置好几个参数并不会提升GC的执行速度，反而会是它变得更慢，GC优化的基本原则就是将不同的GC参数应用到两个及以上的服务器上然后比较它们的性能，然后将那些被证明可以提高性能或者减少GC执行时间的参数应用到最终的工作服务器上。</p>\n<p>下面这张表展示了内存大小相关且会影响GC性能的GC参数</p>\n<table>\n<thead>\n<tr>\n<th align=\"right\">类型</th>\n<th align=\"right\">参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"right\">堆内存大小</td>\n<td align=\"right\">-Xms</td>\n<td>启动JVM时堆内存的大小</td>\n</tr>\n<tr>\n<td align=\"right\"></td>\n<td align=\"right\">-Xmx</td>\n<td>堆内存的最大限制</td>\n</tr>\n<tr>\n<td align=\"right\">新生代空间大小</td>\n<td align=\"right\">-XX:NewRatio</td>\n<td>新生代和老年代的内存比</td>\n</tr>\n<tr>\n<td align=\"right\"></td>\n<td align=\"right\">-XX:NewSize</td>\n<td>新生代内存大小</td>\n</tr>\n<tr>\n<td align=\"right\"></td>\n<td align=\"right\">-XX:SurvivorRatio</td>\n<td>Eden区和Survivor区的内存比</td>\n</tr>\n</tbody></table>\n<p>在进行GC优化时最常用的参数是-Xms，-Xmx和-XX:NewRatio. -Xms和-Xmx参数通常是必须的。所以NewRatio的值将对GC性能产生重要的影响。</p>\n<p>有些人可能会问如何设置永久代内存大小，你可以用-XX:PermSize和-XX:MaxPermSize参数来进行设置，但是要记住，只有当出现OutOfMemoryError错误时你才需要去设置永久代内存。</p>\n<p>还有一个会影响GC性能的因素是垃圾收集器的类型，下面展示了关于GC类型的可选参数(基于JDK 6.0)</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">GC类型</th>\n<th align=\"left\">参数</th>\n<th align=\"left\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Serial GC</td>\n<td align=\"left\">-XX:+UseSerialGC</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Parallel GC</td>\n<td align=\"left\">-XX:+UseParallel  -XX:ParallelGCThreads&#x3D;value</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">Parallel Compacting GC</td>\n<td align=\"left\">-XX:+UseParallelOldGC</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">CMS GC</td>\n<td align=\"left\">-XX:+UseConcMarkSweepGC  -XX:+UseParNewGC  -XX:+CMSParallelRemarkEnabled  -XX:CMSInitiatingOccupancyFraction&#x3D;value  -XX:+UseCMSInitiatingOccupancyOnly</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">G1</td>\n<td align=\"left\">-XX:+UnlockExperimentalVMOptions   -XX:+UseG1GC</td>\n<td align=\"left\">在JDK6中这两个参数必须配合使用</td>\n</tr>\n</tbody></table>\n<p>除了G1收集器外，可以通过设置上表中每种类型第一行的参数来切换GC类型，最常见的非侵入式GC就是Serial GC，它针对客户端系统进行了特别的优化。</p>\n<p>会影响GC性能的参数还有很多，但是上面的参数会带来最显著的效果，请切记，设置太多的参数并不一定会提升GC的性能。</p>\n<h1 id=\"GC优化的过程\"><a href=\"#GC优化的过程\" class=\"headerlink\" title=\"GC优化的过程\"></a>GC优化的过程</h1><p>GC优化过程和大多数常见的提升性能的过程类似，下面是使用的流程：</p>\n<ol>\n<li>监控GC状态</li>\n</ol>\n<p>你需要监控GC从而检查系统中运行的GC的各种状态。</p>\n<ol start=\"2\">\n<li>分析监控结果后决定是否需要优化GC</li>\n</ol>\n<p>在检查GC状态后，你需要分析监控结果并决定是否需要进行GC优化，如果分析结果显示运行GC的时间只要0.1-0.3秒，那么就不需要把时间浪费在GC优化上，但如果运行GC的时间达到1-3秒，甚至大于10秒，那么GC优化将是很有必要的。</p>\n<p>但是，如果你已经分配了大约10G内存给java，并且这些内存无法省下，那么就无法进行GC优化了，在进行GC优化之前，你需要考虑为什么你需要分配这么大的内存空间，如果你分配了1G或者2G大小的内存并且出现了OutOfMemoryError，那你就应该执行堆转储(heap dump)来消除导致异常的原因。</p>\n<blockquote>\n<p>注意：<br>堆转储(heap dump)是一个用来检查java内存中的对象和数据的内存文件。该文件可以通过通过执行JDK中的jmap命令来创建，在创建文件的过程中，所有java程序都将暂停，因此，不要再系统执行过程中创建该文件.</p>\n</blockquote>\n<ol start=\"3\">\n<li>设置GC类型&#x2F;内存大小</li>\n</ol>\n<p>如果你决定要进行GC优化，那么你需要选择一个GC类型并且为它设置内存大小，此时如果你有多个服务器，请如上文提到的那样，在每台服务器上设置不同的GC参数并分析它们的区别。</p>\n<ol start=\"4\">\n<li>分析结果</li>\n</ol>\n<p>在设置完GC参数后就可以开始收集数据，请在收集至少24小时后再进行结果分析，如果你足够幸运，你可能会找到系统的最佳GC参数，如若不然，你还需要分析输出日志并检查分配的内存，然后需要通过不断GC类型&#x2F;内存大小来找到系统的最佳参数。</p>\n<ol start=\"5\">\n<li>如果结果令人满意，将参数应用到所有服务器上并结束GC优化</li>\n</ol>\n<p>如果GC优化的结果令人满意，就可以将参数应用到所有服务器上，并停止GC优化。</p>\n<p>下面详细阐述每一步所做的具体工作。</p>\n<h1 id=\"监控GC状态并分析结果\"><a href=\"#监控GC状态并分析结果\" class=\"headerlink\" title=\"监控GC状态并分析结果\"></a>监控GC状态并分析结果</h1><p>在运行中的web应用服务器，上查看GC状态的最佳方式就是使用jstat命令。前面已经介绍过jstat命令，</p>\n<p>下面的例子展示了某个还没有执行GC优化的jvm的状态(虽然它并不是运行服务器)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ jstat -gcutil 21719 1s</span><br><span class=\"line\">S0    S1    E    O    P    YGC    YGCT    FGC    FGCT GCT</span><br><span class=\"line\">48.66 0.00 48.10 49.70 77.45 3428 172.623 3 59.050 231.673</span><br><span class=\"line\">48.66 0.00 48.10 49.70 77.45 3428 172.623 3 59.050 231.673</span><br></pre></td></tr></table></figure>\n<p>我们先看一下YGC(从应用程序启动到采样时发生Young GC的次数)和YGCT(从应用程序启动采样时Young GC所用的时间(单位秒)), 计算YGCT&#x2F;YGC会得出，平均每次新生代的GC耗时50ms, 这是一个很小的数字，通过这个结果可以看出，我们大可不必关注新生代GC对GC性能的影响。</p>\n<p>现在来看一下FGC(从应用程序启动到采样时发生Full GC的次数)和FGCT(从应用程序启动到采样时Full GC所用的时间(单位秒))，计算FGCT&#x2F;FGC会得出，平均每次老年代的GC耗时19.86s，有可能是执行了三次Full GC，每次耗时19.68s，也可能是有两次只花了1s，另外花了58s。不管是哪一种情况，GC优化都是很有必要的。</p>\n<p>使用jstat命令可以很容易地查看GC状态，但是分析GC的最佳方式是加上 -verbosegc参数来生成日志。在之前的文章中笔者已经解释了如何分析这些日志。HPJmeter是比较常用的的用于分析-verbosegc生成的日志的工具，它简单易用，使用HPJmeter可以很容易地查看GC执行时间以及GC发生频率。</p>\n<p>此外，如果GC执行时间满足下列所有条件，就没有必要进行GC优化了：</p>\n<ul>\n<li>Minor GC执行非常迅速(50ms以内)</li>\n<li>Minor GC没有频繁执行(大约10s执行一次)</li>\n<li>Full GC执行非常迅速(1s以内)</li>\n<li>Full GC没有频繁执行(大约10min执行一次)</li>\n</ul>\n<p>括号中的数字并不是绝对的，他们也随着服务的状态而变化。有些服务可能要求一次Full GC在0.9s以内，而有些则会放得更宽一些，因此，对于不同的服务。需要按照不同的标准考虑是否需要执行GC优化。</p>\n<p>当检测GC状态时，不能只查看Minor GC和Full GC的时间，还必须要关注GC执行的次数，如果新生代空间太小，Minor GC会非常频繁地执行(有时每秒执行一次，甚至更多)，此外。传入老年代的对象数目也会上升，从而导致Full GC的频率升高，因此，在执行jstat命令时，请使用gccapacity参数来查看具体占用了多少空间。</p>\n<h1 id=\"设置GC类型-x2F-内存大小\"><a href=\"#设置GC类型-x2F-内存大小\" class=\"headerlink\" title=\"设置GC类型&#x2F;内存大小\"></a>设置GC类型&#x2F;内存大小</h1><h2 id=\"设置GC类型\"><a href=\"#设置GC类型\" class=\"headerlink\" title=\"设置GC类型\"></a>设置GC类型</h2><p>JVM有5种垃圾收集器，但是在JDK7以前的版本中，你只能在Parallel GC，Parallel Compacting GC和CMS GC之中选择。至于具体选择哪个，则没有具体的的原则和规则。</p>\n<p>既然这样的话，我们如何来选择GC呢？最好的方法是把三种都用上，但是有一点必须明确CMS GC通常比其他并行(Parallel) GC都要快(这是因为CMS GC是并发的GC)，如果确实如此，那只选择CMS GC优化就可以了，不过CMS GC也总是更快，当出现Concurrent mode failure时，CMS GC就会比并行GC更慢了。</p>\n<ul>\n<li>Concurrent mode failure</li>\n</ul>\n<p>现在我们来深入地了解一下concurrent mode failure。</p>\n<p>并行GC和CMS GC的最大的区别在于并行GC采用&quot;标记-整理&quot;(Mark-Compact)算法而CMS GC采用&quot;标记-清除&quot;(Mark-Sweep)算法，compact步骤就是通过移动内存来消除内存碎片，从而消除分配内存的内存之间的空白区域。</p>\n<p>对于并行GC来说，无论何时执行Full GC。都会进行Compact工作，这消耗了太多时间，不过在执行完Full GC后，下次分配内存将会变得更快(因为执行顺序分配相邻的内存)。</p>\n<p>相反，CMS GC没有compact的过程，因此CMS GC运行速度更快，但是也是由于没有整理内存，在进行磁盘清理之前，内存中会存在很多零碎的空白区域，这也导致没有足够的空间分配给大对象，例如，在老年代还有300M可用的空间，但是连一个10M的对象都没有办法被顺序存储在老年代中，在这种情况下，会报出&quot;concurrent mode failure&quot;的warning，然后系统执行compact操作，但是CMS GC在这种情况下执行的compact操作耗时要比并行GC高很多，并且还会导致另外一个问题，关于“concurrent mode failure”的详细说明，可用参考Oracle工程师撰写的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9ncy5vcmFjbGUuY29tL3Bvb25hbS91bmRlcnN0YW5kaW5nLWNtcy1nYy1sb2dz\">Understanding CMS GC Logs<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>综上所述，你需要根据你的系统情况为其选择一个最合适的GC类型。</p>\n<p>每个系统都有最合适它的GC类型等着你去寻找，如果你有6台服务器，我建议你每两台服务器设置相同的参数，然后加上-verbosegc参数再分析结果。</p>\n<h2 id=\"设置内存大小\"><a href=\"#设置内存大小\" class=\"headerlink\" title=\"设置内存大小\"></a>设置内存大小</h2><p>下面展示了内存大小，GC运行次数和GC运行时间之间的关系；</p>\n<ul>\n<li>大内存空间</li>\n</ul>\n<ol>\n<li>减少GC的次数</li>\n<li>提高了GC的运行时间</li>\n</ol>\n<ul>\n<li>小内存空间</li>\n</ul>\n<ol>\n<li>增多了GC的次数</li>\n<li>降低了GC的运行时间</li>\n</ol>\n<p>关于如何设置内存的大小，没有一个标准的答案，如果服务器资源充足并且Full GC能在1s内完成，把内存设置为10GB也是可以的，但是大部分服务器并不处于这种状态中，当内存设置为10G时，Full GC会耗时10-30s，具体的时间自然与对象的大小有关。</p>\n<p>既然如此，我们该如何设置内存大小呢，通常我推荐设为500M，这里不是说你要通过-Xms500M和-Xmx500M参数来设置WAS内存，根据GC优化之前的状态，如果Full GC后还剩余300M的空间，那么把内存设置为1G是一个不错的选择(300M(默认程序占用) + 500M(老年代最小空间) + 200M(空闲内存))。这意味着你需要为老年代设置至少500M空间，因此如果你有三个运行服务器，你可以把它们的内存分别设置为1G，1.5G，2G，然后检查结果。</p>\n<p>理论上来说，GC执行速度应该遵循1G &gt; 1.5G &gt; 2G，1G内存时GC执行速度更快，然而，理论上的1G内存Full GC消耗1s。2G内存Full GC消耗2s在实际情况中是无法保证的，实际的运行时间还依赖于服务器的性能和对象大小，因此，最好的方法是创建尽可能多的的测量数据并监视它们。</p>\n<p>在设置内存空间大小时，你还需要设置一个参数：NewRatio。NewRatio的值是新生代和老年代空间大小的比例，如果-XX:NewRatio&#x3D;1, 则新生代空间:老年代空间&#x3D;1:1，如果堆内存为1G。则新生代:老年代&#x3D;500M:500M，如果NewRation&#x3D;2，这新生代:老年代&#x3D;1:2, 因此，NewRation的值越大，则老年代空间越大，新生代空间越小。</p>\n<p>你可能会认为NewRatio为1会是做好的选择，然而事实并非如此，根据经验知道，当NewRatio设置为2或者3时，整个GC的状态表现最好。</p>\n<p>完成GC优化最快的方式是什么？答案是比较性能测试结果，为了给每台服务器设置不同的的参数并监控它们，最好查看的是一天或者两天的数据，当通过性能测试来进行GC优化时，你需要在不同的测试时保证它们有相同的负载和运行环境，然而，即使是专业的性能测试人员，想精确的控制负载也很困难，并且需要大量的时间准备，因此，更加方便容易的方法是直接设置参数来运行，然后等待运行结果。</p>\n<h1 id=\"分析GC优化的结果\"><a href=\"#分析GC优化的结果\" class=\"headerlink\" title=\"分析GC优化的结果\"></a>分析GC优化的结果</h1><p>在设置了GC参数和-verbosegc参数后，可以使用tail命令确保日志被正确的生成，如果参数设置的不正确或者日志为生成，那你的时间就被白白浪费了，如果日志收集没有时间的话，在收集一天或者两天数据后在检查结果，最简单的方法是把日志从服务器下载到本地，然后用HPJmeter分析数据。</p>\n<p>在分析结果时，请关注下列几点(这个优先级是根据自己的经验定的，我认为选取GC参数时应该考虑的最重要的因素是Full GC的运行时间)：</p>\n<ul>\n<li>单次Full GC的运行时间</li>\n<li>单次Minor GC的运行时间</li>\n<li>Full GC运行间隔</li>\n<li>Minor GC运行间隔</li>\n<li>整个Full GC的运行时间</li>\n<li>整个Minor GC的运行时间</li>\n<li>整个GC的运行时间</li>\n<li>Full GC的执行次数</li>\n<li>Minor GC的执行次数</li>\n</ul>\n<p>找到最佳的GC参数是件非常幸运的，然而在大多数时候，我们并不幸运，在进行GC优化时一定要小心谨慎，因为当你试图一次完成所有的优化工作时，可能会出现OutOfMemoryError错误。</p>\n<h1 id=\"优化案例\"><a href=\"#优化案例\" class=\"headerlink\" title=\"优化案例\"></a>优化案例</h1><p>到目前为止，我们一直在从理论上介绍GC优化，现在是时候将这些理论付诸实践的时候了，我们通过几个例子来很深入地理解GC优化。</p>\n<h2 id=\"示例1\"><a href=\"#示例1\" class=\"headerlink\" title=\"示例1\"></a>示例1</h2><p>下面这个例子是Service S的优化，对于最近刚开发的的Service S，执行Full GC需要消耗过多的时间。</p>\n<p>现在看一下执行jstat -gcutil的结果</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">S0 S1 E O P YGC YGCT FGC FGCT GCT</span><br><span class=\"line\">12.16 0.00 5.18 63.78 20.32 54 2.047 5 6.946 8.993</span><br></pre></td></tr></table></figure>\n<p>左边的Perm区值对于最初的GC优化并不重要，而YGC参数的值更加对于这次优化更为重要。</p>\n<p>平均执行一次Minor GC和Full GC消耗的时间如下表所示：</p>\n<ul>\n<li>Service S的Minor GC和Full GC的平均执行时间</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">GC类型</th>\n<th align=\"left\">GC执行次数</th>\n<th align=\"left\">GC执行时间</th>\n<th align=\"left\">平均值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Minor GC</td>\n<td align=\"left\">54</td>\n<td align=\"left\">2.047s</td>\n<td align=\"left\">37ms</td>\n</tr>\n<tr>\n<td align=\"left\">Full GC</td>\n<td align=\"left\">5</td>\n<td align=\"left\">6.946s</td>\n<td align=\"left\">1.389s</td>\n</tr>\n</tbody></table>\n<p>37ms对于Minor GC来说性能还可以，但1.389s对于Full GC来说意味着当Full GC发生时数据库Timeout设置为1s的系统中时，可能会频繁出现超时的情况。</p>\n<p>首先，你需要检查开始GC优化之前内存的使用情况，使用jstat -gccapacity命令可以检查内存使用情况，在笔者的服务器上查看的结果如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">NGCMN NGCMX NGC S0C S1C EC OGCMN OGCMX OGC OC PGCMN PGCMX PGC PC YGC FGC</span><br><span class=\"line\">212992.0 212992.0 212992.0 21248.0 21248.0 170496.0 1884160.0 1884160.0 1884160.0 1884160.0 262144.0 262144.0 262144.0 262144.0 54 5</span><br></pre></td></tr></table></figure>\n\n<p>其中的关键值如下:</p>\n<ul>\n<li>新生代内存使用量: 212,992k</li>\n<li>老年代内存使用量: 1,884,160k</li>\n</ul>\n<p>因此，除了永久代以外，被分配的内存空间加起来有2G, 并且新生代:老年代&#x3D;1:9， 为了得到比使用jstat更细致的结果，还需要加上-verbosegc参数获取日志，并把三台服务器安装如下方式设置(除此外没有使用任何其他参数)</p>\n<ul>\n<li>NewRatio&#x3D;2</li>\n<li>NewRatio&#x3D;3</li>\n<li>NewRatio&#x3D;4</li>\n</ul>\n<p>一天后我得到了系统的GC log，幸运的是，在设置完NewRatio后系统没有发生任何Full GC。</p>\n<p>这是为什么呢？ 这是因为大部分对象在创建之后很快被回收了，所有这些对象没有被传入老年代，而是在新生代就被销毁回收了。</p>\n<p>在这种情况下，就没有必要去改变其他的参数值了，只要选择一个最合适的NewRatio值即可，那么，如何确定最佳的NewRatio的值呢？为此，我们分析一下每种NewRatio值下Minor GC的平均响应时间。</p>\n<p>在每种参数下Minor GC的平均响应时间如下：</p>\n<ul>\n<li>NewRatio&#x3D;2 45ms</li>\n<li>NewRatio&#x3D;3 34ms</li>\n<li>NewRatio&#x3D;4 30ms</li>\n</ul>\n<p>我们可以根据GC时间的长短得出NewRatio&#x3D;4是最佳的参数值(尽管NewRatio&#x3D;4时新生代空间是最小的)。在设置完GC参数之后，服务器没有发生Full GC。</p>\n<p>为了说明这个问题，下面是服务执行一段时间后执行jstat -gcutil的结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">S0 S1 E O P YGC YGCT FGC FGCT GCT</span><br><span class=\"line\">8.61 0.00 30.67 24.62 22.38 2424 30.219 0 0.000 30.219</span><br></pre></td></tr></table></figure>\n\n<p>你可能会认为是服务器接受的请求比较少才使得GC发生的频率比较低，实际上，虽然Full GC没有执行过，但Minor GC被执行了2424次。</p>\n<h2 id=\"示例2\"><a href=\"#示例2\" class=\"headerlink\" title=\"示例2\"></a>示例2</h2><p>这是一个Service A的例子，我们提供公司内部的应用性能管理系统(APM)发现JVM暂停了相当长的时间(超过了8s)，因此我们进行了GC优化，我们努力寻找JVM暂停的原因，后来发现是因为Full GC执行时间过长，因此我们决定进行GC优化。</p>\n<p>在GC优化的开始阶段，我们加上了-verbosegc参数，结果如下图所示：</p>\n<ul>\n<li>进行GC优化之前STW的时间</li>\n</ul>\n<p><img src=\"https://pic.yupoo.com/crowhawk/ebb4b181/a24f4e9b.png\" alt=\"进行GC优化之前STW的时间\" loading=\"lazy\"></p>\n<p>上图是由HPJmeter生成的图片之一，横坐标表示JVM执行的时间，纵坐标表示每次GC的时间，CMS为绿点，表示Full GC的结果，而Parallel Scavenge为难点，表示Minor GC的结果。</p>\n<p>之前我说过CMS GC是最快的GC，但是上面的结果显示在一些时候CMS耗时达到了15s，是什么原因导致了这一结果呢？请记住我之前说的：CMS在执行compact操作时会显著变慢，此外，服务的内存通过-Xms1g和-Xmx4g设置了，而分配的内存只有4G。</p>\n<p>因此笔者将GC类型从CMS GC改为了Parallel GC，把内存大小设置为2G，并把NewRatio设为3，在执行jstat -gcutil几小时之后的结果如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">S0 S1 E O P YGC YGCT FGC FGCT GCT</span><br><span class=\"line\">0.00 30.48 3.31 26.54 37.01 226 11.131 4 11.758 22.890</span><br></pre></td></tr></table></figure>\n\n<p>Full GC的时间缩短了，变成了每次3s，跟15s比有了显著提升，但是3s依然不够快，为此，笔者创建了下面6种情况：</p>\n<ul>\n<li>case 1：-XX:UseParallelGC -Xms1536m   -Xmx1536m   -XX:NewRatio&#x3D;2</li>\n<li>case 2: -XX:UseParallelGC -Xms1536m   -Xmx1536m   -XX:NewRatio&#x3D;3</li>\n<li>case 3: -XX:UseParallelGC -Xms1g      -Xmx1g      -XX:NewRatio&#x3D;3</li>\n<li>case 4: -XX:UseParallelOldGC -Xms1536m -Xmx1536m  -XX:NewRatio&#x3D;2</li>\n<li>case 5: -XX:UseParallelOldGC -Xms1536m -Xmx1536m  -XX:NewRatio&#x3D;3</li>\n<li>case 6: -XX:UseParallelOldGC -Xms1g    -Xmx1g     -XX:NewRatio&#x3D;3</li>\n</ul>\n<p>上面哪一种情况最快？结果显示，内存空间越小，运行结果最少，下面展示了性能最好的case 6的结果图，它的最慢响应时间只有1.7s，并且响应时间的平均值已经被控制到了1s以内。</p>\n<ul>\n<li>case 6的持续时间图</li>\n</ul>\n<p><img src=\"https://pic.yupoo.com/crowhawk/026cb5ec/dd3bdbb9.png\" loading=\"lazy\"></p>\n<p>基于上图的结果，按照case 6调整了GC参数，但这却导致了每晚都会发生OutOfMemoryError。很难解释发生异常的具体原因。简单的说，应该是批处理程序导致了内存泄漏，我们正在解决相关的问题。</p>\n<p>如果只对GC日志做一些短时间的分析就将相关参数部署到所有服务器行来执行GC优化，这是非常危险的，切记，只有当你同时仔细分析服务的执行情况和GC日志后，才能保证GC优化没有错误地执行。</p>\n<p>在上文中，我们通过两个GC优化的例子来说明GC优化是怎样执行的，正如上文中提到的，例子中设置了GC参数可以设置在相同的服务器之上，但前提是它们具有相同的CPU，操作系统，JDK版本并且运行这相同的服务，此外，不要把我使用的参数照搬到你的应用上，它们可能在你的服务器上并不能起到同样良好的效果。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>笔者没有执行heap dump并分析内存的详细情况，而是通过自己的经验进行GC优化，精确的分析内存可以得到更好的优化效果，不过这种分析一般只适用于内存使用量相对固定的场景，如果服务器严重过载并占有了大量的内存，则建议你根据之前的经验进行GC优化。</p>\n<p>笔者已经在一些服务器上设置了G1 GC参数并进行了性能测试，但还没有应用到生成环境，G1 GC的速度快于任何其他的GC类型，但是你必须升级到JDK7，此外，暂时还无法保证它的稳定性，没有人知道运行时是否会出现致命的错误，因此，G1 GC暂时还不适合投入应用。</p>\n","categories":["JVM"],"tags":["JVM"]},{"title":"从JVM模型谈十种内存溢出以及解决方法","url":"/jvm/2018-04-12%E4%BB%8EJVM%E6%A8%A1%E5%9E%8B%E8%B0%88%E5%8D%81%E7%A7%8D%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E4%BB%A5%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/","content":"<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudG91dGlhby5jb20vYTY2MzY4NjI3MDE5ODc0MzA5MjUvP3R0X2Zyb209d2VpeGluJnV0bV9jYW1wYWlnbj1jbGllbnRfc2hhcmUmd3hzaGFyZV9jb3VudD0xJnRpbWVzdGFtcD0xNTQ1MjY1NzI5JmFwcD1uZXdzX2FydGljbGUmdXRtX3NvdXJjZT13ZWl4aW4maWlkPTI4NDU2NTA4NDIwJnV0bV9tZWRpdW09dG91dGlhb19pb3MmZ3JvdXBfaWQ9NjYzNjg2MjcwMTk4NzQzMDkyNQ==\">https://www.toutiao.com/a6636862701987430925/?tt_from=weixin&amp;utm_campaign=client_share&amp;wxshare_count=1&amp;timestamp=1545265729&amp;app=news_article&amp;utm_source=weixin&amp;iid=28456508420&amp;utm_medium=toutiao_ios&amp;group_id=6636862701987430925<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>对于java程序员来说，在虚拟机自动内存g管理机制的帮助下，不需要自己实现释放内存，不容易出现内存泄露和内存溢出的问题，有虚拟机管理内存这一切看起来很美好，但是一旦出现内存溢出或者内存泄漏的问题，对于不熟悉jvm虚拟机是怎么使用内存的话，那么排查错误将是一项非常艰巨的任务，所以在了解内存溢出之前先要搞清楚jvm的内存模型。</p>\n<p>jvm是一个抽象的计算模型，就如同一台真实的机器，他有自己的指令集和执行引擎，可以在运行时操控内存区域，目的是为构建在其之上运行的应用程序提供一个运行环境，jvm可以解读指令代码并于底层进行交互：包括操作系统平台和执行指令并管理资源的硬件体系结构。</p>\n<h1 id=\"JVM内存模型\"><a href=\"#JVM内存模型\" class=\"headerlink\" title=\"JVM内存模型\"></a>JVM内存模型</h1><p>根据java8规范，jvm运行时内存共分为虚拟机栈，堆，元空间，程序计数器，本地方法栈五个部分组成，还有一部分加直接内存，属于操作系统的本地内存，也是可以直接操作的。</p>\n<p><img src=\"http://p99.pstatp.com/large/pgc-image/ea4907261fcb444da561a528c830db9a\" loading=\"lazy\"></p>\n<ol>\n<li>元空间(metaspace)</li>\n</ol>\n<p>元空间的本质和永久代类似，都是对jvm规范中方法区的实现。不过元空间与永久代之间最大的区别在于：元空间并不在虚拟机中，而是使用本地内存。</p>\n<ol start=\"2\">\n<li>虚拟机栈(jvm stack)</li>\n</ol>\n<p>每个线程都有一个私有的栈，随着线程的创建而创建，栈里面存着的是一种&quot;栈桢&quot;的东西，每个方法会创建一个栈桢，栈桢中存放了局部变量表(基本数据类型和对象引用)，操作数栈，方法出口等信息。栈的大小可以固定也可以动态扩展。</p>\n<ol start=\"3\">\n<li>本地方法栈(native method stack)</li>\n</ol>\n<p>与虚拟机栈类型，区别是虚拟机栈执行java方法，本地方法栈执行native方法，在虚拟机规范中对本地方法栈中方法使用的语言，使用方法和数据结构没有强制规定，因此虚拟机可以自由实现它。</p>\n<ol start=\"4\">\n<li>程序计数器(program counter register)</li>\n</ol>\n<p>程序计数器可以看做是当前线程执行字节码的行号提示器。在任何一个确定的时刻，一个处理器(对于多内核来说是一个内核)都只会执行一条线程中的指令。因此，为了线程切换后能恢复到正确的位置，每条线程都需要一个独立的程序计时器，我们称这类内存区域为&quot;线程私有&quot;内存。</p>\n<ol start=\"5\">\n<li>堆内存(heap)</li>\n</ol>\n<p>堆内存是jvm所有线程共享的部分，在虚拟机启动的时候就已经创建，所有的对象和数值都在堆上进行分配，这部分空间可通过GC进行回收。当申请不到空间时会抛出OutOfMemoryError。堆是jvm内存占用最大，管理最复杂的一个区域。其唯一的用途就是存放对象实例；几乎所有对象实例及数组都是在堆上进行分配，jdk8以后，字符串常量池从永久代中剥离出来，存放在其中。</p>\n<ol start=\"6\">\n<li>直接内存(direct memory)</li>\n</ol>\n<p>直接内存并不是虚拟机运行时数据区的一部分，也不是java虚拟机规范中定义的内存区域，在jdk1.4中新加入了NIO(New Input&#x2F;Output)类，引入了一种基于通道(channel)与缓冲区(buffer)的I&#x2F;O方式。它可以使用native函数库直接分配堆外内存，然后通过一个存储在java堆中的DirectByteBuffer对象作为这块内存的引用进行操作，这样能在一些场景中显著提高性能，因为避免了在java堆和native堆中来回复制数据。</p>\n<h1 id=\"内存溢出的十个场景\"><a href=\"#内存溢出的十个场景\" class=\"headerlink\" title=\"内存溢出的十个场景\"></a>内存溢出的十个场景</h1><p>jvm运行时首先需要类加载器(classloader)加载所需要的字节码文件。加载完毕交由执行引擎执行，在执行过程中需要一段空间来存储数据(类比cpu与主存)。这段内存空间的分配和释放过程正是我们需要关心的运行时数据区。内存溢出的情况就是从类加载器加载的时候开始出现的，内存溢出主要分为两大类：OutOfMemoryError和StackOverflowError。以下举出10种内存溢出的情况，并通过实例代码的方式讲解是如何出现内存溢出的。</p>\n<ol>\n<li>java堆内存溢出</li>\n</ol>\n<blockquote>\n<p>当出现java.lang.OutOfMemoryError：java heap space异常时，就是堆内存溢出了。</p>\n</blockquote>\n<ul>\n<li><p><strong>问题描述</strong></p>\n<ul>\n<li>设置的jvm堆内存太小，对象所需内存空间太大，创建对象时分配空间不足，就会抛出这个异常。</li>\n<li>流量&#x2F;数据峰值，应用程序自身的处理存在一定的限额，比如一定数据量的用户或一定数据量的数据，而当用户数量或数数据量突然激增并超过预期的阈值时，那么就会在峰值停止前正常运行的操作将停止并触发java.lang.OutOfMemoryError：java heap space。</li>\n</ul>\n</li>\n<li><p><strong>示例代码</strong></p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ypb.oom;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.google.common.collect.Lists;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@className</span> HeapOOMErrorTest</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span> java堆内存内存溢出测试</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> yangpengbing</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 22:50 2018/12/20</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HeapOOMErrorTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> <span class=\"number\">1024</span> * <span class=\"number\">1025</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        List&lt;<span class=\"type\">byte</span>[]&gt; bytes = Lists.newArrayList();</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            bytes.add(<span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">5</span> * m]);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;count is: &quot;</span> + (++i));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &gt; Short.MAX_VALUE) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>以上这个示例，如果一次请求只分配5m的内存的话，请求量很少垃圾回收正常就不会出现oom，但是一旦并发上来就会超出最大内存值，就会抛出内存溢出。</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">Connected to the target VM, address: &#x27;127.0.0.1:58861&#x27;, transport: &#x27;socket&#x27;</span><br><span class=\"line\">count is: 1</span><br><span class=\"line\">count is: 2</span><br><span class=\"line\">count is: 3</span><br><span class=\"line\">Exception in thread &quot;main&quot; java.lang.OutOfMemoryError: Java heap space</span><br><span class=\"line\">\tat com.ypb.oom.HeapOOMErrorTest.main(HeapOOMErrorTest.java:22)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>解决方法</strong></li>\n</ul>\n<p>首先，如果代码没有什么问题的情况下，可以适当的调整下-Xms和-Xmx两个jvm参数，使用压力测试来调整这两个参数达到最优值。</p>\n<p>其次，尽量避免大的对象的申请，想文件上传，大批量从数据库中读取，这是需要避免的，尽量分块或者分批次去处理，有助于系统的正常稳定的执行。</p>\n<p>最后，尽量提高一次请求的执行速度，垃圾回收越早越好，否则，大量的并发来的时候，再来新的请求就无法分配内存了，就容易造成系统的雪崩。</p>\n<ol start=\"2\">\n<li>java堆内存泄漏</li>\n</ol>\n<ul>\n<li><strong>问题描述</strong></li>\n</ul>\n<p>java中内存泄漏是一些对象不再被应用程序使用但垃圾收集无法识别的情况，因此，这些未使用的对象仍然在java堆空间中无限期地存在，不停的堆积最终会触发java.lang.OutOfMemoryError。</p>\n<ul>\n<li><strong>实例代码</strong></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ypb.oom;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.google.common.collect.Maps;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@className</span> MemoryLeakOOMErrorTest</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span> 内存泄漏导致的内存溢出</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> yangpengbing</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 17:47 2018/12/23</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MemoryLeakOOMErrorTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Map&lt;Key, String&gt; map = Maps.newHashMap();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (map.size() &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">                <span class=\"type\">Key</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Key</span>(i);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (map.containsKey(key)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                map.put(key, <span class=\"string\">&quot;number: &quot;</span> + i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Key</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Integer id;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"title function_\">Key</span><span class=\"params\">(Integer id)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">hashCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> id.hashCode();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>分析思路</strong></li>\n</ul>\n<p>设置的jvm参数：-Xmx256m -Xms256m -XX:+UseConcMarkSweepGC -XX:+PrintGCDetails -XX:+PrintGCDateStamps -verbose:gc -Xloggc:E:&#x2F;log.gc -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath&#x3D;E:&#x2F;dump.hprof</p>\n<p>控制台输出的结果</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">java.lang.OutOfMemoryError: Java heap space</span><br><span class=\"line\">Dumping heap to E:/dump.hprof ...</span><br><span class=\"line\">Heap dump file created [392560701 bytes in 2.937 secs]</span><br><span class=\"line\">Exception in thread &quot;main&quot; java.lang.OutOfMemoryError: Java heap space</span><br><span class=\"line\">\tat com.ypb.oom.MemoryLeakOOMErrorTest.main(MemoryLeakOOMErrorTest.java:25)</span><br></pre></td></tr></table></figure>\n\n<p>使用jvisualvm监控得到的结果：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-2fb37624ef569abb.png\" loading=\"lazy\"></p>\n<p>从图中可知，大概在17:59:55左右开始，堆的使用比较高，持续到18:00:10左右，堆内存开始下降。18:00:25的时候，堆的使用量几乎为0，然而此时的cpu使用确实100%</p>\n<p>分析gc日志得知：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-058af6eaaa2d18e2.png\" loading=\"lazy\"></p>\n<p>可以看出老年代内存容量使用100%。young gc和full GC都太频繁。</p>\n<p>分析dump分析可知：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-d2b4c1b3a9a28c97.png\" loading=\"lazy\"></p>\n<p>在main native stack thred中占用的内存242M，占比99.77%; 主要是因为HashMap中存在大量的元素导致的。可以看出可能是存在内存泄漏。</p>\n<p>当执行上面的代码时，可能会期望它永远运行，不会出现问题，假设单纯的缓存解决方案只将底层映射扩展到10000个元素，而不是所有键都已经存在HashMap中，然而事实上元素将继续被添加，因为key类没有重新它的equals方法。</p>\n<p>随着时间推移，随着不断使用的泄漏代码，&quot;缓存&quot;结果最终会消耗大量java堆空间，当泄漏内存填充堆区域中的所有可用内存时，垃圾收集无法清理它，就会触发java.lang.OutOfMemoryError。</p>\n<ul>\n<li><strong>解决方法</strong></li>\n</ul>\n<p>相对来说对应的解决方法比较简单，重写equals方法即可</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ypb.oom;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.google.common.collect.Maps;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@className</span> MemoryLeakOOMErrorTest</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span> 内存泄漏导致的内存溢出</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> yangpengbing</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 17:47 2018/12/23</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> 1.0.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MemoryLeakOOMErrorTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Map&lt;Key, String&gt; map = Maps.newHashMap();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (map.size() &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">                <span class=\"type\">Key</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Key</span>(i);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (map.containsKey(key)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                map.put(key, <span class=\"string\">&quot;number: &quot;</span> + i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Key</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Integer id;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"title function_\">Key</span><span class=\"params\">(Integer id)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">hashCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> id.hashCode();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">equals</span><span class=\"params\">(Object obj)</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> Boolean.FALSE;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> Key) &#123;</span><br><span class=\"line\">                flag = ((Key) obj).id.equals(<span class=\"built_in\">this</span>.id);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> flag;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/14423059-fb7b9252b90ee189.png\" loading=\"lazy\"></p>\n<p>问题解决了</p>\n<ol start=\"3\">\n<li>垃圾回收超时内存溢出</li>\n</ol>\n<ul>\n<li><strong>问题描述</strong></li>\n</ul>\n<p>JVM抛出</p>\n<p>当应用程序耗尽所有可用内存时，GC开销限制超过了错误，而GC多次未能清除它，这时便会引发java.lang.OutOfMemoryError。当JVM花费大量的时间执行GC，而收效甚微，而一旦整个GC的过程超过限制便会触发错误(默认的jvm配置GC的时间超过98%，回收堆内存低于2%)。</p>\n<ul>\n<li><strong>实例代码</strong></li>\n<li><strong>解决方法</strong></li>\n</ul>\n<ol start=\"4\">\n<li>Metaspace内存溢出</li>\n</ol>\n<ul>\n<li><strong>问题描述</strong></li>\n<li><strong>实例代码</strong></li>\n<li><strong>分析思路</strong></li>\n<li><strong>解决方法</strong></li>\n</ul>\n<ol start=\"5\">\n<li>直接内存内存溢出</li>\n</ol>\n<ul>\n<li><strong>问题描述</strong></li>\n<li><strong>实例代码</strong></li>\n<li><strong>分析思路</strong></li>\n<li><strong>解决方法</strong></li>\n</ul>\n<ol start=\"6\">\n<li>栈内存溢出</li>\n</ol>\n<ul>\n<li><strong>问题描述</strong></li>\n<li><strong>实例代码</strong></li>\n<li><strong>分析思路</strong></li>\n<li><strong>解决方法</strong></li>\n</ul>\n<ol start=\"7\">\n<li>创建本地线程内存溢出</li>\n</ol>\n<ul>\n<li><strong>问题描述</strong></li>\n<li><strong>实例代码</strong></li>\n<li><strong>分析思路</strong></li>\n<li><strong>解决方法</strong></li>\n</ul>\n<ol start=\"8\">\n<li>超出交换区内存溢出</li>\n</ol>\n<ul>\n<li><strong>问题描述</strong></li>\n<li><strong>实例代码</strong></li>\n<li><strong>分析思路</strong></li>\n<li><strong>解决方法</strong></li>\n</ul>\n<ol start=\"9\">\n<li>数组超限内存溢出</li>\n</ol>\n<ul>\n<li><strong>问题描述</strong></li>\n<li><strong>实例代码</strong></li>\n<li><strong>分析思路</strong></li>\n<li><strong>解决方法</strong></li>\n</ul>\n<ol start=\"10\">\n<li>系统杀死进程内存溢出</li>\n</ol>\n<ul>\n<li><strong>问题描述</strong></li>\n<li><strong>实例代码</strong></li>\n<li><strong>分析思路</strong></li>\n<li><strong>解决方法</strong></li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1>","categories":["JVM"],"tags":["JVM","OOM"]},{"title":"mysql学习笔记-介绍和安装","url":"/mysql/learn-mysql-001/","content":"<h2 id=\"mysql版本选择\"><a href=\"#mysql版本选择\" class=\"headerlink\" title=\"mysql版本选择\"></a>mysql版本选择</h2><ol>\n<li><p>mysql5.6以后的版本，推荐使用官方版本。</p>\n</li>\n<li><p>percona中5.6版本以后，mysql将percona之前优化集成到官方版本中。</p>\n</li>\n<li><p>mariadb无innodb，且核心代码较老。</p>\n</li>\n<li><p>mysql5.6以后不断重构源码，安装包越来越大，功能和性能在持续改进。</p>\n</li>\n</ol>\n<h2 id=\"mysql下载\"><a href=\"#mysql下载\" class=\"headerlink\" title=\"mysql下载\"></a>mysql下载</h2><ol>\n<li><p>推荐下载linux-generic版本</p>\n</li>\n<li><p>不推荐version 5.5.x，有部分bug</p>\n</li>\n<li><p>推荐使用version 5.6.x和5.7.x</p>\n<blockquote>\n<p>下载地址：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZHMubXlzcWwuY29tL2FyY2hpdmVzL2NvbW11bml0eS8=\">MySQL :: Download MySQL Community Server (Archived Versions)<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"mysql安装\"><a href=\"#mysql安装\" class=\"headerlink\" title=\"mysql安装\"></a>mysql安装</h2><ol>\n<li><p>安装通用步骤：</p>\n<ul>\n<li><p>解压缩mysql-version-linux-glibc2.5-x86-64.tar.gz。</p>\n</li>\n<li><p>打开INSTALL_BINARY文件，安装shell开头的步骤进行操作。</p>\n</li>\n<li><p>将MYSQL_HOME添加到PATH中。</p>\n</li>\n<li><p>chkconfig myslqd on。</p>\n</li>\n</ul>\n</li>\n<li><p>mysql 5.6.x安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">yum install libaio <span class=\"comment\"># Debain*~: apt-get install libaiol</span></span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">groupadd mysql</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">useradd -r -g mysql mysql</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> /usr/local</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">tar zxvf /path/to/mysql-VERSION-OS. tar.gz</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">ln</span> -S full-path-to-mysql-VERSION-0S mysql</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> mysql</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">chown</span> -R mysql .</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">chgrp</span> -R mysql .</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">scripts/mysql_install_db --user=mysql</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">chown</span> -R root .</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">chown</span> -R mysql data</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">bin/mysqld_safe --user=mysql &amp;</span> </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Next <span class=\"built_in\">command</span> is optional</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cp</span> support-files/mysql.server/etc/init.d/mysql.server</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>mysql5.7.x安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">groupadd mysql</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">useradd -r -g mysql mysql</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> /usr/local</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">tar zxvf /path/to/mysql-VERSION-OS. tar.gz</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">In -s full-path-to-mysql-VERSION-OS mysql</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> mysql</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">mkdir</span> mysql-files</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">chmod</span> 770 mysql-files</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">chown</span> -R mysql .</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">chgrp</span> -R mysql .</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">bin/mysqld --initialize --user=mysal <span class=\"comment\"># 该步骤中会生成root@localhost的临时密码，需要自己记录下来</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">bin/mysql_ssl_rsa_setup</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">chown</span> -R root .</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">chown</span> -R mysql data mysql-files</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">bin/mysqld_safe --user=mysql&amp;</span> </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Next <span class=\"built_in\">command</span> is optional</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cp</span> support-files/mysql.server/etc/init.d/mysql.server</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>验证安装</p>\n<ul>\n<li><p>data目录中安装之前是空目录，安装完成之后应该有ibxxx等文件。</p>\n</li>\n<li><p>安装过程中输出的信息中，不应该含有ERROR信息，错误信息默认会写入到hostname.error的文件中</p>\n</li>\n<li><p>通过bin&#x2F;mysql命令可以正常登录。</p>\n</li>\n</ul>\n</li>\n<li><p>mysql启动</p>\n<ul>\n<li><p>mysqld_safe --user&#x3D;mysql &amp; 即可启动，mysqld_safe是一个守护mysqld进程的脚本程序，旨在mysqld意外停止时，可以重启mysqld进程。</p>\n</li>\n<li><p>也可以通过INSTALL_BINARRY中的步骤，使用&#x2F;etc&#x2F;init.d&#x2F;mysql.server start进行启动。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"mysql多实例安装\"><a href=\"#mysql多实例安装\" class=\"headerlink\" title=\"mysql多实例安装\"></a>mysql多实例安装</h2><ol>\n<li><p>多实例介绍</p>\n<ul>\n<li><p>一台服务器上安装多个mysql数据库实例</p>\n</li>\n<li><p>可以充分利用服务器的硬件资源</p>\n</li>\n<li><p>通过mysqld_multi进行管理</p>\n</li>\n</ul>\n</li>\n<li><p>安装要求</p>\n<ul>\n<li><p>mysql实例1 - mysql1</p>\n<ul>\n<li><p>port &#x3D; 3306</p>\n</li>\n<li><p>datadir &#x3D; &#x2F;data1</p>\n</li>\n<li><p>socket &#x3D; &#x2F;tmp&#x2F;mysql.sock1</p>\n</li>\n</ul>\n</li>\n<li><p>mysql实例2 - mysql2</p>\n<ul>\n<li><p>port &#x3D; 3307</p>\n</li>\n<li><p>datadir &#x3D; &#x2F;data2</p>\n</li>\n<li><p>socket &#x3D; &#x2F;tmp&#x2F;myslq.sock2</p>\n</li>\n</ul>\n</li>\n<li><p>mysql实例3 - mysql3</p>\n<ul>\n<li><p>port &#x3D; 3308</p>\n</li>\n<li><p>datadir &#x3D; &#x2F;data3</p>\n</li>\n<li><p>socket &#x3D; &#x2F;tmp&#x2F;myslq.sock3</p>\n</li>\n</ul>\n</li>\n<li><p>mysql实例4 - mysql4</p>\n<ul>\n<li><p>port &#x3D; 3309</p>\n</li>\n<li><p>datadir &#x3D; &#x2F;data4</p>\n</li>\n<li><p>socket &#x3D; &#x2F;tmp&#x2F;myslq.sock4</p>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>该三个参数必须定制，且必须不同(port&#x2F;datadir&#x2F;socket)，server-id和多数据库实例没有关系，和数据库复制有关系。</p>\n</blockquote>\n</li>\n<li><p>安装操作</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># 多实例配置文件，可以mysqld_multi --example 查看例子</span></span> </span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">[root@MyServer /]&gt; <span class=\"built_in\">cat</span> /etc/my.cnf</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">[client]</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">这个标签如果配置了用户和密码，</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">并且[mysqld_multi]下没有配置用户名密码，</span> </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">则mysqld_multi stop时, 会使用这个密码 <span class=\"comment\"># 如果没有精确的匹配，则匹配[client]标签</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">user = root</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">password = 123</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">-------------</span></span><br><span class=\"line\">[mysqld_multi]</span><br><span class=\"line\">mysqld = /usr/local/mysql/bin/mysqld_safe </span><br><span class=\"line\">mysqladmin = /usr/local/mysql/bin/mysqladmin user = multi_admin</span><br><span class=\"line\">pass = 123 # 官方文档中写的password，但是存在bug，需要改成pass(v5.7.9) # 写成password，start时正常，stop时，报如下错误</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Access denied <span class=\"keyword\">for</span> user <span class=\"string\">&#x27;multi_admin&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> (using password: YES)</span></span><br><span class=\"line\">log = /var/log/mysqld_multi.log</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld1] # mysqld后面的数字为GNR, 是该实例的标识</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">mysqld_multi start 1, mysqld_multi start 2-4</span></span><br><span class=\"line\">server-id = 11</span><br><span class=\"line\">socket = /tmp/mysql.sock1 </span><br><span class=\"line\">port = 3306</span><br><span class=\"line\">bind_address = 0.0.0.0 </span><br><span class=\"line\">datadir = /data1</span><br><span class=\"line\">user = mysql </span><br><span class=\"line\">performance_schema = off </span><br><span class=\"line\">innodb_buffer_pool_size = 32M </span><br><span class=\"line\">skip_name_resolve = 1 </span><br><span class=\"line\">log_error = error.log </span><br><span class=\"line\">pid-file = /data1/mysql.pid1</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld2]</span><br><span class=\"line\">server-id = 12</span><br><span class=\"line\">socket = /tmp/mysql.sock2 </span><br><span class=\"line\">port = 3307</span><br><span class=\"line\">bind_address = 0.0.0.0 </span><br><span class=\"line\">datadir = /data2</span><br><span class=\"line\">user = mysql </span><br><span class=\"line\">performance_schema = off </span><br><span class=\"line\">innodb_buffer_pool_size = 32M </span><br><span class=\"line\">skip_name_resolve = 1 </span><br><span class=\"line\">log_error = error.log </span><br><span class=\"line\">pid-file = /data2/mysql.pid2</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld3]</span><br><span class=\"line\">server-id = 13</span><br><span class=\"line\">socket = /tmp/mysql.sock3 </span><br><span class=\"line\">port = 3308</span><br><span class=\"line\">bind_address = 0.0.0.0 </span><br><span class=\"line\">datadir = /data3</span><br><span class=\"line\">user = mysql </span><br><span class=\"line\">performance_schema = off </span><br><span class=\"line\">innodb_buffer_pool_size = 32M </span><br><span class=\"line\">skip_name_resolve = 1 </span><br><span class=\"line\">log_error = error.log </span><br><span class=\"line\">pid-file = /data3/mysql.pid3</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld4]</span><br><span class=\"line\">server-id = 14</span><br><span class=\"line\">socket = /tmp/mysql.sock4 </span><br><span class=\"line\">port = 3309</span><br><span class=\"line\">bind_address = 0.0.0.0 </span><br><span class=\"line\">datadir = /data4</span><br><span class=\"line\">user = mysql </span><br><span class=\"line\">performance_schema = off </span><br><span class=\"line\">innodb_buffer_pool_size = 32M </span><br><span class=\"line\">skip_name_resolve = 1 </span><br><span class=\"line\">log_error = error.log </span><br><span class=\"line\">pid-file = /data4/mysql.pid4</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># 准备好数据目录，并初始化安装</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">[root@MyServer ~]&gt; <span class=\"built_in\">mkdir</span> /data1</span></span><br><span class=\"line\">[root@MyServer ~]&gt; mkdir /data2</span><br><span class=\"line\">[root@MyServer ~]&gt; mkdir /data3</span><br><span class=\"line\">[root@MyServer ~]&gt; mkdir /data4</span><br><span class=\"line\">[root@MyServer ~]&gt; chown mysql.mysql /data&#123;1..4&#125;</span><br><span class=\"line\">[root@MyServer ~]&gt; mysqld --initialize --user=mysql --datadir=/data1</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># 一些日志输出，并提示临时密码，下同</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">[root@MyServer ~]&gt; mysqld --initialize --user=mysql --datadir=/data2</span></span><br><span class=\"line\">[root@MyServer ~]&gt; mysqld --initialize --user=mysql --datadir=/data3</span><br><span class=\"line\">[root@MyServer ~]&gt; mysqld --initialize --user=mysql --datadir=/data4</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装后，需要检查error.log 确保没有错误出现</span></span><br><span class=\"line\">[root@MyServer ~]&gt; cp /usr/local/mysql/support-files/mysqld_multi.server /etc/init.d/mysqld_multid # 拷贝启动脚本，方便自启</span><br><span class=\"line\">[root@MyServer ~]&gt; chkconfig mysqld_multid on</span><br><span class=\"line\">[root@MyServer ~]&gt; mysqld_multi start </span><br><span class=\"line\">[root@MyServer ~]&gt; mysqld_multi report </span><br><span class=\"line\">Reporting MySQL servers</span><br><span class=\"line\">MySQL server from group: mysqld1 is running </span><br><span class=\"line\">MySQL server from group: mysqld2 is running </span><br><span class=\"line\">MySQL server from group: mysqld3 is running </span><br><span class=\"line\">MySQL server from group: mysqld4 is running </span><br><span class=\"line\"></span><br><span class=\"line\">[root@MyServer ~]&gt; netstat -tunlp | grep mysql</span><br><span class=\"line\"></span><br><span class=\"line\">[root@MyServer ~]&gt; mysql -u root -S /tmp/mysql.sock1 -p -P3306</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># 使用-S /tmp/mysql.sock1 进行登录，并输入临时密码后，修改密码，下同</span></span> </span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">[root@MyServer ~]&gt; mysql -u root -S /tmp/mysql.sock2 -p -P3307</span> </span><br><span class=\"line\">[root@MyServer ~]&gt; mysql -u root -S /tmp/mysql.sock3 -p -P3308 </span><br><span class=\"line\">[root@MyServer ~]&gt; mysql -u root -S /tmp/mysql.sock4 -p -P3309</span><br><span class=\"line\"></span><br><span class=\"line\">--</span><br><span class=\"line\">-- mysql1</span><br><span class=\"line\">--</span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">show variables like <span class=\"string\">&quot;port&quot;</span>;</span> </span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| Variable_name | Value | </span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| port | 3306 | </span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">show variables like <span class=\"string\">&quot;socket&quot;</span>;</span> </span><br><span class=\"line\">+---------------+------------------+ </span><br><span class=\"line\">| Variable_name | Value | </span><br><span class=\"line\">+---------------+------------------+ </span><br><span class=\"line\">| socket | /tmp/mysql.sock1 | </span><br><span class=\"line\">+---------------+------------------+ </span><br><span class=\"line\">1 row in set (0.01 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">show variables like <span class=\"string\">&quot;datadir&quot;</span>;</span> </span><br><span class=\"line\">+---------------+---------+</span><br><span class=\"line\">| Variable_name | Value | </span><br><span class=\"line\">+---------------+---------+</span><br><span class=\"line\">| datadir | /data1/ | </span><br><span class=\"line\">+---------------+---------+ </span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">--</span><br><span class=\"line\">-- 这样才能进行关闭数据库的操作</span><br><span class=\"line\">-- 和[mysqld_multi]中的user，pass(注意在5.7.9中不是password)对应起来 (类比[client]标签)</span><br><span class=\"line\">-- 一会测试federated链接，需要增加federated参数，并重启mysql2</span><br><span class=\"line\">--</span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">create user <span class=\"string\">&#x27;multi_admin&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> identified by <span class=\"string\">&#x27;123&#x27;</span>;</span> </span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">grant shutdown on *.* to <span class=\"string\">&#x27;multi_admin&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span>;</span></span><br><span class=\"line\">--</span><br><span class=\"line\">-- mysql2, mysql3, mysql4 类似。可以看到与my.cnf中对应的port和socket</span><br><span class=\"line\">-- </span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"mysql多实例多版本安装\"><a href=\"#mysql多实例多版本安装\" class=\"headerlink\" title=\"mysql多实例多版本安装\"></a>mysql多实例多版本安装</h2><ol>\n<li><p>[mysqld_multi]</p>\n<ul>\n<li><p>mysqld_multi是否需要配置</p>\n<blockquote>\n<p>在my.cnf上直接配置[mysqld1]、[mysqld2]等实例标签，而不配置[mysqld_multi],使用mysqld_multi start 1也是可以启动数据库实例的，但是没有mysqld_safe的守护进程。所以该标签需要配置</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>停止mysql实例</p>\n<ul>\n<li><p>multi_admin用户的作用</p>\n<blockquote>\n<p>通过官方的文档中，我们可以看到，&#39;multi_admin&#39;@&#39;localhost&#39;这个主要作用是用来关闭数据库实例，因为文档中只授权了shutdown权限，所以在mysqld_multi标签下，我们需要配置user和pasword (注意5.7.x中是pass)来进行关闭数据库实例。</p>\n</blockquote>\n</li>\n<li><p>client标签</p>\n<blockquote>\n<p>没有在 [mysqld_multi] 下配置 user 和 password ，但是仍然可以关闭数据库，原因是因为 &#x2F;root&#x2F;.my.cnf 中存在了 [client] 标签。该标签下的用户 user &#x3D; root 有关闭数据库实例的权限，因此可以关闭数据库。</p>\n</blockquote>\n<p>如果在 [client] 和 [mysqld_multi] 标签中同时存在 user 和 password , 则在关闭数据库实例中会使用 [mysqld_multi] 中的 user 去关闭。 ( 存在精确匹配的标签，则优先使用精确匹配标签下的配置项 )</p>\n</li>\n</ul>\n</li>\n<li><p>多实例多版本安装</p>\n<ul>\n<li><p>环境说明</p>\n<ul>\n<li><p>mysqld1 -- mysql 5.7.9</p>\n</li>\n<li><p>mysqld2 -- mysql 5.7.9</p>\n</li>\n<li><p>mysqld3 -- mysql 5.6.27</p>\n</li>\n<li><p>mysqld4 -- mysql 5.6.27</p>\n</li>\n</ul>\n</li>\n<li><p>配置文件</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">[client]</span></span><br><span class=\"line\"><span class=\"attr\">user</span> = <span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">password</span> = <span class=\"string\">123</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"># 这里使用了client标签中的uer，故这里不再需要定义user</span></span><br><span class=\"line\"><span class=\"attr\">[mysqld_multi]</span></span><br><span class=\"line\"><span class=\"attr\">mysqld</span> = <span class=\"string\">/usr/local/mysql/bin/mysqld_safe </span></span><br><span class=\"line\"><span class=\"attr\">log</span> = <span class=\"string\">/var/log/mysqld_multi.log</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"># basedir定义使用了5.7的mysql版本</span></span><br><span class=\"line\"><span class=\"attr\">[mysqld1]</span></span><br><span class=\"line\"><span class=\"attr\">server-id</span> = <span class=\"string\">11</span></span><br><span class=\"line\"><span class=\"attr\">datadir</span> = <span class=\"string\">/data1</span></span><br><span class=\"line\"><span class=\"attr\">basedir</span> = <span class=\"string\">/usr/local/mysql  </span></span><br><span class=\"line\"><span class=\"attr\">port</span> = <span class=\"string\">3307</span></span><br><span class=\"line\"><span class=\"attr\">socket</span> = <span class=\"string\">/tmp/mysql.sock1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">[mysqld2]</span></span><br><span class=\"line\"><span class=\"attr\">server-id</span> = <span class=\"string\">22</span></span><br><span class=\"line\"><span class=\"attr\">datadir</span> = <span class=\"string\">/data2</span></span><br><span class=\"line\"><span class=\"attr\">basedir</span> = <span class=\"string\">/usr/local/mysql</span></span><br><span class=\"line\"><span class=\"attr\">port</span> = <span class=\"string\">3308</span></span><br><span class=\"line\"><span class=\"attr\">socket</span> = <span class=\"string\">/tmp/mysql.sock2</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"># basedir定义了使用5.6的mysql版本 </span></span><br><span class=\"line\"><span class=\"comment\"># plugin 目录也变了</span></span><br><span class=\"line\"><span class=\"attr\">[mysqld3]</span></span><br><span class=\"line\"><span class=\"attr\">server-id</span> = <span class=\"string\">33</span></span><br><span class=\"line\"><span class=\"attr\">datadir</span> = <span class=\"string\">/data3</span></span><br><span class=\"line\"><span class=\"attr\">basedir</span> = <span class=\"string\">/usr/local/mysql56 </span></span><br><span class=\"line\"><span class=\"attr\">port</span> = <span class=\"string\">3309</span></span><br><span class=\"line\"><span class=\"attr\">socket</span> = <span class=\"string\">/tmp/mysql.sock3 </span></span><br><span class=\"line\"><span class=\"attr\">plugin_dir</span>=<span class=\"string\">/usr/local/mysql56/lib/plugin </span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"># 这里无需特别配置mysqld, 可以继承使用[mysqld_multi]中的配置，然后根据basedir找到对应的mysqld</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">[mysqld4]</span></span><br><span class=\"line\"><span class=\"attr\">server-id</span> = <span class=\"string\">44</span></span><br><span class=\"line\"><span class=\"attr\">datadir</span> = <span class=\"string\">/data4</span></span><br><span class=\"line\"><span class=\"attr\">basedir</span> = <span class=\"string\">/usr/local/mysql56</span></span><br><span class=\"line\"><span class=\"attr\">port</span> = <span class=\"string\">3310</span></span><br><span class=\"line\"><span class=\"attr\">socket</span> = <span class=\"string\">/tmp/mysql.sock4 plugin_dir=/usr/local/mysql56/lib/plugin</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">[mysqld]</span></span><br><span class=\"line\"><span class=\"comment\">########basic settings########</span></span><br><span class=\"line\"><span class=\"attr\">server-id</span> = <span class=\"string\">100</span></span><br><span class=\"line\"><span class=\"attr\">port</span> = <span class=\"string\">3306</span></span><br><span class=\"line\"><span class=\"attr\">user</span> = <span class=\"string\">mysql</span></span><br><span class=\"line\"><span class=\"attr\">bind_address</span> = <span class=\"string\">0.0.0.0</span></span><br><span class=\"line\"><span class=\"comment\">#autocommit = 0</span></span><br><span class=\"line\"><span class=\"attr\">character_set_server</span>=<span class=\"string\">utf8mb4</span></span><br><span class=\"line\"><span class=\"attr\">skip_name_resolve</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">max_connections</span> = <span class=\"string\">800</span></span><br><span class=\"line\"><span class=\"attr\">max_connect_errors</span> = <span class=\"string\">1000</span></span><br><span class=\"line\"><span class=\"attr\">datadir</span> = <span class=\"string\">/data/mysql_data</span></span><br><span class=\"line\"><span class=\"attr\">transaction_isolation</span> = <span class=\"string\">READ-COMMITTED</span></span><br><span class=\"line\"><span class=\"attr\">explicit_defaults_for_timestamp</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">join_buffer_size</span> = <span class=\"string\">134217728</span></span><br><span class=\"line\"><span class=\"attr\">tmp_table_size</span> = <span class=\"string\">67108864</span></span><br><span class=\"line\"><span class=\"attr\">tmpdir</span> = <span class=\"string\">/tmp</span></span><br><span class=\"line\"><span class=\"attr\">max_allowed_packet</span> = <span class=\"string\">16777216</span></span><br><span class=\"line\"><span class=\"attr\">sql_mode</span> = <span class=\"string\">&quot;STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER&quot; interactive_timeout = 1800</span></span><br><span class=\"line\"><span class=\"attr\">wait_timeout</span> = <span class=\"string\">1800</span></span><br><span class=\"line\"><span class=\"attr\">read_buffer_size</span> = <span class=\"string\">16777216</span></span><br><span class=\"line\"><span class=\"attr\">read_rnd_buffer_size</span> = <span class=\"string\">33554432</span></span><br><span class=\"line\"><span class=\"attr\">sort_buffer_size</span> = <span class=\"string\">33554432</span></span><br><span class=\"line\"><span class=\"comment\">########log settings########</span></span><br><span class=\"line\"><span class=\"attr\">log_error</span> = <span class=\"string\">error.log</span></span><br><span class=\"line\"><span class=\"attr\">slow_query_log</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">slow_query_log_file</span> = <span class=\"string\">slow.log</span></span><br><span class=\"line\"><span class=\"attr\">log_queries_not_using_indexes</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">log_slow_admin_statements</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">log_slow_slave_statements</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">log_throttle_queries_not_using_indexes</span> = <span class=\"string\">10</span></span><br><span class=\"line\"><span class=\"attr\">expire_logs_days</span> = <span class=\"string\">90</span></span><br><span class=\"line\"><span class=\"attr\">long_query_time</span> = <span class=\"string\">2</span></span><br><span class=\"line\"><span class=\"attr\">min_examined_row_limit</span> = <span class=\"string\">100</span></span><br><span class=\"line\"><span class=\"comment\">########replication settings########</span></span><br><span class=\"line\"><span class=\"attr\">master_info_repository</span> = <span class=\"string\">TABLE</span></span><br><span class=\"line\"><span class=\"attr\">relay_log_info_repository</span> = <span class=\"string\">TABLE</span></span><br><span class=\"line\"><span class=\"attr\">log_bin</span> = <span class=\"string\">bin.log</span></span><br><span class=\"line\"><span class=\"attr\">sync_binlog</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">gtid_mode</span> = <span class=\"string\">on</span></span><br><span class=\"line\"><span class=\"attr\">enforce_gtid_consistency</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">log_slave_updates</span></span><br><span class=\"line\"><span class=\"attr\">binlog_format</span> = <span class=\"string\">row</span></span><br><span class=\"line\"><span class=\"attr\">relay_log</span> = <span class=\"string\">relay.log</span></span><br><span class=\"line\"><span class=\"attr\">relay_log_recovery</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">binlog_gtid_simple_recovery</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">slave_skip_errors</span> = <span class=\"string\">ddl_exist_errors</span></span><br><span class=\"line\"><span class=\"comment\">########innodb settings########</span></span><br><span class=\"line\"><span class=\"attr\">innodb_page_size</span> = <span class=\"string\">8192</span></span><br><span class=\"line\"><span class=\"attr\">innodb_buffer_pool_size</span> = <span class=\"string\">1G # 该参数􏰃小到1G</span></span><br><span class=\"line\"><span class=\"attr\">innodb_buffer_pool_instances</span> = <span class=\"string\">8</span></span><br><span class=\"line\"><span class=\"attr\">innodb_buffer_pool_load_at_startup</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">innodb_buffer_pool_dump_at_shutdown</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">innodb_lru_scan_depth</span> = <span class=\"string\">2000</span></span><br><span class=\"line\"><span class=\"attr\">innodb_lock_wait_timeout</span> = <span class=\"string\">5</span></span><br><span class=\"line\"><span class=\"attr\">innodb_io_capacity</span> = <span class=\"string\">4000</span></span><br><span class=\"line\"><span class=\"attr\">innodb_io_capacity_max</span> = <span class=\"string\">8000</span></span><br><span class=\"line\"><span class=\"attr\">innodb_flush_method</span> = <span class=\"string\">O_DIRECT</span></span><br><span class=\"line\"><span class=\"attr\">innodb_file_format</span> = <span class=\"string\">Barracuda</span></span><br><span class=\"line\"><span class=\"attr\">innodb_file_format_max</span> = <span class=\"string\">Barracuda</span></span><br><span class=\"line\"><span class=\"comment\">#innodb_log_group_home_dir = /redolog/</span></span><br><span class=\"line\"><span class=\"comment\">#innodb_undo_directory = /undolog/</span></span><br><span class=\"line\"><span class=\"attr\">innodb_undo_logs</span> = <span class=\"string\">128</span></span><br><span class=\"line\"><span class=\"attr\">innodb_undo_tablespaces</span> = <span class=\"string\">3</span></span><br><span class=\"line\"><span class=\"attr\">innodb_flush_neighbors</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">innodb_log_file_size</span> = <span class=\"string\">128M # 该参数􏰃小到 128M</span></span><br><span class=\"line\"><span class=\"attr\">innodb_log_buffer_size</span> = <span class=\"string\">16777216</span></span><br><span class=\"line\"><span class=\"attr\">innodb_purge_threads</span> = <span class=\"string\">4</span></span><br><span class=\"line\"><span class=\"attr\">innodb_large_prefix</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">innodb_thread_concurrency</span> = <span class=\"string\">64</span></span><br><span class=\"line\"><span class=\"attr\">innodb_print_all_deadlocks</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">innodb_strict_mode</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">innodb_sort_buffer_size</span> = <span class=\"string\">67108864</span></span><br><span class=\"line\"><span class=\"comment\">########semi sync replication settings########</span></span><br><span class=\"line\"><span class=\"attr\">plugin_dir</span>=<span class=\"string\">/usr/local/mysql/lib/plugin</span></span><br><span class=\"line\"><span class=\"comment\">#plugin_load = &quot;rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so&quot;</span></span><br><span class=\"line\"><span class=\"attr\">loose_rpl_semi_sync_master_enabled</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">loose_rpl_semi_sync_slave_enabled</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">loose_rpl_semi_sync_master_timeout</span> = <span class=\"string\">5000</span></span><br><span class=\"line\"><span class=\"attr\">[mysqld-5.7]</span></span><br><span class=\"line\"><span class=\"attr\">innodb_buffer_pool_dump_pct</span> = <span class=\"string\">40 </span></span><br><span class=\"line\"><span class=\"attr\">innodb_page_cleaners</span> = <span class=\"string\">4 </span></span><br><span class=\"line\"><span class=\"attr\">innodb_undo_log_truncate</span> = <span class=\"string\">1 </span></span><br><span class=\"line\"><span class=\"attr\">innodb_max_undo_log_size</span> = <span class=\"string\">1G # 该参数􏰃小到1G </span></span><br><span class=\"line\"><span class=\"attr\">innodb_purge_rseg_truncate_frequency</span> = <span class=\"string\">128 </span></span><br><span class=\"line\"><span class=\"attr\">binlog_gtid_simple_recovery</span>=<span class=\"string\">1 </span></span><br><span class=\"line\"><span class=\"attr\">log_timestamps</span>=<span class=\"string\">system </span></span><br><span class=\"line\"><span class=\"attr\">transaction_write_set_extraction</span>=<span class=\"string\">MURMUR32 </span></span><br><span class=\"line\"><span class=\"attr\">show_compatibility_56</span>=<span class=\"string\">on</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意mysql 5.6.27的plugin_dir的路径</p>\n<p>配置说明：</p>\n<ol>\n<li><p>配置的标签顺序没有关系，不会影响最终配置的有效性</p>\n</li>\n<li><p>同类型标签中的配置项会合并，形成一个大的配置项</p>\n</li>\n<li><p>匹配度高的标签中的配置项的值，会覆盖掉匹配度低的标签中配置项的值</p>\n</li>\n</ol>\n<p>mysqld N中的配置项会和mysqld中的配置项进行合并，并且mysql N中已有的配置项的值，会覆盖mysqld中的配置项的值，如datadir，port等。</p>\n</blockquote>\n</li>\n<li><p>安装操作</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># 准备好数据目录，并初始化安装</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">[root@MyServer ~]&gt; <span class=\"built_in\">mkdir</span> /data1</span></span><br><span class=\"line\">[root@MyServer ~]&gt; mkdir /data2</span><br><span class=\"line\">[root@MyServer ~]&gt; mkdir /data3</span><br><span class=\"line\">[root@MyServer ~]&gt; mkdir /</span><br><span class=\"line\"></span><br><span class=\"line\">data4</span><br><span class=\"line\">[root@MyServer ~]&gt; chown mysql.mysql /data&#123;1..4&#125;</span><br><span class=\"line\">[root@MyServer ~]&gt; mysqld --initialize --user=mysql --datadir=/data1</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># 这里无输出，临时密码见 /data1/error.log</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">[root@MyServer ~]&gt; mysqld --initialize --user=mysql --datadir=/data2</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># 这里无输出，临时密码见 /data1/error.log</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">[root@MyServer mysql56]&gt; <span class=\"built_in\">pwd</span></span></span><br><span class=\"line\">/usr/local/mysql56</span><br><span class=\"line\">[root@MyServer mysql56]&gt; scripts/mysql_install_db --user=mysql --datadir=/data3</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># 这里有部分信息输出</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装后，需要检查error.log 确保没有错误出现</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">注意使用空密码登录后，修改密码</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">[root@MyServer mysql56]&gt; scripts/mysql_install_db --user=mysql --datadir=/data4</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># 这里有部分信息输出</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装后，需要检查error.log 确保没有错误出现</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">注意使用空密码登录后，修改密码</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">[root@MyServer ~]&gt; <span class=\"built_in\">cp</span> /usr/local/mysql/support-files/mysqld_multi.server /etc/init.d/mysqld_multid <span class=\"comment\"># 拷贝启动脚本，方便自启</span></span></span><br><span class=\"line\">[root@MyServer ~]&gt; chkconfig mysqld_multid on</span><br><span class=\"line\"></span><br><span class=\"line\">[root@MyServer ~]&gt; mysqld_multi report </span><br><span class=\"line\">Reporting MySQL servers</span><br><span class=\"line\">MySQL server from group: mysqld1 is not running</span><br><span class=\"line\">MySQL server from group: mysqld2 is not running</span><br><span class=\"line\">MySQL server from group: mysqld3 is not running</span><br><span class=\"line\">MySQL server from group: mysqld4 is not running</span><br><span class=\"line\"></span><br><span class=\"line\">[root@MyServer ~]&gt; mysqld_multi start</span><br><span class=\"line\"></span><br><span class=\"line\">[root@MyServer ~]&gt; mysqld_multi report </span><br><span class=\"line\">Reporting MySQL servers</span><br><span class=\"line\">MySQL server from group: mysqld1 is running</span><br><span class=\"line\">MySQL server from group: mysqld2 is running</span><br><span class=\"line\">MySQL server from group: mysqld3 is running</span><br><span class=\"line\">MySQL server from group: mysqld4 is running</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># 上面是mysqld_safe的守护进程</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">下面是实际的mysqld的进程，观察mysqld的路径</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">因为指定了basedir，所以会自动识别mysqld的路径</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">[root@MyServer ~]&gt; ps -ef | grep mysqld</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">mysql3 和 mysql4 初始状态没有密码，以前可以直接使用 mysql -S mysql.sock 登录，而现在登录的时候特别注意，因为我们使用了 [client] 标签,登录的时候如果不加 -p 参数会默认使用标签下的 user 和 password , 然后导致登录不进去，所以需要使用如下登录方式:</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">mysql -u root -P3309 -S /tmp/mysql.sock3 -p</span></span><br><span class=\"line\">Enter password: [直接回车]</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">进行修改密码</span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\"><span class=\"built_in\">set</span> password = password(<span class=\"string\">&quot;123&quot;</span>);</span> </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置login-path</p>\n<blockquote>\n<p>设置 login-path 主要为了能够简化登录，同时还可以让每个数据库的密码都不同，避免使用[client]下的统一用户名密码</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"编译安装mysql\"><a href=\"#编译安装mysql\" class=\"headerlink\" title=\"编译安装mysql\"></a>编译安装mysql</h2><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">预备工作</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">yum install gcc glibc gcc-c++ ncurses-devel bison</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">下载安装</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">wget http://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.10.tar.gz</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">wget http://cdn.mysql.com//Downloads/MySQL-5.7/mysql-boost-5.7.10.tar.gz</span></span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">tar zxf mysql-5.7.10.tar.gz</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">tar zxvf mysql-boost-5.7.10.tar.gz</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> mysql-5.7.10</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">mkdir</span> mybuild</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">cmake .. -DWITH_BOOST=../boost/</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">make <span class=\"comment\"># or make -j cpu数目</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">make package <span class=\"comment\"># 生成了mysql-5.7.10-linux-x86_64.tar.gz</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">后续就是把他当作一个二进制包，和之前一样进行安装即可</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装完成后，启动MySQL，然后检查err.log</span></span><br><span class=\"line\">......</span><br><span class=\"line\">[Note] InnoDB: PUNCH HOLE support available # 说明已􏰁支持透明压缩功能 ......</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录\"></a>附录</h2><ol>\n<li><p>优化后的my.cnf</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">[client]</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=<span class=\"string\">hadoop</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">admin123</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">[mysqld]</span></span><br><span class=\"line\"><span class=\"comment\">########basic settings########</span></span><br><span class=\"line\"><span class=\"attr\">server-id</span> = <span class=\"string\">11 </span></span><br><span class=\"line\"><span class=\"attr\">port</span> = <span class=\"string\">3306</span></span><br><span class=\"line\"><span class=\"attr\">user</span> = <span class=\"string\">mysql</span></span><br><span class=\"line\"><span class=\"attr\">bind_address</span> = <span class=\"string\">0.0.0.0 # 根据实际情况修改</span></span><br><span class=\"line\"><span class=\"attr\">autocommit</span> = <span class=\"string\">0 # 5.6.x安装时，需要注释，安装完成后中打开</span></span><br><span class=\"line\"><span class=\"attr\">character_set_server</span>=<span class=\"string\">utf8mb4</span></span><br><span class=\"line\"><span class=\"attr\">skip_name_resolve</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">max_connections</span> = <span class=\"string\">800</span></span><br><span class=\"line\"><span class=\"attr\">max_connect_errors</span> = <span class=\"string\">1000</span></span><br><span class=\"line\"><span class=\"attr\">basedir</span> = <span class=\"string\">/opt/homebrew/opt/mysql@5.7</span></span><br><span class=\"line\"><span class=\"attr\">datadir</span> = <span class=\"string\">/opt/homebrew/var/mysql # 根据实际情况修改，建议和程序分离存放。</span></span><br><span class=\"line\"><span class=\"attr\">transaction_isolation</span> = <span class=\"string\">READ-COMMITTED</span></span><br><span class=\"line\"><span class=\"attr\">explicit_defaults_for_timestamp</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">join_buffer_size</span> = <span class=\"string\">134217728</span></span><br><span class=\"line\"><span class=\"attr\">tmp_table_size</span> = <span class=\"string\">67108864</span></span><br><span class=\"line\"><span class=\"attr\">tmpdir</span> = <span class=\"string\">/tmp</span></span><br><span class=\"line\"><span class=\"attr\">max_allowed_packet</span> = <span class=\"string\">16777216</span></span><br><span class=\"line\"><span class=\"attr\">sql_mode</span> = <span class=\"string\">&quot;STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER&quot;</span></span><br><span class=\"line\"><span class=\"attr\">interactive_timeout</span> = <span class=\"string\">1800</span></span><br><span class=\"line\"><span class=\"attr\">wait_timeout</span> = <span class=\"string\">1800</span></span><br><span class=\"line\"><span class=\"attr\">read_buffer_size</span> = <span class=\"string\">16777216</span></span><br><span class=\"line\"><span class=\"attr\">read_rnd_buffer_size</span> = <span class=\"string\">33554432</span></span><br><span class=\"line\"><span class=\"attr\">sort_buffer_size</span> = <span class=\"string\">33554432</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">########log settings########</span></span><br><span class=\"line\"><span class=\"attr\">log_error</span> = <span class=\"string\">error.log</span></span><br><span class=\"line\"><span class=\"attr\">slow_query_log</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">slow_query_log_file</span> = <span class=\"string\">slow.log</span></span><br><span class=\"line\"><span class=\"attr\">log_queries_not_using_indexes</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">log_slow_admin_statements</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">log_slow_slave_statements</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">log_throttle_queries_not_using_indexes</span> = <span class=\"string\">10</span></span><br><span class=\"line\"><span class=\"attr\">expire_logs_days</span> = <span class=\"string\">90</span></span><br><span class=\"line\"><span class=\"attr\">long_query_time</span> = <span class=\"string\">2</span></span><br><span class=\"line\"><span class=\"attr\">min_examined_row_limit</span> = <span class=\"string\">100</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">########replication settings########</span></span><br><span class=\"line\"><span class=\"attr\">master_info_repository</span> = <span class=\"string\">TABLE</span></span><br><span class=\"line\"><span class=\"attr\">relay_log_info_repository</span> = <span class=\"string\">TABLE</span></span><br><span class=\"line\"><span class=\"attr\">log_bin</span> = <span class=\"string\">bin.log</span></span><br><span class=\"line\"><span class=\"attr\">sync_binlog</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">gtid_mode</span> = <span class=\"string\">on</span></span><br><span class=\"line\"><span class=\"attr\">enforce_gtid_consistency</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">log_slave_updates</span></span><br><span class=\"line\"><span class=\"attr\">binlog_format</span> = <span class=\"string\">row </span></span><br><span class=\"line\"><span class=\"attr\">relay_log</span> = <span class=\"string\">relay.log</span></span><br><span class=\"line\"><span class=\"attr\">relay_log_recovery</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">binlog_gtid_simple_recovery</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">slave_skip_errors</span> = <span class=\"string\">ddl_exist_errors</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">########innodb settings########</span></span><br><span class=\"line\"><span class=\"attr\">innodb_page_size</span> = <span class=\"string\">8192</span></span><br><span class=\"line\"><span class=\"attr\">innodb_buffer_pool_size</span> = <span class=\"string\">6G # 根据实际情况修改</span></span><br><span class=\"line\"><span class=\"attr\">innodb_buffer_pool_instances</span> = <span class=\"string\">8</span></span><br><span class=\"line\"><span class=\"attr\">innodb_buffer_pool_load_at_startup</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">innodb_buffer_pool_dump_at_shutdown</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">innodb_lru_scan_depth</span> = <span class=\"string\">512</span></span><br><span class=\"line\"><span class=\"attr\">innodb_lock_wait_timeout</span> = <span class=\"string\">5</span></span><br><span class=\"line\"><span class=\"attr\">innodb_io_capacity</span> = <span class=\"string\">4000</span></span><br><span class=\"line\"><span class=\"attr\">innodb_io_capacity_max</span> = <span class=\"string\">8000</span></span><br><span class=\"line\"><span class=\"attr\">innodb_flush_method</span> = <span class=\"string\">O_DIRECT</span></span><br><span class=\"line\"><span class=\"attr\">innodb_file_format</span> = <span class=\"string\">Barracuda</span></span><br><span class=\"line\"><span class=\"attr\">innodb_file_format_max</span> = <span class=\"string\">Barracuda</span></span><br><span class=\"line\"><span class=\"attr\">innodb_log_group_home_dir</span> = <span class=\"string\">/opt/homebrew/var/redolog/</span></span><br><span class=\"line\"><span class=\"attr\">innodb_undo_directory</span> = <span class=\"string\">/opt/homebrew/var/undolog/</span></span><br><span class=\"line\"><span class=\"attr\">innodb_undo_logs</span> = <span class=\"string\">128</span></span><br><span class=\"line\"><span class=\"attr\">innodb_undo_tablespaces</span> = <span class=\"string\">3</span></span><br><span class=\"line\"><span class=\"attr\">innodb_flush_neighbors</span> = <span class=\"string\">0</span></span><br><span class=\"line\"><span class=\"attr\">innodb_log_file_size</span> = <span class=\"string\">4G  # 根据实际情况修改</span></span><br><span class=\"line\"><span class=\"attr\">innodb_log_buffer_size</span> = <span class=\"string\">16777216</span></span><br><span class=\"line\"><span class=\"attr\">innodb_purge_threads</span> = <span class=\"string\">4</span></span><br><span class=\"line\"><span class=\"attr\">innodb_large_prefix</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">innodb_thread_concurrency</span> = <span class=\"string\">64</span></span><br><span class=\"line\"><span class=\"attr\">innodb_print_all_deadlocks</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">innodb_strict_mode</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">innodb_sort_buffer_size</span> = <span class=\"string\">67108864 </span></span><br><span class=\"line\"><span class=\"attr\">innodb_use_native_aio</span> = <span class=\"string\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">[mysqld-5.7]</span></span><br><span class=\"line\"><span class=\"attr\">innodb_buffer_pool_dump_pct</span> = <span class=\"string\">40</span></span><br><span class=\"line\"><span class=\"attr\">innodb_page_cleaners</span> = <span class=\"string\">4</span></span><br><span class=\"line\"><span class=\"attr\">innodb_undo_log_truncate</span> = <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">innodb_max_undo_log_size</span> = <span class=\"string\">2G</span></span><br><span class=\"line\"><span class=\"attr\">innodb_purge_rseg_truncate_frequency</span> = <span class=\"string\">128</span></span><br><span class=\"line\"><span class=\"attr\">binlog_gtid_simple_recovery</span>=<span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attr\">log_timestamps</span>=<span class=\"string\">system</span></span><br><span class=\"line\"><span class=\"attr\">transaction_write_set_extraction</span>=<span class=\"string\">MURMUR32</span></span><br><span class=\"line\"><span class=\"attr\">show_compatibility_56</span>=<span class=\"string\">on</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>几个重要的参数配置和说明</p>\n<ul>\n<li><p>innodb_log_file_size &#x3D; 4G，本地测试可以修改的小一点，线上环境推荐使用4G。</p>\n</li>\n<li><p>innodb_undo_logs &#x3D; 128和innodb_undo_tablespace &#x3D; 3建议中安装之前就确定好该值，后续修改比较麻烦。</p>\n</li>\n<li><p>[mysqld], [mysql-5.7] 这种tag表明了下面的配置中什么版本下才生效，[mysqld]下均生效。</p>\n</li>\n<li><p>autocommit，这个参数是5.5.x以后才有的，安装5.6.x的时候需要注意先把该参数注释掉，等安装完成后，再打开。5.7.x无需注释。</p>\n</li>\n<li><p>datadir, innodb_log_group_home_dir, innodb_undo_directory一定要注意它的权限是mysql:mysql。</p>\n</li>\n</ul>\n</li>\n<li><p>my.cnf问题</p>\n<ul>\n<li><p>使用mysqld --help -vv ｜ grep my.cnf查看mysql的配置文件读取顺序。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">~ &gt; mysqld --help -vv | grep my.cnf</span><br><span class=\"line\">/etc/my.cnf /etc/mysql/my.cnf /opt/homebrew/etc/my.cnf ~/.my.cnf</span><br><span class=\"line\">                      my.cnf, $MYSQL_TCP_PORT, /etc/services, built-in default</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>后续读取my.cnf的配置，如果有相同项，会覆盖之前的配置。</p>\n</li>\n<li><p>使用--defaults-files可以指定配置文件。</p>\n</li>\n</ul>\n</li>\n</ol>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-Mysql工具之ibinlog2sql：基于Binlog对误操作恢复工具","url":"/mysql/binlog2sql/","content":"<h2 id=\"binlog2sql\"><a href=\"#binlog2sql\" class=\"headerlink\" title=\"binlog2sql\"></a>binlog2sql</h2><p>从MySQL binlog解析出你要的SQL。根据不同选项，你可以得到原始SQL、回滚SQL、去除主键的INSERT SQL等。</p>\n<h2 id=\"my2sql\"><a href=\"#my2sql\" class=\"headerlink\" title=\"my2sql\"></a>my2sql</h2><p>go版MySQL binlog解析工具，通过解析MySQL binlog ，可以生成原始SQL、回滚SQL、去除主键的INSERT SQL等，也可以生成DML统计信息。类似工具有binlog2sql、MyFlash、my2fback等，本工具基于my2fback、binlog_rollback工具二次开发而来。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpdWhyL215MnNxbA==\">https://github.com/liuhr/my2sql<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"用途\"><a href=\"#用途\" class=\"headerlink\" title=\"用途\"></a>用途</h2><ul>\n<li>数据快速回滚(闪回)</li>\n<li>主从切换后新master丢数据的修复</li>\n<li>从binlog生成标准SQL，带来的衍生功能</li>\n</ul>\n<h2 id=\"项目状态\"><a href=\"#项目状态\" class=\"headerlink\" title=\"项目状态\"></a>项目状态</h2><p>正常维护。应用于部分公司线上环境。</p>\n<ul>\n<li>已测试环境<ul>\n<li>Python 2.7, 3.4+</li>\n<li>MySQL 5.6, 5.7</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">shell&gt; git clone https://github.com/danfengcao/binlog2sql.git &amp;&amp; cd binlog2sql</span><br><span class=\"line\">shell&gt; pip install -r requirements.txt</span><br></pre></td></tr></table></figure>\n<p>git与pip的安装问题请自行搜索解决。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"MySQL-server必须设置以下参数\"><a href=\"#MySQL-server必须设置以下参数\" class=\"headerlink\" title=\"MySQL server必须设置以下参数:\"></a>MySQL server必须设置以下参数:</h3><pre><code>[mysqld]\nserver_id = 1\nlog_bin = /var/log/mysql/mysql-bin.log\nmax_binlog_size = 1G\nbinlog_format = row\nbinlog_row_image = full\n</code></pre>\n<h3 id=\"user需要的最小权限集合：\"><a href=\"#user需要的最小权限集合：\" class=\"headerlink\" title=\"user需要的最小权限集合：\"></a>user需要的最小权限集合：</h3><pre><code>select, super/replication client, replication slave\n\n建议授权\nGRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO \n</code></pre>\n<p><strong>权限说明</strong></p>\n<ul>\n<li>select：需要读取server端information_schema.COLUMNS表，获取表结构的元信息，拼接成可视化的sql语句</li>\n<li>super&#x2F;replication client：两个权限都可以，需要执行&#39;SHOW MASTER STATUS&#39;, 获取server端的binlog列表</li>\n<li>replication slave：通过BINLOG_DUMP协议获取binlog内容的权限</li>\n</ul>\n<h3 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h3><p><strong>解析出标准SQL</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">shell&gt; python binlog2sql.py -h127.0.0.1 -P3306 -uadmin -p<span class=\"string\">&#x27;admin&#x27;</span> -dtest -t test3 test4 --start-file=<span class=\"string\">&#x27;mysql-bin.000002&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\">INSERT INTO `<span class=\"built_in\">test</span>`.`test3`(`addtime`, `data`, `<span class=\"built_in\">id</span>`) VALUES (<span class=\"string\">&#x27;2016-12-10 13:03:38&#x27;</span>, <span class=\"string\">&#x27;english&#x27;</span>, 4); <span class=\"comment\">#start 570 end 736</span></span><br><span class=\"line\">UPDATE `<span class=\"built_in\">test</span>`.`test3` SET `addtime`=<span class=\"string\">&#x27;2016-12-10 12:00:00&#x27;</span>, `data`=<span class=\"string\">&#x27;中文&#x27;</span>, `<span class=\"built_in\">id</span>`=3 WHERE `addtime`=<span class=\"string\">&#x27;2016-12-10 13:03:22&#x27;</span> AND `data`=<span class=\"string\">&#x27;中文&#x27;</span> AND `<span class=\"built_in\">id</span>`=3 LIMIT 1; <span class=\"comment\">#start 763 end 954</span></span><br><span class=\"line\">DELETE FROM `<span class=\"built_in\">test</span>`.`test3` WHERE `addtime`=<span class=\"string\">&#x27;2016-12-10 13:03:38&#x27;</span> AND `data`=<span class=\"string\">&#x27;english&#x27;</span> AND `<span class=\"built_in\">id</span>`=4 LIMIT 1; <span class=\"comment\">#start 981 end 1147</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>解析出回滚SQL</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">shell&gt; python binlog2sql.py --flashback -h127.0.0.1 -P3306 -uadmin -p<span class=\"string\">&#x27;admin&#x27;</span> -dtest -ttest3 --start-file=<span class=\"string\">&#x27;mysql-bin.000002&#x27;</span> --start-position=763 --stop-position=1147</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\">INSERT INTO `<span class=\"built_in\">test</span>`.`test3`(`addtime`, `data`, `<span class=\"built_in\">id</span>`) VALUES (<span class=\"string\">&#x27;2016-12-10 13:03:38&#x27;</span>, <span class=\"string\">&#x27;english&#x27;</span>, 4); <span class=\"comment\">#start 981 end 1147</span></span><br><span class=\"line\">UPDATE `<span class=\"built_in\">test</span>`.`test3` SET `addtime`=<span class=\"string\">&#x27;2016-12-10 13:03:22&#x27;</span>, `data`=<span class=\"string\">&#x27;中文&#x27;</span>, `<span class=\"built_in\">id</span>`=3 WHERE `addtime`=<span class=\"string\">&#x27;2016-12-10 12:00:00&#x27;</span> AND `data`=<span class=\"string\">&#x27;中文&#x27;</span> AND `<span class=\"built_in\">id</span>`=3 LIMIT 1; <span class=\"comment\">#start 763 end 954</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h3><p><strong>mysql连接配置</strong></p>\n<p>-h host; -P port; -u user; -p password</p>\n<p><strong>解析模式</strong></p>\n<p>--stop-never 持续解析binlog。可选。默认False，同步至执行命令时最新的binlog位置。</p>\n<p>-K, --no-primary-key 对INSERT语句去除主键。可选。默认False</p>\n<p>-B, --flashback 生成回滚SQL，可解析大文件，不受内存限制。可选。默认False。与stop-never或no-primary-key不能同时添加。</p>\n<p>--back-interval -B模式下，每打印一千行回滚SQL，加一句SLEEP多少秒，如不想加SLEEP，请设为0。可选。默认1.0。</p>\n<p><strong>解析范围控制</strong></p>\n<p>--start-file 起始解析文件，只需文件名，无需全路径 。必须。</p>\n<p>--start-position&#x2F;--start-pos 起始解析位置。可选。默认为start-file的起始位置。</p>\n<p>--stop-file&#x2F;--end-file 终止解析文件。可选。默认为start-file同一个文件。若解析模式为stop-never，此选项失效。</p>\n<p>--stop-position&#x2F;--end-pos 终止解析位置。可选。默认为stop-file的最末位置；若解析模式为stop-never，此选项失效。</p>\n<p>--start-datetime 起始解析时间，格式&#39;%Y-%m-%d %H:%M:%S&#39;。可选。默认不过滤。</p>\n<p>--stop-datetime 终止解析时间，格式&#39;%Y-%m-%d %H:%M:%S&#39;。可选。默认不过滤。</p>\n<p><strong>对象过滤</strong></p>\n<p>-d, --databases 只解析目标db的sql，多个库用空格隔开，如-d db1 db2。可选。默认为空。</p>\n<p>-t, --tables 只解析目标table的sql，多张表用空格隔开，如-t tbl1 tbl2。可选。默认为空。</p>\n<p>--only-dml 只解析dml，忽略ddl。可选。默认False。</p>\n<p>--sql-type 只解析指定类型，支持INSERT, UPDATE, DELETE。多个类型用空格隔开，如--sql-type INSERT DELETE。可选。默认为增删改都解析。用了此参数但没填任何类型，则三者都不解析。</p>\n<h3 id=\"应用案例\"><a href=\"#应用案例\" class=\"headerlink\" title=\"应用案例\"></a>应用案例</h3><h4 id=\"误删整张表数据，需要紧急回滚\"><a href=\"#误删整张表数据，需要紧急回滚\" class=\"headerlink\" title=\"误删整张表数据，需要紧急回滚\"></a><strong>误删整张表数据，需要紧急回滚</strong></h4><p>闪回详细介绍可参见example目录下《闪回原理与实战》<a href=\"./example/mysql-flashback-priciple-and-practice.md\">example&#x2F;mysql-flashback-priciple-and-practice.md</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">test</span>库tbl表原有数据</span><br><span class=\"line\">mysql&gt; select * from tbl;</span><br><span class=\"line\">+----+--------+---------------------+</span><br><span class=\"line\">| <span class=\"built_in\">id</span> | name   | addtime             |</span><br><span class=\"line\">+----+--------+---------------------+</span><br><span class=\"line\">|  1 | 小赵   | 2016-12-10 00:04:33 |</span><br><span class=\"line\">|  2 | 小钱   | 2016-12-10 00:04:48 |</span><br><span class=\"line\">|  3 | 小孙   | 2016-12-13 20:25:00 |</span><br><span class=\"line\">|  4 | 小李   | 2016-12-12 00:00:00 |</span><br><span class=\"line\">+----+--------+---------------------+</span><br><span class=\"line\">4 rows <span class=\"keyword\">in</span> <span class=\"built_in\">set</span> (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; delete from tbl;</span><br><span class=\"line\">Query OK, 4 rows affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">20:28时，tbl表误操作被清空</span><br><span class=\"line\">mysql&gt; select * from tbl;</span><br><span class=\"line\">Empty <span class=\"built_in\">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure>\n\n<p><strong>恢复数据步骤</strong>：</p>\n<ol>\n<li><p>登录mysql，查看目前的binlog文件</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql&gt; show master status;</span><br><span class=\"line\">+------------------+-----------+</span><br><span class=\"line\">| Log_name         | File_size |</span><br><span class=\"line\">+------------------+-----------+</span><br><span class=\"line\">| mysql-bin.000051 |       967 |</span><br><span class=\"line\">| mysql-bin.000052 |       965 |</span><br><span class=\"line\">+------------------+-----------+</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>最新的binlog文件是mysql-bin.000052，我们再定位误操作SQL的binlog位置。误操作人只能知道大致的误操作时间，我们根据大致时间过滤数据。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">shell&gt; python binlog2sql/binlog2sql.py -h127.0.0.1 -P3306 -uadmin -p<span class=\"string\">&#x27;admin&#x27;</span> -dtest -ttbl --start-file=<span class=\"string\">&#x27;mysql-bin.000052&#x27;</span> --start-datetime=<span class=\"string\">&#x27;2016-12-13 20:25:00&#x27;</span> --stop-datetime=<span class=\"string\">&#x27;2016-12-13 20:30:00&#x27;</span></span><br><span class=\"line\">输出：</span><br><span class=\"line\">INSERT INTO `<span class=\"built_in\">test</span>`.`tbl`(`addtime`, `<span class=\"built_in\">id</span>`, `name`) VALUES (<span class=\"string\">&#x27;2016-12-13 20:26:00&#x27;</span>, 4, <span class=\"string\">&#x27;小李&#x27;</span>); <span class=\"comment\">#start 317 end 487 time 2016-12-13 20:26:26</span></span><br><span class=\"line\">UPDATE `<span class=\"built_in\">test</span>`.`tbl` SET `addtime`=<span class=\"string\">&#x27;2016-12-12 00:00:00&#x27;</span>, `<span class=\"built_in\">id</span>`=4, `name`=<span class=\"string\">&#x27;小李&#x27;</span> WHERE `addtime`=<span class=\"string\">&#x27;2016-12-13 20:26:00&#x27;</span> AND `<span class=\"built_in\">id</span>`=4 AND `name`=<span class=\"string\">&#x27;小李&#x27;</span> LIMIT 1; <span class=\"comment\">#start 514 end 701 time 2016-12-13 20:27:07</span></span><br><span class=\"line\">DELETE FROM `<span class=\"built_in\">test</span>`.`tbl` WHERE `addtime`=<span class=\"string\">&#x27;2016-12-10 00:04:33&#x27;</span> AND `<span class=\"built_in\">id</span>`=1 AND `name`=<span class=\"string\">&#x27;小赵&#x27;</span> LIMIT 1; <span class=\"comment\">#start 728 end 938 time 2016-12-13 20:28:05</span></span><br><span class=\"line\">DELETE FROM `<span class=\"built_in\">test</span>`.`tbl` WHERE `addtime`=<span class=\"string\">&#x27;2016-12-10 00:04:48&#x27;</span> AND `<span class=\"built_in\">id</span>`=2 AND `name`=<span class=\"string\">&#x27;小钱&#x27;</span> LIMIT 1; <span class=\"comment\">#start 728 end 938 time 2016-12-13 20:28:05</span></span><br><span class=\"line\">DELETE FROM `<span class=\"built_in\">test</span>`.`tbl` WHERE `addtime`=<span class=\"string\">&#x27;2016-12-13 20:25:00&#x27;</span> AND `<span class=\"built_in\">id</span>`=3 AND `name`=<span class=\"string\">&#x27;小孙&#x27;</span> LIMIT 1; <span class=\"comment\">#start 728 end 938 time 2016-12-13 20:28:05</span></span><br><span class=\"line\">DELETE FROM `<span class=\"built_in\">test</span>`.`tbl` WHERE `addtime`=<span class=\"string\">&#x27;2016-12-12 00:00:00&#x27;</span> AND `<span class=\"built_in\">id</span>`=4 AND `name`=<span class=\"string\">&#x27;小李&#x27;</span> LIMIT 1; <span class=\"comment\">#start 728 end 938 time 2016-12-13 20:28:05</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>我们得到了误操作sql的准确位置在728-938之间，再根据位置进一步过滤，使用flashback模式生成回滚sql，检查回滚sql是否正确(注：真实环境下，此步经常会进一步筛选出需要的sql。结合grep、编辑器等)</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">shell&gt; python binlog2sql/binlog2sql.py -h127.0.0.1 -P3306 -uadmin -p<span class=\"string\">&#x27;admin&#x27;</span> -dtest -ttbl --start-file=<span class=\"string\">&#x27;mysql-bin.000052&#x27;</span> --start-position=3346 --stop-position=3556 -B &gt; rollback.sql | <span class=\"built_in\">cat</span></span><br><span class=\"line\">输出：</span><br><span class=\"line\">INSERT INTO `<span class=\"built_in\">test</span>`.`tbl`(`addtime`, `<span class=\"built_in\">id</span>`, `name`) VALUES (<span class=\"string\">&#x27;2016-12-12 00:00:00&#x27;</span>, 4, <span class=\"string\">&#x27;小李&#x27;</span>); <span class=\"comment\">#start 728 end 938 time 2016-12-13 20:28:05</span></span><br><span class=\"line\">INSERT INTO `<span class=\"built_in\">test</span>`.`tbl`(`addtime`, `<span class=\"built_in\">id</span>`, `name`) VALUES (<span class=\"string\">&#x27;2016-12-13 20:25:00&#x27;</span>, 3, <span class=\"string\">&#x27;小孙&#x27;</span>); <span class=\"comment\">#start 728 end 938 time 2016-12-13 20:28:05</span></span><br><span class=\"line\">INSERT INTO `<span class=\"built_in\">test</span>`.`tbl`(`addtime`, `<span class=\"built_in\">id</span>`, `name`) VALUES (<span class=\"string\">&#x27;2016-12-10 00:04:48&#x27;</span>, 2, <span class=\"string\">&#x27;小钱&#x27;</span>); <span class=\"comment\">#start 728 end 938 time 2016-12-13 20:28:05</span></span><br><span class=\"line\">INSERT INTO `<span class=\"built_in\">test</span>`.`tbl`(`addtime`, `<span class=\"built_in\">id</span>`, `name`) VALUES (<span class=\"string\">&#x27;2016-12-10 00:04:33&#x27;</span>, 1, <span class=\"string\">&#x27;小赵&#x27;</span>); <span class=\"comment\">#start 728 end 938 time 2016-12-13 20:28:05</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>确认回滚sql正确，执行回滚语句。登录mysql确认，数据回滚成功。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">shell&gt; mysql -h127.0.0.1 -P3306 -uadmin -p<span class=\"string\">&#x27;admin&#x27;</span> &lt; rollback.sql</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from tbl;</span><br><span class=\"line\">+----+--------+---------------------+</span><br><span class=\"line\">| <span class=\"built_in\">id</span> | name   | addtime             |</span><br><span class=\"line\">+----+--------+---------------------+</span><br><span class=\"line\">|  1 | 小赵   | 2016-12-10 00:04:33 |</span><br><span class=\"line\">|  2 | 小钱   | 2016-12-10 00:04:48 |</span><br><span class=\"line\">|  3 | 小孙   | 2016-12-13 20:25:00 |</span><br><span class=\"line\">|  4 | 小李   | 2016-12-12 00:00:00 |</span><br><span class=\"line\">+----+--------+---------------------+</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"限制（对比mysqlbinlog）\"><a href=\"#限制（对比mysqlbinlog）\" class=\"headerlink\" title=\"限制（对比mysqlbinlog）\"></a>限制（对比mysqlbinlog）</h3><ul>\n<li>mysql server必须开启，离线模式下不能解析</li>\n<li>参数 <em>binlog_row_image</em> 必须为FULL，暂不支持MINIMAL</li>\n<li>解析速度不如mysqlbinlog</li>\n</ul>\n<h3 id=\"优点（对比mysqlbinlog）\"><a href=\"#优点（对比mysqlbinlog）\" class=\"headerlink\" title=\"优点（对比mysqlbinlog）\"></a>优点（对比mysqlbinlog）</h3><ul>\n<li>纯Python开发，安装与使用都很简单</li>\n<li>自带flashback、no-primary-key解析模式，无需再装补丁</li>\n<li>flashback模式下，更适合<a href=\"./example/mysql-flashback-priciple-and-practice.md\">闪回实战</a></li>\n<li>解析为标准SQL，方便理解、筛选</li>\n<li>代码容易改造，可以支持更多个性化解析</li>\n</ul>\n<h3 id=\"贡献者\"><a href=\"#贡献者\" class=\"headerlink\" title=\"贡献者\"></a>贡献者</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RhbmZlbmdjYW8=\">danfengcao<i class=\"fa fa-external-link-alt\"></i></span> 作者，维护者 [<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RhbmZlbmdjYW9d\">https://github.com/danfengcao]<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>大众点评DBA团队 想法交流，使用体验</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ltemN5MTk4Nw==\">赵承勇<i class=\"fa fa-external-link-alt\"></i></span> pymysqlreplication权限bug #2</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JpbmdsdWNoZW4=\">陈路炳<i class=\"fa fa-external-link-alt\"></i></span> bug报告(字段值为空时的处理)，使用体验</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0RCQS1qYW5l\">dba-jane<i class=\"fa fa-external-link-alt\"></i></span> pymysqlreplication时间字段浮点数bug #29</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2x1amlua2U=\">lujinke<i class=\"fa fa-external-link-alt\"></i></span> bug报告(set字段的处理 #32)</li>\n</ul>\n","categories":["mysql"],"tags":["mysql5.7","innobd_ruby"]},{"title":"mysql学习笔记-role模拟，utilities和mysql的体系结构，慢查询日志","url":"/mysql/learn-mysql-003/","content":"<h2 id=\"mysql模拟角色\"><a href=\"#mysql模拟角色\" class=\"headerlink\" title=\"mysql模拟角色\"></a>mysql模拟角色</h2><ol>\n<li><p>角色的定义</p>\n<blockquote>\n<p>角色可以用来批量管理用户，同一个角色下的用户，拥有相同的权限。</p>\n<p>mysql 5.7.x以后可以模拟角色的功能，通过mysql.proxies_priv模拟实现。</p>\n<p>mysql.proxies_priv在5.5.x和5.6.x的时候就存在，但是无法模拟角色功能。</p>\n</blockquote>\n</li>\n<li><p>模拟角色操作</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建一个角色</span></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; create user &#x27;shopcrm_dba&#x27;@&#x27;127.0.0.1&#x27;;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">窗户用户1</span></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; create user &#x27;shopcrm_001&#x27;@&#x27;127.0.0.1&#x27; identified by &#x27;admin123&#x27;;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建用户2</span></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; create user &#x27;shopcrm_002&#x27;@&#x27;127.0.0.1&#x27; identified by &#x27;admin123&#x27;;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">将角色的权限映射到用户上</span></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; grant proxy on &#x27;shopcrm_dba&#x27;@&#x27;127.0.0.1&#x27; to &#x27;shopcrm_001&#x27;@&#x27;127.0.0.1&#x27;;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看用户1的权限</span></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; show grants for &#x27;shopcrm_001&#x27;@&#x27;127.0.0.1&#x27;;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查询角色的权限</span></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; show grants for &#x27;shopcrm_dba&#x27;@&#x27;127.0.0.1&#x27;;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">给角色赋予实际的权限</span></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; grant insert, delete, select, update on *.* to &#x27;shopcrm_dba&#x27;@&#x27;127.0.0.1&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; show grants for &#x27;shopcrm_dba&#x27;@&#x27;127.0.0.1&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; show grants for &#x27;shopcrm_001&#x27;@&#x27;127.0.0.1&#x27;;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看proxies_priv的权限</span></span><br><span class=\"line\">MySQL root@localhost:mysql&gt; select * from mysql.proxies_priv;</span><br><span class=\"line\">MySQL root@localhost:(none)&gt; flush privileges;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"utilities介绍\"><a href=\"#utilities介绍\" class=\"headerlink\" title=\"utilities介绍\"></a>utilities介绍</h2><ol>\n<li><p>介绍</p>\n<p>mysql官方提供了mysql-utilities工具，比如mysqlfrm命令可以从mysql的表定义文件中恢复表的create table sql等。于是去Mysql官网查看下载界面，发现对Mac的支持的.dmg包只到10.7（Lion），而我的系统版本已经10.12 +了，于是只能着手源码编译安装。</p>\n</li>\n<li><p>源码编译安装mysql-utilities</p>\n<ul>\n<li><p>安装MySQL Connector&#x2F;Python</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">brew install --cask mysql-connector-python</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载Mysql Utilities源码包，并编译安装。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">mkdir</span> temp</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> temp/</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">wget https://downloads.mysql.com/archives/get/p/30/file/mysql-utilities-1.6.5.tar.gz</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">tar -xvzf mysql-utilities-1.6.4.tar.gz</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> mysql-utilities-1.6.4</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">python ./setup.py build</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">sudo python ./setup.py install</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>验证</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysqlfrm --help</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"mysql体系结构\"><a href=\"#mysql体系结构\" class=\"headerlink\" title=\"mysql体系结构\"></a>mysql体系结构</h2><ol>\n<li><p>数据库</p>\n<blockquote>\n<p>数据库(数据库文件)是一个或者一组二进制文件，通常来说存在于文件系统之上。</p>\n</blockquote>\n</li>\n<li><p>数据库实例</p>\n<blockquote>\n<p>由数据库后台进程&#x2F;线程以及一个共享区域组成，数据库实例是用来操作数据库文件的</p>\n<p>注意：mysql中，数据库实例和数据库是一一对应的，没有一对多的机制。</p>\n</blockquote>\n</li>\n<li><p>mysql体系结构</p>\n<ul>\n<li><p>单进程多线程结构</p>\n<ul>\n<li>不会影响mysql的性能</li>\n</ul>\n</li>\n<li><p>存储引擎</p>\n<ul>\n<li><p>存储引擎的对象就是表</p>\n</li>\n<li><p>show create table table_name可以查看表对应的存储引擎</p>\n</li>\n</ul>\n</li>\n<li><p>体系结构图</p>\n<p><img src=\"/mysql/learn-mysql-003/mysql_architecture.png\" loading=\"lazy\"></p>\n</li>\n<li><p>逻辑存储结构</p>\n<table>\n<thead>\n<tr>\n<th>mysql逻辑存储结构</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>instance</td>\n</tr>\n<tr>\n<td>database</td>\n</tr>\n<tr>\n<td>schema</td>\n</tr>\n<tr>\n<td>table</td>\n</tr>\n<tr>\n<td>view</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>一个db对应一个schema，一个db对应一个文件夹，一个表对应一组文件，一个schema对应多个表，一个表对应多个view。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>mysql物理存储结构</p>\n<ul>\n<li><p>mysql配置文件</p>\n<ul>\n<li>datadir： 存储二进制文件的路径</li>\n</ul>\n</li>\n<li><p>表结构的组成</p>\n<ul>\n<li><p>frm：表结构定义文件</p>\n</li>\n<li><p>MYI：索引文件</p>\n</li>\n<li><p>MYD：数据文件</p>\n</li>\n<li><p>mysqlfrm：可以将frm文件转换成create table语句</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">mysqlfrm --diagnostic abc.frm</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<blockquote>\n<p>可以使用hexdump -c xxx.frm查看二进制文件</p>\n</blockquote>\n</li>\n<li><p>错误日志文件</p>\n<ul>\n<li>log_err：建议配置成统一的名字</li>\n</ul>\n</li>\n<li><p>慢查询日志文件</p>\n<ul>\n<li>将运行超过某一个阈值的sql语句记录到文件</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"慢查询日志\"><a href=\"#慢查询日志\" class=\"headerlink\" title=\"慢查询日志\"></a>慢查询日志</h2><ol>\n<li><p>慢查询日志相关参数</p>\n<table>\n<thead>\n<tr>\n<th>参数名称</th>\n<th>参数释义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>slow_query_log</td>\n<td>是否开启慢查询日志</td>\n</tr>\n<tr>\n<td>slow_query_log_file</td>\n<td>慢查询日志文件名, 在 my.cnf 我们已经定义为slow.log，默认是 机器名-slow.log</td>\n</tr>\n<tr>\n<td>long_query_time</td>\n<td>制定慢查询阈值, 单位是秒，且当版本 &gt;&#x3D;5.5.X ，支持毫秒。例如 0.5 即为 500ms。大于该值，不包括值本身。例如该值为2，则执行时间正好等于2的SQL语句不会记录</td>\n</tr>\n<tr>\n<td>log_queries_not_using_indexes</td>\n<td>将没有使用索引的SQL记录到慢查询日志</td>\n</tr>\n<tr>\n<td>log_throttle_queries_not_using_indexes</td>\n<td>限制每分钟内，在慢查询日志中，去记录没有使用索引的SQL语句的次数;版本需要 &gt;&#x3D;5.6.x。因为没有使用索引的SQL可能会短时间重复执行，为了避免日志快速增大，限制每分钟的记录次数</td>\n</tr>\n<tr>\n<td>min_examined_row_limit</td>\n<td>扫描记录少于改值的SQL不记录到慢查询日志。结合去记录没有使用索引的SQL语句的例􏰀，有可能存在某一个表，数据量维持在百行左右，且没有建立索引。这种表即使不建立索引，查询也很快，扫描记录很小，如果确定有这种表，则可以通过此参数设置，将这个SQL不记录到慢查询日志。</td>\n</tr>\n<tr>\n<td>log_slow_admin_statements</td>\n<td>记录超时的管理操作SQL到慢查询日志，比如ALTER&#x2F;ANALYZE TABLE</td>\n</tr>\n<tr>\n<td>log_output</td>\n<td>慢查询日志的格式，[FILE | TABLE | NONE]，默认是FILE;版本 &gt;&#x3D;5.5。如果设置为TABLE，则记录的到 mysql.slow_log</td>\n</tr>\n<tr>\n<td>log_slow_slave_statements</td>\n<td>在从服务器上开启慢查询日志</td>\n</tr>\n<tr>\n<td>log_timestamps</td>\n<td>写入时区信息。可􏰁据需求记录UTC时间或者服务器本地系统时间</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>慢查询日志实践</p>\n<ul>\n<li><p>设置慢查询记录的相关参数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- 终端A --</span></span><br><span class=\"line\"><span class=\"comment\">-- 注意做实验以前，先把my.cnf中的 slow_query_log = 0, 同时将min_examined_row_limit = 100 进行注释 --</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> version();</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> version() <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">5.7</span><span class=\"number\">.9</span><span class=\"operator\">-</span>log <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 为了测试，特地在my.cnf中关闭了该选项</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variales <span class=\"keyword\">like</span> &quot;slow_query_log&quot;; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+-------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+-------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> slow_query_log <span class=\"operator\">|</span> OFF <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+-------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- slow_query_log可以在线打开</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">set</span> <span class=\"keyword\">global</span> slow_query_log <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 已􏰂打开</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> &quot;slow_query_log&quot;;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+-------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+-------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> slow_query_log <span class=\"operator\">|</span> <span class=\"keyword\">ON</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+-------+ </span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- -- my.cnf 中该值设置为2秒</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> &quot;long_query_time&quot;;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------+----------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------+----------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> long_query_time <span class=\"operator\">|</span> <span class=\"number\">2.000000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"> <span class=\"operator\">+</span><span class=\"comment\">-----------------+----------+ </span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- my.cnf 中已􏰂关闭注释，所以这里为0</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> &quot;min_ex%&quot;;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> min_examined_row_limit <span class=\"operator\">|</span> <span class=\"number\">0</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------+-------+ </span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>mysqldumpslow</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">~/docker/mysql5.7 &gt; mysqldumpslow slow.log</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果在线上操作，不需要mysqldumpslow去扫描整个slow.log，可以tail -n 10000 slow.log &gt; last_10000_slow.log 。然后在mysqldumpslow last_10000_slow.log</p>\n</blockquote>\n</li>\n<li><p>慢查询日志存入表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- 在my.cnf 中增加 log_output = TABLE，打开slow_query_log选项，然后重启数据库实例 </span></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> &quot;log_output%&quot;;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> log_output <span class=\"operator\">|</span> <span class=\"keyword\">TABLE</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+-------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> &quot;slow_query_log&quot;;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+-------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+-------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> slow_query_log <span class=\"operator\">|</span> <span class=\"keyword\">ON</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+-------+ </span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> mysql.slow_log; </span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> mysql.slow_log; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- 表结构输出省略</span></span><br><span class=\"line\"><span class=\"comment\">-- 关键一句如下:</span></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\">ENGINE<span class=\"operator\">=</span>CSV <span class=\"keyword\">DEFAULT</span> CHARSET<span class=\"operator\">=</span>utf8 COMMENT<span class=\"operator\">=</span><span class=\"string\">&#x27;Slow log&#x27;</span> </span><br><span class=\"line\"><span class=\"comment\">-- ENGINE=CSV 这里使用的是CSV的引擎,性能较差</span></span><br><span class=\"line\"><span class=\"comment\">-- 建议将slow_log表的存储引擎改成MyISAM </span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> mysql.slow_log engine <span class=\"operator\">=</span> myisam;</span><br><span class=\"line\">ERROR <span class=\"number\">1580</span> (HY000): You cannot <span class=\"string\">&#x27;ALTER&#x27;</span> a log <span class=\"keyword\">table</span> if logging <span class=\"keyword\">is</span> enabled <span class=\"comment\">-- 提示我正在记录日志中，不能转换</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 先停止记录日志</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">set</span> <span class=\"keyword\">global</span> slow_query_log <span class=\"operator\">=</span> <span class=\"number\">0</span>; </span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> mysql.slow_log engine <span class=\"operator\">=</span> myisam;</span><br><span class=\"line\">Query OK, <span class=\"number\">2</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">5.05</span> sec) </span><br><span class=\"line\">Records: <span class=\"number\">2</span> Duplicates: <span class=\"number\">0</span> Warnings: <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">set</span> <span class=\"keyword\">global</span> slow_query_log <span class=\"operator\">=</span> <span class=\"number\">1</span>; </span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> mysql.slow_log; </span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- 表结构输出省略</span></span><br><span class=\"line\"><span class=\"comment\">-- 关键一句如下:</span></span><br><span class=\"line\">ENGINE<span class=\"operator\">=</span>MyISAM <span class=\"keyword\">DEFAULT</span> CHARSET<span class=\"operator\">=</span>utf8 COMMENT<span class=\"operator\">=</span><span class=\"string\">&#x27;Slow log&#x27;</span> <span class=\"comment\">-- ENGINE 变成了MyISAM</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>使用 TABLE 的优势在于方便查询，但是记住当在备份的时候，不要备份慢查询日志的表，避免备份过大。</p>\n<p>使用 FILE 也可以，需要定时清除该文件，避免单文件过大。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"通用日志-generic-log-和审计\"><a href=\"#通用日志-generic-log-和审计\" class=\"headerlink\" title=\"通用日志(generic_log)和审计\"></a>通用日志(generic_log)和审计</h2><ol>\n<li><p>通用日志作用</p>\n<ul>\n<li><p>当需要查找某条特定SQL语句，且该SQL语句执行较快，无法记录到slow_log中时，可以开启通用日志generic_log进行全面记录，可用于审计audit</p>\n</li>\n<li><p>通用日志会记录所有操作，性能下降明显，所以如果需要审计，需要audit plugin</p>\n</li>\n</ul>\n</li>\n<li><p>审计插件</p>\n<ul>\n<li><p>mariadb audit插件</p>\n<ul>\n<li>mysql社区版本目前没有提供audit功能， 企业版本提供了该功能。mariadb提供了开源的audit插件，且mysql也能使用。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>audit plugin安装</p>\n<ul>\n<li><p>mysql5.6.27审计插件安装成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">找到plugin位置</span></span><br><span class=\"line\">[root@localhost ~]&gt; cat /etc/my.cnf | grep plugin_dir </span><br><span class=\"line\">plugin_dir=/usr/local/mysql/lib/plugin</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">解压plugin</span></span><br><span class=\"line\">[root@localhost ~]&gt; tar zxvf server_audit-1.2.0.tar.gz </span><br><span class=\"line\">server_audit-1.2.0/</span><br><span class=\"line\">server_audit-1.2.0/linux-32_debug/ </span><br><span class=\"line\">server_audit-1.2.0/linux-32_debug/server_audit.so </span><br><span class=\"line\">server_audit-1.2.0/linux-32/ </span><br><span class=\"line\">server_audit-1.2.0/linux-32/server_audit.so </span><br><span class=\"line\">server_audit-1.2.0/linux-64_debug/ </span><br><span class=\"line\">server_audit-1.2.0/linux-64_debug/server_audit.so </span><br><span class=\"line\">server_audit-1.2.0/windows-32/ </span><br><span class=\"line\">server_audit-1.2.0/windows-32/server_audit.dll </span><br><span class=\"line\">server_audit-1.2.0/windows-64_debug/ </span><br><span class=\"line\">server_audit-1.2.0/windows-64_debug/server_audit.dll </span><br><span class=\"line\">server_audit-1.2.0/linux-64/ </span><br><span class=\"line\">server_audit-1.2.0/linux-64/server_audit.so </span><br><span class=\"line\">server_audit-1.2.0/windows-64/ </span><br><span class=\"line\">server_audit-1.2.0/windows-64/server_audit.dll </span><br><span class=\"line\">server_audit-1.2.0/windows-32_debug/ </span><br><span class=\"line\">server_audit-1.2.0/windows-32_debug/server_audit.dll</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">移动插件到对应的插件目录</span></span><br><span class=\"line\">[root@localhost ~]&gt; mv server_audit-1.2.0/linux-64/server_audit.so /usr/local/mysql/lib/plugin </span><br><span class=\"line\">[root@localhost ~]&gt; cd /usr/local/mysql/lib/plugin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>相关安装步骤</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- 相关安装步骤</span></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> version(); </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> version() <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">5.6</span><span class=\"number\">.27</span><span class=\"operator\">-</span>log <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 安装插件，该步骤在5.7.9中失败</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> INSTALL PLUGIN server_audit SONAME <span class=\"string\">&#x27;server_audit.so&#x27;</span>;</span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查看和server_audit相关</span></span><br><span class=\"line\">的参数</span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> &quot;%server_audit%&quot;;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------+-----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------+-----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_events <span class=\"operator\">|</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_excl_users <span class=\"operator\">|</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_file_path <span class=\"operator\">|</span> server_audit_logging <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_file_rotate_now <span class=\"operator\">|</span> OFF <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_file_rotate_size <span class=\"operator\">|</span> <span class=\"number\">1000000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_file_rotations <span class=\"operator\">|</span> <span class=\"number\">9</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_incl_users <span class=\"operator\">|</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_logging <span class=\"operator\">|</span> OFF <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_mode <span class=\"operator\">|</span> <span class=\"number\">1</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_output_type <span class=\"operator\">|</span> file <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_syslog_facility <span class=\"operator\">|</span> LOG_USER <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_syslog_ident <span class=\"operator\">|</span> mysql<span class=\"operator\">-</span>server_auditing <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_syslog_info <span class=\"operator\">|</span> <span class=\"operator\">|</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_syslog_priority <span class=\"operator\">|</span> LOG_INFO <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------+-----------------------+ </span></span><br><span class=\"line\"><span class=\"number\">14</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 打开审计功能</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">set</span> <span class=\"keyword\">global</span> server_audit_logging <span class=\"operator\">=</span> <span class=\"number\">1</span>;  </span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> &quot;server_audit_logging&quot;;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_logging <span class=\"operator\">|</span> <span class=\"keyword\">ON</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------+-------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> status <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%audit%&#x27;</span>; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------+------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------+------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_active <span class=\"operator\">|</span> <span class=\"keyword\">ON</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_current_log <span class=\"operator\">|</span> server_audit.log <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> server_audit_last_error <span class=\"operator\">|</span> <span class=\"operator\">|</span> <span class=\"operator\">|</span> </span><br><span class=\"line\">server_audit_writes_failed <span class=\"operator\">|</span> <span class=\"number\">0</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------+------------------+</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看审计日志</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@MyServer mysql_data]&gt; tail -f server_audit.log</span><br><span class=\"line\">20151120 22:40:54,MyServer,root,localhost,2,9,QUERY,,&#x27;set global server_audit_logging = 1&#x27;,0 </span><br><span class=\"line\">20151120 22:41:16,MyServer,root,localhost,2,10,QUERY,,&#x27;show variables like &quot;server_audit_logging&quot;&#x27;,0 </span><br><span class=\"line\">20151120 22:41:53,MyServer,root,localhost,1,5,QUERY,,&#x27;show status like \\&#x27;%audit%\\&#x27;&#x27;,0</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-升级/参数/连接/权限","url":"/mysql/learn-mysql-002/","content":"<h2 id=\"mysql版本升级\"><a href=\"#mysql版本升级\" class=\"headerlink\" title=\"mysql版本升级\"></a>mysql版本升级</h2><ol>\n<li><p>环境说明</p>\n<p>一般来说，mysql数据库的二进制数据文件，也就是my.cnf中配置的datadir所在的位置，和我们mysql的应用程序安装的位置，是分开的，仅仅通过配置项告诉mysql，数据库的数据文件中datadir这个目录下，当程序和数据分离以后，方便我们对数据库应用程序做版本的升级和回退。</p>\n</li>\n<li><p>环境举例</p>\n<ul>\n<li><p>mysql安装目录</p>\n<ul>\n<li><p>MySQL 5.6.27: &#x2F;usr&#x2F;local&#x2F;mysql-5.6.27-linux-glibc2.5-x86_64 </p>\n</li>\n<li><p>MySQL 5.7.9 : &#x2F;usr&#x2F;local&#x2F;mysql-5.7.9-linux-glibc2.5-x86_64</p>\n</li>\n</ul>\n</li>\n<li><p>datadir目录</p>\n<ul>\n<li>&#x2F;data&#x2F;mysql_data&#x2F;</li>\n</ul>\n</li>\n<li><p>初始化环境</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">ll grep mysql</span> </span><br><span class=\"line\">lewxrwxrwx 1 root root 34 Nov 16 13:40 mysql -&gt; mysql-5.6.27-linux-glibc2.5-x86_64 </span><br><span class=\"line\">dewxr-xr-x 13 root mysql 4096 Nov 16 13:37 mysql-5.6.27-linux-glibc2.5-x86_64 </span><br><span class=\"line\">drwxr-xr-x 9 7161 wheel 4096 Oct 12 00:29 mysql-5.7.9-linux-glibc2.5-x86_64 </span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">ll/data/mysql_data/</span> </span><br><span class=\"line\">total 13540</span><br><span class=\"line\"> -rw-rw---- 1 mysql mysql 65468 Nov 16 13:50 bin.000001 </span><br><span class=\"line\"> -rw-rW---- 1 mysql mysql 1176237 Nov 16 13:50 bin.000002 </span><br><span class=\"line\"> -rw-rW---- 1 mysql mysql 26 Nov 16 13:50 bin.index </span><br><span class=\"line\"> -rw-rw---- 1 mysql mysql 6882 Nov 16 13:50 error.log </span><br><span class=\"line\"> -rw-rW---- 1 mysql mysql 865 Nov 16 13:50 ib_buffer_pool </span><br><span class=\"line\"> -rw-rw- - - - 1 mysql mysql 12582912 Nov 16 13:50 ibdatal </span><br><span class=\"line\"> drwx------2 mysql mysql •096 Nov 16 13:50 mysql </span><br><span class=\"line\"> drwx------2 mysql mysql 4096 Nov 16 13:50 performance_schema </span><br><span class=\"line\"> drwx----- - 2 mysql mysql 4096 Nov 16 13:49 test</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>版本升级</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">/etc/init.d/mysqld stop <span class=\"comment\"># 安全的停止mysql数据库的运行</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> /usr/local/</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">unlink</span> mysql</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">ln</span> - mysql-5.7.9-linux-glibc2.5-x86_64 mysql</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">此时，mysql的应用程序版本已经完成了升级，注意，此时只是应用程序升级完成，系统表仍然是5.6的版本</span> </span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> /usr/local/mysql</span> </span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">chown</span> -R root.mysql . <span class=\"comment\"># 操作之前将5.6的datadir目录备份，以便升级失败可以会退</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">/etc/init.d/mysqld start <span class=\"comment\"># 可以启动，查看error日志，有很多waring</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">mysql_upgrade -p -s</span> </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">参数-s一定要加，表示的是只更新系统表。如果不加-s，则会将所有表以升级的版本重建。</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">因为数据库二进制文件是兼容的，无需升级。</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>5.1.x、5.5.x、5.6.x是可以直接通过该方式升级到5.7.x。</p>\n</blockquote>\n</li>\n<li><p>关于降级问题的说明</p>\n<p>通过覆盖mysql到系统表方式存储问题，会导致启动不成功，官方建议如下：</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS43L2VuL2Rvd25ncmFkaW5nLXRvLXByZXZpb3VzLXNlcmllcy5odG1s\">mysql5.7j降级建议<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>上述建议中使用的sql语句可以中mysql5.7的源码的srcipts&#x2F;mysql_system_tables_fix_for_downgrade.sql中找到，或者直接运行这个sql脚本。</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"mysql的连接登录\"><a href=\"#mysql的连接登录\" class=\"headerlink\" title=\"mysql的连接登录\"></a>mysql的连接登录</h2><ol>\n<li><p>几种登录方式</p>\n<ul>\n<li><p>方式1 mysql -p</p>\n<blockquote>\n<p>该方法默认使用root用户，可以使用select user(); 查看当前用户</p>\n</blockquote>\n</li>\n<li><p>方式2 mysql -S &#x2F;tmp&#x2F;mysql.sock -u root -p password</p>\n<blockquote>\n<p>该方法适用于中安装mysql主机上进行本地登录</p>\n</blockquote>\n</li>\n<li><p>方式3 mysql -h 127.0.0.1 -u root -p password</p>\n<blockquote>\n<p>使用&#39;root&#39;@&#39;127.0.0.1&#39;这个用户登录</p>\n</blockquote>\n</li>\n<li><p>方式4 mysql -h localhost -u root -p password</p>\n<blockquote>\n<p>该方式等价于方式2，且和方式3属于两个不同的用户</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>免密码登录</p>\n<ul>\n<li><p>方式1 my.cnf增加[client]标签</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">[client]</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=<span class=\"string\">&quot;root&quot;</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">&quot;密码&quot;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"># 针对定义不同的客户端</span></span><br><span class=\"line\"><span class=\"attr\">[mysql]</span> <span class=\"string\"># 这个是给/usr/local/mysql/bin/mysql使用的</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">&quot;密码&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">[mysqladmin]</span> <span class=\"string\"># 这个是给/usr/local/mysql/bin/mysqladmin使用的</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">&quot;密码&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方式2 login-path</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">mysql_config_editor <span class=\"built_in\">set</span> --login-path=vm1 --host=localhost --user=root --password</span></span><br><span class=\"line\">Enter password: </span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">mysql_config_editor <span class=\"built_in\">print</span> --all</span></span><br><span class=\"line\">[vm1]</span><br><span class=\"line\">user = root</span><br><span class=\"line\">password = *****</span><br><span class=\"line\">host = localhost</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">mysql --login-path=vm1</span></span><br><span class=\"line\">Welcome to the MySQL monitor.  Commands end with ; or \\g.</span><br><span class=\"line\">Your MySQL connection id is 3</span><br><span class=\"line\">Server version: 5.7.37-log Homebrew</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 2000, 2022, Oracle and/or its affiliates.</span><br><span class=\"line\"></span><br><span class=\"line\">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class=\"line\">affiliates. Other names may be trademarks of their respective</span><br><span class=\"line\">owners.</span><br><span class=\"line\"></span><br><span class=\"line\">Type &#x27;help;&#x27; or &#x27;\\h&#x27; for help. Type &#x27;\\c&#x27; to clear the current input statement.</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方式3 ~&#x2F;.my.cnf</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">[client]</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=<span class=\"string\">&quot;root&quot;</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">&quot;密码&quot;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"># 针对定义不同的客户端</span></span><br><span class=\"line\"><span class=\"attr\">[mysql]</span> <span class=\"string\"># 这个是给/usr/local/mysql/bin/mysql使用的</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">&quot;密码&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">[mysqladmin]</span> <span class=\"string\"># 这个是给/usr/local/mysql/bin/mysqladmin使用的</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">&quot;密码&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"mysql参数介绍和设置\"><a href=\"#mysql参数介绍和设置\" class=\"headerlink\" title=\"mysql参数介绍和设置\"></a>mysql参数介绍和设置</h2><ol>\n<li><p>参数的分类</p>\n<ul>\n<li><p>全局参数：global</p>\n<ul>\n<li><p>可修改参数</p>\n</li>\n<li><p>不可修改参数</p>\n</li>\n</ul>\n</li>\n<li><p>会话参数 ：session</p>\n<ul>\n<li><p>可修改参数</p>\n</li>\n<li><p>不可修改参数</p>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<ol>\n<li><p>用户可以在线修改非只读参数，只读参数只能预先在配置文件中进行设置，通过重启数据库实例才生效。</p>\n</li>\n<li><p>所有的在线修改过的参数，在重启后，都会丢失，不会写入my.cnf，无法将修改进行持久化。</p>\n</li>\n<li><p>有些参数，即存在于global又存在于session，比如autocommit。</p>\n</li>\n</ol>\n</blockquote>\n</li>\n<li><p>查看参数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">MySQL hadoop@localhost:(none)&gt; show variables; # 显示当前mysql的所有参数，且无隐藏参数</span><br><span class=\"line\">MySQL hadoop@localhost:(none)&gt; show variables like &#x27;%max%&#x27;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置参数</p>\n<ul>\n<li><p>设置全局参数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">MySQL hadoop@localhost:(none)&gt; show variables like &#x27;%slow%&#x27;;</span><br><span class=\"line\">5 rows in set</span><br><span class=\"line\">Time: 0.015s</span><br><span class=\"line\">MySQL hadoop@localhost:(none)&gt; set slow_query_log = 0;</span><br><span class=\"line\">(1229, &quot;Variable &#x27;slow_query_log&#x27; is a GLOBAL variable and should be set with SET GLOBAL&quot;)</span><br><span class=\"line\">MySQL hadoop@localhost:(none)&gt; set global slow_query_log = 0;</span><br><span class=\"line\">Query OK, 0 rows affected</span><br><span class=\"line\">Time: 0.013s</span><br><span class=\"line\">MySQL hadoop@localhost:(none)&gt; show variables like &#x27;%slow%&#x27;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置会话参数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">set autocommit = 1;</span><br><span class=\"line\">Query OK, 0 rows affected</span><br><span class=\"line\">Time: 0.015s</span><br><span class=\"line\">MySQL hadoop@localhost:(none)&gt; select @@autocommit;</span><br><span class=\"line\">1 row in set</span><br><span class=\"line\">Time: 0.017s</span><br><span class=\"line\">MySQL hadoop@localhost:(none)&gt; set global autocommit = 0;</span><br><span class=\"line\">Query OK, 0 rows affected</span><br><span class=\"line\">Time: 0.006s</span><br><span class=\"line\">MySQL hadoop@localhost:(none)&gt; select @@global.autocommit;</span><br><span class=\"line\">1 row in set</span><br><span class=\"line\">Time: 0.013s</span><br><span class=\"line\">MySQL hadoop@localhost:(none)&gt; select @@global.autocommit, @@autocommit;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"权限管理\"><a href=\"#权限管理\" class=\"headerlink\" title=\"权限管理\"></a>权限管理</h2><ol>\n<li><p>用户+IP的概念</p>\n<p>mysql中同一个用户名，比如hadoop能否登录，以及用什么密码登录，可以访问什么库等等，都需要加上ip，才可以表示一个完整的用户标识。</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"bWFpbHRvOiYjeDY4OyYjOTc7JiN4NjQ7JiMxMTE7JiN4NmY7JiMxMTI7JiN4NDA7JiN4MzE7JiN4MzI7JiM1NTsmI3gyZTsmIzQ4OyYjNDY7JiN4MzA7JiM0NjsmI3gzMTs=\">&#x68;&#97;&#x64;&#111;&#x6f;&#112;&#x40;&#x31;&#x32;&#55;&#x2e;&#48;&#46;&#x30;&#46;&#x31;<i class=\"fa fa-external-link-alt\"></i></span>和hadoop@localhost以及<span class=\"exturl\" data-url=\"bWFpbHRvOiYjeDY4OyYjeDYxOyYjeDY0OyYjeDZmOyYjMTExOyYjMTEyOyYjeDQwOyYjNDk7JiM1NzsmIzUwOyYjNDY7JiN4MzE7JiM1NDsmIzU2OyYjNDY7JiN4MzE7JiN4MmU7JiN4MzE7JiM0ODsmIzQ4Ow==\">&#x68;&#x61;&#x64;&#x6f;&#111;&#112;&#x40;&#49;&#57;&#50;&#46;&#x31;&#54;&#56;&#46;&#x31;&#x2e;&#x31;&#48;&#48;<i class=\"fa fa-external-link-alt\"></i></span>这三个其实是不同的用户标识。</p>\n</blockquote>\n</li>\n<li><p>用户权限管理</p>\n<ul>\n<li><p>系统表权限信息</p>\n<table>\n<thead>\n<tr>\n<th>表名称</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>mysql.user</td>\n<td>查看全局所有库的权限</td>\n</tr>\n<tr>\n<td>mysql.db</td>\n<td>查看置顶库的权限</td>\n</tr>\n<tr>\n<td>mysql.table_priv</td>\n<td>查看指定表的权限</td>\n</tr>\n<tr>\n<td>mysql.column_priv</td>\n<td>查看指定列的权限</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<blockquote>\n<p>tips：可以使用show create table table_name查看表的结构信息</p>\n</blockquote>\n<ul>\n<li><p>常用权限</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>权限</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SQL语句</td>\n<td>select, insert, update, delete, index</td>\n</tr>\n<tr>\n<td>存储过程</td>\n<td>create routine, alter routine, execute, trigger</td>\n</tr>\n<tr>\n<td>管理权限</td>\n<td>super, reload, show database, shutdown</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>显示用户的权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">显示当前用户的权限</span></span><br><span class=\"line\">MySQL hadoop@localhost:(none)&gt; show grants; </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查询当前登录用户</span></span><br><span class=\"line\">MySQL hadoop@localhost:(none)&gt; select current_user();</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看指定用户的权限</span></span><br><span class=\"line\">MySQL hadoop@localhost:(none)&gt; show grants for &#x27;root&#x27;@&#x27;localhost&#x27;;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>基本操作</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建用户</span></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; create user &#x27;bob&#x27;@&#x27;127.0.0.1&#x27; identified by &#x27;admin123&#x27;;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">用户授权</span></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; grant all privileges on *.* to &#x27;bob&#x27;@&#x27;127.0.0.1&#x27; with grant option;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">要查看帐户的非特权属性</span></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; show create user &#x27;bob&#x27;@&#x27;127.0.0.1&#x27;;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">要查看用户的权限</span></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; show grants for &#x27;bob&#x27;@&#x27;127.0.0.1&#x27;;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">刷新用户权限</span></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; flush privileges;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>官网文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS43L2VuL2NyZWF0aW5nLWFjY291bnRzLmh0bWw=\">https://dev.mysql.com/doc/refman/5.7/en/creating-accounts.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n</li>\n<li><p>撤销权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">MySQL root@localhost:(none)&gt; show grants for &#x27;bob&#x27;@&#x27;127.0.0.1&#x27;;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">撤销权限</span></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; revoke all on *.* from &#x27;bob&#x27;@&#x27;127.0.0.1&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">MySQL root@localhost:(none)&gt; show grants for &#x27;bob&#x27;@&#x27;127.0.0.1&#x27;;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>官网文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS43L2VuL2NyZWF0aW5nLWFjY291bnRzLmh0bWw=\">https://dev.mysql.com/doc/refman/5.7/en/creating-accounts.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n</li>\n<li><p>删除用户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">revoke只删除用户权限，不删除用户</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">删除用户</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-存储引擎","url":"/mysql/learn-mysql-004/","content":"<h2 id=\"mysql上支持的存储引擎\"><a href=\"#mysql上支持的存储引擎\" class=\"headerlink\" title=\"mysql上支持的存储引擎\"></a>mysql上支持的存储引擎</h2><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">MySQL root@localhost:mysql&gt; show engines;</span><br><span class=\"line\"></span><br><span class=\"line\">+--------------------+---------+----------------------------------------------------------------+--------------+--------+------------+</span><br><span class=\"line\">| Engine             | Support | Comment                                                        | Transactions | XA     | Savepoints |</span><br><span class=\"line\">+--------------------+---------+----------------------------------------------------------------+--------------+--------+------------+</span><br><span class=\"line\">| InnoDB             | DEFAULT | Supports transactions, row-level locking, and foreign keys     | YES          | YES    | YES        |</span><br><span class=\"line\">| MRG_MYISAM         | YES     | Collection of identical MyISAM tables                          | NO           | NO     | NO         |</span><br><span class=\"line\">| MEMORY             | YES     | Hash based, stored in memory, useful for temporary tables      | NO           | NO     | NO         |</span><br><span class=\"line\">| BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears) | NO           | NO     | NO         |</span><br><span class=\"line\">| MyISAM             | YES     | MyISAM storage engine                                          | NO           | NO     | NO         |</span><br><span class=\"line\">| CSV                | YES     | CSV storage engine                                             | NO           | NO     | NO         |</span><br><span class=\"line\">| ARCHIVE            | YES     | Archive storage engine                                         | NO           | NO     | NO         |</span><br><span class=\"line\">| PERFORMANCE_SCHEMA | YES     | Performance Schema                                             | NO           | NO     | NO         |</span><br><span class=\"line\">| FEDERATED          | NO      | Federated MySQL storage engine                                 | &lt;null&gt;       | &lt;null&gt; | &lt;null&gt;     |</span><br><span class=\"line\">+--------------------+---------+----------------------------------------------------------------+--------------+--------+------------+</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"存储引擎的概念\"><a href=\"#存储引擎的概念\" class=\"headerlink\" title=\"存储引擎的概念\"></a>存储引擎的概念</h2><blockquote>\n<p>用来处理数据库相关的crud操作</p>\n</blockquote>\n<p>每个数据库都有存储引擎，只是mysql比较强调存储引擎的概念</p>\n<h2 id=\"mysql的存储引擎\"><a href=\"#mysql的存储引擎\" class=\"headerlink\" title=\"mysql的存储引擎\"></a>mysql的存储引擎</h2><ol>\n<li><p>官方存储引擎</p>\n<ul>\n<li><p>myisam</p>\n</li>\n<li><p>innodb</p>\n</li>\n<li><p>memory</p>\n</li>\n<li><p>federated</p>\n</li>\n<li><p>csv</p>\n</li>\n<li><p>archive</p>\n</li>\n</ul>\n</li>\n<li><p>第三方存储引擎</p>\n<ul>\n<li><p>tokudb</p>\n</li>\n<li><p>infobright</p>\n</li>\n<li><p>spider</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"存储引擎之myisam\"><a href=\"#存储引擎之myisam\" class=\"headerlink\" title=\"存储引擎之myisam\"></a>存储引擎之myisam</h2><ul>\n<li><p>mysql5.1版本之前的默认存储引擎</p>\n</li>\n<li><p>堆表数据结构</p>\n</li>\n<li><p>表锁设计</p>\n</li>\n<li><p>支持数据静态压缩</p>\n</li>\n<li><p>不支持事务</p>\n</li>\n<li><p>数据容易丢失</p>\n</li>\n<li><p>索引容易损坏</p>\n</li>\n<li><p>数据文件可以直接拷贝到另一台服务器使用</p>\n</li>\n</ul>\n<blockquote>\n<p>现在mysql中还有myisam表，主要是历史原因，数据库文件以MY开头的基本都是myisam表</p>\n</blockquote>\n<ol>\n<li><p>myisam还在使用的原因</p>\n<ul>\n<li><p>历史原因，需要逐步替换</p>\n</li>\n<li><p>部分如user，db等系统表(myisam引擎)，可以直接拷贝，必将方便</p>\n</li>\n</ul>\n</li>\n<li><p>myisam文件组成</p>\n<ul>\n<li><p>frm：表结构定义文件</p>\n</li>\n<li><p>MYI：索引文件</p>\n</li>\n<li><p>MYD：数据文件</p>\n</li>\n</ul>\n<blockquote>\n<p>数据文件是堆表结构，堆是无序数据集合</p>\n<p>MYI中的叶子节点，指向MYD中的数据页</p>\n<p>当数据移动到页外时，需要修改对应指针</p>\n</blockquote>\n</li>\n<li><p>myisamchk</p>\n<p>myisamchk通过扫描MYD文件来重建MYI文件，如果MYD文件中某条记录有问题，将跳过该记录。</p>\n</li>\n</ol>\n<h2 id=\"存储引擎之memory\"><a href=\"#存储引擎之memory\" class=\"headerlink\" title=\"存储引擎之memory\"></a>存储引擎之memory</h2><ol>\n<li><p>memory介绍</p>\n<ul>\n<li><p>全内存存储</p>\n</li>\n<li><p>数据库重启后数据丢失</p>\n</li>\n<li><p>不支持事务</p>\n</li>\n<li><p>支持哈希索引</p>\n</li>\n</ul>\n</li>\n<li><p>memory特性</p>\n<ul>\n<li><p>千万不要用Memory存储引擎去做缓存(Cache) , 性能上不及Redis和Memcahced</p>\n</li>\n<li><p>memory不能禁用，当涉及内部排序操作的临时表时，使用该存储引擎</p>\n<ul>\n<li><p>max_heap_table_size决定使用内存大小，默认16m</p>\n<blockquote>\n<p>无论该表使用什么引擎，只要使用临时表，或者指定memory，都受该参数影响。</p>\n</blockquote>\n</li>\n<li><p>当上面设置的内存放不下数据时，5.6转换为myisam。5.7转换为innodb</p>\n<blockquote>\n<p>注意磁盘上临时路径空间大小tmpdir</p>\n</blockquote>\n</li>\n<li><p>内存使用为会话级别，需要注意oom</p>\n</li>\n</ul>\n</li>\n<li><p>支持哈希索引，仅支持等值查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- Created_tmp_disk_tables 内存放不下，转成磁盘存储的数􏰄,如果过大，考虑增大内存参数</span></span><br><span class=\"line\"><span class=\"comment\">-- -Created_tmp_tables 创建临时表的数􏰄</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> <span class=\"keyword\">global</span> status <span class=\"keyword\">like</span> &quot;%tmp%tables&quot;; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Created_tmp_disk_tables <span class=\"operator\">|</span> <span class=\"number\">0</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> Created_tmp_tables <span class=\"operator\">|</span> <span class=\"number\">4</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+-------+ </span></span><br><span class=\"line\"><span class=\"number\">2</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- memory转成磁盘存储的路径 </span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> <span class=\"string\">&#x27;tmpdir&#x27;</span>; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> tmpdir <span class=\"operator\">|</span> <span class=\"operator\">/</span>tmp <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+-------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> <span class=\"keyword\">User</span>\\G</span><br><span class=\"line\"><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span> <span class=\"number\">1.</span> <span class=\"type\">row</span> <span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span> </span><br><span class=\"line\"><span class=\"keyword\">Table</span>: <span class=\"keyword\">User</span></span><br><span class=\"line\"><span class=\"keyword\">Create</span> <span class=\"keyword\">Table</span>: <span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `<span class=\"keyword\">User</span>` (</span><br><span class=\"line\">`id` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">`name` <span class=\"type\">varchar</span>(<span class=\"number\">128</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\"><span class=\"keyword\">PRIMARY</span> KEY (`id`),</span><br><span class=\"line\">KEY `name` (`name`) <span class=\"keyword\">USING</span> HASH <span class=\"comment\">-- 对这个字段使用USING HASH,创建hash索引 </span></span><br><span class=\"line\">) ENGINE<span class=\"operator\">=</span>MEMORY <span class=\"keyword\">DEFAULT</span> CHARSET<span class=\"operator\">=</span>latin1</span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>memory的物理特性</p>\n<ul>\n<li><p>内存不会一次性分配最大空间，而是随着使用逐步增加到最大值</p>\n</li>\n<li><p>通过链表管理空闲空间</p>\n</li>\n<li><p>使用固定长度存储数据</p>\n</li>\n<li><p>不支持blob和text类型</p>\n</li>\n<li><p>可以创建自增主键</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"存储引擎之csv\"><a href=\"#存储引擎之csv\" class=\"headerlink\" title=\"存储引擎之csv\"></a>存储引擎之csv</h2><ol>\n<li><p>csv介绍</p>\n<ul>\n<li><p>csv: Comma-Separated Values，使用逗号分隔</p>\n</li>\n<li><p>不支持特殊字符</p>\n</li>\n<li><p>csv是一种标准文件格式</p>\n</li>\n<li><p>文件以村文本形式存储表格数据</p>\n</li>\n<li><p>使用广泛</p>\n</li>\n</ul>\n</li>\n<li><p>csv文件组成</p>\n<ul>\n<li><p>frm：表结构定义文件</p>\n</li>\n<li><p>csv：数据文件</p>\n</li>\n<li><p>csm：元数据信息</p>\n</li>\n</ul>\n</li>\n<li><p>csv特性</p>\n<ul>\n<li><p>MySQL CSV存储引擎运行时，即创建CSV文件</p>\n</li>\n<li><p>通过MySQL标准接口来查看和修改CSV文件</p>\n</li>\n<li><p>无需将CSV文件导入到数据库，只需创建相同字段的表结构，拷贝CSV文件即可</p>\n</li>\n<li><p>CSV存储引擎表每个字段必须是NOT NULL属性</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"存储引擎之federated\"><a href=\"#存储引擎之federated\" class=\"headerlink\" title=\"存储引擎之federated\"></a>存储引擎之federated</h2><ol>\n<li><p>federated介绍</p>\n<ul>\n<li><p>允许本地访问远程MySQL数据库中表的数据  </p>\n</li>\n<li><p>本地不存储任何数据文件  </p>\n</li>\n<li><p>类似Oracle中的DBLink  </p>\n</li>\n<li><p>Federated存储引擎默认不开启, 需要在 my.cnf 的 [mysqld] 标签下添加 federated</p>\n</li>\n<li><p>MySQL的Federated不支持异构数据库访问，MariaDB中的 FederatedX 支持</p>\n</li>\n</ul>\n</li>\n<li><p>federated语法</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">scheme:<span class=\"operator\">/</span><span class=\"operator\">/</span>user_name[:password]<span class=\"variable\">@host</span>_name[:port_num]<span class=\"operator\">/</span>db_name<span class=\"operator\">/</span>tbl_name </span><br><span class=\"line\">CONNECTION<span class=\"operator\">=</span><span class=\"string\">&#x27;mysql://username:password@hostname:port/database/tablename&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- 例子</span></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `T1` (</span><br><span class=\"line\">`A` <span class=\"type\">VARCHAR</span>(<span class=\"number\">100</span>),</span><br><span class=\"line\"><span class=\"keyword\">UNIQUE</span> KEY (`A` (<span class=\"number\">30</span>))</span><br><span class=\"line\">) ENGINE<span class=\"operator\">=</span>FEDERATED CONNECTION<span class=\"operator\">=</span><span class=\"string\">&#x27;MYSQL://david:123@127.0.0.1:3306/TEST/T1&#x27;</span>;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"federated测试\"><a href=\"#federated测试\" class=\"headerlink\" title=\"federated测试\"></a>federated测试</h2><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- mysql1 准备数据</span></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> &quot;port&quot;; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> port <span class=\"operator\">|</span> <span class=\"number\">3306</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+-------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> database burn;</span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> use burn;</span><br><span class=\"line\">Database changed</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> book (</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> id <span class=\"type\">int</span> <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> auto_increment, </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> name <span class=\"type\">varchar</span>(<span class=\"number\">128</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">primary</span> key(id)</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> );</span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.20</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> book <span class=\"keyword\">values</span>(<span class=\"number\">1</span>, &quot;book1&quot;); </span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.02</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> book;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> id <span class=\"operator\">|</span> name  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span>  <span class=\"number\">1</span> <span class=\"operator\">|</span> book1 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----+-------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">user</span> <span class=\"string\">&#x27;burn&#x27;</span>@<span class=\"string\">&#x27;127.0.0.1&#x27;</span> identified <span class=\"keyword\">by</span> <span class=\"string\">&#x27;123&#x27;</span>; </span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">grant</span> <span class=\"keyword\">select</span> <span class=\"keyword\">on</span> burn.<span class=\"operator\">*</span> <span class=\"keyword\">to</span> <span class=\"string\">&#x27;burn&#x27;</span>@<span class=\"string\">&#x27;127.0.0.1&#x27;</span>; </span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> grants <span class=\"keyword\">for</span> <span class=\"string\">&#x27;burn&#x27;</span>@<span class=\"string\">&#x27;127.0.0.1&#x27;</span>; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> Grants <span class=\"keyword\">for</span> burn<span class=\"variable\">@127</span><span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">GRANT</span> USAGE <span class=\"keyword\">ON</span> <span class=\"operator\">*</span>.<span class=\"operator\">*</span> <span class=\"keyword\">TO</span> <span class=\"string\">&#x27;burn&#x27;</span>@<span class=\"string\">&#x27;127.0.0.1&#x27;</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">GRANT</span> <span class=\"keyword\">SELECT</span> <span class=\"keyword\">ON</span> `burn`.<span class=\"operator\">*</span> <span class=\"keyword\">TO</span> <span class=\"string\">&#x27;burn&#x27;</span>@<span class=\"string\">&#x27;127.0.0.1&#x27;</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------------------------+ </span></span><br><span class=\"line\"><span class=\"number\">2</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- mysql2 测试Federated</span></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> &quot;port&quot;; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> port <span class=\"operator\">|</span> <span class=\"number\">3307</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+-------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- federated 引擎没有打开</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> engines;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+---------+----------------------------------------------------------------+--------------+--------+------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Engine             <span class=\"operator\">|</span> Support <span class=\"operator\">|</span> Comment                                                        <span class=\"operator\">|</span> Transactions <span class=\"operator\">|</span> XA     <span class=\"operator\">|</span> Savepoints <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+---------+----------------------------------------------------------------+--------------+--------+------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> InnoDB             <span class=\"operator\">|</span> <span class=\"keyword\">DEFAULT</span> <span class=\"operator\">|</span> Supports transactions, <span class=\"type\">row</span><span class=\"operator\">-</span>level locking, <span class=\"keyword\">and</span> <span class=\"keyword\">foreign</span> keys     <span class=\"operator\">|</span> YES          <span class=\"operator\">|</span> YES    <span class=\"operator\">|</span> YES        <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> MRG_MYISAM         <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> Collection <span class=\"keyword\">of</span> identical MyISAM tables                          <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>     <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> MEMORY             <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> Hash based, stored <span class=\"keyword\">in</span> memory, useful <span class=\"keyword\">for</span> temporary tables      <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>     <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> BLACKHOLE          <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> <span class=\"operator\">/</span>dev<span class=\"operator\">/</span><span class=\"keyword\">null</span> storage engine (anything you write <span class=\"keyword\">to</span> it disappears) <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>     <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> MyISAM             <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> MyISAM storage engine                                          <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>     <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> CSV                <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> CSV storage engine                                             <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>     <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> ARCHIVE            <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> Archive storage engine                                         <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>     <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> PERFORMANCE_SCHEMA <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> Performance Schema                                             <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>     <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> FEDERATED          <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>      <span class=\"operator\">|</span> Federated MySQL storage engine                                 <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>       <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span> <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+---------+----------------------------------------------------------------+--------------+--------+------------+</span></span><br><span class=\"line\"><span class=\"number\">9</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"># 在[mysqld2]标签下面增加federated #</span><br><span class=\"line\">[root<span class=\"variable\">@MyServer</span> <span class=\"operator\">~</span>]<span class=\"operator\">&gt;</span> cat <span class=\"operator\">/</span>etc<span class=\"operator\">/</span>my.cnf</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld2]</span><br><span class=\"line\">federated # 新增的配置项，表示打开federated引擎</span><br><span class=\"line\"></span><br><span class=\"line\">[root<span class=\"variable\">@MyServer</span> <span class=\"operator\">~</span>]<span class=\"operator\">&gt;</span> mysqld_multi stop <span class=\"number\">2</span> </span><br><span class=\"line\">[root<span class=\"variable\">@MyServer</span> <span class=\"operator\">~</span>]<span class=\"operator\">&gt;</span> mysqld_multi <span class=\"keyword\">start</span> <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 显示 federated 已􏰂启用</span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> engines; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+---------+----------------------------------------------------------------+--------------+--------+------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Engine             <span class=\"operator\">|</span> Support <span class=\"operator\">|</span> Comment                                                        <span class=\"operator\">|</span> Transactions <span class=\"operator\">|</span> XA     <span class=\"operator\">|</span> Savepoints <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+---------+----------------------------------------------------------------+--------------+--------+------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> InnoDB             <span class=\"operator\">|</span> <span class=\"keyword\">DEFAULT</span> <span class=\"operator\">|</span> Supports transactions, <span class=\"type\">row</span><span class=\"operator\">-</span>level locking, <span class=\"keyword\">and</span> <span class=\"keyword\">foreign</span> keys     <span class=\"operator\">|</span> YES          <span class=\"operator\">|</span> YES    <span class=\"operator\">|</span> YES        <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> MRG_MYISAM         <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> Collection <span class=\"keyword\">of</span> identical MyISAM tables                          <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>     <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> MEMORY             <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> Hash based, stored <span class=\"keyword\">in</span> memory, useful <span class=\"keyword\">for</span> temporary tables      <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>     <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> BLACKHOLE          <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> <span class=\"operator\">/</span>dev<span class=\"operator\">/</span><span class=\"keyword\">null</span> storage engine (anything you write <span class=\"keyword\">to</span> it disappears) <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>     <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> MyISAM             <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> MyISAM storage engine                                          <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>     <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> CSV                <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> CSV storage engine                                             <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>     <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> ARCHIVE            <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> Archive storage engine                                         <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>     <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> PERFORMANCE_SCHEMA <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> Performance Schema                                             <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>     <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> FEDERATED          <span class=\"operator\">|</span> YES     <span class=\"operator\">|</span> Federated MySQL storage engine                                 <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>       <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span> <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+---------+----------------------------------------------------------------+--------------+--------+------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> database federated_test;</span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> use federated_test;</span><br><span class=\"line\">Database changed</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> federated_table_1 ( </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> id <span class=\"type\">int</span> <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> auto_increment, </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> name <span class=\"type\">varchar</span>(<span class=\"number\">128</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">primary</span> key(id)</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> ) engine<span class=\"operator\">=</span>federated</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> connection<span class=\"operator\">=</span><span class=\"string\">&#x27;mysql://burn:123@127.0.0.1:3306/burn/book&#x27;</span>; </span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.04</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 和 mysqld1 上的内容一致。</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> federated_table_1; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> id <span class=\"operator\">|</span> name <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span> <span class=\"operator\">|</span> book1 <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----+-------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- 由于只有select权限，无法对该表进行insert操作</span></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> federated_table_1 <span class=\"keyword\">values</span>(<span class=\"number\">2</span>, &quot;book2&quot;);</span><br></pre></td></tr></table></figure>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-数据类型","url":"/mysql/learn-mysql-005/","content":"<blockquote>\n<p>查看mysql的数据类型 help data types;</p>\n</blockquote>\n<h2 id=\"int类型\"><a href=\"#int类型\" class=\"headerlink\" title=\"int类型\"></a>int类型</h2><ol>\n<li><p>int类型的分类</p>\n<ul>\n<li><p>TINYINT</p>\n<ul>\n<li><p>存储空间：1字节</p>\n</li>\n<li><p>取值范围：有符号 [-128, 127]，无符号 [0, 255]</p>\n</li>\n</ul>\n</li>\n<li><p>SMALLINT</p>\n<ul>\n<li><p>存储空间：2字节</p>\n</li>\n<li><p>取值范围：有符号[-32768, 32767]，无符号[0, 65535]</p>\n</li>\n</ul>\n</li>\n<li><p>MEDIUMINT</p>\n<ul>\n<li><p>存储空间：3字节</p>\n</li>\n<li><p>取值范围：有符号[-8388608, 8388607]，无符号 [0, 16777215]</p>\n</li>\n</ul>\n</li>\n<li><p>INT</p>\n<ul>\n<li><p>存储空间：4字节</p>\n</li>\n<li><p>取值范围：有符号[-2147483648, 2147483647]，无符号[0, 4294967295]</p>\n</li>\n</ul>\n</li>\n<li><p>BIGINT</p>\n<ul>\n<li><p>存储空间：8字节</p>\n</li>\n<li><p>取值范围：有符号[-9223372036854775808, 9223372036854775807]，无符号[0, 18446744073709551615]</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>int类型的使用</p>\n<ul>\n<li><p>自增长ID</p>\n<blockquote>\n<p>推荐使用bigint</p>\n</blockquote>\n</li>\n<li><p>unsigned or signed</p>\n<blockquote>\n<p>据实际情况使用，一般情况下推荐默认的sigend</p>\n<p>unsigned 的注意事项</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>int (N)</p>\n<ul>\n<li><p>int(N) 和 zerofill</p>\n<ul>\n<li><p>int(N)中的N是显示宽度，不表示存储的数字的长度的上限。</p>\n</li>\n<li><p>zerofill表示当存储的数字长度&lt; N时，用数字0填充左边，直至补满长度N</p>\n</li>\n<li><p>当存储数字的长度超过N时，按照实际存储的数字显示</p>\n</li>\n</ul>\n<blockquote>\n<p>int(N)中的 N 和 zerofill 配合才有意义，且仅仅是显示的时候才有意义，和实际存储没有关系，不会去截取数字的长度。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>auto_increment</p>\n<ul>\n<li><p>自增</p>\n</li>\n<li><p>每张表一个</p>\n</li>\n<li><p>必须是索引的一部分</p>\n</li>\n</ul>\n<blockquote>\n<p>AUTO_INCREMENT是实例启动时，取当前表的最大值，然后+1即为下次自增的值。(MAX + 1)</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"数字类型\"><a href=\"#数字类型\" class=\"headerlink\" title=\"数字类型\"></a>数字类型</h2><ol>\n<li><p>数字类型的分类</p>\n<ul>\n<li><p>单精度类型：float</p>\n<ul>\n<li><p>占用空间：4字节</p>\n</li>\n<li><p>精确性：低</p>\n</li>\n</ul>\n</li>\n<li><p>双精度类型：double</p>\n<ul>\n<li><p>占用空间：8字节</p>\n</li>\n<li><p>精确性：低，比float高</p>\n</li>\n</ul>\n</li>\n<li><p>高精度类型：ducimal</p>\n<ul>\n<li><p>占用空间：变长</p>\n</li>\n<li><p>精确性：非常高</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"字符串类型\"><a href=\"#字符串类型\" class=\"headerlink\" title=\"字符串类型\"></a>字符串类型</h2><ol>\n<li><p>字符串类型介绍</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>说明</th>\n<th>n的含义</th>\n<th>是否有字符集</th>\n<th>最大长度</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>CHAR (N)</td>\n<td>定长字符</td>\n<td>字符</td>\n<td>有</td>\n<td>255</td>\n</tr>\n<tr>\n<td>VARCHAR (N)</td>\n<td>变长字符</td>\n<td>字符</td>\n<td>有</td>\n<td>16384</td>\n</tr>\n<tr>\n<td>BINARY(N)</td>\n<td>定长二进制字节</td>\n<td>字节</td>\n<td>无</td>\n<td>255</td>\n</tr>\n<tr>\n<td>VARBINARY(N)</td>\n<td>变长二进制字节</td>\n<td>字节</td>\n<td>无</td>\n<td>16384</td>\n</tr>\n<tr>\n<td>TINYBLOB(N)</td>\n<td>二进制大对象</td>\n<td>字节</td>\n<td>无</td>\n<td>256</td>\n</tr>\n<tr>\n<td>BLOB(N)</td>\n<td>二进制大对象</td>\n<td>字节</td>\n<td>无</td>\n<td>16k</td>\n</tr>\n<tr>\n<td>MEDIUMBLOB(N)</td>\n<td>二进制大对象</td>\n<td>字节</td>\n<td>无</td>\n<td>16m</td>\n</tr>\n<tr>\n<td>LONGBLOB(N)</td>\n<td>二进制大对象</td>\n<td>字节</td>\n<td>无</td>\n<td>4G</td>\n</tr>\n<tr>\n<td>TINYTEXT(N)</td>\n<td>大对象</td>\n<td>字节</td>\n<td>有</td>\n<td>256</td>\n</tr>\n<tr>\n<td>TEXT(N)</td>\n<td>大对象</td>\n<td>字节</td>\n<td>有</td>\n<td>16k</td>\n</tr>\n<tr>\n<td>MEDIUMTEXT(N)</td>\n<td>大对象</td>\n<td>字节</td>\n<td>有</td>\n<td>16m</td>\n</tr>\n<tr>\n<td>LONGTEXT(N)</td>\n<td>大对象</td>\n<td>字节</td>\n<td>有</td>\n<td>4G</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>N和字符集</p>\n<ul>\n<li><p>char(N)  </p>\n<blockquote>\n<p>假设当前table的字符集的 最大长度 为 W , 则 char(N) 的最大存储空间为 (N X W)Byte ;假设使用 UTF-8 ，则char(10)可以最小存储10个字节的字符，最大存储30个字节的字符，其实是另一种意义上的 varchar ◦ 当存储的字符数小于N时，尾部使用空格填充，并且填充最小字节的空格</p>\n</blockquote>\n<ul>\n<li>test_char 表实际二进制存储文件， 可以使用 shell&gt; hexdump -C test_char.idb验证</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>blob和text</p>\n<ul>\n<li><p>在blob和text上创建索引时，必须制定索引的长度</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> test_text(a <span class=\"type\">int</span> <span class=\"keyword\">primary</span> key, b text, key(b));</span><br><span class=\"line\">ERROR <span class=\"number\">1170</span> (<span class=\"number\">42000</span>): <span class=\"type\">BLOB</span><span class=\"operator\">/</span>TEXT <span class=\"keyword\">column</span> <span class=\"string\">&#x27;b&#x27;</span> used <span class=\"keyword\">in</span> key specification <span class=\"keyword\">without</span> a key length</span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> test_text(a <span class=\"type\">int</span> <span class=\"keyword\">primary</span> key, b text, key(b(<span class=\"number\">64</span>))); Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.13</span> sec)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>blob和text列不能有默认值</p>\n</li>\n<li><p>blob和text列排序只能使用该列的前max_sort_length个字节</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"字符集\"><a href=\"#字符集\" class=\"headerlink\" title=\"字符集\"></a>字符集</h2><ol>\n<li><p>常见字符集</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 查看mysql支持的字符集</span><br><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:(<span class=\"keyword\">none</span>)<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> <span class=\"type\">character</span> <span class=\"keyword\">set</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>collation</p>\n<blockquote>\n<p>collation的含义是指排序规则，ci(case insensitive)结尾的排序集是不区分大小写的</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"集合类型\"><a href=\"#集合类型\" class=\"headerlink\" title=\"集合类型\"></a>集合类型</h2><blockquote>\n<ul>\n<li><p>集合类型ENUM和SET</p>\n</li>\n<li><p>ENUM类型最多允许65536个值</p>\n</li>\n<li><p>SET类型最多允许64个值</p>\n</li>\n<li><p>通过sql_mode参数可以约束检查</p>\n</li>\n</ul>\n</blockquote>\n<ol>\n<li><p>集合类型的约束检查</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> test_col (</span><br><span class=\"line\">       <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">user</span> <span class=\"type\">varchar</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\">       <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> sex enum(<span class=\"string\">&#x27;male&#x27;</span>, <span class=\"string\">&#x27;female&#x27;</span>)</span><br><span class=\"line\">       <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> );</span><br><span class=\"line\"><span class=\"comment\">-- 虽然写的是字符串，单其实存储的整型，效率还是可以的</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> test_col <span class=\"keyword\">values</span> (&quot;tom&quot;, &quot;male&quot;); Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.02</span> sec)</span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> test_col <span class=\"keyword\">values</span> (&quot;tom&quot;, &quot;xmale&quot;); <span class=\"comment\">-- 不是male 和 female Query OK, 1 row affected, 1 warning (0.03 sec) -- 有warning</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">set</span> sql_mode<span class=\"operator\">=</span><span class=\"string\">&#x27;strict_trans_tables&#x27;</span>; <span class=\"comment\">-- 设置为严格模式 Query OK, 0 rows affected, 2 warnings (0.00 sec)</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> test_col <span class=\"keyword\">values</span> (&quot;tom&quot;, &quot;xmale&quot;);</span><br><span class=\"line\">ERROR <span class=\"number\">1265</span> (<span class=\"number\">01000</span>): Data truncated <span class=\"keyword\">for</span> <span class=\"keyword\">column</span> <span class=\"string\">&#x27;sex&#x27;</span> <span class=\"keyword\">at</span> <span class=\"type\">row</span> <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>集合类型的排序</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> test_col_sort(</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">user</span> <span class=\"type\">char</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> type enum(<span class=\"string\">&#x27;aaa&#x27;</span>,<span class=\"string\">&#x27;zzz&#x27;</span>,<span class=\"string\">&#x27;bbb&#x27;</span>,<span class=\"string\">&#x27;yyy&#x27;</span>,<span class=\"string\">&#x27;fff&#x27;</span>) <span class=\"comment\">-- aaa=0, zzz=1, bbb=2, yyy=3, fff=4 -&gt; );</span></span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.20</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 以type作为key，进行升序排序 </span></span><br><span class=\"line\"><span class=\"comment\">-- 枚举类型实际是整型数据，按照插入顺序进行排列</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> test_col_sort <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> type <span class=\"keyword\">asc</span>; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">user</span> <span class=\"operator\">|</span> type <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> user1 <span class=\"operator\">|</span> aaa  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> user4 <span class=\"operator\">|</span> zzz  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> user2 <span class=\"operator\">|</span> bbb  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> user3 <span class=\"operator\">|</span> yyy  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+------+</span></span><br><span class=\"line\"><span class=\"number\">4</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- 使用ascii排序</span></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- 使用cast()函数转换成某种型</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> test_col_sort <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> <span class=\"built_in\">cast</span>(type <span class=\"keyword\">as</span> <span class=\"type\">char</span>) <span class=\"keyword\">asc</span>; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">user</span>  <span class=\"operator\">|</span> type <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> user1 <span class=\"operator\">|</span> aaa <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> user2 <span class=\"operator\">|</span> bbb <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> user3 <span class=\"operator\">|</span> yyy <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> user4 <span class=\"operator\">|</span> zzz <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+------+</span></span><br><span class=\"line\"><span class=\"number\">4</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 或者使用concat</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> test_col_sort <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> concat(type) <span class=\"keyword\">asc</span>;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"日期类型\"><a href=\"#日期类型\" class=\"headerlink\" title=\"日期类型\"></a>日期类型</h2><ol>\n<li><p>类型</p>\n<table>\n<thead>\n<tr>\n<th>日期类型</th>\n<th>占用空间(byte) &lt; 5.6</th>\n<th>占用空间(byte) &gt;&#x3D; 5.6</th>\n<th>表示范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>DATETIME</td>\n<td>8</td>\n<td>5+微妙存储空间</td>\n<td>1000-01-01 00:00:00 ~ 9999-12-31 23:59:59</td>\n</tr>\n<tr>\n<td>DATE</td>\n<td>3</td>\n<td>3</td>\n<td>1000-01-01 ~ 9999-12-31</td>\n</tr>\n<tr>\n<td>TIMESTAMP</td>\n<td>4</td>\n<td>4+微妙存储空间</td>\n<td>1970-01-01 00:00:00UTC ~ 2038-01-19 03:14:07UTC</td>\n</tr>\n<tr>\n<td>YEAR</td>\n<td>1</td>\n<td>1</td>\n<td>YEAR(2):1970-2070, YEAR(4):1901-2155</td>\n</tr>\n<tr>\n<td>TIME</td>\n<td>3</td>\n<td>3+微妙存储空间</td>\n<td>-838:59:59 ~ 838:59:59</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>微妙位数</th>\n<th>所需存储空间</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1, 2</td>\n<td>1 byte</td>\n</tr>\n<tr>\n<td>3, 4</td>\n<td>2 byte</td>\n</tr>\n<tr>\n<td>5, 6</td>\n<td>3 byte</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>timestamp和datetime</p>\n<blockquote>\n<p>timestamp带有时区功能</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> test_time(a <span class=\"type\">timestamp</span>, b datetime);</span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.12</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> test_time <span class=\"keyword\">values</span> (now(), now()); </span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.03</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> test_time; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+---------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> a <span class=\"operator\">|</span> b <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+---------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-03</span><span class=\"number\">-16</span> <span class=\"number\">10</span>:<span class=\"number\">00</span>:<span class=\"number\">39</span> <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-03</span><span class=\"number\">-16</span> <span class=\"number\">10</span>:<span class=\"number\">00</span>:<span class=\"number\">39</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+---------------------+ </span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> @<span class=\"variable\">@time</span>_zone;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> @<span class=\"variable\">@time</span>_zone <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">SYSTEM</span>      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">set</span> time_zone<span class=\"operator\">=</span><span class=\"string\">&#x27;+00:00&#x27;</span>;</span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<p>mysql&gt; select @@time_zone;<br>+-------------+<br>| @@time_zone |<br>+-------------+<br>| +00:00      |<br>+-------------+<br>1 row in set (0.00 sec)</p>\n<p>-- 时区的差别体现出来了<br>mysql&gt; select * from test_time;<br>+---------------------+---------------------+<br>| a | b |<br>+---------------------+---------------------+<br>| 2022-03-16 2:00:39 | 2022-03-16 10:00:39 |<br>+---------------------+---------------------+<br>1 row in set (0.00 sec)</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">3. 微妙</span><br><span class=\"line\"></span><br><span class=\"line\">从mysql5.6.x开始，支持微妙，最大显示6位</span><br><span class=\"line\"></span><br><span class=\"line\">```sql</span><br><span class=\"line\">-- 6位 微秒显示</span><br><span class=\"line\">mysql&gt; select now(6); </span><br><span class=\"line\">+----------------------------+ </span><br><span class=\"line\">| now(6) | </span><br><span class=\"line\">+----------------------------+ </span><br><span class=\"line\">| 2022-03-16 21:15:36.415358 | </span><br><span class=\"line\">+----------------------------+ </span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">-- 不支持，最大到6</span><br><span class=\"line\">mysql&gt; select now(7);</span><br><span class=\"line\">ERROR 1426 (42000): Too-big precision 7 specified for &#x27;now&#x27;. Maximum is 6. </span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; create table test_time_fac (t datetime(6)); </span><br><span class=\"line\">Query OK, 0 rows affected (0.11 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; insert into test_time_fac values(now(6)); </span><br><span class=\"line\">Query OK, 1 row affected (0.02 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">-- 由于是用了6位微秒位数，根据表格显示，实际存储的空间是 5 + 3 = 8 byte</span><br><span class=\"line\">mysql&gt; select * from test_time_fac; </span><br><span class=\"line\">+----------------------------+</span><br><span class=\"line\">| t | </span><br><span class=\"line\">+----------------------------+</span><br><span class=\"line\">| 2022-03-16 21:19:27.900393 | </span><br><span class=\"line\">+----------------------------+ </span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li><p>时间函数</p>\n<ul>\n<li><p>常用函数</p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>函数说明</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>NOW</td>\n<td>返回sql执行时的时间</td>\n<td>如果不考虑其他因素，可以理解为写完sql，按下回车键的时间</td>\n</tr>\n<tr>\n<td>CURRENT_TIMESTAMP</td>\n<td>与NOW()函数同义</td>\n<td></td>\n</tr>\n<tr>\n<td>SYSDATE</td>\n<td>返回函数执行时的时间</td>\n<td>sql处理函数的时间，统一sql语句，大于now</td>\n</tr>\n<tr>\n<td>DATA_ADD(date, interval expr uint)</td>\n<td>增加时间</td>\n<td></td>\n</tr>\n<tr>\n<td>DATA_SUB(date, interval expr uint)</td>\n<td>减少时间</td>\n<td></td>\n</tr>\n<tr>\n<td>DATE FORMAT</td>\n<td>格式化时间</td>\n<td></td>\n</tr>\n</tbody></table>\n</li>\n<li><p>now和sysdate的区别</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> now(<span class=\"number\">6</span>),sysdate(<span class=\"number\">6</span>),sleep(<span class=\"number\">5</span>),now(<span class=\"number\">6</span>),sysdate(<span class=\"number\">6</span>); </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------+----------------------------+----------+----------------------------+----------------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> now(<span class=\"number\">6</span>) <span class=\"operator\">|</span> sysdate(<span class=\"number\">6</span>) <span class=\"operator\">|</span> sleep(<span class=\"number\">5</span>) <span class=\"operator\">|</span> now(<span class=\"number\">6</span>) <span class=\"operator\">|</span> sysdate(<span class=\"number\">6</span>) <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------+----------------------------+----------+----------------------------+----------------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-03</span><span class=\"number\">-16</span> <span class=\"number\">21</span>:<span class=\"number\">40</span>:<span class=\"number\">58.572383</span> <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-03</span><span class=\"number\">-16</span> <span class=\"number\">21</span>:<span class=\"number\">40</span>:<span class=\"number\">58.572542</span> <span class=\"operator\">|</span> <span class=\"number\">0</span> <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-03</span><span class=\"number\">-16</span> <span class=\"number\">21</span>:<span class=\"number\">40</span>:<span class=\"number\">58.572383</span> <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-03</span><span class=\"number\">-16</span> <span class=\"number\">21</span>:<span class=\"number\">41</span>:<span class=\"number\">03.572720</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------+----------------------------+----------+----------------------------+----------------------------+ </span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">5.00</span> sec)</span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- 两个now(6)都相等，因为是SQL执行时的时间(可以简单立理解为按回车的时间)</span></span><br><span class=\"line\"><span class=\"comment\">-- 两个sysdate(6)差了5秒，刚好是sleep(5)的时间 --</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>字段更新时间</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> test_field_update( </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> a <span class=\"type\">int</span>(<span class=\"number\">10</span>),</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> b <span class=\"type\">timestamp</span> <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> <span class=\"keyword\">default</span> <span class=\"built_in\">current_timestamp</span> <span class=\"keyword\">on</span> <span class=\"keyword\">update</span> <span class=\"built_in\">current_timestamp</span> </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> );</span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> test_field_update <span class=\"keyword\">values</span>(<span class=\"number\">1</span>, now(<span class=\"number\">6</span>)); </span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.03</span> sec)</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"json\"><a href=\"#json\" class=\"headerlink\" title=\"json\"></a>json</h2><ol>\n<li><p>json介绍</p>\n<ul>\n<li><p>json是一种轻量级的数据交换语言，并且是独立于语言的文本格式。</p>\n</li>\n<li><p>一些nosql数据库选择json作为其数据存储格式</p>\n</li>\n<li><p>mysql 5.7.x开始支持json数据类型</p>\n</li>\n</ul>\n</li>\n<li><p>json vs blob</p>\n<ul>\n<li><p>json</p>\n<ul>\n<li><p>json数据可以做有效性检查</p>\n</li>\n<li><p>json使得查询性能提升</p>\n</li>\n<li><p>json支持部分属性索引，通过虚拟列的功能可以对json中的部分数据进行索引</p>\n</li>\n</ul>\n</li>\n<li><p>blob</p>\n<ul>\n<li><p>blob类型无法中数据库层做约束性检查</p>\n</li>\n<li><p>blob进行查询，需要遍历所有字符串</p>\n</li>\n<li><p>blob只能做指定长度的索引</p>\n</li>\n</ul>\n<blockquote>\n<p>5.7之前，只能把json当作blob进行存储，数据库层面无法对json数据做一些操作，只能由应用程序处理。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>结构化和非结构化</p>\n<ul>\n<li><p>结构化</p>\n<ul>\n<li><p>二维表结构(行和列)</p>\n</li>\n<li><p>使用sql语句进行操作</p>\n</li>\n</ul>\n</li>\n<li><p>非结构化</p>\n<ul>\n<li><p>使用key-value格式定义数据，无结构定义</p>\n</li>\n<li><p>value可以嵌套key-value格式的数据</p>\n</li>\n<li><p>使用json进行实现</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>json操作示例</p>\n<ul>\n<li><p>json入门</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- (1101, &quot;BLOB, TEXT, GEOMETRY or JSON column &#x27;data&#x27; can&#x27;t have a default value&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `tbl_user_json` (</span><br><span class=\"line\">  `uid` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  `data` json <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`uid`)</span><br><span class=\"line\">) ENGINE<span class=\"operator\">=</span>InnoDB  <span class=\"keyword\">DEFAULT</span> CHARSET<span class=\"operator\">=</span>utf8mb4;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 插入json数据</span></span><br><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:db_test_json<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> tbl_user_json (uid, data) <span class=\"keyword\">values</span> (<span class=\"keyword\">null</span>, <span class=\"string\">&#x27;&#123;&quot;name&quot;:&quot;zhansan&quot;, &quot;age&quot;:23&#125;&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 无法插入，因为是JSON类型</span></span><br><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:db_test_json<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> tbl_user_json (uid, data) <span class=\"keyword\">values</span> (<span class=\"keyword\">null</span>, <span class=\"string\">&#x27;test insert into json data&#x27;</span>);</span><br><span class=\"line\">(<span class=\"number\">3140</span>, <span class=\"string\">&#x27;Invalid JSON text: &quot;Invalid value.&quot; at position 1 in value for column \\&#x27;</span>tbl_user_json.data\\<span class=\"string\">&#x27;.&#x27;</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>json常用函数</p>\n<ul>\n<li><p>json_extract</p>\n<ul>\n<li><p>函数说明：提取数据</p>\n</li>\n<li><p>示例</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 从list中抽取 下标 为1的元素(下标从0开始)</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> json_extract(<span class=\"string\">&#x27;[10, 20, [30, 40]]&#x27;</span>, <span class=\"string\">&#x27;$[1]&#x27;</span>); </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> json_extract(<span class=\"string\">&#x27;[10, 20, [30, 40]]&#x27;</span>, <span class=\"string\">&#x27;$[1]&#x27;</span>) <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">20</span> <span class=\"operator\">|</span>  </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------------------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 从对象中提取数据  -- 提起name字段的数据 -- 提取address字段的数据 </span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> json_extract(data, <span class=\"string\">&#x27;$.name&#x27;</span>), json_extract(data, <span class=\"string\">&#x27;$.address&#x27;</span>) <span class=\"keyword\">from</span> db_test_json;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------+---------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> json_extract(data, <span class=\"string\">&#x27;$.name&#x27;</span>) <span class=\"operator\">|</span> json_extract(data, <span class=\"string\">&#x27;$.address&#x27;</span>) <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------+---------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> &quot;tom&quot; <span class=\"operator\">|</span> &quot;SZ&quot; <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> &quot;jim&quot; <span class=\"operator\">|</span> <span class=\"keyword\">NULL</span> <span class=\"operator\">|</span> <span class=\"comment\">-- jim 没有address字段，填充了NULL </span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------+---------------------------------+ </span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>json_object</p>\n<ul>\n<li><p>函数说明：将list (key-vaule)封装成json格式</p>\n</li>\n<li><p>示例</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"built_in\">json_object</span>(&quot;name&quot;, &quot;jery&quot;, &quot;email&quot;, &quot;jery@163.com&quot;, &quot;age&quot;,<span class=\"number\">33</span>); </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"built_in\">json_object</span>(&quot;name&quot;, &quot;jery&quot;, &quot;email&quot;, &quot;jery@163.com&quot;, &quot;age&quot;,<span class=\"number\">33</span>) <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> &#123;&quot;age&quot;: <span class=\"number\">33</span>, &quot;name&quot;: &quot;jery&quot;, &quot;email&quot;: &quot;jery@163.com&quot;&#125; <span class=\"operator\">|</span> <span class=\"comment\">-- 封装成了K-V对 </span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> <span class=\"keyword\">user</span> <span class=\"keyword\">values</span> ( </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"built_in\">json_object</span>(&quot;name&quot;, &quot;jery&quot;, &quot;email&quot;, &quot;jery@163.com&quot;, &quot;age&quot;,<span class=\"number\">33</span>) <span class=\"comment\">-- 进行封装</span></span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> );</span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.03</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span>; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----+------------------------------------------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> uid <span class=\"operator\">|</span> data <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----+------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span> <span class=\"operator\">|</span> &#123;&quot;age&quot;: <span class=\"number\">18</span>, &quot;name&quot;: &quot;tom&quot;, &quot;address&quot;: &quot;SZ&quot;&#125; <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2</span> <span class=\"operator\">|</span> &#123;&quot;age&quot;: <span class=\"number\">28</span>, &quot;mail&quot;: &quot;jim@163.com&quot;, &quot;name&quot;: &quot;jim&quot;&#125; <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">4</span> <span class=\"operator\">|</span> &#123;&quot;age&quot;: <span class=\"number\">33</span>, &quot;name&quot;: &quot;jery&quot;, &quot;email&quot;: &quot;jery@163.com&quot;&#125; <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----+------------------------------------------------------+ </span></span><br><span class=\"line\"><span class=\"number\">3</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>json_insert</p>\n<ul>\n<li><p>函数说明：插入数据</p>\n</li>\n<li><p>示例</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">set</span> <span class=\"variable\">@j</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;&#123; &quot;a&quot;: 1, &quot;b&quot;: [2, 3]&#125;&#x27;</span>;</span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> json_insert(<span class=\"variable\">@j</span>, <span class=\"string\">&#x27;$.a&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;$.c&#x27;</span>, <span class=\"string\">&#x27;[true, false]&#x27;</span>); </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> json_insert(<span class=\"variable\">@j</span>, <span class=\"string\">&#x27;$.a&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;$.c&#x27;</span>, <span class=\"string\">&#x27;[true, false]&#x27;</span>) <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> &#123;&quot;a&quot;: <span class=\"number\">1</span>, &quot;b&quot;: [<span class=\"number\">2</span>, <span class=\"number\">3</span>], &quot;c&quot;: &quot;[true, false]&quot;&#125; <span class=\"operator\">|</span> <span class=\"comment\">-- a还是=1，存在的被忽略，不受影响 </span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------------------------+ -- c之前不存在，则插入</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">update</span> <span class=\"keyword\">user</span> <span class=\"keyword\">set</span> data <span class=\"operator\">=</span> json_insert(data, &quot;$.address_2&quot;, &quot;BJ&quot;) <span class=\"keyword\">where</span> uid <span class=\"operator\">=</span> <span class=\"number\">1</span>; <span class=\"comment\">-- 插入 addres_2 </span></span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.03</span> sec)</span><br><span class=\"line\"><span class=\"keyword\">Rows</span> matched: <span class=\"number\">1</span> Changed: <span class=\"number\">1</span> Warnings: <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span>; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----+----------------------------------------------------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> uid <span class=\"operator\">|</span> data <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----+----------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span> <span class=\"operator\">|</span> &#123;&quot;age&quot;: <span class=\"number\">18</span>, &quot;name&quot;: &quot;tom&quot;, &quot;address&quot;: &quot;SZ&quot;, &quot;address_2&quot;: &quot;BJ&quot;&#125; <span class=\"operator\">|</span> <span class=\"comment\">-- 增加了addres_2 : &quot;BJ&quot;</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2</span> <span class=\"operator\">|</span> &#123;&quot;age&quot;: <span class=\"number\">28</span>, &quot;mail&quot;: &quot;jim@163.com&quot;, &quot;name&quot;: &quot;jim&quot;&#125; <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">4</span> <span class=\"operator\">|</span> &#123;&quot;age&quot;: <span class=\"number\">33</span>, &quot;name&quot;: &quot;jery&quot;, &quot;email&quot;: &quot;jery@163.com&quot;&#125; <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----+----------------------------------------------------------------+ </span></span><br><span class=\"line\"><span class=\"number\">3</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>json_merge</p>\n<ul>\n<li><p>函数说明：合并数据比返回，注意，愿数据不受影响</p>\n</li>\n<li><p>示例</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> json_merge(<span class=\"string\">&#x27;&#123;&quot;name&quot;: &quot;x&quot;&#125;&#x27;</span>, <span class=\"string\">&#x27;&#123;&quot;id&quot;: 47&#125;&#x27;</span>); </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> json_merge(<span class=\"string\">&#x27;&#123;&quot;name&quot;: &quot;x&quot;&#125;&#x27;</span>, <span class=\"string\">&#x27;&#123;&quot;id&quot;: 47&#125;&#x27;</span>) <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> &#123;&quot;id&quot;: <span class=\"number\">47</span>, &quot;name&quot;: &quot;x&quot;&#125; <span class=\"operator\">|</span> <span class=\"comment\">-- 合并多个JSON </span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------------------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span></span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> json_merge(</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> json_extract(data, <span class=\"string\">&#x27;$.address&#x27;</span>), </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> json_extract(data, <span class=\"string\">&#x27;$.address_2&#x27;</span>)) </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span> <span class=\"keyword\">where</span> uid <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> json_merge( json_extract(data, <span class=\"string\">&#x27;$.address&#x27;</span>), json_extract(data, <span class=\"string\">&#x27;$.address_2&#x27;</span>)) <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> [&quot;SZ&quot;, &quot;BJ&quot;] <span class=\"operator\">|</span> <span class=\"comment\">-- 合并成一个json </span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>json_array_append</p>\n<ul>\n<li><p>函数说明：追加数据</p>\n</li>\n<li><p>示例</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">set</span> <span class=\"variable\">@j</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;[&quot;a&quot;, [&quot;b&quot;, &quot;c&quot;], &quot;d&quot;]&#x27;</span>; <span class=\"comment\">-- 下标为1的元素中只有[&quot;b&quot;, &quot;c&quot;] </span></span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> json_array_append(<span class=\"variable\">@j</span>, <span class=\"string\">&#x27;$[1]&#x27;</span>, <span class=\"number\">1</span>); </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> json_array_append(<span class=\"variable\">@j</span>, <span class=\"string\">&#x27;$[1]&#x27;</span>, <span class=\"number\">1</span>) <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> [&quot;a&quot;, [&quot;b&quot;, &quot;c&quot;, <span class=\"number\">1</span>], &quot;d&quot;] <span class=\"operator\">|</span> <span class=\"comment\">-- 现在插入了 数字 1</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">update</span> <span class=\"keyword\">user</span> <span class=\"keyword\">set</span> data <span class=\"operator\">=</span> json_array_append(</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> data,</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"string\">&#x27;$.address&#x27;</span>,</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> json_extract(data, <span class=\"string\">&#x27;$.address_2&#x27;</span>)) </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">where</span> uid <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.02</span> sec)</span><br><span class=\"line\"><span class=\"keyword\">Rows</span> matched: <span class=\"number\">1</span> Changed: <span class=\"number\">1</span> Warnings: <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span>; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----+------------------------------------------------------------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> uid <span class=\"operator\">|</span> data <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----+------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span> <span class=\"operator\">|</span> &#123;&quot;age&quot;: <span class=\"number\">18</span>, &quot;name&quot;: &quot;tom&quot;, &quot;address&quot;: [&quot;SZ&quot;, &quot;BJ&quot;], &quot;address_2&quot;: &quot;BJ&quot;&#125; <span class=\"operator\">|</span> <span class=\"comment\">--address_2追加到address</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2</span> <span class=\"operator\">|</span> &#123;&quot;age&quot;: <span class=\"number\">28</span>, &quot;mail&quot;: &quot;jim@163.com&quot;, &quot;name&quot;: &quot;jim&quot;&#125; <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">4</span> <span class=\"operator\">|</span> &#123;&quot;age&quot;: <span class=\"number\">33</span>, &quot;name&quot;: &quot;jery&quot;, &quot;email&quot;: &quot;jery@163.com&quot;&#125; <span class=\"operator\">|</span></span><br><span class=\"line\"> <span class=\"operator\">+</span><span class=\"comment\">-----+------------------------------------------------------------------------+ </span></span><br><span class=\"line\"><span class=\"number\">3</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>json_remove</p>\n<ul>\n<li><p>函数说明：从json记录中删除数据</p>\n</li>\n<li><p>示例</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">update</span> <span class=\"keyword\">user</span> <span class=\"keyword\">set</span> data <span class=\"operator\">=</span> json_remove(data, &quot;$.address_2&quot;) <span class=\"keyword\">where</span> uid <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.03</span> sec)</span><br><span class=\"line\"><span class=\"keyword\">Rows</span> matched: <span class=\"number\">1</span> Changed: <span class=\"number\">1</span> Warnings: <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span>; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----+------------------------------------------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> uid <span class=\"operator\">|</span> data <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----+------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span> <span class=\"operator\">|</span> &#123;&quot;age&quot;: <span class=\"number\">18</span>, &quot;name&quot;: &quot;tom&quot;, &quot;address&quot;: [&quot;SZ&quot;, &quot;BJ&quot;]&#125; <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2</span> <span class=\"operator\">|</span> &#123;&quot;age&quot;: <span class=\"number\">28</span>, &quot;mail&quot;: &quot;jim@163.com&quot;, &quot;name&quot;: &quot;jim&quot;&#125; <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">4</span> <span class=\"operator\">|</span> &#123;&quot;age&quot;: <span class=\"number\">33</span>, &quot;name&quot;: &quot;jery&quot;, &quot;email&quot;: &quot;jery@163.com&quot;&#125; <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----+------------------------------------------------------+ </span></span><br><span class=\"line\"><span class=\"number\">3</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>json创建索引</p>\n<p>json类型数据本身无法直接创建索引，需要将所需要索引的json数据重新生成虚拟列之后，对该列进行索引</p>\n<ul>\n<li><p>新创建表时创建json索引</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 使用json_unquote函数进行去掉双引号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `tbl_user_json` (</span><br><span class=\"line\">  `uid` <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  `data` json <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `g_name` <span class=\"type\">varchar</span>(<span class=\"number\">255</span>) GENERATED ALWAYS <span class=\"keyword\">AS</span> (json_extract(`data`,<span class=\"string\">&#x27;$.name&#x27;</span>)) VIRTUAL,</span><br><span class=\"line\">  `g_email` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) GENERATED ALWAYS <span class=\"keyword\">AS</span> (json_unquote(json_extract(`data`,<span class=\"string\">&#x27;$.email&#x27;</span>))) VIRTUAL,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`uid`),</span><br><span class=\"line\">  KEY `idx_name` (`g_name`),</span><br><span class=\"line\">  KEY `idx_email` (`g_email`)</span><br><span class=\"line\">) ENGINE<span class=\"operator\">=</span>InnoDB AUTO_INCREMENT<span class=\"operator\">=</span><span class=\"number\">6</span> <span class=\"keyword\">DEFAULT</span> CHARSET<span class=\"operator\">=</span>utf8mb4</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改已经存在的表创建json索引</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:db_test_json<span class=\"operator\">&gt;</span> <span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tbl_user_json <span class=\"keyword\">add</span> g_name <span class=\"type\">varchar</span>(<span class=\"number\">255</span>) GENERATED ALWAYS <span class=\"keyword\">as</span> (data <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"string\">&#x27;$.name&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:db_test_json<span class=\"operator\">&gt;</span> <span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tbl_user_json <span class=\"keyword\">add</span> g_email <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) GENERATED ALWAYS <span class=\"keyword\">as</span> (json_unquote(json_extract(data, <span class=\"string\">&#x27;$.email&#x27;</span>)));</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-select介绍","url":"/mysql/learn-mysql-007/","content":"<h2 id=\"子查询\"><a href=\"#子查询\" class=\"headerlink\" title=\"子查询\"></a>子查询</h2><blockquote>\n<p>子查询就是指在一个select语句中嵌套另一个select语句，同时，子查询必须包含括号，</p>\n<p>mysql 5.6.x版本之前，mysql的子查询性能较差，但是从5.6开始，不存在性能差的问题</p>\n</blockquote>\n<ol>\n<li><p>子查询的使用</p>\n<p>如果外部查询的列的结果和子查询的列的结果比较得到为true的话，则返回比较值为true的外查询的记录</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span>  t1 (a <span class=\"type\">int</span>);</span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.15</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span>  t2 (a <span class=\"type\">int</span>);</span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.14</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t1 <span class=\"keyword\">values</span>(<span class=\"number\">10</span>),(<span class=\"number\">4</span>); </span><br><span class=\"line\">Query OK, <span class=\"number\">2</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.02</span> sec) </span><br><span class=\"line\">Records: <span class=\"number\">2</span> Duplicates: <span class=\"number\">0</span> Warnings: <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t2 <span class=\"keyword\">values</span>(<span class=\"number\">12</span>),(<span class=\"number\">13</span>),(<span class=\"number\">5</span>); </span><br><span class=\"line\">Query OK, <span class=\"number\">3</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.03</span> sec) </span><br><span class=\"line\">Records: <span class=\"number\">3</span> Duplicates: <span class=\"number\">0</span> Warnings: <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> a <span class=\"keyword\">from</span> t1; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> a <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">10</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">4</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"number\">2</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t2; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> a <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">12</span> <span class=\"operator\">|</span> <span class=\"comment\">-- t1中10，4比12小</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">13</span> <span class=\"operator\">|</span> <span class=\"comment\">-- t1中10，4比13小</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">5</span> <span class=\"operator\">|</span> <span class=\"comment\">-- t1中10比5大，4比5小 +------+</span></span><br><span class=\"line\"><span class=\"number\">3</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- t1中a列的值，只要大于(12,13,4)中任意一值</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> a <span class=\"keyword\">from</span> t1</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">where</span> a <span class=\"operator\">&gt;</span> <span class=\"keyword\">any</span></span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> (<span class=\"keyword\">select</span> a <span class=\"keyword\">from</span> t2);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 这个查询可以解释为，t1表内a列的值， 大于 t2表中a列的任意(any)一个值，则返回t1.a的记录</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>any关键字必须和一个比较操作符一起使用：&#x3D; , &gt; , &lt; , &gt;&#x3D; , &lt;&#x3D; , &lt;&gt;</p>\n<p>子查询中 SOME 和 ANY 是同一个意思</p>\n</blockquote>\n</li>\n<li><p>in</p>\n<p>in是any的一种特殊情况：&quot;in&quot;  equals &quot;&#x3D; any&quot;</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t1 <span class=\"keyword\">values</span>(<span class=\"number\">5</span>); <span class=\"comment\">-- 向t1中插入一个t2中存在的值 5 </span></span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.03</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> a <span class=\"keyword\">from</span> t1 <span class=\"keyword\">where</span> a <span class=\"operator\">=</span> <span class=\"keyword\">any</span>(<span class=\"keyword\">select</span> a <span class=\"keyword\">from</span> t2); <span class=\"comment\">-- t1.a==t2.a 的只有5</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span>a <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span><span class=\"number\">5</span><span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> a <span class=\"keyword\">from</span> t1 <span class=\"keyword\">where</span> a <span class=\"keyword\">in</span> (<span class=\"keyword\">select</span> a <span class=\"keyword\">from</span> t2); <span class=\"comment\">-- in的结果等同于 =any 的结果</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span>a <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span><span class=\"number\">5</span><span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>select a from t1 where a in (select a from t2); 是比较常用的一种语法</p>\n</blockquote>\n</li>\n<li><p>all</p>\n<p>如果外部查询的列的结果和子查询的列的 所有结果 比较得到为True的话，则返回比较值为True的(外查询)的记录</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">truncate</span> t1; <span class=\"comment\">-- 清空t1</span></span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.07</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">truncate</span> t2; <span class=\"comment\">-- 清空t2</span></span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.10</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t1 <span class=\"keyword\">values</span>(<span class=\"number\">10</span>),(<span class=\"number\">4</span>); </span><br><span class=\"line\">Query OK, <span class=\"number\">2</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.02</span> sec) </span><br><span class=\"line\">Records: <span class=\"number\">2</span> Duplicates: <span class=\"number\">0</span> Warnings: <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t2 <span class=\"keyword\">values</span>(<span class=\"number\">5</span>),(<span class=\"number\">4</span>),(<span class=\"number\">3</span>); </span><br><span class=\"line\">Query OK, <span class=\"number\">3</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.03</span> sec) </span><br><span class=\"line\">Records: <span class=\"number\">3</span> Duplicates: <span class=\"number\">0</span> Warnings: <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> a <span class=\"keyword\">from</span> t1 <span class=\"keyword\">where</span> a <span class=\"operator\">&gt;</span> <span class=\"keyword\">all</span>(<span class=\"keyword\">select</span> a <span class=\"keyword\">from</span> t2); </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span>a <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">10</span> <span class=\"operator\">|</span> <span class=\"comment\">-- (10 &gt; 5, 4, 3为True)而(4 &gt;5, 4, 3为False) </span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>all关键词必须与一个比较操作符一起使用，not in 是 &lt;&gt; all的别名</p>\n</blockquote>\n</li>\n<li><p>子查询的分类</p>\n<ul>\n<li><p>独立子查询：不依赖外部查询而运行的子查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> a <span class=\"keyword\">from</span> t1 <span class=\"keyword\">where</span> a <span class=\"keyword\">in</span> (<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>相关子查询：引用了外部查询列的子查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> a <span class=\"keyword\">from</span> t1 <span class=\"keyword\">where</span> a <span class=\"keyword\">in</span> (<span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t2 <span class=\"keyword\">where</span> t1.a <span class=\"operator\">=</span> t2.a);</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>子查询的优化</p>\n<ul>\n<li><p>mysql5.6之前</p>\n<p>在mysql5.6之前，优化器会把子查询重写成exists的形式</p>\n</li>\n<li><p>mysql5.6之后</p>\n<p>在mysql5.6之后，优化器不会将子查询重写成exits的形式，而是自动优化，性能有了大幅提升</p>\n</li>\n</ul>\n<blockquote>\n<p>可通过explain extended来查询子查询优化的结果。</p>\n</blockquote>\n</li>\n<li><p>包含null值的not in</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> <span class=\"keyword\">select</span> <span class=\"keyword\">null</span> <span class=\"keyword\">in</span> (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"keyword\">null</span>) <span class=\"operator\">/</span><span class=\"operator\">/</span> <span class=\"keyword\">null</span></span><br><span class=\"line\"><span class=\"number\">2.</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">in</span> (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"keyword\">null</span>) <span class=\"operator\">/</span><span class=\"operator\">/</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">3.</span> <span class=\"keyword\">select</span> <span class=\"number\">2</span> <span class=\"keyword\">in</span> (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"keyword\">null</span>) <span class=\"operator\">/</span><span class=\"operator\">/</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">4.</span> <span class=\"keyword\">select</span> <span class=\"keyword\">null</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"keyword\">null</span>); <span class=\"operator\">/</span><span class=\"operator\">/</span> <span class=\"keyword\">null</span></span><br><span class=\"line\"><span class=\"number\">5.</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"keyword\">null</span>); <span class=\"operator\">/</span><span class=\"operator\">/</span> <span class=\"number\">0</span> 等于 <span class=\"keyword\">select</span> i <span class=\"keyword\">in</span> (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"keyword\">null</span>)的结果却反 </span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>对于包含了 NULL 值的 IN 操作，总是返回 True 或者 NULL<br>NOT IN 返回 NOT True (False) 或者 NOT NULL (NULL)</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"其他知识点\"><a href=\"#其他知识点\" class=\"headerlink\" title=\"其他知识点\"></a>其他知识点</h2><ol>\n<li><p>更新有关系的值</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t5 (a <span class=\"type\">int</span>, b <span class=\"type\">int</span>); </span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.14</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t5 <span class=\"keyword\">values</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>); </span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.03</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t5; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> a <span class=\"operator\">|</span> b <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span><span class=\"number\">1</span> <span class=\"operator\">|</span><span class=\"number\">1</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">update</span> t5 <span class=\"keyword\">set</span> a<span class=\"operator\">=</span>a<span class=\"operator\">+</span><span class=\"number\">1</span>, b<span class=\"operator\">=</span>a <span class=\"keyword\">where</span> a<span class=\"operator\">=</span><span class=\"number\">1</span>; </span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.02</span> sec)</span><br><span class=\"line\"><span class=\"keyword\">Rows</span> matched: <span class=\"number\">1</span> Changed: <span class=\"number\">1</span> Warnings: <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t5; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> a <span class=\"operator\">|</span>b <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2</span> <span class=\"operator\">|</span> <span class=\"number\">2</span> <span class=\"operator\">|</span> <span class=\"comment\">-- SQL Server和Oracle中得到的值是2, 1 </span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> se</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>显示行号</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"variable\">@rn1</span>:<span class=\"operator\">=</span><span class=\"variable\">@rn1</span><span class=\"operator\">+</span><span class=\"number\">1</span> <span class=\"keyword\">as</span> rownumber, emp_no, gender <span class=\"keyword\">from</span> employees, (<span class=\"keyword\">select</span> <span class=\"variable\">@rn1</span>:<span class=\"operator\">=</span><span class=\"number\">0</span>) <span class=\"keyword\">as</span> a limit <span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>说明：&quot;:&#x3D;&quot; 是赋值</p>\n</blockquote>\n</li>\n<li><p>rank</p>\n<p>给出不同的用户的分数，然后根据分数计算排名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> test_rank(id <span class=\"type\">int</span>, score <span class=\"type\">int</span>); </span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.16</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> test_rank <span class=\"keyword\">values</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>), (<span class=\"number\">2</span>, <span class=\"number\">20</span>), (<span class=\"number\">3</span>, <span class=\"number\">30</span>), (<span class=\"number\">4</span>, <span class=\"number\">30</span>), (<span class=\"number\">5</span>, <span class=\"number\">40</span>), (<span class=\"number\">6</span>, <span class=\"number\">40</span>); </span><br><span class=\"line\">Query OK, <span class=\"number\">6</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.05</span> sec)</span><br><span class=\"line\">Records: <span class=\"number\">6</span> Duplicates: <span class=\"number\">0</span> Warnings: <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:db_test<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> id, score, <span class=\"keyword\">case</span> <span class=\"keyword\">when</span> <span class=\"variable\">@pre</span>_value <span class=\"operator\">=</span> score <span class=\"keyword\">then</span> <span class=\"variable\">@rank</span>_count <span class=\"keyword\">when</span> <span class=\"variable\">@pre</span>_value :<span class=\"operator\">=</span> score <span class=\"keyword\">then</span> <span class=\"variable\">@rank</span>_count :<span class=\"operator\">=</span> <span class=\"variable\">@rank</span>_count <span class=\"operator\">+</span> <span class=\"number\">1</span> <span class=\"keyword\">end</span> <span class=\"keyword\">as</span> rank_number <span class=\"keyword\">from</span> test_rank, (<span class=\"keyword\">select</span> <span class=\"variable\">@pre</span>_value :<span class=\"operator\">=</span> <span class=\"keyword\">null</span>, <span class=\"variable\">@rank</span>_count :<span class=\"operator\">=</span> <span class=\"number\">0</span>) <span class=\"keyword\">as</span> t <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> score <span class=\"keyword\">desc</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>sql说明：when @pre_value &#x3D; score then @rank_count 相等则pre_value不变，并返回rank_count，第一次为null，不想等，执行下一个when语句</p>\n<p>when @pre_value :&#x3D; score then @rank_count :&#x3D; @rank_count + 1 不等，则第N行的score赋值给pre_value，并且rank_count增加1</p>\n</blockquote>\n</li>\n</ol>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-employees数据库安装和临时表介绍","url":"/mysql/learn-mysql-006/","content":"<h2 id=\"employees数据库安装\"><a href=\"#employees数据库安装\" class=\"headerlink\" title=\"employees数据库安装\"></a>employees数据库安装</h2><p>employees数据库是一个用于学习和测试的数据库，大约160M，4百多万条记录</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9pbmRleC1vdGhlci5odG1s\">下载地址<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>安装参照 README.md文档</p>\n<h2 id=\"table\"><a href=\"#table\" class=\"headerlink\" title=\"table\"></a>table</h2><ol>\n<li><p>表的介绍</p>\n<ul>\n<li><p>表是关系型数据库的核心</p>\n</li>\n<li><p>表&#x3D;关系</p>\n</li>\n<li><p>表是记录的集合</p>\n</li>\n<li><p>二维表格模型易于人的理解</p>\n</li>\n<li><p>mysql默认存储引擎都是基于记录存储</p>\n</li>\n<li><p>每行记录都是基于列进行组织的</p>\n</li>\n</ul>\n</li>\n<li><p>表是数据的集合</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> table_name limit <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p>集合是无序的，上面的SQL语句的意思是 从表(集合)中 随机 选出一条数据，结果是不确定的, 不能简单的认为是取出第一条数据。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> table_name <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> col_name limit <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p>只有通过 order by 排序之后取出的数据，才是确定的。</p>\n</li>\n<li><p>创建临时表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:db_test_tmp<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> temporary <span class=\"keyword\">table</span> tmp_tbl_a(a <span class=\"type\">int</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>临时表是session级别的，当前用户logout或者其他用户登录上来，是无法看到这张表的</p>\n</li>\n<li><p>当临时表和普通表同名时，当前用户只能看到同名的临时表</p>\n</li>\n<li><p>创建表时需要带上if not exists进行表的存在性检查；同时建议中临时表的表名前面加上统一prefix</p>\n</li>\n</ul>\n</li>\n<li><p>临时表的作用</p>\n<ul>\n<li><p>临时表主要作用是给当前登录的用户存储临时数据或者临时结果的</p>\n</li>\n<li><p>不要和sql优化器在排序过程中内部帮你创建的临时表相混淆</p>\n</li>\n</ul>\n</li>\n<li><p>临时表的存储引擎</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 5.6 之前用的是MyISAM</span></span><br><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:db_test_tmp<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%default_tmp_storage_engine&#x27;</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>临时表存储位置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># MySQL 5.7</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># 使用system 可以解析执行linux shell命令</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">system <span class=\"built_in\">ls</span> -l /tmp</span>  </span><br><span class=\"line\">-rw-r-----. 1 mysql mysql 8554 Dec 2 22:04 #sqlf18_a_0.frm -- temp_1 的表结构</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">system <span class=\"built_in\">ls</span> -l /data/mysql_data/5.7/ | grep ib</span></span><br><span class=\"line\">-rw-r-----. 1 mysql mysql 12582912 Dec 2 22:33 ibtmp1 -- 这个是我们的表结构对应的数据</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">show variables like <span class=\"string\">&quot;innodb_temp%&quot;</span>;</span> </span><br><span class=\"line\">+----------------------------+-----------------------+ </span><br><span class=\"line\">| Variable_name | Value | </span><br><span class=\"line\">+----------------------------+-----------------------+ </span><br><span class=\"line\">| innodb_temp_data_file_path | ibtmp1:12M:autoextend | </span><br><span class=\"line\">+----------------------------+-----------------------+ </span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>mysql5.7把临时表结构放在了tmpdir，而数据放在了datadir</p>\n</li>\n<li><p>mysql5.6把临时表结构和数据都放在了tmpdir</p>\n</li>\n</ul>\n</li>\n</ol>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-视图，union和触发器","url":"/mysql/learn-mysql-008/","content":"<h2 id=\"视图\"><a href=\"#视图\" class=\"headerlink\" title=\"视图\"></a>视图</h2><ol>\n<li><p>创建视图</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 创建视图</span></span><br><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:db_test<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">view</span> view_rank <span class=\"keyword\">as</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> test_rank;</span><br><span class=\"line\"><span class=\"comment\">-- 查看创建视图表结构</span></span><br><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:db_test<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> view_rank;</span><br><span class=\"line\"><span class=\"comment\">-- 删除视图</span></span><br><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:db_test<span class=\"operator\">&gt;</span> <span class=\"keyword\">drop</span> <span class=\"keyword\">view</span> view_rank;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>视图的作用是，可以对开发人员是透明的，可以隐藏部分关键的列</p>\n<p>视图中mysql是虚拟表</p>\n<p>不要创建select * from的视图，因为mysql会把*逐个解析成列</p>\n<p>当原来的表结构发生变化时，视图的表结构时不会发生变化的，因为视图中创建的瞬间，便已经确定好了结构。</p>\n</blockquote>\n<p>注意：mysql中的视图都是虚拟表。每次查询视图，实际上还是去查询原来的表，只是查询的规则是在视图创建时定义好的。</p>\n</li>\n<li><p>视图的算法</p>\n<p>视图的算法有三种：</p>\n<ul>\n<li><p>UNDEFINED：默认方式，由mysql来判断使用下面的哪种方式</p>\n</li>\n<li><p>MERGE：每次通过物理表查询得到结果，把结果merge起来返回</p>\n</li>\n<li><p>TEMPTABLE：产生一张临时表，把数据放入临时表后，客户端再去临时表读取数据</p>\n</li>\n</ul>\n<blockquote>\n<p>TEMPTABLE特点：即使访问条件一样，第二次查询还是去读取物理表中的内容，并重新生成一张临时表，并不会取缓存之前的表。(临时表时memory存储引擎，默认放内存，超过配置大小放入磁盘)，当查询有一个较大的结果集时，使用TEMPTABLE可以快速结束对该物理表的访问，从而可以快速释放这张物理表上占有的资源，然后客户端可以对临时表上的数据进行一些耗时的操作，而不影响原来的物理表。</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"union\"><a href=\"#union\" class=\"headerlink\" title=\"union\"></a>union</h2><ol>\n<li><p>union的作用是将两个查询的结果集进行合并</p>\n</li>\n<li><p>union必须由两条或者两条以上的select语句组成，语句之间用关键字union分隔。</p>\n</li>\n<li><p>union中的每个查询必须包含相同的列(类型相同或可以隐式转换)， 表达式或聚集函数。</p>\n</li>\n</ol>\n<blockquote>\n<p>如果数据本身具有唯一性，没有重复，建议使用union all，因为union会去重，性能低于union all。</p>\n</blockquote>\n<h2 id=\"触发器\"><a href=\"#触发器\" class=\"headerlink\" title=\"触发器\"></a>触发器</h2><ol>\n<li><p>定义</p>\n<p>触发器的对象是表，当表上出现特定的事件时触发该程序的执行</p>\n</li>\n<li><p>触发器的类型</p>\n<ul>\n<li><p>update： update操作</p>\n</li>\n<li><p>delete：delete操作，replace操作</p>\n<blockquote>\n<p>注意：drop, truncate等DDL操作，不会触发delete</p>\n</blockquote>\n</li>\n<li><p>insert：insert操作，load data操作，replace操作</p>\n</li>\n</ul>\n<blockquote>\n<p>注意：replace操作会触发两次，一次时update类型的触发器，一次时insert类型的触发器</p>\n<p>mysql 5.6版本同一个类型的触发器针对一个表只能由一个</p>\n<p>mysql 5.7也许有多个统一类型的触发器</p>\n</blockquote>\n<p><strong>注意：触发器只触发DML操作，不会触发DDL操作</strong></p>\n</li>\n<li><p>创建触发器</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span></span><br><span class=\"line\">[DEFINER <span class=\"operator\">=</span> &#123; <span class=\"keyword\">user</span> <span class=\"operator\">|</span> <span class=\"built_in\">CURRENT_USER</span> &#125;]</span><br><span class=\"line\"><span class=\"keyword\">TRIGGER</span> trigger_name <span class=\"comment\">-- 触发器名字 </span></span><br><span class=\"line\">trigger_time trigger_event <span class=\"comment\">-- 触发时间和事件 ON tbl_name FOR EACH ROW</span></span><br><span class=\"line\">[trigger_order]</span><br><span class=\"line\">trigger_body</span><br><span class=\"line\"></span><br><span class=\"line\">trigger_time: &#123; BEFORE <span class=\"operator\">|</span> AFTER &#125; <span class=\"comment\">-- 事件之前还是之后触发 </span></span><br><span class=\"line\">trigger_event: &#123; <span class=\"keyword\">INSERT</span> <span class=\"operator\">|</span> <span class=\"keyword\">UPDATE</span> <span class=\"operator\">|</span> <span class=\"keyword\">DELETE</span> &#125; <span class=\"comment\">-- 三个类型 </span></span><br><span class=\"line\">trigger_order: &#123; FOLLOWS <span class=\"operator\">|</span> <span class=\"keyword\">PRECEDES</span> &#125; other_trigger_name</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:db_test_trigger<span class=\"operator\">&gt;</span> delimiter <span class=\"operator\">/</span><span class=\"operator\">/</span></span><br><span class=\"line\">Missing required argument, delimiter</span><br><span class=\"line\"><span class=\"type\">Time</span>: <span class=\"number\">0.000</span>s</span><br><span class=\"line\"><span class=\"comment\">-- new.col:表示的是更新以后的值</span></span><br><span class=\"line\"><span class=\"comment\">-- old.col:表示的是更新以前的值，只读</span></span><br><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:db_test_trigger<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">trigger</span> trg_update_score</span><br><span class=\"line\">                                     <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> before <span class=\"keyword\">update</span> <span class=\"keyword\">on</span> test_trigger</span><br><span class=\"line\">                                     <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">for</span> <span class=\"keyword\">each</span> <span class=\"type\">row</span></span><br><span class=\"line\">                                     <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\">                                     <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> if new.score <span class=\"operator\">&lt;</span> <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">                                     <span class=\"operator\">-</span><span class=\"operator\">&gt;</span>  <span class=\"keyword\">set</span> new.score <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">                                     <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> elseif new.score <span class=\"operator\">&gt;</span> <span class=\"number\">100</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">                                     <span class=\"operator\">-</span><span class=\"operator\">&gt;</span>  <span class=\"keyword\">set</span> new.score <span class=\"operator\">=</span> <span class=\"number\">100</span>;</span><br><span class=\"line\">                                     <span class=\"operator\">-</span><span class=\"operator\">&gt;</span></span><br><span class=\"line\">                                     <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">end</span> if;</span><br><span class=\"line\">                                     <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">end</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>触发器总结</p>\n<ul>\n<li><p>触发器对性能有损耗，应当非常慎重使用</p>\n</li>\n<li><p>对于物理表，触发器执行失败则整个语句回滚</p>\n</li>\n<li><p>row格式主从复制，触发器不会在从库上执行</p>\n<blockquote>\n<p>因为从库复制的肯定是主库已经提交过的数据，既然已经提交了说明触发器已经被触发过了，所以从库不会执行。</p>\n</blockquote>\n</li>\n<li><p>使用触发器时应当避免递归执行</p>\n</li>\n</ul>\n</li>\n<li><p>触发器模拟物化视图</p>\n<ul>\n<li><p>物化视图的概念</p>\n<ul>\n<li><p>不是基于基表的虚表</p>\n</li>\n<li><p>根据基表实际存在的实表</p>\n</li>\n<li><p>预先计算并保存耗时较多的sql操作结果</p>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 创建Orders表</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> Orders</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> (order_id <span class=\"type\">int</span> unsigned <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> auto_increment, </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> product_name <span class=\"type\">varchar</span>(<span class=\"number\">30</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> price <span class=\"type\">decimal</span>(<span class=\"number\">8</span>,<span class=\"number\">2</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> amount <span class=\"type\">smallint</span> <span class=\"keyword\">not</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">primary</span> key(order_id));</span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.13</span> sec) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- -- 插入测试数据</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Orders <span class=\"keyword\">values</span> </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> (<span class=\"keyword\">null</span>, <span class=\"string\">&#x27;cpu&#x27;</span>, <span class=\"number\">135.5</span> ,<span class=\"number\">1</span>), </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> (<span class=\"keyword\">null</span>, <span class=\"string\">&#x27;memory&#x27;</span>, <span class=\"number\">48.2</span>, <span class=\"number\">3</span>), </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> (<span class=\"keyword\">null</span>, <span class=\"string\">&#x27;cpu&#x27;</span>, <span class=\"number\">125.6</span>, <span class=\"number\">3</span>), </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> (<span class=\"keyword\">null</span>, <span class=\"string\">&#x27;cpu&#x27;</span>, <span class=\"number\">105.3</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">Records: <span class=\"number\">4</span> Duplicates: <span class=\"number\">0</span> Warnings: <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> Orders; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+--------------+--------+--------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> order_id <span class=\"operator\">|</span> product_name <span class=\"operator\">|</span> price <span class=\"operator\">|</span> amount <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+--------------+--------+--------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span> <span class=\"operator\">|</span> cpu <span class=\"operator\">|</span> <span class=\"number\">135.50</span> <span class=\"operator\">|</span> <span class=\"number\">1</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2</span> <span class=\"operator\">|</span> memory <span class=\"operator\">|</span>  <span class=\"number\">48.20</span> <span class=\"operator\">|</span> <span class=\"number\">3</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">3</span> <span class=\"operator\">|</span> cpu <span class=\"operator\">|</span> <span class=\"number\">125.60</span> <span class=\"operator\">|</span> <span class=\"number\">3</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">4</span> <span class=\"operator\">|</span> cpu <span class=\"operator\">|</span> <span class=\"number\">105.30</span> <span class=\"operator\">|</span> <span class=\"number\">4</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+--------------+--------+--------+ </span></span><br><span class=\"line\"><span class=\"number\">4</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 建立一个模拟物化视图的表(即用这张表来模拟物化视图) </span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> Orders_MV</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> ( product_name <span class=\"type\">varchar</span>(<span class=\"number\">30</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span>, </span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> price_sum <span class=\"type\">decimal</span>(<span class=\"number\">8</span>,<span class=\"number\">2</span>) <span class=\"keyword\">not</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> amount_sum <span class=\"type\">int</span> <span class=\"keyword\">not</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> price_avg <span class=\"type\">float</span> <span class=\"keyword\">not</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> orders_cnt <span class=\"type\">int</span> <span class=\"keyword\">not</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\"> <span class=\"operator\">-</span><span class=\"operator\">&gt;</span>  <span class=\"keyword\">unique</span> index (product_name));</span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.14</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 通过Orders表的数据，将测试数据初始化到Orders_MV表中 </span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Orders_MV</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> product_name, <span class=\"built_in\">sum</span>(price),</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"built_in\">sum</span>(amount), <span class=\"built_in\">avg</span>(price), <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>)</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span>     <span class=\"keyword\">from</span> Orders</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span>     <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> product_name;</span><br><span class=\"line\">Query OK, <span class=\"number\">2</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.07</span> sec) </span><br><span class=\"line\">Records: <span class=\"number\">2</span> Duplicates: <span class=\"number\">0</span> Warnings: <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> Orders_MV; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------+-----------+------------+-----------+------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> product_name <span class=\"operator\">|</span> price_sum <span class=\"operator\">|</span> amount_sum <span class=\"operator\">|</span> price_avg <span class=\"operator\">|</span> orders_cnt <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------+-----------+------------+-----------+------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> cpu <span class=\"operator\">|</span> <span class=\"number\">366.40</span> <span class=\"operator\">|</span> <span class=\"number\">8</span> <span class=\"operator\">|</span> <span class=\"number\">122.133</span> <span class=\"operator\">|</span> <span class=\"number\">3</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> memory <span class=\"operator\">|</span> <span class=\"number\">48.20</span> <span class=\"operator\">|</span> <span class=\"number\">3</span> <span class=\"operator\">|</span> <span class=\"number\">48.2</span> <span class=\"operator\">|</span> <span class=\"number\">1</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------+-----------+------------+-----------+------------+ </span></span><br><span class=\"line\"><span class=\"number\">2</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">delimiter <span class=\"operator\">/</span><span class=\"operator\">/</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TRIGGER</span> tgr_Orders_insert <span class=\"comment\">-- 创建触发器为tgr_Orders_insert </span></span><br><span class=\"line\">AFTER <span class=\"keyword\">INSERT</span> <span class=\"keyword\">ON</span> Orders <span class=\"comment\">-- 触发器是INSERT类型的，且作用于Orders表 </span></span><br><span class=\"line\"><span class=\"keyword\">FOR</span> <span class=\"keyword\">EACH</span> <span class=\"type\">ROW</span></span><br><span class=\"line\"><span class=\"keyword\">BEGIN</span></span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"variable\">@old</span>_price_sum :<span class=\"operator\">=</span> <span class=\"number\">0</span>; <span class=\"comment\">-- 设置临时存放Orders_MV表(模拟物化视图)的字段的变量</span></span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"variable\">@old</span>_amount_sum :<span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"variable\">@old</span>_price_avg :<span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"variable\">@old</span>_orders_cnt :<span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"comment\">-- select ... into ... 在更新Orders_MV之前，将Orders_MV中对应某个产品的信息写入临时变量</span></span><br><span class=\"line\">        IFNULL(price_sum, <span class=\"number\">0</span>),</span><br><span class=\"line\">        IFNULL(amount_sum, <span class=\"number\">0</span>),</span><br><span class=\"line\">        IFNULL(price_avg, <span class=\"number\">0</span>),</span><br><span class=\"line\">        IFNULL(orders_cnt, <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">Orders_MV</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">product_name <span class=\"operator\">=</span> NEW.product_name <span class=\"keyword\">INTO</span> <span class=\"variable\">@old</span>_price_sum , <span class=\"variable\">@old</span>_amount_sum , <span class=\"variable\">@old</span>_price_avg , <span class=\"variable\">@old</span>_orders_cnt;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"variable\">@new</span>_price_sum <span class=\"operator\">=</span> <span class=\"variable\">@old</span>_price_sum <span class=\"operator\">+</span> NEW.price; <span class=\"comment\">-- 累加新的值 SET @new_amount_sum = @old_amount_sum + NEW.amount;</span></span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"variable\">@new</span>_orders_cnt <span class=\"operator\">=</span> <span class=\"variable\">@old</span>_orders_cnt <span class=\"operator\">+</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"variable\">@new</span>_price_avg <span class=\"operator\">=</span> <span class=\"variable\">@new</span>_price_sum <span class=\"operator\">/</span> <span class=\"variable\">@new</span>_orders_cnt ;</span><br><span class=\"line\">REPLACE <span class=\"keyword\">INTO</span> Orders_MV</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span>(NEW.product_name, <span class=\"variable\">@new</span>_price_sum,</span><br><span class=\"line\"><span class=\"variable\">@new</span>_amount_sum, <span class=\"variable\">@new</span>_price_avg, <span class=\"variable\">@new</span>_orders_cnt );</span><br><span class=\"line\"><span class=\"comment\">-- REPLACE 将对应的物品(唯一索引)的字段值替换new_xxx的值 </span></span><br><span class=\"line\"><span class=\"keyword\">END</span>;<span class=\"operator\">/</span><span class=\"operator\">/</span></span><br><span class=\"line\">delimiter ;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Orders <span class=\"keyword\">values</span> (<span class=\"keyword\">null</span>, <span class=\"string\">&#x27;ssd&#x27;</span>, <span class=\"number\">299</span>, <span class=\"number\">3</span>); </span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.03</span> sec)</span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> Orders <span class=\"keyword\">values</span> (<span class=\"keyword\">null</span>, <span class=\"string\">&#x27;memory&#x27;</span>, <span class=\"number\">47.9</span>, <span class=\"number\">5</span>); </span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.05</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> Orders_MV;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"tips\"><a href=\"#tips\" class=\"headerlink\" title=\"tips\"></a>tips</h2><ol>\n<li><p>ifnull函数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 如果test为NULL，则ifnull返回100</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> ifnull(<span class=\"variable\">@test</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> ifnull(<span class=\"variable\">@test</span>, <span class=\"number\">100</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">100</span> <span class=\"operator\">|</span> <span class=\"comment\">-- ifnull函数return的值是100 </span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"variable\">@test</span>;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"variable\">@test</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">NULL</span> <span class=\"operator\">|</span> <span class=\"comment\">-- 但是test还是NULL </span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 给test变􏰃赋值为200</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">set</span> <span class=\"variable\">@test</span>:<span class=\"operator\">=</span><span class=\"number\">200</span>;  </span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 再次ifnull判断，此时test不为null，则返回test变量的值 </span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> ifnull(<span class=\"variable\">@test</span>, <span class=\"number\">100</span>); </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> ifnull(<span class=\"variable\">@test</span>, <span class=\"number\">100</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">200</span> <span class=\"operator\">|</span> <span class=\"comment\">-- test不为null。返回test的值200</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+ </span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>select into用法</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"variable\">@id</span>_1; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"variable\">@id</span>_1 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">NULL</span> <span class=\"operator\">|</span> <span class=\"comment\">-- 当前变􏰃id_1为null </span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"variable\">@score</span>_1;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"variable\">@score</span>_1 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">NULL</span><span class=\"operator\">|</span> <span class=\"comment\">-- 当前变􏰃score_1为null </span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> test_rank_2;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> id   <span class=\"operator\">|</span> score <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span> <span class=\"operator\">|</span> <span class=\"number\">10</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2</span> <span class=\"operator\">|</span> <span class=\"number\">20</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">3</span> <span class=\"operator\">|</span> <span class=\"number\">30</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">4</span> <span class=\"operator\">|</span> <span class=\"number\">30</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">5</span> <span class=\"operator\">|</span> <span class=\"number\">40</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">6</span> <span class=\"operator\">|</span> <span class=\"number\">40</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+-------+</span></span><br><span class=\"line\"><span class=\"number\">6</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 选择id=1的记录，将对应的id和score赋值给变量 id_1 和 score_1</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> test_rank_2</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">into</span> <span class=\"variable\">@id</span>_1, <span class=\"variable\">@score</span>_1;</span><br><span class=\"line\"> Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"variable\">@id</span>_1;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"variable\">@id</span>_1 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"variable\">@score</span>_1;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"variable\">@score</span>_1 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">10</span> <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure></li>\n</ol>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-存储过程和自定义函数","url":"/mysql/learn-mysql-009/","content":"<h2 id=\"存储过程\"><a href=\"#存储过程\" class=\"headerlink\" title=\"存储过程\"></a>存储过程</h2><ol>\n<li><p>存储过程介绍</p>\n<ul>\n<li><p>存储在数据库端端一组sql语句集</p>\n</li>\n<li><p>用户可以通过存储过程名和参数多次调用的程序模块</p>\n</li>\n<li><p>存储过程的特点</p>\n<ul>\n<li><p>使用灵活，可以使用流程控制语句，自定义变量等完成复杂的业务逻辑</p>\n</li>\n<li><p>提高数据安全性，屏蔽应用程序直接对表的操作，易于进行审计</p>\n</li>\n<li><p>减少网络传输</p>\n</li>\n<li><p>提高代码维护的复杂度，实际使用需要结合业务评估</p>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span></span><br><span class=\"line\">[DEFINER <span class=\"operator\">=</span> &#123; <span class=\"keyword\">user</span> <span class=\"operator\">|</span> <span class=\"built_in\">CURRENT_USER</span> &#125;] </span><br><span class=\"line\"><span class=\"keyword\">PROCEDURE</span> sp_name ([proc_parameter[,...]]) </span><br><span class=\"line\">[characteristic ...] routine_body</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 注意，只有procedure才有in(传入),out(传出),inout(传入传出)参数，自定义函数(只有)默认就是 in。</span></span><br><span class=\"line\">proc_parameter:  </span><br><span class=\"line\">[ <span class=\"keyword\">IN</span> <span class=\"operator\">|</span> <span class=\"keyword\">OUT</span> <span class=\"operator\">|</span> <span class=\"keyword\">INOUT</span> ] param_name type</span><br><span class=\"line\"></span><br><span class=\"line\">characteristic:</span><br><span class=\"line\">COMMENT <span class=\"string\">&#x27;string&#x27;</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">LANGUAGE</span> <span class=\"keyword\">SQL</span></span><br><span class=\"line\"><span class=\"operator\">|</span> [<span class=\"keyword\">NOT</span>] <span class=\"keyword\">DETERMINISTIC</span></span><br><span class=\"line\"><span class=\"operator\">|</span> &#123; <span class=\"keyword\">CONTAINS</span> <span class=\"keyword\">SQL</span> <span class=\"operator\">|</span> <span class=\"keyword\">NO</span> <span class=\"keyword\">SQL</span> <span class=\"operator\">|</span> <span class=\"keyword\">READS</span> <span class=\"keyword\">SQL</span> DATA <span class=\"operator\">|</span> <span class=\"keyword\">MODIFIES</span> <span class=\"keyword\">SQL</span> DATA &#125; </span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">SQL</span> SECURITY &#123; DEFINER <span class=\"operator\">|</span> INVOKER &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">routine_body:</span><br><span class=\"line\">       Valid <span class=\"keyword\">SQL</span> routine statement</span><br><span class=\"line\"><span class=\"comment\">-- 删除</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">PROCEDURE</span> procedure_name;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>存储过程举例与流程控制语句</p>\n<ul>\n<li><p>if语法</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- IF</span></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- 语法</span></span><br><span class=\"line\">IF search_condition <span class=\"keyword\">THEN</span> statement_list</span><br><span class=\"line\">[ELSEIF search_condition <span class=\"keyword\">THEN</span> statement_list] ...</span><br><span class=\"line\">    [<span class=\"keyword\">ELSE</span> statement_list]</span><br><span class=\"line\"><span class=\"keyword\">END</span> IF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 创建存储过程</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> delimiter <span class=\"operator\">/</span><span class=\"operator\">/</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">create</span> <span class=\"keyword\">procedure</span> pcd_test_1 (<span class=\"keyword\">in</span> param_a <span class=\"type\">int</span>) <span class=\"comment\">-- 创建一个</span></span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">declare</span> a <span class=\"type\">int</span>; <span class=\"comment\">-- delcare声明了该变量的作用域在该procedure中</span></span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span>     if param_a <span class=\"operator\">&gt;</span> <span class=\"number\">10</span> <span class=\"keyword\">then</span> <span class=\"keyword\">set</span> a:<span class=\"operator\">=</span> <span class=\"number\">11</span>;</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span>         elseif param_a <span class=\"operator\">=</span> <span class=\"number\">10</span> <span class=\"keyword\">then</span> <span class=\"keyword\">set</span> a:<span class=\"operator\">=</span><span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span>         <span class=\"keyword\">else</span> <span class=\"keyword\">set</span> a:<span class=\"operator\">=</span><span class=\"number\">9</span>;</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span>     <span class=\"keyword\">end</span> if;</span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">end</span>;<span class=\"operator\">/</span><span class=\"operator\">/</span></span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查看当前会话中变量a的值 </span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"variable\">@a</span>; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"variable\">@a</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">NULL</span> <span class=\"operator\">|</span> <span class=\"comment\">-- 当前会话中a为NULL </span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">call</span> pcd_test_1(<span class=\"number\">1</span>); </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span>a <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span><span class=\"number\">9</span><span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------+</span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<p>mysql&gt; call pcd_test_1(10);<br>+------+<br>|a |<br>+------+<br>| 10|<br>+------+<br>1 row in set (0.00 sec)<br>Query OK, 0 rows affected (0.00 sec)</p>\n<p>mysql&gt; call pcd_test_1(20);<br>+------+<br>|a |<br>+------+<br>| 11|<br>+------+<br>1 row in set (0.00 sec)<br>Query OK, 0 rows affected (0.00 sec)</p>\n<p>mysql&gt; select @a;<br>+------+<br>| @a   |<br>+------+<br>| NULL | -- 使用了declare，使得procedure中a的作用域限制在了procedure内<br>+------+<br>1 row in set (0.00 sec)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- case when 用法</span><br><span class=\"line\">  </span><br><span class=\"line\">  ```sql</span><br><span class=\"line\">  --</span><br><span class=\"line\">  -- CASE WHEN</span><br><span class=\"line\">  --</span><br><span class=\"line\">  -- CASE WHEN 语法 CASE case_value</span><br><span class=\"line\">  WHEN when_value THEN statement_list</span><br><span class=\"line\">      [WHEN when_value THEN</span><br><span class=\"line\">      [ELSE statement_list]</span><br><span class=\"line\">  END CASE</span><br><span class=\"line\">  -- 或者是 CASE</span><br><span class=\"line\">  WHEN search_condition</span><br><span class=\"line\">  [WHEN search_condition THEN statement_list] ... </span><br><span class=\"line\">  [ELSE statement_list]</span><br><span class=\"line\">  END CASE</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<ul>\n<li><p>while 用法</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- WHILE 循环 --</span></span><br><span class=\"line\"><span class=\"comment\">-- WHILE 语法</span></span><br><span class=\"line\">[begin_label:] WHILE search_condition DO</span><br><span class=\"line\">    statement_list</span><br><span class=\"line\"><span class=\"keyword\">END</span> WHILE [end_label]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>repeat 循环用法</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- REPEAT 循环 --</span></span><br><span class=\"line\"><span class=\"comment\">-- REPEAT 语法 </span></span><br><span class=\"line\">[begin_label:] REPEAT</span><br><span class=\"line\">    statement_list</span><br><span class=\"line\">UNTIL search_condition</span><br><span class=\"line\"><span class=\"keyword\">END</span> REPEAT [end_label]</span><br></pre></td></tr></table></figure>\n\n<p>   mysql&gt; delimiter &#x2F;&#x2F;<br>   mysql&gt; create procedure pcd_test_4(in param_1 int)<br>   -&gt; begin<br>   -&gt; SET @x &#x3D; 0; -- 没有使用declare，所以x是会话级别的<br>   -&gt; REPEAT<br>   -&gt; SET @x &#x3D; @x + 1;<br>   -&gt;     UNTIL @x &gt; param_1 END REPEAT;<br>   -&gt; end;&#x2F;&#x2F;<br>   Query OK, 0 rows affected (0.01 sec)</p>\n<p>   mysql&gt; delimiter ;<br>   mysql&gt; call pcd_test_4(10);<br>   Query OK, 0 rows affected (0.00 sec)</p>\n<p>   mysql&gt; select @x; -- x是会话级别的<br>   +------+<br>   | @x |<br>   +------+<br>   |11| -- 一共循环11次(10&gt;10 为False，11 &gt; 10为True，才跳出)<br>   +------+<br>   1 row in set (0.00 sec)</p>\n   <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- loop 循环用法</span><br><span class=\"line\">  </span><br><span class=\"line\">  ```sql</span><br><span class=\"line\">  --</span><br><span class=\"line\">  -- loop语法 </span><br><span class=\"line\">  [begin_label:] LOOP</span><br><span class=\"line\">         statement_list</span><br><span class=\"line\">     END LOOP [end_label]</span><br><span class=\"line\">  -- ITERATE 和label相结合，表示继续从label处执行</span><br><span class=\"line\">  -- LEAVE 和label相结合，表示从label 标记的代码段离开</span><br><span class=\"line\">  </span><br><span class=\"line\">  -- loop 例子</span><br><span class=\"line\">  mysql&gt; delimiter //</span><br><span class=\"line\">  mysql&gt; create procedure pcd_test_5(in param_1 int)</span><br><span class=\"line\">  -&gt; begin</span><br><span class=\"line\">  -&gt;     test_label: loop</span><br><span class=\"line\">  -&gt; set param_1 := param_1 + 1; -- 参数累加</span><br><span class=\"line\">  -&gt; if param_1 &lt; 10 then -- 如果累加的值小于10</span><br><span class=\"line\">  -&gt; iterate test_label; -- 继续执行 标签 test_label</span><br><span class=\"line\">  -&gt; end if;</span><br><span class=\"line\">  -&gt; leave test_label; -- 如果&gt;=10则离开这个test_label(loop)</span><br><span class=\"line\">  -&gt;     end loop test_label;</span><br><span class=\"line\">  -&gt; set @x = param_1; -- 设置会话级别的变􏰄 </span><br><span class=\"line\">  -&gt; end;//</span><br><span class=\"line\">  Query OK, 0 rows affected (0.02 sec)</span><br><span class=\"line\">  </span><br><span class=\"line\">  mysql&gt; delimiter ;</span><br><span class=\"line\">  mysql&gt; call pcd_test_5(5); -- 5&lt;10 ，累加5次后&gt;=10为true，离开循环 </span><br><span class=\"line\">  Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\">  </span><br><span class=\"line\">  mysql&gt; select @x;</span><br><span class=\"line\">  +------+</span><br><span class=\"line\">  | @x   |</span><br><span class=\"line\">  +------+</span><br><span class=\"line\">  |10| -- 累加到10的 param_1 赋值给 x, 即为10 </span><br><span class=\"line\">  +------+</span><br><span class=\"line\">  1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"自定义函数\"><a href=\"#自定义函数\" class=\"headerlink\" title=\"自定义函数\"></a>自定义函数</h2><ol>\n<li><p>介绍</p>\n<ul>\n<li><p>自定义函数和存储过程类似，但是必须有返回值</p>\n</li>\n<li><p>与内置的函数sum()，max()等使用方法类似</p>\n</li>\n<li><p>自定义函数可能在遍历每条记录中使用</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span></span><br><span class=\"line\">[DEFINER <span class=\"operator\">=</span> &#123; <span class=\"keyword\">user</span> <span class=\"operator\">|</span> <span class=\"built_in\">CURRENT_USER</span> &#125;] </span><br><span class=\"line\"><span class=\"keyword\">FUNCTION</span> sp_name ([func_parameter[,...]]) </span><br><span class=\"line\"><span class=\"keyword\">RETURNS</span> type <span class=\"comment\">-- 必须有返回值 </span></span><br><span class=\"line\">[characteristic ...] routine_body</span><br><span class=\"line\"></span><br><span class=\"line\">func_parameter:</span><br><span class=\"line\">       param_name type</span><br><span class=\"line\">type:</span><br><span class=\"line\">       <span class=\"keyword\">Any</span> valid MySQL data type</span><br><span class=\"line\"></span><br><span class=\"line\">characteristic:</span><br><span class=\"line\">       COMMENT <span class=\"string\">&#x27;string&#x27;</span></span><br><span class=\"line\">     <span class=\"operator\">|</span> <span class=\"keyword\">LANGUAGE</span> <span class=\"keyword\">SQL</span></span><br><span class=\"line\">     <span class=\"operator\">|</span> [<span class=\"keyword\">NOT</span>] <span class=\"keyword\">DETERMINISTIC</span></span><br><span class=\"line\"><span class=\"operator\">|</span> &#123; <span class=\"keyword\">CONTAINS</span> <span class=\"keyword\">SQL</span> <span class=\"operator\">|</span> <span class=\"keyword\">NO</span> <span class=\"keyword\">SQL</span> <span class=\"operator\">|</span> <span class=\"keyword\">READS</span> <span class=\"keyword\">SQL</span> DATA <span class=\"operator\">|</span> <span class=\"keyword\">MODIFIES</span> <span class=\"keyword\">SQL</span> DATA &#125;</span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">SQL</span> SECURITY &#123; DEFINER <span class=\"operator\">|</span> INVOKER &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">routine_body:</span><br><span class=\"line\">    Valid <span class=\"keyword\">SQL</span> routine statement</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 删除</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">FUNCTION</span> fun_name;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-information_schema","url":"/mysql/learn-mysql-011/","content":"<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> use information_schema;</span><br><span class=\"line\">Reading <span class=\"keyword\">table</span> information <span class=\"keyword\">for</span> completion <span class=\"keyword\">of</span> <span class=\"keyword\">table</span> <span class=\"keyword\">and</span> <span class=\"keyword\">column</span> names </span><br><span class=\"line\">You can turn off this feature <span class=\"keyword\">to</span> <span class=\"keyword\">get</span> a quicker startup <span class=\"keyword\">with</span> <span class=\"operator\">-</span>A</span><br><span class=\"line\">Database changed</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> tables; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> Tables_in_information_schema <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> CHARACTER_SETS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> COLLATIONS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> COLLATION_CHARACTER_SET_APPLICABILITY <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> COLUMNS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> COLUMN_PRIVILEGES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> ENGINES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> EVENTS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> FILES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> GLOBAL_STATUS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> GLOBAL_VARIABLES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> KEY_COLUMN_USAGE <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> OPTIMIZER_TRACE <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> PARAMETERS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> PARTITIONS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> PLUGINS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> PROCESSLIST <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> PROFILING <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> REFERENTIAL_CONSTRAINTS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> ROUTINES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> SCHEMATA <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> SCHEMA_PRIVILEGES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> SESSION_STATUS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> SESSION_VARIABLES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> STATISTICS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> TABLES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> TABLESPACES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> TABLE_CONSTRAINTS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> TABLE_PRIVILEGES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> TRIGGERS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> USER_PRIVILEGES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> VIEWS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_LOCKS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_TRX <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_SYS_DATAFILES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_FT_CONFIG <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_SYS_VIRTUAL <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_CMP <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_FT_BEING_DELETED <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_CMP_RESET <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_CMP_PER_INDEX <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_CMPMEM_RESET <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_FT_DELETED <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_BUFFER_PAGE_LRU <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_LOCK_WAITS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_TEMP_TABLE_INFO <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_SYS_INDEXES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_SYS_TABLES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_SYS_FIELDS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_CMP_PER_INDEX_RESET <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_BUFFER_PAGE <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_FT_DEFAULT_STOPWORD <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_FT_INDEX_TABLE <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_FT_INDEX_CACHE <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_SYS_TABLESPACES <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_METRICS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_SYS_FOREIGN_COLS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_CMPMEM <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_BUFFER_POOL_STATS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_SYS_COLUMNS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_SYS_FOREIGN <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">|</span> INNODB_SYS_TABLESTATS <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------------------+ </span></span><br><span class=\"line\"><span class=\"number\">61</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"><span class=\"comment\">-- information_schema 数据库相当于一个数据字典。保存了表的元信息。</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> key_column_usage limit <span class=\"number\">3</span>\\G <span class=\"comment\">-- 显示了哪个索引使用了哪个列 </span></span><br><span class=\"line\"><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span> <span class=\"number\">1.</span> <span class=\"type\">row</span> <span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span></span><br><span class=\"line\">CONSTRAINT_CATALOG: def CONSTRAINT_SCHEMA: burn_test</span><br><span class=\"line\">                 CONSTRAINT_NAME: <span class=\"keyword\">PRIMARY</span></span><br><span class=\"line\">                   TABLE_CATALOG: def</span><br><span class=\"line\">TABLE_SCHEMA: burn_test TABLE_NAME: Orders <span class=\"comment\">-- 表名</span></span><br><span class=\"line\">                   COLUMN_NAME: order_id</span><br><span class=\"line\">             ORDINAL_POSITION: <span class=\"number\">1</span></span><br><span class=\"line\">POSITION_IN_UNIQUE_CONSTRAINT: <span class=\"keyword\">NULL</span> REFERENCED_TABLE_SCHEMA: <span class=\"keyword\">NULL</span> REFERENCED_TABLE_NAME: <span class=\"keyword\">NULL</span> REFERENCED_COLUMN_NAME: <span class=\"keyword\">NULL</span></span><br><span class=\"line\"><span class=\"comment\">-- 索引的名称</span></span><br><span class=\"line\"><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span> <span class=\"number\">2.</span> <span class=\"type\">row</span> <span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span> CONSTRAINT_CATALOG: def</span><br><span class=\"line\">CONSTRAINT_SCHEMA: burn_test CONSTRAINT_NAME: product_name</span><br><span class=\"line\">                   TABLE_CATALOG: def</span><br><span class=\"line\">                    TABLE_SCHEMA: burn_test</span><br><span class=\"line\">                      TABLE_NAME: Orders_MV</span><br><span class=\"line\">                     COLUMN_NAME: product_name</span><br><span class=\"line\">ORDINAL_POSITION: <span class=\"number\">1</span> POSITION_IN_UNIQUE_CONSTRAINT: <span class=\"keyword\">NULL</span> REFERENCED_TABLE_SCHEMA: <span class=\"keyword\">NULL</span> REFERENCED_TABLE_NAME: <span class=\"keyword\">NULL</span> REFERENCED_COLUMN_NAME: <span class=\"keyword\">NULL</span></span><br><span class=\"line\"><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span> <span class=\"number\">3.</span> <span class=\"type\">row</span> <span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span> CONSTRAINT_CATALOG: def</span><br><span class=\"line\">CONSTRAINT_SCHEMA: burn_test CONSTRAINT_NAME: child_ibfk_1</span><br><span class=\"line\">                   TABLE_CATALOG: def</span><br><span class=\"line\">                    TABLE_SCHEMA: burn_test</span><br><span class=\"line\">                      TABLE_NAME: child</span><br><span class=\"line\">                     COLUMN_NAME: parent_id</span><br><span class=\"line\">ORDINAL_POSITION: <span class=\"number\">1</span> POSITION_IN_UNIQUE_CONSTRAINT: <span class=\"number\">1</span></span><br><span class=\"line\">REFERENCED_TABLE_SCHEMA: burn_test REFERENCED_TABLE_NAME: parent</span><br><span class=\"line\">          REFERENCED_COLUMN_NAME: id</span><br><span class=\"line\">   <span class=\"number\">3</span> <span class=\"keyword\">rows</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.04</span> sec)</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>STATISTICS这张表记录了Cardinality信息</li>\n<li>innodb_sys_tablespaces记录表空间的元数据信息(系统文件块大小，文件大小，文件实际分配的大小)</li>\n<li>innodb_sys_tables记录SpaceID和table的关系</li>\n</ol>\n<h2 id=\"mysql-5-6安装sys库\"><a href=\"#mysql-5-6安装sys库\" class=\"headerlink\" title=\"mysql 5.6安装sys库\"></a>mysql 5.6安装sys库</h2><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">shell &gt; git clone https://github.com/mysql/mysql-sys.git </span><br><span class=\"line\">shell &gt; ls | grep sys_56.sql</span><br><span class=\"line\">sys_56.sql # 这个就是我们要安装的到mysql5.6的sys</span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">mysql -u root -S /tmp/mysql.sock_56 &lt; sys_56.sql <span class=\"comment\"># 直接导入即可</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">select version();</span></span><br><span class=\"line\">+------------+</span><br><span class=\"line\">| version()  |</span><br><span class=\"line\">+------------+</span><br><span class=\"line\">| 5.6.27-log |</span><br><span class=\"line\">+------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">show databases;</span></span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| Database |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| burn_test |</span><br><span class=\"line\">| burn_test_56 |</span><br><span class=\"line\">| mysql |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys | -- 新安装的sys库，但是这个里面只有88个记录，因为5.7中增加了几张表，有101个记录 </span><br><span class=\"line\">| test |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">7 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"统计没有创建主键的表\"><a href=\"#统计没有创建主键的表\" class=\"headerlink\" title=\"统计没有创建主键的表\"></a>统计没有创建主键的表</h2><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> TABLE_NAME,</span><br><span class=\"line\">       table_schema</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> tables</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> TABLE_NAME <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span></span><br><span class=\"line\">    (<span class=\"keyword\">SELECT</span> TABLE_NAME</span><br><span class=\"line\">     <span class=\"keyword\">FROM</span> COLUMNS</span><br><span class=\"line\">     <span class=\"keyword\">WHERE</span> `COLUMN_KEY` <span class=\"operator\">=</span> <span class=\"string\">&#x27;PRI&#x27;</span></span><br><span class=\"line\">       <span class=\"keyword\">AND</span> `TABLE_SCHEMA` <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span> (<span class=\"string\">&#x27;sys&#x27;</span>,</span><br><span class=\"line\">                                  <span class=\"string\">&#x27;information_schema&#x27;</span>,</span><br><span class=\"line\">                                  <span class=\"string\">&#x27;mysql&#x27;</span>,</span><br><span class=\"line\">                                  <span class=\"string\">&#x27;performance_schema&#x27;</span>)</span><br><span class=\"line\">     <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> TABLE_NAME</span><br><span class=\"line\">     <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> TABLE_NAME)</span><br><span class=\"line\">  <span class=\"keyword\">AND</span> table_schema <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span> (<span class=\"string\">&#x27;sys&#x27;</span>,</span><br><span class=\"line\">                           <span class=\"string\">&#x27;information_schema&#x27;</span>,</span><br><span class=\"line\">                           <span class=\"string\">&#x27;performance_schema&#x27;</span>,</span><br><span class=\"line\">                           <span class=\"string\">&#x27;mysql&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"检查表的索引创建的情况，判断该索引是否有创建的必要\"><a href=\"#检查表的索引创建的情况，判断该索引是否有创建的必要\" class=\"headerlink\" title=\"检查表的索引创建的情况，判断该索引是否有创建的必要\"></a>检查表的索引创建的情况，判断该索引是否有创建的必要</h2><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    t.TABLE_SCHEMA,</span><br><span class=\"line\">    t.TABLE_NAME,</span><br><span class=\"line\">    INDEX_NAME, </span><br><span class=\"line\">    <span class=\"keyword\">CARDINALITY</span>, </span><br><span class=\"line\">    TABLE_ROWS,</span><br><span class=\"line\">    <span class=\"keyword\">CARDINALITY</span><span class=\"operator\">/</span>TABLE_ROWS <span class=\"keyword\">AS</span> SELECTIVITY <span class=\"comment\">-- 得到选择性</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">TABLES t, <span class=\"comment\">-- 查询的表一，TABLES </span></span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">SELECT</span></span><br><span class=\"line\">            table_schema,</span><br><span class=\"line\">            table_name,</span><br><span class=\"line\">            index_name,</span><br><span class=\"line\">            <span class=\"keyword\">cardinality</span></span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> STATISTICS</span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span> (table_schema,table_name,index_name,seq_in_index) <span class=\"keyword\">IN</span> ( </span><br><span class=\"line\">        <span class=\"keyword\">SELECT</span></span><br><span class=\"line\">            table_schema,</span><br><span class=\"line\">            table_name,</span><br><span class=\"line\">            index_name,</span><br><span class=\"line\">            <span class=\"built_in\">MAX</span>(seq_in_index)</span><br><span class=\"line\">        <span class=\"keyword\">FROM</span>  STATISTICS</span><br><span class=\"line\">        <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> table_schema , table_name , index_name )   </span><br><span class=\"line\">) s <span class=\"comment\">-- 查询的表二，就是上面3.2的查询结果</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">t.table_schema <span class=\"operator\">=</span> s.table_schema <span class=\"comment\">-- 通过库关联</span></span><br><span class=\"line\"><span class=\"keyword\">AND</span> t.table_name <span class=\"operator\">=</span> s.table_name <span class=\"comment\">-- 再通过表变􏰆</span></span><br><span class=\"line\"><span class=\"keyword\">AND</span> t.table_schema <span class=\"operator\">=</span> <span class=\"string\">&#x27;employees&#x27;</span> <span class=\"comment\">-- 指定某一个库名 </span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> SELECTIVITY;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- 通过最后一列的SELECTIVITY是否接近1，判断该索引创建是否合理</span></span><br><span class=\"line\"><span class=\"comment\">-- 注意:</span></span><br><span class=\"line\"><span class=\"comment\">-- Cardinality和table_rows的值，都是通过随机采样，预估得到的</span></span><br><span class=\"line\"><span class=\"comment\">-- 当analyze前后，Cardinality值相差较多，说明该索引是不应该被创建的(页上的记录数值分布不平均) </span></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- 推荐 SELECTIVITY 15% 以上是适合的</span></span><br></pre></td></tr></table></figure>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-索引和B+tree","url":"/mysql/learn-mysql-010/","content":"<h2 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h2><ol>\n<li><p>索引的定义</p>\n<blockquote>\n<p>索引是对记录安装一个或者多个字段进行排序的一种方式。对表中的某个字段建立索引会创建另一种数据结构，其中保存着字段的值，每个值又指向与它相关的记录。这种索引的数据结构是经过排序的，因而可以对其执行二分查找。且性能较高。</p>\n</blockquote>\n</li>\n<li><p>二分查找</p>\n<blockquote>\n<p>二分查找法(binary search)也称为折半查找法，用来查找一组有序的记录数组中的某一记录，其基本思想是:将记录按有序化(递增或递减)排列，在查找过程中采用跳跃式方式查找，即先以有序数列的中点位置作为比较对象，如果要找的元素值小于该中点元素，则将待查序列缩小为左半部分，否则为右半部分。通过一次比较，将查找区间缩小一半。(O(logN)的时间复杂度)</p>\n</blockquote>\n<p>给出一个例子，提供的数据是已经排好序的，且查找数字48</p>\n<table>\n<thead>\n<tr>\n<th>数据</th>\n<th>5</th>\n<th>10</th>\n<th>19</th>\n<th>21</th>\n<th>31</th>\n<th>37</th>\n<th>42</th>\n<th>48</th>\n<th>50</th>\n<th>52</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>下标</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>5</td>\n<td>6</td>\n<td>7</td>\n<td>8</td>\n<td>9</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>设low下标最小值为0，high为下标最大值9</p>\n</li>\n<li><p>通过low和high得到mid。mid&#x3D;(low+high)&#x2F;2，初始时mid为下标4(也可以是5，具体看算法)</p>\n</li>\n<li><p>mid&#x3D;4对应的数据是31，31 &lt;  48</p>\n</li>\n<li><p>通过二分查找的思路，low设置为31对应的下标4，high保持不变，此时mid为6</p>\n</li>\n<li><p>mid&#x3D;6对应的数据是42，42 &lt; 48</p>\n</li>\n<li><p>通过二分查找的思路，将low设置为42对应的下标6，high保持不变，此时mid&#x3D;7</p>\n</li>\n<li><p>mid&#x3D;7对应的数据是48，48&#x3D;48，查询结束</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"二叉树\"><a href=\"#二叉树\" class=\"headerlink\" title=\"二叉树\"></a>二叉树</h2><ol>\n<li><p>二叉树的定义</p>\n<ul>\n<li><p>每个节点至多只有两颗子树</p>\n</li>\n<li><p>二叉树的子树有左右之分，次序不能颠倒</p>\n</li>\n<li><p>一颗深度为k，且有$2^k-1$个节点，成为满二叉树(full tree)</p>\n</li>\n<li><p>一颗深度为k，且root到k-1层的节点树都达到最大，第k层的所有节点都连续集中在最左边，此时为完全二叉树(complete tree)</p>\n</li>\n</ul>\n</li>\n</ol>\n<pre class=\"mermaid\">graph TB;\n完全二叉树\n\nA((1))\nB((2))\nC((3))\nD((4))\nE((5))\nF((6))\nG((7))\nH((8))\nA-->B\nA-->C\nB-->D\nB-->E\nC-->F\nC-->G\nD-->H</pre>\n\n<pre class=\"mermaid\">graph TB;\n满二叉树\n\n1((1))\n2((2))\n3((3))\n4((4))\n5((5))\n6((6))\n7((7))\n8((8))\n9((9))\n10((10))\n11((11))\n12((12))\n13((13))\n14((14))\n15((15))\n\n1-->2\n1-->3\n2-->4\n2-->5\n4-->8\n4-->9\n5-->10\n5-->11\n3-->6\n3-->7\n6-->12\n6-->13\n7-->14\n7-->15</pre>\n\n<ol start=\"2\">\n<li><p>平衡二叉树</p>\n<ul>\n<li><p>左子树和右子树都是平衡二叉树</p>\n</li>\n<li><p>左子树和右子树的高度差绝对值不超过1</p>\n</li>\n</ul>\n</li>\n</ol>\n<pre class=\"mermaid\">graph TB;\n平衡二叉树\n\n2((2))\n3((3))\n5((5))\n6((6))\n7((7))\n8((8))\n\n6-->3\n6-->7\n7-->8\n3-->2\n3-->5</pre>\n\n<pre class=\"mermaid\">graph LR;\n非平衡二叉树\n\n2((2))\n3((3))\n5((5))\n7((7))\n6((6))\n8((8))\n\n2-->3\n3-->5\n5-->7\n7-->6\n7-->8</pre>\n\n<ol start=\"3\">\n<li><p>平衡二叉树的遍历</p>\n<p>以上面平衡二叉树为例，进行遍历</p>\n<ul>\n<li><p>前序：6, 3, 2, 5, 7, 8(ROOT节点在开头，中-左-右顺序)</p>\n</li>\n<li><p>中序：2, 3, 5, 6, 7, 8(中序遍历即为升序，左-中-右顺序)</p>\n</li>\n<li><p>后序：2, 5, 3, 8, 7, 6(ROOT节点中结尾，左-右-中顺序)</p>\n</li>\n</ul>\n<blockquote>\n<p>可以通过前序和中序或者是后序和中序来推导一棵树</p>\n<p>前序或者后序用来得到ROOT节点，中序可以区分左右子树</p>\n</blockquote>\n</li>\n<li><p>平衡二叉树的旋转</p>\n</li>\n</ol>\n<pre class=\"mermaid\">graph TB;\n\nsubgraph 插入新健值3\n    i_2((2))\n    i_1((1))\n    i_5((5))\n    i_4((4))\n    i_9((9))\n    i_3((3))\n\n    i_2-->i_1\n    i_2-->i_5\n    i_5-->i_4\n    i_5-->i_9\n    i_4-->i_3\nend\nsubgraph 平衡二叉树\n    1((1))\n    2((2))\n    4((4))\n    5((5))\n    9((9))\n\n    2-->1\n    2-->5\n    5-->4\n    5-->9\nend</pre>\n\n<p>平衡树旋转</p>\n<pre class=\"mermaid\">graph TD;\nsubgraph 左旋一次\n    2((2))\n    1((1))\n    5((5))\n    3((3))\n    4((4))\n    9((9))\n\n    4-->2\n    2-->1\n    2-->3\n    4-->5\n    5-->9\nend\nsubgraph 右旋一次\n    i_2((2))\n    i_1((1))\n    i_5((5))\n    i_3((3))\n    i_4((4))\n    i_9((9))\n\n    i_2-->i_1\n    i_2-->i_4\n    i_4-->i_3\n    i_4-->i_5\n    i_5-->i_9\nend</pre>\n\n<blockquote>\n<p>需要通过旋转(左旋和右旋)来维护平衡二叉树的平衡，左添加和删除时候需要有额外的开销</p>\n</blockquote>\n<h2 id=\"Btree-x2F-B-tree\"><a href=\"#Btree-x2F-B-tree\" class=\"headerlink\" title=\"Btree&#x2F;B+tree\"></a>Btree&#x2F;B+tree</h2><ol>\n<li><p>Btree的定义</p>\n<p>阶为M(节点上关键字keys的个数)的Btree的定义</p>\n<ul>\n<li><p>每个节点最多有M个孩子</p>\n</li>\n<li><p>除了root节点外，每个飞叶子(non-leaf)节点至少含有(m&#x2F;2)个孩子</p>\n</li>\n<li><p>如果root节点不为空，则root节点至少要有两个孩子节点</p>\n</li>\n<li><p>一个非叶子节点如果含有k个孩子，则包含k-1个keys</p>\n</li>\n<li><p>所有叶子节点都在同一层</p>\n</li>\n<li><p>Btree树中的非叶子节点也包含了数据部分</p>\n</li>\n</ul>\n</li>\n<li><p>B+tree的定义</p>\n<p>在Btree树的基础上，B+tree树做了如下改进</p>\n<ul>\n<li><p>数据只存储在叶子节点上，非叶子节点只保存索引信息</p>\n<ul>\n<li><p>非叶子节点(索引节点)存储的只是一个flag，不保存实际数据记录</p>\n</li>\n<li><p>索引节点指示该节点的左子树比这个flag小，而右子树大于等于这个flag</p>\n</li>\n</ul>\n</li>\n<li><p>叶子节点本身按照数据的升序进行链接</p>\n<ul>\n<li>叶子节点中的数据中物理存储上是无序的，仅仅是逻辑上有序</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>B+tree的作用</p>\n<ul>\n<li><p>在块设备上，通过B+tree可以有效的存储数据</p>\n</li>\n<li><p>所有记录都存储在叶子节点上，非叶子节点存储索引信息</p>\n</li>\n<li><p>B+tree含有非常高的扇出(fanout)，通常超过100，在查找一个记录时，可以有效的减少IO操作</p>\n</li>\n</ul>\n</li>\n<li><p>B+tree的操作</p>\n<ul>\n<li><p>B+tree的插入</p>\n<p>B+tree的插入必须保证插入后叶子节点的记录依然排序</p>\n<p><img src=\"/mysql/learn-mysql-010/b+tree_insert.png\" loading=\"lazy\"></p>\n</li>\n</ul>\n<blockquote>\n<p>B+tree总会保存平衡。但是为了保持平衡对于新插入的健值可能需要做大量的拆分页(split)操作；部分情况下可以通过B+tree的旋转来替代拆分页操作，进而达到平衡效果</p>\n</blockquote>\n<ul>\n<li><p>B+tree的删除</p>\n<p>B+树使用填充因􏰁(fill factor)来控制树的删除变化，50%是填充因􏰁可设的最小值。B+树的删除操作同样必须保证删除后叶􏰁节点中的记录依然排序。与插入不同的是，删除􏰂据填充因􏰁的变化来衡量。</p>\n<p><img src=\"/mysql/learn-mysql-010/b+tree_delete.png\" loading=\"lazy\"></p>\n</li>\n</ul>\n</li>\n<li><p>B+tree的扇出(fan out)</p>\n<ul>\n<li><p>B+tree图例</p>\n<p><img src=\"/mysql/learn-mysql-010/b+tree_fanout.png\" loading=\"lazy\"></p>\n</li>\n<li><p>该B+tree高度为2</p>\n</li>\n<li><p>每叶子叶(leafPgae)4条记录</p>\n</li>\n<li><p>扇出数为5</p>\n</li>\n<li><p>叶子节点(leafPgae)由小到大串联做一起</p>\n</li>\n</ul>\n<blockquote>\n<p>扇出 是每个索引节点(Non-LeafPage)指向每个叶子节点(LeafPage)的指针</p>\n<p>扇出数 &#x3D; 索引节点(Non-LeafPage)可存储的最大关键字个数 + 1 图例中的索引节点(Non-LeafPage)最大可以存放4个关键字，但实际使用了3个;</p>\n</blockquote>\n</li>\n<li><p>B+tree存储数据举例</p>\n<p>假设B+树中页的大小是16K，每行记录是200Byte大小，求出树的高度为1，2，3，4时，分别可以存储多少条记录。</p>\n<ul>\n<li><p>查看数据表中每行记录的平均大小</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> <span class=\"keyword\">table</span> status <span class=\"keyword\">like</span> &quot;%employees%&quot;\\G;</span><br><span class=\"line\"><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span> <span class=\"number\">1.</span> <span class=\"type\">row</span> <span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span></span><br><span class=\"line\">Name: employees</span><br><span class=\"line\">Engine: InnoDB</span><br><span class=\"line\">Version: <span class=\"number\">10</span></span><br><span class=\"line\">Row_format: <span class=\"keyword\">Dynamic</span></span><br><span class=\"line\"><span class=\"keyword\">Rows</span>: <span class=\"number\">298124</span></span><br><span class=\"line\">Avg_row_length: <span class=\"number\">51</span> <span class=\"comment\">-- 平均长度为51个字节</span></span><br><span class=\"line\">Data_length: <span class=\"number\">15245312</span></span><br><span class=\"line\">Max_data_length: <span class=\"number\">0</span></span><br><span class=\"line\">Index_length: <span class=\"number\">0</span></span><br><span class=\"line\">Data_free: <span class=\"number\">0</span></span><br><span class=\"line\">Auto_increment: <span class=\"keyword\">NULL</span></span><br><span class=\"line\">Create_time: <span class=\"number\">2015</span><span class=\"number\">-12</span><span class=\"number\">-02</span> <span class=\"number\">21</span>:<span class=\"number\">32</span>:<span class=\"number\">02</span> </span><br><span class=\"line\">Update_time: <span class=\"keyword\">NULL</span></span><br><span class=\"line\">Check_time: <span class=\"keyword\">NULL</span></span><br><span class=\"line\"><span class=\"keyword\">Collation</span>: utf8mb4_general_ci</span><br><span class=\"line\">Checksum: <span class=\"keyword\">NULL</span></span><br><span class=\"line\">Create_options:</span><br><span class=\"line\">Comment:</span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>高度为1</p>\n<blockquote>\n<p>16k&#x2F;200B约等于80个记录</p>\n</blockquote>\n</li>\n<li><p>高度为2</p>\n<p>非叶子节点中存放的仅仅是一个索引信息，包含了 Key 和 Point 指针; Point 指针在MySQL中固定为 6Byte 。而 Key 我们这里假设为 8Byte ，则单个索引信息即为14个字节， KeySize &#x3D; 14Byte</p>\n<blockquote>\n<p>高度为2，即有一个索引节点(索引页)，和N个叶子节点<br>◦ 一个索引节点可以存放 16K &#x2F; KeySize &#x3D; 16K &#x2F; 14B &#x3D; 1142个索引信息，即有(1142 + 1)个扇出，以及有(1142 + 1)个叶子节点(数据页) (可以简化为1000) ◦ 数据记录数 &#x3D; (16K &#x2F; KeySize + 1)x (16K &#x2F; 200B) 约等于 80W 个记录</p>\n</blockquote>\n</li>\n<li><p>高度为3</p>\n<blockquote>\n<p>高度为3的B+树，即ROOT节点有1000个扇出，每个扇出又有1000个扇出指向叶􏰁节点。每个节点是80个记录，所以一共有 8000W个记录</p>\n</blockquote>\n</li>\n<li><p>高度为4</p>\n<blockquote>\n<p>同高度3一样，高度为4时的记录书为(8000 x 1000)W</p>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>上述的8000W等数据只是一个理论值。线上实际使用单个页的记录数字要乘以70%，即第二层需要70% x 70% ，依次类推。<br>因此在数据库中，B+树的高度一般都在2<del>4层，这也就是说查找某一键值的行记录时最多只需要2到4次IO，2</del>4次的IO意味着查询时间只需0.02~0.04秒(假设IOPS&#x3D;100，当前SSD可以达到50000IOPS)。</p>\n</blockquote>\n<p>从5.7开始，页的预留大小可以设置了，以减少split操作的概率(空间换时间)</p>\n</li>\n</ol>\n<h2 id=\"mysql索引\"><a href=\"#mysql索引\" class=\"headerlink\" title=\"mysql索引\"></a>mysql索引</h2><ol>\n<li><p>mysql创建索引</p>\n<blockquote>\n<p>alter table test_index_1 add index idx_a (a);</p>\n</blockquote>\n</li>\n<li><p>mysql查看索引</p>\n<blockquote>\n<ol>\n<li><p>show index from orders\\G</p>\n</li>\n<li><p>show create table orders\\G</p>\n</li>\n<li><p>desc orders;</p>\n</li>\n</ol>\n</blockquote>\n</li>\n<li><p>Cardinality(基数)</p>\n<p>Cardinality表示该索引列上有多少不同的记录，这个是一个预估的值，是采样得到的(由InnoDB触发，采样20个页，进行预估)，该值越大越好，即当Cardinality &#x2F; RowNumber越接近1越好。表示该列是高选择性的。</p>\n<p>• 高选择性:身份证 、手机号码、姓名、订单号等 </p>\n<p>• 低选择性:性别、年龄等</p>\n<p>即该列是否适合创建索引，就看该字段是否具有高选择性</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> lineitem\\G；</span><br><span class=\"line\"><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span> <span class=\"number\">1.</span> <span class=\"type\">row</span> <span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span></span><br><span class=\"line\"><span class=\"keyword\">Table</span>: lineitem</span><br><span class=\"line\"><span class=\"keyword\">Create</span> <span class=\"keyword\">Table</span>: <span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `lineitem` (</span><br><span class=\"line\">`l_orderkey` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">`l_partkey` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>, </span><br><span class=\"line\">`l_suppkey` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>, </span><br><span class=\"line\">`l_linenumber` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>, </span><br><span class=\"line\">`l_quantity` <span class=\"keyword\">double</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>, </span><br><span class=\"line\">`l_extendedprice` <span class=\"keyword\">double</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>, </span><br><span class=\"line\">`l_discount` <span class=\"keyword\">double</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">`l_tax` <span class=\"keyword\">double</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>, </span><br><span class=\"line\">`l_returnflag` <span class=\"type\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>, </span><br><span class=\"line\">`l_linestatus` <span class=\"type\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>, </span><br><span class=\"line\">`l_shipDATE` <span class=\"type\">date</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>, </span><br><span class=\"line\">`l_commitDATE` <span class=\"type\">date</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>, </span><br><span class=\"line\">`l_receiptDATE` <span class=\"type\">date</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>, </span><br><span class=\"line\">`l_shipinstruct` <span class=\"type\">char</span>(<span class=\"number\">25</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>, </span><br><span class=\"line\">`l_shipmode` <span class=\"type\">char</span>(<span class=\"number\">10</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>, </span><br><span class=\"line\">`l_comment` <span class=\"type\">varchar</span>(<span class=\"number\">44</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>, </span><br><span class=\"line\"><span class=\"keyword\">PRIMARY</span> KEY (`l_orderkey`,`l_linenumber`), <span class=\"comment\">-- 两个列作为primary</span></span><br><span class=\"line\">KEY `i_l_shipdate` (`l_shipDATE`),</span><br><span class=\"line\">KEY `i_l_suppkey_partkey` (`l_partkey`,`l_suppkey`), </span><br><span class=\"line\">KEY `i_l_partkey` (`l_partkey`),</span><br><span class=\"line\">KEY `i_l_suppkey` (`l_suppkey`),</span><br><span class=\"line\">KEY `i_l_receiptdate` (`l_receiptDATE`),</span><br><span class=\"line\">KEY `i_l_orderkey` (`l_orderkey`),</span><br><span class=\"line\">KEY `i_l_orderkey_quantity` (`l_orderkey`,`l_quantity`), </span><br><span class=\"line\">KEY `i_l_commitdate` (`l_commitDATE`),</span><br><span class=\"line\"><span class=\"keyword\">CONSTRAINT</span> `lineitem_ibfk_1` <span class=\"keyword\">FOREIGN</span> KEY (`l_orderkey`) <span class=\"keyword\">REFERENCES</span> `orders` (`o_orderkey`),</span><br><span class=\"line\"><span class=\"keyword\">CONSTRAINT</span> `lineitem_ibfk_2` <span class=\"keyword\">FOREIGN</span> KEY (`l_partkey`, `l_suppkey`) <span class=\"keyword\">REFERENCES</span> `partsupp` (`ps_partkey`, `ps_suppkey`)</span><br><span class=\"line\">) ENGINE<span class=\"operator\">=</span>InnoDB <span class=\"keyword\">DEFAULT</span> CHARSET<span class=\"operator\">=</span>latin1 <span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> index <span class=\"keyword\">from</span> lineitem\\G <span class=\"comment\">-- 省略其他输出，只看PRIMARY</span></span><br><span class=\"line\"><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span> <span class=\"number\">1.</span> <span class=\"type\">row</span> <span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span></span><br><span class=\"line\">        <span class=\"keyword\">Table</span>: lineitem</span><br><span class=\"line\">   Non_unique: <span class=\"number\">0</span></span><br><span class=\"line\">Key_name: <span class=\"keyword\">PRIMARY</span></span><br><span class=\"line\">Seq_in_index: <span class=\"number\">1</span> <span class=\"comment\">-- 索引中的顺序，该列的顺序为1</span></span><br><span class=\"line\">  Column_name: l_orderkey</span><br><span class=\"line\">    <span class=\"keyword\">Collation</span>: A</span><br><span class=\"line\"><span class=\"keyword\">Cardinality</span>: <span class=\"number\">1416486</span> <span class=\"comment\">-- 约140W Sub_part: NULL</span></span><br><span class=\"line\">       Packed: <span class=\"keyword\">NULL</span></span><br><span class=\"line\">         <span class=\"keyword\">Null</span>:</span><br><span class=\"line\">   Index_type: BTREE</span><br><span class=\"line\">      Comment:</span><br><span class=\"line\">Index_comment:</span><br><span class=\"line\"><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span> <span class=\"number\">2.</span> <span class=\"type\">row</span> <span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span></span><br><span class=\"line\">        <span class=\"keyword\">Table</span>: lineitem</span><br><span class=\"line\">   Non_unique: <span class=\"number\">0</span></span><br><span class=\"line\">Key_name: <span class=\"keyword\">PRIMARY</span></span><br><span class=\"line\">Seq_in_index: <span class=\"number\">2</span> <span class=\"comment\">-- 索引中的顺序，该列的顺序为2</span></span><br><span class=\"line\">  Column_name: l_linenumber</span><br><span class=\"line\">    <span class=\"keyword\">Collation</span>: A</span><br><span class=\"line\"><span class=\"keyword\">Cardinality</span>: <span class=\"number\">5882116</span> <span class=\"comment\">-- 约580W Sub_part: NULL</span></span><br><span class=\"line\">       Packed: <span class=\"keyword\">NULL</span></span><br><span class=\"line\">         <span class=\"keyword\">Null</span>:</span><br><span class=\"line\">   Index_type: BTREE</span><br><span class=\"line\">      Comment:</span><br><span class=\"line\">Index_comment:</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>对应当前例子</p>\n<p>第一个索引(Seq_in_index &#x3D; 1)的 Cardinality 的值表示 当前列(l_orderkey) 的不重复的值，<br>第二个索引(Seq_in_index &#x3D; 2)的 Cardinality 的值表示 前两列(l_orderkey)和(l_linenumber) 不重复的值</p>\n</blockquote>\n</li>\n<li><p>复合索引</p>\n<ul>\n<li>创建表和保存数据</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 创建表</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> tbl_test_index(a <span class=\"type\">int</span>, b <span class=\"type\">int</span>, c <span class=\"type\">int</span>);</span><br><span class=\"line\"><span class=\"comment\">-- 保存数据</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> tbl_test_index (a, b, c) <span class=\"keyword\">values</span> (<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">10</span>), (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">9</span>), (<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>), (<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">15</span>), (<span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">6</span>), (<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">17</span>);</span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li><p>创建a和b的联合索引(两列的联合索引)</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tbl_test_index <span class=\"keyword\">add</span> index idx_a_b(a, b);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>验证是否命中索引</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> a <span class=\"operator\">=</span> <span class=\"number\">1</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 命中a索引</span><br><span class=\"line\"><span class=\"number\">2.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> a <span class=\"operator\">=</span> <span class=\"number\">1</span> <span class=\"keyword\">and</span> b <span class=\"operator\">=</span> <span class=\"number\">2</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 命中a和b</span><br><span class=\"line\"><span class=\"number\">3.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> a <span class=\"operator\">=</span> <span class=\"number\">1</span> <span class=\"keyword\">or</span> b <span class=\"operator\">=</span> <span class=\"number\">2</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 没有命中索引</span><br><span class=\"line\"><span class=\"number\">4.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> b <span class=\"operator\">=</span> <span class=\"number\">2</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 没用命中索引</span><br><span class=\"line\"><span class=\"number\">5.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> a <span class=\"operator\">=</span> <span class=\"number\">1</span> <span class=\"keyword\">and</span> b <span class=\"operator\">&gt;</span> <span class=\"number\">2</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 命中a和b</span><br><span class=\"line\"><span class=\"number\">6.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> a <span class=\"operator\">&gt;</span> <span class=\"number\">1</span> <span class=\"keyword\">and</span> b <span class=\"operator\">&gt;</span> <span class=\"number\">2</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 没有命中索引</span><br><span class=\"line\"><span class=\"number\">7.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> a <span class=\"operator\">!=</span> <span class=\"number\">2</span> <span class=\"keyword\">and</span> b <span class=\"operator\">=</span> <span class=\"number\">2</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 没有命中索引</span><br><span class=\"line\"><span class=\"number\">8.</span> <span class=\"keyword\">select</span> a, b <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> b <span class=\"operator\">&gt;</span> <span class=\"number\">1</span> <span class=\"keyword\">and</span> b <span class=\"operator\">&lt;=</span> <span class=\"number\">3</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 命中索引 覆盖索引</span><br><span class=\"line\"><span class=\"number\">9.</span> <span class=\"keyword\">select</span> <span class=\"built_in\">count</span>(<span class=\"number\">1</span>) <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> b <span class=\"operator\">&gt;</span> <span class=\"number\">1</span> <span class=\"keyword\">and</span> b <span class=\"operator\">&lt;=</span> <span class=\"number\">3</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 命中索引，覆盖索引</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建a,b,c三列的联合索引</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 删除两列的联合索引</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tbl_test_index <span class=\"keyword\">drop</span> index idx_a_b;</span><br><span class=\"line\"><span class=\"comment\">-- 创建三列的联合索引</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tbl_test_index <span class=\"keyword\">add</span> index idx_a_b_c(a, b, c);</span><br><span class=\"line\"><span class=\"comment\">-- 验证</span></span><br><span class=\"line\"><span class=\"keyword\">show</span> index <span class=\"keyword\">from</span> tbl_test_index;</span><br><span class=\"line\"><span class=\"comment\">-- 表新增一列</span></span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tbl_test_index <span class=\"keyword\">add</span> <span class=\"keyword\">column</span> d <span class=\"type\">int</span> <span class=\"keyword\">default</span> <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>验证是否命中索引</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> a <span class=\"operator\">=</span> <span class=\"number\">1</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 命中索引</span><br><span class=\"line\"><span class=\"number\">2.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> a <span class=\"operator\">=</span> <span class=\"number\">1</span> <span class=\"keyword\">and</span> b <span class=\"operator\">=</span> <span class=\"number\">2</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 命中索引</span><br><span class=\"line\"><span class=\"number\">3.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> a <span class=\"operator\">=</span> <span class=\"number\">1</span> <span class=\"keyword\">and</span> b <span class=\"operator\">=</span> <span class=\"number\">2</span> <span class=\"keyword\">and</span> c <span class=\"operator\">=</span> <span class=\"number\">1</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 命中索引</span><br><span class=\"line\"><span class=\"number\">4.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> a <span class=\"operator\">=</span> <span class=\"number\">1</span> <span class=\"keyword\">and</span> c <span class=\"number\">3</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 命中a索引</span><br><span class=\"line\"><span class=\"number\">5.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> b <span class=\"operator\">=</span> <span class=\"number\">2</span> <span class=\"keyword\">and</span> c <span class=\"operator\">=</span> <span class=\"number\">3</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 没有命中索引</span><br><span class=\"line\"><span class=\"number\">6.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> c <span class=\"operator\">=</span> <span class=\"number\">3</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 没有命中索引</span><br><span class=\"line\"><span class=\"number\">7.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> a <span class=\"operator\">=</span> <span class=\"number\">1</span> <span class=\"keyword\">and</span> b <span class=\"operator\">&gt;</span> <span class=\"number\">2</span> <span class=\"keyword\">and</span> c <span class=\"operator\">=</span> <span class=\"number\">3</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 命中索引，c没有命中索引</span><br><span class=\"line\"><span class=\"number\">8.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> a <span class=\"operator\">=</span> <span class=\"number\">1</span> <span class=\"keyword\">and</span> b <span class=\"operator\">=</span> <span class=\"number\">2</span> <span class=\"keyword\">and</span> c <span class=\"operator\">&gt;</span> <span class=\"number\">3</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 命中索引</span><br><span class=\"line\"><span class=\"number\">9.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> a <span class=\"operator\">=</span> <span class=\"number\">1</span> <span class=\"keyword\">and</span> b <span class=\"operator\">=</span> <span class=\"number\">2</span> <span class=\"keyword\">or</span> c <span class=\"operator\">&gt;</span> <span class=\"number\">3</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 没有命中索引</span><br><span class=\"line\"><span class=\"number\">10.</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tbl_test_index <span class=\"keyword\">where</span> a <span class=\"operator\">&gt;</span> <span class=\"number\">1</span> <span class=\"keyword\">and</span> b <span class=\"operator\">=</span> <span class=\"number\">2</span> <span class=\"keyword\">and</span> c <span class=\"operator\">=</span> <span class=\"number\">3</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span> 没有命中索引</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>总结：</p>\n<p>如果索引也上能确定的话，就用索引。</p>\n</li>\n</ul>\n<h2 id=\"secondary-index-二级索引\"><a href=\"#secondary-index-二级索引\" class=\"headerlink\" title=\"secondary index(二级索引)\"></a>secondary index(二级索引)</h2><ul>\n<li><p>secondary index介绍</p>\n<ul>\n<li><p>clustered index(聚集索引)</p>\n<p>叶子节点存储所有记录数据(all row data)</p>\n<img src=\"/mysql/learn-mysql-010/image-20230403152453462.png\" alt=\"image-20230403152453462\" style=\"zoom:50%;\">\n</li>\n<li><p>secondary index(二级索引)</p>\n<ul>\n<li><p>也称为非聚集索引，辅助索引</p>\n</li>\n<li><p>叶子节点存储的是索引和主键信息</p>\n</li>\n<li><p>在找到索引后，得到对应的主键，在回到聚集索引中找主键对应的记录(row data)。俗称回表</p>\n<blockquote>\n<p>回表不止多一次IO，而是多N次IO，N&#x3D;树该高度</p>\n</blockquote>\n</li>\n</ul>\n<img src=\"/mysql/learn-mysql-010/image-20230403152903138.png\" alt=\"image-20230403152903138\" style=\"zoom:50%;\">\n</li>\n<li><p>secondary index查找数据</p>\n<img src=\"/mysql/learn-mysql-010/image-20230403152941958.png\" alt=\"image-20230403152941958\" style=\"zoom:50%;\"></li>\n</ul>\n</li>\n<li><p>secondary index回表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> userinfo &#123;</span><br><span class=\"line\">\tuserid <span class=\"type\">int</span> <span class=\"keyword\">not</span> <span class=\"keyword\">null</span> auto_increment,</span><br><span class=\"line\">\tusername varchat(<span class=\"number\">30</span>),</span><br><span class=\"line\">\tregistdate datetime,</span><br><span class=\"line\">\temail <span class=\"type\">varchar</span>(<span class=\"number\">50</span>),</span><br><span class=\"line\">\t<span class=\"keyword\">primary</span> key(userid),</span><br><span class=\"line\">\t<span class=\"keyword\">unique</span> key idx_username(username), </span><br><span class=\"line\">\tkey idx_registdate(registdate)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ol>\n<li>假设查找username为tom，先找二级索引idx_username，通过key为tom，得到对应的primary key：userid_a</li>\n<li>得到userid_a后，再去找聚集索引中userid_a的记录(row data)&#x2F;</li>\n<li>上诉一个通过二级索引得到数据(row data)的查找过程，即为回表</li>\n<li>上述过程是mysql自动完成的</li>\n</ol>\n</blockquote>\n</li>\n<li><p>堆表的二级索引</p>\n<ul>\n<li>在堆表中，是没有聚集索引的，所有的索引都是二级索引</li>\n<li>索引的叶子节点存放的是key和指向堆中记录的指针(物理位置)</li>\n</ul>\n<img src=\"/mysql/learn-mysql-010/image-20230403153906397.png\" alt=\"image-20230403153906397\" style=\"zoom:50%;\">\n</li>\n<li><p>堆表和IOT表二级索引对比</p>\n<ul>\n<li>堆表中二级索引不需要回表，且查找速度和主键索引一致，因为两者的叶子节点存放的都是指向数据的指针，反之，IOT表的二级索引查找需要回表</li>\n<li>堆表中某条记录(row data)发生更新且无法原地更新时，该记录(row data)的物理地址将发生改变，此时，所有索引中对该记录的指针都需要更新(代价较大)，反之，IOT表中记录更新，且主键没有更新时，二级索引都无需更新</li>\n<li>IOT表内是有序的，页与页之间也是有序的，做range查询很快。</li>\n</ul>\n<blockquote>\n<p>实际数据库设计中，堆表的数据无法原地更新时，且在一个页内有剩余空间时，原来数据的空间位置不会释放，而是使用指针指向新的位置，此时该记录对应的所有索引就无需更改了</p>\n<p>如果页内没有剩余空间，所有的索引还是需要更新一遍</p>\n</blockquote>\n</li>\n<li><p>index with included colnum(含列索引)</p>\n<ul>\n<li><p>在上面给出的 userinfo 的例􏰄中，如果要查找某个 用户的email ，需要回表，如何不回表进行查询呢?</p>\n<blockquote>\n<p>1。使用复合索引，unique key idx_username(username, email)</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"multi-range-read-MRR\"><a href=\"#multi-range-read-MRR\" class=\"headerlink\" title=\"multi range read(MRR)\"></a>multi range read(MRR)</h2><ul>\n<li><p>回表的代价</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 给employees增加一列索引</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> employees <span class=\"keyword\">add</span> index idx_date (hire_date);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询语句1</span></span><br><span class=\"line\"><span class=\"comment\">-- 主键查找1w条数据</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> employees <span class=\"keyword\">where</span> emp_no <span class=\"keyword\">between</span> <span class=\"number\">10000</span> <span class=\"keyword\">and</span> <span class=\"number\">20000</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 查询语句2</span></span><br><span class=\"line\"><span class=\"comment\">-- 每次查询需要回表</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> employees <span class=\"keyword\">where</span> hire_date <span class=\"operator\">&gt;=</span> <span class=\"string\">&#x27;1990-01-01&#x27;</span> limit <span class=\"number\">10000</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>对于查询语句1，假设一页有100条数据，则需要100次IO</p>\n<p>对应查询语句2，假设聚集索引和hire_date索引的高度都是3，且查找1w条记录，则需要查询的IO数为3+N+3w</p>\n<ul>\n<li>3是第一次找到hire_date&gt;&#x3D;&#39;1990-01-01&#39;所在的页的IO次数</li>\n<li>N为第一次找到页往后读页的IO次数(注意，二级索引也是连续的，不需要从根在重新查找)</li>\n<li>所以3+N是在hire_date二级索引中读取的IO次数</li>\n<li>3w为在IOT表中进行回表的次数</li>\n</ul>\n<p>在mysql5.6之前，时间使用过程中，优化器可能会直接选择扫表，而不会进行如此多的回表操作</p>\n</blockquote>\n</li>\n<li><p>mrr介绍</p>\n<blockquote>\n<p>mrr是针对物理访问，随机转顺序，空间换时间</p>\n</blockquote>\n<ul>\n<li><p>开辟一块内存空间作为cache</p>\n<p>默认32m，注意是线程级的，不建议设置太大。show variables like &#39;%read_rnd%&#39;;</p>\n</li>\n<li><p>将需要回表的主键放入上述的内存空间中(空间换时间)，放满后进行排序(随机转顺序)</p>\n</li>\n<li><p>将排序好的数据(主键)一起进行回表操作，以提高性能</p>\n<blockquote>\n<p>在IO bound的sql场景下，使用MRR与不使用MRR性能提高10倍</p>\n<p>如果数据都在内存中，MRR的作用不大，已经在内存中了， 不存在随机读的概念了(随机读主要针对物理访问)</p>\n</blockquote>\n</li>\n</ul>\n<p>ssd仍然建议开启该特性，多线程下的随机读确实很快，但是我们这里的操作是单线程的，所以顺序访问还是比随机访问更快</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%op%swi%&#x27;</span>;</span><br><span class=\"line\"><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span>[ <span class=\"number\">1.</span> <span class=\"type\">row</span> ]<span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span></span><br><span class=\"line\">Variable_name <span class=\"operator\">|</span> optimizer_switch</span><br><span class=\"line\"><span class=\"keyword\">Value</span>         <span class=\"operator\">|</span> index_merge<span class=\"operator\">=</span><span class=\"keyword\">on</span>,index_merge_union<span class=\"operator\">=</span><span class=\"keyword\">on</span>,index_merge_sort_union<span class=\"operator\">=</span><span class=\"keyword\">on</span>,index_merge_intersection<span class=\"operator\">=</span><span class=\"keyword\">on</span>,engine_condition_pushdown<span class=\"operator\">=</span><span class=\"keyword\">on</span>,index_condition_pushdown<span class=\"operator\">=</span><span class=\"keyword\">on</span>,mrr<span class=\"operator\">=</span><span class=\"keyword\">on</span>,mrr_cost_based<span class=\"operator\">=</span><span class=\"keyword\">on</span>,block_nested_loop<span class=\"operator\">=</span><span class=\"keyword\">on</span>,batched_key_access<span class=\"operator\">=</span>off,materialization<span class=\"operator\">=</span><span class=\"keyword\">on</span>,semijoin<span class=\"operator\">=</span><span class=\"keyword\">on</span>,loosescan<span class=\"operator\">=</span><span class=\"keyword\">on</span>,firstmatch<span class=\"operator\">=</span><span class=\"keyword\">on</span>,duplicateweedout<span class=\"operator\">=</span><span class=\"keyword\">on</span>,subquery_materialization_cost_based<span class=\"operator\">=</span><span class=\"keyword\">on</span>,use_index_extensions<span class=\"operator\">=</span><span class=\"keyword\">on</span>,condition_fanout_filter<span class=\"operator\">=</span><span class=\"keyword\">on</span>,derived_merge<span class=\"operator\">=</span><span class=\"keyword\">on</span>,prefer_ordering_index<span class=\"operator\">=</span><span class=\"keyword\">on</span></span><br></pre></td></tr></table></figure>\n\n<p>其中mrr&#x3D;on默认是打开的，不建议关闭</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 创建索引</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> employees <span class=\"keyword\">add</span> index idx_hire_date(hire_date);</span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> explain <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> employees <span class=\"keyword\">where</span> hire_date <span class=\"operator\">&gt;=</span> <span class=\"string\">&#x27;1990-01-01&#x27;</span>;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----+-------------+-----------+------------+------+---------------+--------+---------+--------+--------+----------+-------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> id <span class=\"operator\">|</span> select_type <span class=\"operator\">|</span> <span class=\"keyword\">table</span>     <span class=\"operator\">|</span> partitions <span class=\"operator\">|</span> type <span class=\"operator\">|</span> possible_keys <span class=\"operator\">|</span> key    <span class=\"operator\">|</span> key_len <span class=\"operator\">|</span> <span class=\"keyword\">ref</span>    <span class=\"operator\">|</span> <span class=\"keyword\">rows</span>   <span class=\"operator\">|</span> filtered <span class=\"operator\">|</span> Extra       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----+-------------+-----------+------------+------+---------------+--------+---------+--------+--------+----------+-------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span>  <span class=\"operator\">|</span> SIMPLE      <span class=\"operator\">|</span> employees <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>     <span class=\"operator\">|</span> <span class=\"keyword\">ALL</span>  <span class=\"operator\">|</span> idx_hire_date <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span> <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>  <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span> <span class=\"operator\">|</span> <span class=\"number\">299069</span> <span class=\"operator\">|</span> <span class=\"number\">50.0</span>     <span class=\"operator\">|</span> <span class=\"keyword\">Using</span> <span class=\"keyword\">where</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----+-------------+-----------+------------+------+---------------+--------+---------+--------+--------+----------+-------------+</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>type&#x3D;all，虽然mrr是开启的，但是没有使用mrr，是因为mysql对mrr进行了成本计算mrr_cost_based&#x3D;on</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 临时关闭mrr_cost_based</span></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">set</span> optimizer_switch<span class=\"operator\">=</span><span class=\"string\">&#x27;mrr_cost_based=off&#x27;</span>;</span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> explian <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> employees <span class=\"keyword\">where</span> hire_date <span class=\"operator\">&gt;=</span> <span class=\"string\">&#x27;1990-01-01&#x27;</span>;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----+-------------+-----------+------------+-------+---------------+---------------+---------+--------+--------+----------+----------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> id <span class=\"operator\">|</span> select_type <span class=\"operator\">|</span> <span class=\"keyword\">table</span>     <span class=\"operator\">|</span> partitions <span class=\"operator\">|</span> type  <span class=\"operator\">|</span> possible_keys <span class=\"operator\">|</span> key           <span class=\"operator\">|</span> key_len <span class=\"operator\">|</span> <span class=\"keyword\">ref</span>    <span class=\"operator\">|</span> <span class=\"keyword\">rows</span>   <span class=\"operator\">|</span> filtered <span class=\"operator\">|</span> Extra                            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----+-------------+-----------+------------+-------+---------------+---------------+---------+--------+--------+----------+----------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span>  <span class=\"operator\">|</span> SIMPLE      <span class=\"operator\">|</span> employees <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>     <span class=\"operator\">|</span> <span class=\"keyword\">range</span> <span class=\"operator\">|</span> idx_hire_date <span class=\"operator\">|</span> idx_hire_date <span class=\"operator\">|</span> <span class=\"number\">3</span>       <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span> <span class=\"operator\">|</span> <span class=\"number\">149534</span> <span class=\"operator\">|</span> <span class=\"number\">100.0</span>    <span class=\"operator\">|</span> <span class=\"keyword\">Using</span> index <span class=\"keyword\">condition</span>; <span class=\"keyword\">Using</span> MRR <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----+-------------+-----------+------------+-------+---------------+---------------+---------+--------+--------+----------+----------------------------------+</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"求B-tree的高度\"><a href=\"#求B-tree的高度\" class=\"headerlink\" title=\"求B+tree的高度\"></a>求B+tree的高度</h2><ul>\n<li><p>使用innodb_space查看b+tree的高度</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people space-index-pages-summary | <span class=\"built_in\">head</span> -n 10 | sed <span class=\"string\">&#x27;s/[,#$@!%~ ][ ]*/\\t/g&#x27;</span> | sed <span class=\"string\">&#x27;s/\\t/,/g&#x27;</span> | sed <span class=\"string\">&#x27;s/.$//&#x27;</span> | csvlook</span></span><br><span class=\"line\"></span><br><span class=\"line\">| page | index | level |   data |   free | records |</span><br><span class=\"line\">| ---- | ----- | ----- | ------ | ------ | ------- |</span><br><span class=\"line\">|    3 |    85 |     2 |     52 | 16,200 |       4 |</span><br><span class=\"line\">|    4 |    86 |     2 |     60 | 16,192 |       3 |</span><br><span class=\"line\">|    5 |    85 |     0 |  7,483 |  8,705 |     139 |</span><br><span class=\"line\">|    6 |    85 |     0 | 15,066 |  1,050 |     279 |</span><br><span class=\"line\">|    7 |    85 |     0 | 15,120 |    996 |     280 |</span><br><span class=\"line\">|    8 |    85 |     0 | 15,066 |  1,050 |     279 |</span><br><span class=\"line\">|    9 |    85 |     0 | 15,066 |  1,050 |     279 |</span><br><span class=\"line\">|   10 |    86 |     0 |  8,384 |  7,644 |     524 |</span><br><span class=\"line\">|   11 |    86 |     0 | 13,168 |  2,768 |     823 |</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>其中level+1就是b+tree的高度，其中page3是聚集索引的root页，4是辅助索引的root页，可以使用innodb_space -s ibdata1 -T tbl_innodb_ruby&#x2F;t_people -p 3 page-account</p>\n</blockquote>\n</li>\n<li><p>使用mysql的information_schema和hexdump查看b+tree的高度</p>\n<ul>\n<li><p>首先查看聚集索引root页的page_no</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> t.name,i.name, i.index_id, i.type, i.space, i.page_no <span class=\"keyword\">from</span> innodb_sys_indexes <span class=\"keyword\">as</span> i, innodb_sys_tables <span class=\"keyword\">as</span> t <span class=\"keyword\">where</span> t.table_id <span class=\"operator\">=</span> i.table_id <span class=\"keyword\">and</span> i.space <span class=\"operator\">&lt;&gt;</span> <span class=\"number\">0</span> <span class=\"keyword\">and</span> t.name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;tbl_innodb_ruby%&#x27;</span>;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+-------------+----------+------+-------+---------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> name                     <span class=\"operator\">|</span> name        <span class=\"operator\">|</span> index_id <span class=\"operator\">|</span> type <span class=\"operator\">|</span> space <span class=\"operator\">|</span> page_no <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+-------------+----------+------+-------+---------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> tbl_innodb_ruby<span class=\"operator\">/</span>t_people <span class=\"operator\">|</span> <span class=\"keyword\">PRIMARY</span>     <span class=\"operator\">|</span> <span class=\"number\">85</span>       <span class=\"operator\">|</span> <span class=\"number\">3</span>    <span class=\"operator\">|</span> <span class=\"number\">53</span>    <span class=\"operator\">|</span> <span class=\"number\">3</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> tbl_innodb_ruby<span class=\"operator\">/</span>t_people <span class=\"operator\">|</span> idx_user_id <span class=\"operator\">|</span> <span class=\"number\">86</span>       <span class=\"operator\">|</span> <span class=\"number\">0</span>    <span class=\"operator\">|</span> <span class=\"number\">53</span>    <span class=\"operator\">|</span> <span class=\"number\">4</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> tbl_innodb_ruby<span class=\"operator\">/</span>t_user   <span class=\"operator\">|</span> <span class=\"keyword\">PRIMARY</span>     <span class=\"operator\">|</span> <span class=\"number\">75</span>       <span class=\"operator\">|</span> <span class=\"number\">3</span>    <span class=\"operator\">|</span> <span class=\"number\">48</span>    <span class=\"operator\">|</span> <span class=\"number\">3</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> tbl_innodb_ruby<span class=\"operator\">/</span>t_user   <span class=\"operator\">|</span> idx_user_id <span class=\"operator\">|</span> <span class=\"number\">76</span>       <span class=\"operator\">|</span> <span class=\"number\">0</span>    <span class=\"operator\">|</span> <span class=\"number\">48</span>    <span class=\"operator\">|</span> <span class=\"number\">4</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+-------------+----------+------+-------+---------+</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>可以看出t_people的聚集索引的root页的page_no为3</p>\n</blockquote>\n</li>\n<li><p>使用hexdump查看b+tree的高度</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">hexdump -s 49216 -n 2 -C tbl_innodb_ruby/t_people.ibd</span></span><br><span class=\"line\">0000c040  00 02                                             |..|</span><br><span class=\"line\">0000c042</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>其中49216的计算规则：3 * innobd_page_size + 64 &#x3D; 3 * 16 * 1024 + 64 &#x3D; 49216</p>\n<p>其中02表示的就是聚聚索引的高度为2，因为聚集索引的叶子节点level是0，所以b+tree的高度是2+1&#x3D;3</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-explain","url":"/mysql/learn-mysql-012/","content":"<ul>\n<li><p>explain是解释SQL语句的执行计划，即显示该SQL语句怎么执行的 ◦ 使用 explain 的时候，也可以使用 desc</p>\n</li>\n<li><p>5.6 版本支持DML语句进行explain解释 </p>\n</li>\n<li><p>5.6版本开始支持JSON格式的输出</p>\n</li>\n</ul>\n<p>注意:EXPLAIN查看的是执行计划，做SQL解析，不会去真的执行;且到5.7以后子查询也不会去执行。</p>\n<ul>\n<li><p>参数extended</p>\n</li>\n<li><p>参数FORMAT</p>\n<blockquote>\n<p>使用 FORMART&#x3D;JSON 不仅仅是为了格式化􏰄出效果，还有其他有用的显示信息。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> explain format<span class=\"operator\">=</span>json <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> test_index_2 <span class=\"keyword\">where</span> b <span class=\"operator\">&gt;</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> b <span class=\"operator\">&lt;</span> <span class=\"number\">3</span>\\G <span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span> <span class=\"number\">1.</span> <span class=\"type\">row</span> <span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span></span><br><span class=\"line\">EXPLAIN: &#123;</span><br><span class=\"line\">    &quot;query_block&quot;: &#123;</span><br><span class=\"line\">        &quot;select_id&quot;: <span class=\"number\">1</span>,</span><br><span class=\"line\">        &quot;cost_info&quot;: &#123;</span><br><span class=\"line\">            &quot;query_cost&quot;: &quot;2.20&quot; <span class=\"comment\">-- 总成本</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &quot;table&quot;: &#123;</span><br><span class=\"line\">            &quot;table_name&quot;: &quot;test_index_2&quot;,</span><br><span class=\"line\">            &quot;access_type&quot;: &quot;ALL&quot;,</span><br><span class=\"line\">            &quot;rows_examined_per_scan&quot;: <span class=\"number\">6</span>,</span><br><span class=\"line\">            &quot;rows_produced_per_join&quot;: <span class=\"number\">1</span>,</span><br><span class=\"line\">            &quot;filtered&quot;: &quot;16.67&quot;,</span><br><span class=\"line\">            &quot;cost_info&quot;: &#123;</span><br><span class=\"line\">                &quot;read_cost&quot;: &quot;2.00&quot;,</span><br><span class=\"line\">                &quot;eval_cost&quot;: &quot;0.20&quot;,</span><br><span class=\"line\">                &quot;prefix_cost&quot;: &quot;2.20&quot;,</span><br><span class=\"line\">                &quot;data_read_per_join&quot;: &quot;16&quot;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &quot;used_columns&quot;: [</span><br><span class=\"line\">                &quot;a&quot;, &quot;b&quot;, &quot;c&quot;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            &quot;attached_condition&quot;: &quot;((`burn_test`.`test_index_2`.`b` &gt; 1) and (`burn_test`.`test_index_2`.`b` &lt; 3))&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span>, <span class=\"number\">1</span> warning (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol>\n<li><p>explain输出介绍</p>\n<table>\n<thead>\n<tr>\n<th>列</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>id</td>\n<td>执行计划的id标志</td>\n</tr>\n<tr>\n<td>select_type</td>\n<td>select的类型</td>\n</tr>\n<tr>\n<td>table</td>\n<td>输出记录的表</td>\n</tr>\n<tr>\n<td>partitions</td>\n<td>符合的分区，[PARTITIONS]</td>\n</tr>\n<tr>\n<td>type</td>\n<td>join的类型</td>\n</tr>\n<tr>\n<td>possible_keys</td>\n<td>优化器可能使用到的索引</td>\n</tr>\n<tr>\n<td>key</td>\n<td>优化器实际选择的索引</td>\n</tr>\n<tr>\n<td>key_len</td>\n<td>使用索引的字节长度</td>\n</tr>\n<tr>\n<td>ref</td>\n<td>进行比较的索引列</td>\n</tr>\n<tr>\n<td>rows</td>\n<td>优化器预估的记录数量</td>\n</tr>\n<tr>\n<td>filtered</td>\n<td>􏰂据条件过滤得到的记录的百分比[EXTENDED]</td>\n</tr>\n<tr>\n<td>extra</td>\n<td>额外的显示选项</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>id</p>\n<p>从上往下理解，不一定id序号大的先执行</p>\n</li>\n<li><p>select_type</p>\n<table>\n<thead>\n<tr>\n<th>select_type</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SIMPLE</td>\n<td>简单SELECT(不使用UNION或􏰁查询等)</td>\n</tr>\n<tr>\n<td>PRIMARY</td>\n<td>最外层的select</td>\n</tr>\n<tr>\n<td>UNION</td>\n<td>UNION中的第二个或后面的SELECT语句</td>\n</tr>\n<tr>\n<td>DEPENDENT UNION</td>\n<td>UNION中的第二个或后面的SELECT语句，依赖于外面的查询</td>\n</tr>\n<tr>\n<td>UNION RESULT</td>\n<td>UNION的结果</td>\n</tr>\n<tr>\n<td>SUBQUERY</td>\n<td>􏰁查询中的第一个SELECT</td>\n</tr>\n<tr>\n<td>DEPENDENT SUBQUERY</td>\n<td>􏰁查询中的第一个SELECT，依赖于外面的查询</td>\n</tr>\n<tr>\n<td>DERIVED</td>\n<td>派􏰅表的SELECT(FROM􏰁句的􏰁查询)</td>\n</tr>\n<tr>\n<td>MATERIALIZED</td>\n<td>物化􏰁查询</td>\n</tr>\n<tr>\n<td>UNCACHEABLE SUBQUERY</td>\n<td>不会被缓存的并且对于外部查询的每行都要重新计算的􏰁查询</td>\n</tr>\n<tr>\n<td>UNCACHEABLE UNION</td>\n<td>属于不能被缓存的 UNION中的第二个或后面的SELECT语句</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>MATERIALIZED  </p>\n<ul>\n<li><p>产生中间临时表(实体)  </p>\n</li>\n<li><p>临时表自动创建索引并和其他表进行关联，提高性能  </p>\n</li>\n<li><p>和子查询的区别是，优化器将可以进行 MATERIALIZED 的语句自动改写成 join，并自动创建索引</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>table</p>\n<ul>\n<li><p>通常是用户操作的用户表  </p>\n</li>\n<li><p>&lt;unionM, N&gt; UNION得到的结果表  </p>\n</li>\n<li><p>排生表，由id&#x3D;N的语句产生</p>\n</li>\n<li><p>由子查询物化产生的表，由id&#x3D;N的语句产生</p>\n</li>\n</ul>\n</li>\n<li><p>type</p>\n<p>按照图上箭头的顺序来看，成本(cost)是从小到大</p>\n<p><img src=\"/mysql/learn-mysql-012/mysql_explain_type.png\" loading=\"lazy\"></p>\n</li>\n<li><p>extra</p>\n<table>\n<thead>\n<tr>\n<th>extra常见值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Using filesort</td>\n<td>需要使用额外的排序得到结果</td>\n</tr>\n<tr>\n<td>Using index</td>\n<td>优化器只需要使用索引就能得到结果</td>\n</tr>\n<tr>\n<td>Using index condition</td>\n<td>优化器使用Index Condition Pushdown优化</td>\n</tr>\n<tr>\n<td>Using index for group by</td>\n<td>优化器只需要使用索引就能处理group by或distinct语句</td>\n</tr>\n<tr>\n<td>Using join buffer</td>\n<td>优化器需要使用join buffer，join_buffer_size</td>\n</tr>\n<tr>\n<td>Using MRR</td>\n<td>优化器使用MRR优化</td>\n</tr>\n<tr>\n<td>Using temporay</td>\n<td>优化器需要使用临时表</td>\n</tr>\n<tr>\n<td>Using where</td>\n<td>优化器使用where过滤</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p>Using filesort：可以使用复合索引将filesort进行优化，提高性能</p>\n</li>\n<li><p>Using index：比如使用覆盖索引</p>\n</li>\n<li><p>Using where：使用where过滤条件</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-磁盘和磁盘测试","url":"/mysql/learn-mysql-013/","content":"<h2 id=\"iostat\"><a href=\"#iostat\" class=\"headerlink\" title=\"iostat\"></a>iostat</h2><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># 安装 iostat</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">shell&gt; yum install sysstat</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">debian 系: apt-get install sysstat</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">iostat -xm 3 <span class=\"comment\"># x表示显示扩展统计信息，m表示以兆为单位显示，3表示每隔3秒显示</span></span> </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">输出如下:</span></span><br><span class=\"line\">avg-cpu: %user %nice %system %iowait %steal %idle</span><br><span class=\"line\">0.58</span><br><span class=\"line\">0.00 0.33 0.00 0.00 99.08</span><br><span class=\"line\">rrqm/s wrqm/s r/s w/s rMB/s wMB/s avgrq-sz avgqu-sz await r_await w_await svctm %util</span><br><span class=\"line\">0.00 0.00 0.00 0.67 0.00 0.00 8.00 0.00 2.00 0.00 2.00 1.00 0.07 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>CPU属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>%user</td>\n<td>cpu处在用户模式下的时间百分比</td>\n</tr>\n<tr>\n<td>%nice</td>\n<td>cpu处在待nice值的用户模式下的时间百分比</td>\n</tr>\n<tr>\n<td>%sys</td>\n<td>cpu处在系统模式下的时间百分比</td>\n</tr>\n<tr>\n<td>%iowait</td>\n<td>cpu等待IO完成时间的百分比</td>\n</tr>\n<tr>\n<td>%steal</td>\n<td>管理程序维护另一个虚拟处理器时，虚拟cpu的无意等待时间的百分比</td>\n</tr>\n<tr>\n<td>%idle</td>\n<td>闲置cpu的百分比</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>提示：</p>\n<p>如果%iowait的值过高，表示磁盘存在IO瓶颈</p>\n<p>如果%idle值高，表示cpu较空闲，如果%idle值高但系统响应慢时，有可能是cpu等待分配内存，此时应加大内存容量</p>\n<p>如果%idle值持续较低，那么系统的cpu处理能力相对较低，表明系统中最需要解决的资源是cpu</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>Device属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>rrqm&#x2F;s</td>\n<td>每秒进行merge的读操作数目</td>\n</tr>\n<tr>\n<td>wrqm&#x2F;s</td>\n<td>每秒进行merge的写操作数目</td>\n</tr>\n<tr>\n<td>r&#x2F;s</td>\n<td>每秒完成的读IO设备次数</td>\n</tr>\n<tr>\n<td>w&#x2F;s</td>\n<td>每秒完成的写IO设备次数</td>\n</tr>\n<tr>\n<td>rsec&#x2F;s</td>\n<td>每秒读扇区数</td>\n</tr>\n<tr>\n<td>wsec&#x2F;s</td>\n<td>每秒写扇区数</td>\n</tr>\n<tr>\n<td>rkB&#x2F;s</td>\n<td>每秒读K字节数</td>\n</tr>\n<tr>\n<td>wkB&#x2F;s</td>\n<td>每秒写K字节数</td>\n</tr>\n<tr>\n<td>avgrp-sz</td>\n<td>平均每次设备IO操作的数据大小(扇区)</td>\n</tr>\n<tr>\n<td>avgqu-sz</td>\n<td>平均IO队列长度</td>\n</tr>\n<tr>\n<td>await</td>\n<td>平均每次设备IO操作的等待时间(毫秒)</td>\n</tr>\n<tr>\n<td>svctm</td>\n<td>平均每次设备IO操作的服务时间(毫秒)</td>\n</tr>\n<tr>\n<td>%util</td>\n<td>一秒中有百分之多少的时间用于IO操作，即被IO消耗的cpu百分比</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>提示：</p>\n<p>如果%util接近100%，说明产生的IO请求太多，IO系统已经满负荷，该磁盘可能存在瓶颈如果svctm比较接近await，说明IO几乎没有等待时间如果await远大于svctm，说明IO队列太长，iO响应太慢，则需要进行必要优化如果avgqu-sz比较大，也表示有大量IO中等待</p>\n</blockquote>\n<ul>\n<li><p>rrqm&#x2F;s 和 wrqm&#x2F;s<br>Merge 将若干个连续地址的IO请求进行合并。来提高IO的效率<br>◦ rrqm&#x2F;s 是每秒读(read)请求合并的次数<br>◦ wrqm&#x2F;s 是每秒写(write)请求合并的次数</p>\n</li>\n<li><p>r&#x2F;s和w&#x2F;s</p>\n</li>\n</ul>\n<p>在合并之后(after merge) IO请求的次数 r&#x2F;s 合并之后每秒读IO的次数<br>w&#x2F;s 合并之后每秒写IO的次数<br>r&#x2F;s + w&#x2F;s &#x3D; IOPS</p>\n<ul>\n<li>rsec&#x2F;s(rKB&#x2F;s、rMB&#x2F;s)和 wsec&#x2F;s(wKB&#x2F;s、wMB&#x2F;s)</li>\n</ul>\n<p>◦ sec 是 Sector(扇区) ，为 512Byte<br>◦ KB 和 MB 是通过扇区的 512Byte 进行的换算</p>\n<ul>\n<li>avgrq-sz</li>\n</ul>\n<p>◦ 一块磁盘可能存储数据的同时还存储日志，所以请求的IO大小是不一样的<br>◦ 该参数就是平均的请求数，注意，该值需要 * 512Byte 才是最终的结果，因为该值是以扇区为单位的</p>\n<ul>\n<li>avgqu-sz</li>\n</ul>\n<p>◦ 请求的IO队列的平均长度(比较重要)<br>◦ HDD可能在4左右，SSD可以达到30左右</p>\n<ul>\n<li>await、r_await、w_await</li>\n</ul>\n<p>◦ IO请求平均等待的时间，单位是ms<br>◦ r_await 和 w_await 分别对应 读IO请求的等待 和 写IO请求的等待</p>\n<ul>\n<li><p>svctm<br>◦ 服务于IO请求的平均时间<br>◦ man文档中提示不要相信该值，以后会被移除</p>\n</li>\n<li><p>%util<br>◦ 磁盘是否空闲;不能简单的等同于IO的使用率;该值可以解释为磁盘是否繁忙 ◦ 如果该值100% 不能简单的等同于磁盘的负载满了，达到了瓶颈<br>◦ 需要综合 avgqu-sz 、 await 等其他指标进行综合判断磁盘是否达到瓶颈</p>\n</li>\n</ul>\n<h2 id=\"磁盘\"><a href=\"#磁盘\" class=\"headerlink\" title=\"磁盘\"></a>磁盘</h2><ol>\n<li><p>磁盘的访问模式</p>\n<ul>\n<li><p>顺序访问</p>\n<ul>\n<li><p>顺序的访问磁盘上的块;</p>\n</li>\n<li><p>一般经过测试后，得到该值的单位是 MB&#x2F;s ，表示为磁盘 带宽 ，普通硬盘在 50~ 100 MB&#x2F;s</p>\n</li>\n</ul>\n</li>\n<li><p>随机访问</p>\n<ul>\n<li><p>随机的访问磁盘上的块  </p>\n</li>\n<li><p>也可以用MB&#x2F;s进行表示，但是通常使用 IOPS (每秒处理IO的能力)，普通硬盘在 100-200 IOPS</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/mysql/learn-mysql-013/disk_access_mode.png\" loading=\"lazy\"></p>\n<blockquote>\n<p>拷贝文件属于顺序访问，数据库中访问数据属于随机访问</p>\n<p>数据库对数据的访问做了优化，把随机访问转成顺序访问</p>\n</blockquote>\n</li>\n<li><p>磁盘的分类</p>\n<ul>\n<li><p>HDD</p>\n<ul>\n<li><p>盘片通过旋转，磁头进行定位，读取数据;</p>\n</li>\n<li><p>顺序性较好，随机性较差;</p>\n</li>\n<li><p>常见转速</p>\n<ol>\n<li><p>笔记本硬盘:5400转&#x2F;分钟;  </p>\n</li>\n<li><p>桌面硬盘:7200转&#x2F;分钟;  </p>\n</li>\n<li><p>服务器硬盘:10000转&#x2F;分钟、15000转&#x2F;分钟; </p>\n</li>\n<li><p>SATA:120 ~ 150 IOPS  </p>\n</li>\n<li><p>SAS :150 ~ 200 IOPS</p>\n</li>\n</ol>\n</li>\n</ul>\n<blockquote>\n<p>从理论上讲，15000转&#x2F;分钟，最高是 15000&#x2F;60 约等于250IOPS </p>\n<p>由于机械盘片需要旋转，转速太高无法很好的散热</p>\n<p>如果一个HDD对4K的块做随机访问是0.8MB&#x2F;s，可通过 0.8 *(1 &#x2F; 4)&#x3D; 200 或者 (0.8 * 1000) &#x2F; 4&#x3D;200 得到 IOPS ，但是这个值存在部分干扰因素，如cache等</p>\n</blockquote>\n</li>\n<li><p>SSD</p>\n<ul>\n<li><p>纯电设备</p>\n</li>\n<li><p>由FLash Memory组成</p>\n</li>\n<li><p>没有读写磁头</p>\n</li>\n<li><p>MLC闪存颗粒对一般企业的业务够用。目前SLC闪存颗粒价格较贵</p>\n</li>\n<li><p>IOPS高</p>\n<ol>\n<li><p>50000+ IOPS  </p>\n</li>\n<li><p>读写速度非对称 以 INTEL SSD DC-S3500为例􏰁:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">◾ Random 4KB3 Reads: Up to 75,000 IOPS </span><br><span class=\"line\">◾ Random 4KB Writes: Up to 11,500 IOPS </span><br><span class=\"line\">◾ Random 8KB3 Reads: Up to 47,500 IOPS </span><br><span class=\"line\">◾ Random 8KB Writes: Up to 5,500 IOPS</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>当写入数据时，要先擦除老数据，再写入新数据  </p>\n</li>\n<li><p>擦除数据需要擦除整个区域(128K or 256K)一起擦除(自动把部分有用的数据挪到别的区域)</p>\n</li>\n</ul>\n<blockquote>\n<p>对比发现4K性能要优于8K的性能，几乎是2倍的差距，当然16K就更明显，所以当使用SSD时，建议数据库页大小设置成4K或者是8K， innodb_page_size&#x3D;8K )<br>上线以前，SSD需要经过严格的压力测试(一周时间)，确保性能平稳</p>\n</blockquote>\n</li>\n<li><p>Endurance Rating  </p>\n<ul>\n<li><p>表示该SSD的寿命是多少</p>\n</li>\n<li><p>比如450TBW，表示这个SSD可以反复写入的数据总量是450T(包括添加和更新)</p>\n</li>\n</ul>\n</li>\n<li><p>SSD线上参数设置</p>\n<ul>\n<li><p>磁盘调度算法改为Deadline  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">echo deadline &gt; /sys/block/sda/queue/scheduler # deadline适用于数据库，HDD也建议改成Deadline</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>MySQL参数  </p>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">innodb_log_file_size</span>=<span class=\"string\">4G 该参数设置的尽可能大</span></span><br><span class=\"line\"><span class=\"attr\">innodb_flush_neighbors</span>=<span class=\"string\">0</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<blockquote>\n<p>性能更平稳，且至少有15%的性能提升</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>提升IOPS性能的手段</p>\n<ul>\n<li><p>通过 RAID 技术</p>\n<ul>\n<li><p>功耗较高  </p>\n</li>\n<li><p>IOPS在2000左右</p>\n</li>\n</ul>\n</li>\n<li><p>通过购买共享存储设备</p>\n<ul>\n<li><p>价格非常昂贵  </p>\n</li>\n<li><p>但是比较稳定  </p>\n</li>\n<li><p>底层还是通过RAID实现</p>\n</li>\n</ul>\n</li>\n<li><p>直接使用SSD  </p>\n<ul>\n<li><p>性能较好的SSD可以达到 万级别的IOPS</p>\n</li>\n<li><p>建议可以用SSD + RAID5，RAID1+0太奢侈</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>RAID类别</p>\n<p><img src=\"/mysql/learn-mysql-013/raid_0.png\" loading=\"lazy\"></p>\n<p><img src=\"/mysql/learn-mysql-013/raid_1.png\" loading=\"lazy\"></p>\n<p><img src=\"/mysql/learn-mysql-013/raid_5.png\" loading=\"lazy\"></p>\n<p><img src=\"/mysql/learn-mysql-013/raid_6.png\" loading=\"lazy\"></p>\n<p><img src=\"/mysql/learn-mysql-013/raid_1_0.png\" loading=\"lazy\"></p>\n<p><img src=\"/mysql/learn-mysql-013/raid_5_0.png\" loading=\"lazy\"></p>\n</li>\n</ol>\n<h2 id=\"mysql的IO使用情况\"><a href=\"#mysql的IO使用情况\" class=\"headerlink\" title=\"mysql的IO使用情况\"></a>mysql的IO使用情况</h2><p>通过threads表中的信息，结合iotop -u mysql的输出，就可以知道某个线程的io使用情况</p>\n<ol>\n<li><p>存储结构对应关系</p>\n<p><img src=\"/mysql/learn-mysql-013/database_filesystem_disk.png\" loading=\"lazy\"></p>\n</li>\n<li><p>O_DIRECT</p>\n<ul>\n<li><p>fwrite &#x2F; fsync</p>\n<ul>\n<li><p>fwrite 是把数据写入文件系统层(Filesystem)(可能有cache)，并不能保证写入Disk</p>\n</li>\n<li><p>fsync 可以保证把数据写入到Disk(数据落盘)</p>\n</li>\n</ul>\n<blockquote>\n<p>只通过 fwrite 写入数据特别快(因为有缓存)，但随后调用 fsync 就会很慢，这个速度取决于磁盘的 IOPS<br>如果不手工执行 fysnc ，当Filesystem的 cache 小于 10% 时，操作系统才会将数据刷入磁盘。所以可能存在数据丢失的风险，比如掉电</p>\n</blockquote>\n</li>\n<li><p>O_DIRECT</p>\n<p><img src=\"/mysql/learn-mysql-013/mysql_o_direct.png\" loading=\"lazy\"></p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"sysbench\"><a href=\"#sysbench\" class=\"headerlink\" title=\"sysbench\"></a>sysbench</h2><ol>\n<li><p>安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">brew install sysbench</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>测试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">sysbench --file-num=4 --file-total-size=10G --file-block-size=8192 --file-test-mode=rndrw --time=600 --threads=16  --report-interval=10 fileio prepare</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>测试完成后执行 cleanup<br>如果是真实的测试 max-time 设置成一周的时间</p>\n</blockquote>\n</li>\n<li><p>测试mysql</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">sysbench /opt/homebrew/Cellar/sysbench/1.0.20_1/share/sysbench/oltp_insert.lua --mysql-host=127.0.0.1 --mysql-port=3306 --mysql-user=root  --mysql-password=<span class=\"string\">&#x27;admin123&#x27;</span> --mysql-db=sbtest --db-driver=mysql  --tables=1 --table-size=10000000 --report-interval=10 --threads=16 --time=120 cleanup</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-innodb表空间","url":"/mysql/learn-mysql-014/","content":"<h2 id=\"Innodb介绍\"><a href=\"#Innodb介绍\" class=\"headerlink\" title=\"Innodb介绍\"></a>Innodb介绍</h2><ol>\n<li><p>innodb的历史</p>\n<table>\n<thead>\n<tr>\n<th>年份</th>\n<th>事件</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1995</td>\n<td>由Heikki Tuuri 创建Innobase Oy公司，并开发InnoDB存储引擎</td>\n<td>Innobase开始做的是数据库，希望卖掉该公司</td>\n</tr>\n<tr>\n<td>1996</td>\n<td>mysql1.0发布</td>\n<td></td>\n</tr>\n<tr>\n<td>2000</td>\n<td>mysql3.23版本发布</td>\n<td></td>\n</tr>\n<tr>\n<td>2001</td>\n<td>innodb存储引擎集成到mysql数据库</td>\n<td>作为插件的方式集成</td>\n</tr>\n<tr>\n<td>2006</td>\n<td>Innobase被Oracle公司收购(InnoDB作为开源产品，性能和功能很强大)</td>\n<td>InnoDB在被收购后的，MySQL中的InnoDB版本没有改变</td>\n</tr>\n<tr>\n<td>2010</td>\n<td>MySQL5.5版本InnoDB存储引擎称为默认存储引擎</td>\n<td>MySQL被Sun收购，Sun被Oracle收购，使得MySQL和InnoDB重新在一起配合开发</td>\n</tr>\n<tr>\n<td>至今</td>\n<td>其他存储引擎已经不再得到Oracle官方的后续开发</td>\n<td></td>\n</tr>\n</tbody></table>\n</li>\n<li><p>innodb的特点</p>\n<ul>\n<li><p>fully ACID(innodb默认的repeat read隔离级别就支持)</p>\n</li>\n<li><p>row-level locking(支持行锁)</p>\n</li>\n<li><p>multi-version concurrency control(MVCC)(支持多版本并发控制)</p>\n</li>\n<li><p>foregin key support(支持外健)</p>\n</li>\n<li><p>automatic deadlock detection(死锁自动检测)</p>\n</li>\n<li><p>high performance，high scalability， high availability(高性能，高扩展，高可用)</p>\n</li>\n</ul>\n</li>\n<li><p>innodb存储引擎文件</p>\n<ul>\n<li><p>概述</p>\n<p>innodb的文件主要分为两个部分，一个是表空间文件，一个是重做日志文件</p>\n<ul>\n<li><p>表空间文件</p>\n<ol>\n<li><p>独立表空间文件</p>\n</li>\n<li><p>全局表空间文件</p>\n</li>\n<li><p>undo表空间文件(from mysql5.6)</p>\n</li>\n</ol>\n</li>\n<li><p>重做日志文件</p>\n<ol>\n<li><p>物理逻辑日志</p>\n</li>\n<li><p>没有oracle的归档重做日志</p>\n</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>innodb表空间</p>\n<ul>\n<li><p>表空间的概念</p>\n<ol>\n<li><p>表空间是一个逻辑存储的概念</p>\n</li>\n<li><p>表空间可以有多个文件组成</p>\n</li>\n<li><p>支持裸设备(可以直接使用O_DIRECT方式绕过缓存，直接写入磁盘)</p>\n</li>\n</ol>\n</li>\n<li><p>表空间的分类</p>\n<ol>\n<li><p>系统表空间</p>\n<blockquote>\n<p>存储元数据信息</p>\n<p>存储change buffer信息</p>\n<p>存储undo信息</p>\n<p>甚至一开始所有的表和索引的信息都是存储在系统表空间中，随后innodb对其做了改进，可以使用独立的表空间</p>\n</blockquote>\n</li>\n<li><p>独立表空间</p>\n<blockquote>\n<p>innodb-file-per-table&#x3D;1(开启支持每个独立的表空间)</p>\n<p>每张用户对应一个独立的ibd文件</p>\n<p>分区表可以对应多个ibd文件</p>\n</blockquote>\n</li>\n<li><p>undo表空间</p>\n<blockquote>\n<p>mysql5.6版本支持独立的undo表空间</p>\n<p>innodb_undo_tablespaces</p>\n</blockquote>\n</li>\n<li><p>临时表空间</p>\n<blockquote>\n<p>mysql5.7增加了临时表空间(ibtmp1)</p>\n<p>innodb_temp_data_file_path</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">MySQL的datadir目录</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">j mysql</span></span><br><span class=\"line\">/opt/homebrew/var/mysql</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ibdata1是系统表空间，默认所有信息存在这里</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ibtmp1是临时表空间</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">ll ib*</span></span><br><span class=\"line\">-rw-r-----  1 yangyitong  wheel   1.2K  4  4 02:01 ib_buffer_pool</span><br><span class=\"line\">-rw-r-----  1 yangyitong  wheel    12M  4  6 23:29 ibdata1</span><br><span class=\"line\">-rw-r-----  1 yangyitong  wheel    12M  4  6 23:29 ibtmp1</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> db_test</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">表abc的表结构定义文件，可以使用mysqlfrm --diagnostic查看表结构</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">idb就是abc表的innodb文件，ibd文件包含了索引和数据</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">ll abc*</span></span><br><span class=\"line\">-rw-r-----  1 yangyitong  wheel   8.4K  4  4 01:45 abc.frm</span><br><span class=\"line\">-rw-r-----  1 yangyitong  wheel    48K  4  4 01:45 abc.ibd</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>同一个表空间(ibdata1)存储和独立表空间存储就性能上而言没有区别</p>\n<p>当需要删除表(drop table)时，独立的表空间存储可以直接删除，而ibdata1存储也只能将该部分表空间标记为可用，所以从速度上看很难说那个更快，但是删除文件后，ibdata1占用的空间不会被释放</p>\n<p>分区表会产生独立的ibd文件</p>\n<p>独立的表空间，一个表对应一个ibd文件</p>\n</blockquote>\n</li>\n<li><p>单个ibd文件直接拷贝到新的数据库中无法直接恢复</p>\n<ol>\n<li><p>原因一：元数据信息还是在ibdata1中</p>\n</li>\n<li><p>原因二：部分索引文件存在于channge buffer中，目前还是存放于ibdata1文件中</p>\n</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"general表空间\"><a href=\"#general表空间\" class=\"headerlink\" title=\"general表空间\"></a>general表空间</h2><ol>\n<li><p>假如，新建一张表，并让该表的存储路径 不是默认的&#x2F;path&#x2F;to&#x2F;datadir&#x2F;dbname 。而是 指定存储的位置 应该如何处理?</p>\n<ul>\n<li><p>方法一：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">mkdir</span> /GeneralTest</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">chown</span> mysql.mysql /GeneralTest</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">create table test_ger1 (a int) data directory=<span class=\"string\">&#x27;/GeneralTest&#x27;</span>;</span> </span><br><span class=\"line\">Query OK, 0 rows affected (0.15 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> /GeneralTest shell&gt; tree</span></span><br><span class=\"line\">.</span><br><span class=\"line\">└── burn_test # dbname</span><br><span class=\"line\">└── test_ger1.ibd # 表空间文件</span><br><span class=\"line\">1 directory, 1 file</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">datadir的burn_test目录下</span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">ll test_ger1*</span></span><br><span class=\"line\">-rw-r-----. 1 mysql mysql 8554 Jan 3 16:41 test_ger1.frm</span><br><span class=\"line\">-rw-r-----. 1 mysql mysql 36 Jan 3 16:41 test_ger1.isl # 这是链接文件，链接到上面的ibd文件</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cat</span> test_ger1.isl <span class=\"comment\"># 一个文本文件，内容就是idb文件的路径</span></span> </span><br><span class=\"line\">/GeneralTest/burn_test/test_ger1.ibd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法二：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">-- 使用`通用表空间`</span><br><span class=\"line\">-- 1: 创建一个通用表空间</span><br><span class=\"line\">-- </span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">create tablespace ger_space add datafile <span class=\"string\">&#x27;/GeneralTest/ger_space.ibd&#x27;</span> file_block_size=8192;</span> </span><br><span class=\"line\">Query OK, 0 rows affected (0.07 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">-- datafile 指定存储路径后，在datadir下会产生一个isl文件，该文件的内容为General space的ibd文件的路径 </span><br><span class=\"line\">-- 如果datafile不指定路径，则ibd文件默认存储在datadir目录下，且不需要isl文件了</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">create tablespace ger2_space add datafile <span class=\"string\">&#x27;ger2_space.ibd&#x27;</span> file_block_size=8192;</span> </span><br><span class=\"line\">Query OK, 0 rows affected (0.06 sec)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">shell&gt; ll ger*</span><br><span class=\"line\">-rw-r-----. 1 mysql mysql 32768 Jan 3 16:51 ger2_space.ibd # 未指定路径，存放于datadir目录 </span><br><span class=\"line\">-rw-r-----. 1 mysql mysql 26 Jan 3 16:50 ger_space.isl # 指定了其他路径，存在isl链接文件 </span><br><span class=\"line\">shell&gt; cat ger_space.isl</span><br><span class=\"line\">/GeneralTest/ger_space.ibd # ibd文件真实存在的路径</span><br><span class=\"line\"></span><br><span class=\"line\">-- 2: 创建表</span><br><span class=\"line\">mysql&gt; create table test_ger2 (a int) tablespace=ger_space; </span><br><span class=\"line\">Query OK, 0 rows affected (0.11 sec)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"undo表空间文件\"><a href=\"#undo表空间文件\" class=\"headerlink\" title=\"undo表空间文件\"></a>undo表空间文件</h2><ol>\n<li><p>innodb_undo_tablespaces &#x3D; 3</p>\n<p>创建三个undo表空间</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">ll undo*</span></span><br><span class=\"line\">-rw-r-----. 1 mysql mysql 7340032 Jan 3 17:21 undo001 </span><br><span class=\"line\">-rw-r-----. 1 mysql mysql 7340032 Jan 3 17:40 undo002 </span><br><span class=\"line\">-rw-r-----. 1 mysql mysql 7340032 Jan 3 17:21 undo003</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"重做日志文件\"><a href=\"#重做日志文件\" class=\"headerlink\" title=\"重做日志文件\"></a>重做日志文件</h2><ol>\n<li><p>innodb_log_file_size</p>\n<p>该文件设置的尽可能大</p>\n<p>设置太小可能会导致脏页刷新时hang住</p>\n</li>\n</ol>\n<h2 id=\"表空间大内部组织结构\"><a href=\"#表空间大内部组织结构\" class=\"headerlink\" title=\"表空间大内部组织结构\"></a>表空间大内部组织结构</h2><table>\n<thead>\n<tr>\n<th>表空间</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>内部有多个段对象(segment)组成</td>\n</tr>\n<tr>\n<td>每个段(segment)由区(extent)组成</td>\n</tr>\n<tr>\n<td>每个区(extent)由页(page)组成</td>\n</tr>\n<tr>\n<td>每个页面里存数据(或者叫做记录row)</td>\n</tr>\n</tbody></table>\n<p><img src=\"/mysql/learn-mysql-014/mysql_tablespace.png\" loading=\"lazy\"></p>\n<ul>\n<li><p>段对用户来说是透明的</p>\n</li>\n<li><p>段也是一个逻辑概念</p>\n</li>\n<li><p>目前为止在information_schema中无法找到段段概念</p>\n</li>\n<li><p>重点需要理解区(extent)和页(page)的概念</p>\n</li>\n</ul>\n<ol>\n<li><p>表空间-区</p>\n<ul>\n<li><p>区是最小的空间申请单位</p>\n</li>\n<li><p>区的大小固定为1M</p>\n<ul>\n<li>page_size&#x3D;16k，也就是1M * 1024 &#x2F; 16 &#x3D; 64页</li>\n</ul>\n</li>\n<li><p>通常来说，一次申请4个区的大小(存在一次申请5个区的时候，但是绝大部分情况就是申请4个区)</p>\n</li>\n<li><p>单个区的1M空间内，物理上是连续的(一次申请的4个区的空间之间(1M和1M之间)不保证连续)</p>\n</li>\n</ul>\n</li>\n<li><p>表空间-页</p>\n<ul>\n<li><p>页的定义</p>\n<ul>\n<li><p>页是最小的IO操作单位</p>\n<ol>\n<li>data的最小单位不是页，而是页中的记录(row)</li>\n</ol>\n</li>\n<li><p>普通用户表中mysql默认的每个页为16k</p>\n<ol>\n<li><p>从mysql5.6开始使用innodb_page_size可以控制页的大小</p>\n</li>\n<li><p>一旦数据库通过innodb_page_size创建完成，则后续无法进行修改</p>\n</li>\n<li><p>innodb_page_size是针对普通表的，压缩表不受其限制</p>\n</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>如何定位到页</p>\n<ul>\n<li><p>每个表空间都对应一个spaceID，而表空间又对应一个ibd文件，那么一个idb文件也就对应一个spaceID</p>\n<ol>\n<li><p>因为表空间 &lt;--&gt;ibd文件，表空间&lt;--&gt;spaceID，所以idb文件&lt;--&gt;spaveID</p>\n</li>\n<li><p>ibdata1对应的spaceID为0</p>\n</li>\n<li><p>每创建一个表空间(ibd文件)，spaceID自增长(全局)</p>\n</li>\n</ol>\n</li>\n<li><p>pageNumber</p>\n<ol>\n<li><p>在一个表空间中，第几个16k的页(假设innodb_page_size&#x3D;16k)即为pageNumber</p>\n<p><img src=\"/mysql/learn-mysql-014/mysql_tablespace_pagenumber.png\" loading=\"lazy\"></p>\n<ul>\n<li><p>每次读取page时，都是通过spaceID和pageNumber进行读取</p>\n</li>\n<li><p>可以简单理解为从表空间的开头读多少个pagenumber*pagesize的字节(偏移量)</p>\n</li>\n<li><p>想象成数组，数组的名字就是 SpaceID， 数组的下标就是PageNumber</p>\n</li>\n</ul>\n<blockquote>\n<ol>\n<li><p>可以通过spaceID和pageNumber定位到某一页</p>\n</li>\n<li><p>在一个spaceID(ibd文件)中，pagenumber时唯一且自增的</p>\n</li>\n<li><p>这里的区(extent)的概念已经弱化。在这个例􏰃中，第一个区的PageNumber是(0<del>63)且这64个页在物理上是连续的;第二个区的PageNumber是(64</del>127)且这64个页在物理上也是连续的;但是(0<del>63)和(64</del>127)之间在物理上则不一定是连续的，因为区和区之间在物理上不一定是连续的。</p>\n</li>\n<li><p>删除表的时候，spaceID不会回收，spaceID是全局自增长的</p>\n</li>\n</ol>\n</blockquote>\n<p>独立表空间的table_id 和 SpaceID 一一对应</p>\n<p>共享表空间是多个table_id对应一个spaceID</p>\n</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-索引组织表","url":"/mysql/learn-mysql-016/","content":"<h2 id=\"索引组织表\"><a href=\"#索引组织表\" class=\"headerlink\" title=\"索引组织表\"></a>索引组织表</h2><blockquote>\n<p>在innodb存储引擎中，表都是根据主键顺序组织存放的，这种存储方式的表称为索引组织表(index organized table)，或者叫聚集索引</p>\n</blockquote>\n<ol>\n<li><p>每张表都必须有一个主键</p>\n</li>\n<li><p>根据主键的值构造一个B+树</p>\n</li>\n<li><p>这颗B+树的叶子节点(leaf page)存放所有记录row</p>\n</li>\n<li><p>非叶子节点(non-leaf page)存放的主键和指针(若干个主键和指针组成一个非页节点)</p>\n<p>这里的指针其实就是pageNumber(这里不需要spaceID，因为spaceID对应的是ibd文件，现在就是在ibd文件查找数据)</p>\n</li>\n</ol>\n<ul>\n<li><p>主键</p>\n<p>如果创建表没有显示指定主键，则innodb会按照如下方式选择或创建主键</p>\n<ul>\n<li><p>判断表中是否存在非空的唯一索引，如果有，该列即为主键</p>\n<p>如果存在多个非空唯一索引，以创建表时第一个非空索引为准，而不是columns定义的顺序</p>\n</li>\n<li><p>如果上述条件都不符合，则innodb自动创建一个6字节大小的主键</p>\n<p>系统自定义一个主键(6个字节，int类型，全局)，系统定义的主键ID不是在表内进行单独递增的，而是全局递增，该rowId是定义在ibdata1.ibd中的sys_rowid中，全局自增</p>\n<p>6个字节表示的数据量为2的48次方。</p>\n</li>\n</ul>\n</li>\n<li><p>索引组织表与堆表</p>\n<p><img src=\"/mysql/learn-mysql-016/heap_table.png\" loading=\"lazy\"></p>\n<blockquote>\n<p>堆表将索引和数据分开，索引中叶子节点存放的是数据的位置，而不是数据本身</p>\n</blockquote>\n<p><img src=\"/mysql/learn-mysql-016/index_organ_table.png\" loading=\"lazy\"></p>\n<blockquote>\n<p>索引组织表将索引和数据放在了一起，索引的叶子节点(leaf page)存放了所有完整的记录</p>\n<p>索引即数据，数据即索引</p>\n</blockquote>\n<p>注意：</p>\n<ol>\n<li><p>非叶子节点(non-leaf page)中不会存放所有数据的主键，而是从叶子节点中选出一个数据的主键和该页的pageNumber填入到非叶子节点中</p>\n</li>\n<li><p>从逻辑上看，是一颗B+树，但是从物理上看都是每个页(非叶子节点和叶子节点)通过指针串在一起，使得逻辑有序</p>\n</li>\n</ol>\n<p><img src=\"/mysql/learn-mysql-016/two_level_index.png\" loading=\"lazy\"></p>\n<blockquote>\n<p>二级索引中的叶子节点不存放数据本身，而是存放主键</p>\n</blockquote>\n<ul>\n<li>查询数据对比</li>\n</ul>\n<p><img src=\"/mysql/learn-mysql-016/query_data_compare.png\" loading=\"lazy\"></p>\n</li>\n<li><p>page的空间申请</p>\n<ol>\n<li><p>叶子节点(leaf page)由leaf page segment进行申请空间</p>\n</li>\n<li><p>非叶子节点(non-leaf page)由non-leaf page segment进行申请空间</p>\n</li>\n</ol>\n<p>所以索引由两个段组成</p>\n<ol>\n<li><p>leaf page segment</p>\n</li>\n<li><p>non-leaf page segment</p>\n</li>\n</ol>\n<p>段(segment)是由区(extent)组成，申请空间就按照区(extent)进行申请，一般情况下一次申请4个区</p>\n</li>\n</ul>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-推荐一款好用的数据一致性校验工具","url":"/mysql/learn-mysql-018/","content":"<blockquote>\n<p>如何有效保障复制数据的一致性变得至关重要。</p>\n</blockquote>\n<p>在数据的服务生命周期过程中，经常会因为数据迁移、主从复制、数据集成等原因产生数据流动及复制。在数据复制过程中，由于人为误操作、软件 bug 或硬件故障等原因，无法完全规避复制数据的准确性。如何有效保障复制数据的一致性变得至关重要。</p>\n<p>当前市面上专门用于解决 “数据一致性校验” 的工具比较匮乏。很多企业依然在使用：人工抽检的原始解决方案，数据一致性导致的业务故障频发。</p>\n<p>举一个客户遇到 CASE，客户是一个电商 SAAS 服务提供商。如同其他 SAAS 服务，出于成本优化及大租户稳定隔离的业务诉求，经常会涉及用户数据的跨机搬迁。当前，客户并没有对应的数据一致性校验工具，所以，每次迁移完成，都是人工抽核心表进行数据量的检测。正应了 “常在河边走, 哪有不湿鞋” 的俗语，有一次迁移一个大商家数据的时候，在没有完整数据一致性校验的情况下，直接切换商家业务，最终出现因迁移数据【订单】不一致，导致的商家业务故障，给大商家造成比较大的业务影响及品牌影响。<br><img src=\"/mysql/learn-mysql-018/20230302-dda55851-991c-4580-be1a-59aabae4be4a.png\" loading=\"lazy\"></p>\n<p>数据一致性校验的重要性</p>\n<p>同行们血淋淋的经验告诉我们，拥有一个好的数据一致性校验工具是必不可少的【关键时刻能救命～】。那么究竟我们需要怎么样的工具呢。小编认为一款校验工具至少应该具备如下六个特质。<br><img src=\"https://oss-emcsprod-public.modb.pro/image/editor/20230302-bc6ddaed-c773-4aaf-861c-2fc1e11b09e8.png\" loading=\"lazy\"></p>\n<p>数据一致性校验工具是必不可少的能力</p>\n<h3 id=\"1-能做结构一致性校验\"><a href=\"#1-能做结构一致性校验\" class=\"headerlink\" title=\"1. 能做结构一致性校验\"></a>1. 能做结构一致性校验</h3><p>利用表存储数据，几乎成为大部分数据存储的通用标准。所以表结构能否正确迁移直接影响迁移数据的一致性。同时，数据库提供了诸多非表对象，包括视图、存储过程、函数、触发器等。用户一般基于这些对象实现轻量的业务逻辑，所以非表对象的能否成功迁移也会直接影响业务的迁移。由此，小编认为，具备结构一致性的快速校验是校验工具的基础能力。</p>\n<h3 id=\"2-完善的数据一致性校验\"><a href=\"#2-完善的数据一致性校验\" class=\"headerlink\" title=\"2. 完善的数据一致性校验\"></a>2. 完善的数据一致性校验</h3><p>除了结构，数据无疑是另一关键的校验内容。数据存储支持丰富的数据类型，差异化的数据类型默认值、数据格式、字符集以及时区等。因此，能否支持完善的数据类型，屏蔽源及目标数据源在数据范围、数据格式、字符集及时区上的差异，也成为数据校验工具的核心能力。</p>\n<h3 id=\"3-快速定义不一致内容\"><a href=\"#3-快速定义不一致内容\" class=\"headerlink\" title=\"3. 快速定义不一致内容\"></a>3. 快速定义不一致内容</h3><p>数据校验的目的是为了验证数据一致性，并针对不一致数据进行快速补救。所以，能够定位并提供具体不一致的内容也是数据校验工具的重要特质。</p>\n<h3 id=\"4-快速订正数据的能力\"><a href=\"#4-快速订正数据的能力\" class=\"headerlink\" title=\"4. 快速订正数据的能力\"></a>4. 快速订正数据的能力</h3><p>当数据校验定位到不一致内容后，是否能够提供数据订正脚本帮助用户快速修复不一致数据也是校验工具必不可少的基础能力。</p>\n<h3 id=\"5-校验速度要快，“天下武功唯快不破”\"><a href=\"#5-校验速度要快，“天下武功唯快不破”\" class=\"headerlink\" title=\"5. 校验速度要快，“天下武功唯快不破”\"></a>5. 校验速度要快，“天下武功唯快不破”</h3><p>小编认为校验速度够快也是核心要求。尤其在数据迁移、数据集成场景，在这种场景下，数据校验会影响业务停机时间，或者下游数据生产基线【例如，报表生产时间】，对校验时间要求较苛刻。</p>\n<h3 id=\"6-对数据库的性能影响要可控\"><a href=\"#6-对数据库的性能影响要可控\" class=\"headerlink\" title=\"6. 对数据库的性能影响要可控\"></a>6. 对数据库的性能影响要可控</h3><p>校验工具一般都会高并发读取数据库的数据，此时，数据库同时承担着线上的业务应用。如何有效平衡数据校验速度以及数据库稳定性是校验工具应该解决的重要命题。</p>\n<ol>\n<li>NineData</li>\n</ol>\n<hr>\n<p>官网地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmluZWRhdGEuY2xvdWQv\">https://www.ninedata.cloud/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9kYi5wcm8vZGIvTmluZURhdGE=\">NineData<i class=\"fa fa-external-link-alt\"></i></span> 是玖章算术旗下的多云数据管理平台，它是一款即开即用的数据管理 SAAS 服务。当前 NineData 已经支持数十种常见同异构数据源（MySQL、SQLServer、CK 等）之间的结构对比、数据对比及数据订正能力。<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9kYi5wcm8vZGIvTmluZURhdGE=\">NineData<i class=\"fa fa-external-link-alt\"></i></span> 结构及数据对比作为独立服务，可以灵活支持 IDC、云主机自建及云托管数据源的数据一致性校验及快速修复。从使用体验、产品能力、稳定性及性能等维度综合来看，<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9kYi5wcm8vZGIvTmluZURhdGE=\">NineData<i class=\"fa fa-external-link-alt\"></i></span> 是一款综合实例比较强、比较难得的校验工具。</p>\n<ol start=\"2\">\n<li>Percona-toolkit</li>\n</ol>\n<hr>\n<p>percona-toolkit 是由数据库厂商 percona 提供的工具集，其中: pt-table-checksum、 pt-table-sync 提供了 MySQL 主从复制一致性校验及修复的能力。Pt-table-checksum 主要通过在 MySQL 主中运行 checksum query，然后利用 MySQL 主从复制，query 流转到 slave 中，进行 check 对比。由于，需要借助 MySQL 主从复制的能力，percona-toolkit 只能应用主从复制场景。其优势在于，当前工具使用比较广泛，成熟度比较高。</p>\n<ol start=\"3\">\n<li>云厂商迁移校验工具</li>\n</ol>\n<hr>\n<p>配合数据迁移工具，部分云厂商会提供对应的一致性校验能力。当前云厂商提供的校验能力，一般只支持数据校验，不支持结构校验，且数据订正能力比较弱。由于厂商的校验工具是跟迁移工具配合使用，所以，对于不使用迁移工具的数据源，当前不能提供数据校验能力。同时，其对云数据库的迁移支持较好，但是对于云主机上自建数据库以及 IDC 自建数据库支持不好或不支持。</p>\n<p><img src=\"https://oss-emcsprod-public.modb.pro/image/editor/20230302-da66e212-8d44-479e-9c82-7419dc67d3fa.png\" loading=\"lazy\"></p>\n<p>常见数据一致性方案推荐（NineData）</p>\n<p>正如前面所述的推荐指数来看，NineData 提供的结构对比、数据对比功能确实是综合实力比较强，也比较推荐的一款产品。除了基础的全量对比外，NineData 还提供了快速对比、周期性对比及不一致复检等多种对比形态。</p>\n<p>快速对比，相较于全量对比，快速对比主要用以校验窗口期比较短的情况。快速对比会对数据量、数据分布进行校验，同时会随机抽样一定的比例进行校验。<br>周期性对比，自定义对比频率及对比方式，NineData 会自动周期性调度对比任务进行结构及数据对比。小编理解这个功能应该用于长期数据复制场景的数据对比，例如主从复制、数据容灾、数据多活或数据仓库实时集成等场景。<br>不一致复检，即针对上一次对比结果中不一致数据进行重新复检。这个功能主要应用于数据订正、主从复制【主从延迟】场景下，进行快速的复检。<br>接下来，带大家感受下这个产品的使用体验。</p>\n<ol>\n<li>配置对比任务</li>\n</ol>\n<hr>\n<p>整个任务配置过程很简单，主要分为三个步骤：</p>\n<p>选择数据源，即配置对比的源实例及目标实例；<br>选择对比对象，即配置需要对比的对象，对比对象可以选择库、表｜非表、列；<br>配置映射关系及过滤条件，即配置对比表的映射关系；或者通过配置 SQL 过滤条件，可以只对关键数据进行对比。</p>\n<p><img src=\"https://oss-emcsprod-public.modb.pro/image/editor/20230302-93fbb665-43e9-4f81-a7d7-b3b4bfae93a0.png\" loading=\"lazy\"></p>\n<p>步骤一：配置对比数据源</p>\n<p><img src=\"https://oss-emcsprod-public.modb.pro/image/editor/20230302-b556d758-6dd3-4640-aff7-9c4b9a9aef3a.png\" loading=\"lazy\"></p>\n<p>步骤二：选择对比对象</p>\n<p><img src=\"https://oss-emcsprod-public.modb.pro/image/editor/20230302-cbc57615-24fb-4e1f-a212-2bcc3440d40d.png\" loading=\"lazy\"></p>\n<p>步骤三：映射关系配置</p>\n<ol start=\"2\">\n<li>对比结果</li>\n</ol>\n<hr>\n<p>NineData 会提供完善的对比结果，其会定位不一致内容。针对不一致内容，提供快速订正脚本。</p>\n<p><img src=\"https://oss-emcsprod-public.modb.pro/image/editor/20230302-e5f6e3c2-ae86-43bd-8be7-8caf5f9c6f57.png\" loading=\"lazy\"></p>\n<p>结构对比，对比总览</p>\n<p><img src=\"https://oss-emcsprod-public.modb.pro/image/editor/20230302-91ab1efe-54b7-4cc1-9f8e-0d03217fcbe7.png\" loading=\"lazy\"></p>\n<p>结构对比，展示不一致内容</p>\n<p><img src=\"https://oss-emcsprod-public.modb.pro/image/editor/20230302-6595a472-13c7-449d-ae02-85244fe49e4e.png\" loading=\"lazy\"></p>\n<p>数据对比，对比结果</p>\n<p><img src=\"https://oss-emcsprod-public.modb.pro/image/editor/20230302-7cde23e1-0c35-4d7a-9e06-f2d2b7e08447.png\" loading=\"lazy\"></p>\n<p>数据对比，不一致详情</p>\n<p>数据作为企业的核心资产，数据的准确性关于业务可靠性及企业品牌口碑。为此，还是推荐大家在线上主从环境、数据迁移、数据复制等场景中，配套使用可靠的数据校验工具。平台工具 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9kYi5wcm8vZGIvTmluZURhdGE=\">NineData<i class=\"fa fa-external-link-alt\"></i></span> 以其完善的校验能力、产品体验、校验速度、稳定性及数据源环境的广泛适配性成为了市面上比较出彩的校验工具，推荐大家使用。</p>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-压缩表和透明压缩表","url":"/mysql/learn-mysql-015/","content":"<h2 id=\"压缩表\"><a href=\"#压缩表\" class=\"headerlink\" title=\"压缩表\"></a>压缩表</h2><ul>\n<li><p>基于页的压缩</p>\n</li>\n<li><p>每个表的页大小可以不同</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">-- ger3_space的file_block_size=4096，不是innodb_page_size的大小</span><br><span class=\"line\">-- 所在在创建 普通表 的时候，报错了</span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">create table test_ger (a int) tablespace=ger3_space;</span></span><br><span class=\"line\">ERROR 1478 (HY000): InnoDB: Tablespace `ger3_space` uses block size 4096 and cannot contain a table with physical page size 8192</span><br><span class=\"line\"></span><br><span class=\"line\">-- 使用压缩表的方式</span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">create table comps_test1 (a int) row_format=compressed, key_block_size=4; -- 1K, 2K, 4K, 8K, 16K 只有这几个页大小可以选择</span> </span><br><span class=\"line\">Query OK, 0 rows affected (0.13 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">-- 在之前的ger3_space中创建压缩表</span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">create table comps_test2 (a int)tablespace=ger3_space row_format=compressed, key_block_size=4; -- 由于ger3_space是4K的，所以这里页大小也只能是4K</span></span><br><span class=\"line\">Query OK, 0 rows affected (0.09 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">-- 修改存在的表变成压缩表</span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">alter table t1 row_format=compressed,key_block_size=4;</span> </span><br><span class=\"line\">Query OK, 0 rows affected (0.17 sec)</span><br><span class=\"line\">Records: 0 Duplicates: 0 Warnings: 0</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意：</p>\n<p>虽然sql语法中写的是row_format&#x3D;compressed，但是压缩是针对页的，而不是记录，即读页的时候解压，写页的时候压缩。并不会中读取或写入单个记录(row)时就进行解压或压缩操作</p>\n</blockquote>\n</li>\n<li><p>key_block_size的含义</p>\n<ol>\n<li><p>key_block_size 的可选项是1k，2k，4k，8k，16k(是页大小，不是比例)</p>\n</li>\n<li><p>不是将原来innodb_page_size页大小的数据压缩成key_block_size的页大小，因为有些数据可能不能压缩，或者压缩不到那么小</p>\n</li>\n<li><p>压缩是将原来的页数据通过压缩算法到一定大小，然后用key_block_size大小的页去存放</p>\n<ul>\n<li><p>比如原来的innodb_page_size大小是16k，现在的key_block_size设置为8k</p>\n</li>\n<li><p>某表的数据大小是24k，原先使用1个16k的页存放</p>\n</li>\n<li><p>压缩后，24k--&gt;18k</p>\n</li>\n<li><p>由于现在的key_block_size&#x3D;8k，所以需要3个8k的页存储压缩后的18k数据</p>\n</li>\n<li><p>多余的空间可以留给下次更新或者插入</p>\n</li>\n</ul>\n<blockquote>\n<ol>\n<li><p>压缩比和设置的key_block_size没有关系，压缩比看数据本身和算法(zlib)，key_block_size仅仅是存放压缩数据的页大小</p>\n</li>\n<li><p>不解压也能插入数据，通过在剩余空间直接存放redo log，然后页空间存放满后，在解压，利用redo log更新完成后，再压缩存放，减少解压和压缩的次数</p>\n</li>\n</ol>\n</blockquote>\n</li>\n<li><p>查看压缩比</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\"> use employees;</span></span><br><span class=\"line\">Database changed</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">create table employee_comps_1 like employees;</span> </span><br><span class=\"line\">Query OK, 0 rows affected (0.16 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">alter table employee_comps_1 row_format=compressed,key_block_size=4; Query OK, 0 rows affected (0.19 sec)</span></span><br><span class=\"line\">Records: 0 Duplicates: 0 Warnings: 0</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">show create table employee_comps_1\\G</span> </span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">Table: employee_comps_1</span><br><span class=\"line\">Create Table: CREATE TABLE `employee_comps_1` (</span><br><span class=\"line\">`emp_no` int(11) NOT NULL, </span><br><span class=\"line\">`birth_date` date NOT NULL, </span><br><span class=\"line\">`first_name` varchar(14) NOT NULL, </span><br><span class=\"line\">`last_name` varchar(16) NOT NULL, </span><br><span class=\"line\">`gender` enum(&#x27;M&#x27;,&#x27;F&#x27;) NOT NULL, </span><br><span class=\"line\">`hire_date` date NOT NULL,</span><br><span class=\"line\">PRIMARY KEY (`emp_no`)</span><br><span class=\"line\">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=4 </span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">-- 插入数据</span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">insert into employee_comps_1 select * from employees;</span> </span><br><span class=\"line\">Query OK, 300024 rows affected (8.10 sec)</span><br><span class=\"line\">Records: 300024 Duplicates: 0 Warnings: 0</span><br><span class=\"line\"></span><br><span class=\"line\">-- 查看压缩比</span><br><span class=\"line\"><span class=\"meta prompt_\"> mysql&gt; </span><span class=\"language-bash\">use information_schema;</span></span><br><span class=\"line\"> Reading table information for completion of table and column names </span><br><span class=\"line\"> You can turn off this feature to get a quicker startup with -A</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"> mysql&gt; </span><span class=\"language-bash\">select * from INNODB_CMP;</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"> mysql&gt; </span><span class=\"language-bash\">select 11451/12687; -- compress_ops_ok / compress_ops</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"> shell&gt; </span><span class=\"language-bash\">ll -h employee*.ibd <span class=\"comment\"># 可以看出磁盘占用还是有明显缩小的</span></span> </span><br><span class=\"line\"> -rw-r-----. 1 mysql mysql 14M Jan 4 13:41employee_comps_1.ibd </span><br><span class=\"line\"> -rw-r-----. 1 mysql mysql 22M Dec 2 21:32 employees.ibd</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">innodb_cmp_per_index_enabled 这个参数默认关闭，开启对性能有影响</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>key_block_size&#x3D;16的含义</p>\n<blockquote>\n<p>假设innodb_page_size&#x3D;16k</p>\n<p>设置key_block_size&#x3D;16是有意义的</p>\n<p>key_block_size的设置不影响压缩本身(只和数据本身以及zlib算法有关)。只是确定压缩后数据存放的页大小，如果该字段是varchar，text等类型的数据，压缩的效果还是比较明显的</p>\n<p>设置row_format&#x3D;comparessed就会压缩数据，是否压缩和设置key_block_size没有关系</p>\n<p>所以，key_block_size&#x3D;16的设置是有意义的，因为数据还是进行了压缩，压缩后的数据存放在16k大小的页中</p>\n</blockquote>\n</li>\n<li><p>压缩后的存储以及性能</p>\n<p><img src=\"/mysql/learn-mysql-015/mysql_page_comparessed.png\" loading=\"lazy\"></p>\n<p>从上图可以得到如下信息：</p>\n<ul>\n<li><p>innodb_page_size&#x3D;16k的数据设置key_block_size&#x3D;16是可以压缩的，且效果比较明显</p>\n</li>\n<li><p>并不是key_block_size设置的越小，压缩率就越高，上图8k和4k的压缩率几乎一样</p>\n</li>\n<li><p>在启用压缩后，16k和8k的插入性能要好于原来未压缩的插入性能，所以启用了压缩，性能不一定会变差</p>\n<blockquote>\n<p>在IO bound(IO密集型)的业务场景下，减少IO操作的次数对性能提升比较明显</p>\n</blockquote>\n</li>\n<li><p>key_block_size设置的值通常为innodb_page_size的1&#x2F;2</p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"透明表空间压缩\"><a href=\"#透明表空间压缩\" class=\"headerlink\" title=\"透明表空间压缩\"></a>透明表空间压缩</h2><blockquote>\n<p>在mysql官方文档中，透明表空间压缩称为innobd page compression以区别原来的innodb table compression，但是其实他们都是基于页的压缩。</p>\n</blockquote>\n<ul>\n<li><p>透明表空间压缩的创建</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">-- 透明表空间压缩的创建</span><br><span class=\"line\">-- 使用zlib压缩算法</span><br><span class=\"line\">MySQL hadoop@localhost:db_test_compression&gt; create table tbl_compression_1(a int) compression=&#x27;zlib&#x27;;</span><br><span class=\"line\">Query OK, 0 rows affected</span><br><span class=\"line\">Time: 5.123s</span><br><span class=\"line\"></span><br><span class=\"line\">-- 使用lz4压缩算法</span><br><span class=\"line\">MySQL hadoop@localhost:db_test_compression&gt; create table tbl_compression_2(a int) compression=&#x27;lz4&#x27;;</span><br><span class=\"line\">Query OK, 0 rows affected</span><br><span class=\"line\">Time: 0.077s</span><br><span class=\"line\"></span><br><span class=\"line\">-- 修改压缩算法</span><br><span class=\"line\">MySQL hadoop@localhost:db_test_compression&gt; alter table tbl_compression_2 compression=&#x27;zlib&#x27;;</span><br><span class=\"line\">-- 官方文档中提及如果是已存在的表，需要执行optimize table操作</span><br><span class=\"line\">MySQL hadoop@localhost:db_test_compression&gt; optimize table tbl_compression_2;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>zlib的压缩比更高</p>\n<p>lz4的速度更快</p>\n<p>上面创建过程中，没有指定页大小，而是使用了文件系统(filesystem)层中的稀疏文件的特性，来达到压缩的目的。</p>\n</blockquote>\n</li>\n<li><p>稀疏文件</p>\n<p><img src=\"/mysql/learn-mysql-015/filesystem_sparse_files.png\" loading=\"lazy\"></p>\n<p>如上图所示，可以简单的理解为，文件中数据连续为0的部分不占用磁盘空间</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建一个零时文件，且数据部分全是0的文件</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">dd</span> of=spare-file bs=1k seek=5120 count=0</span></span><br><span class=\"line\">0+0 records in</span><br><span class=\"line\">0+0 records out</span><br><span class=\"line\">0 bytes transferred in 0.000007 secs (0 bytes/sec) # 没有数据写入</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">显示文件大小为5M</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">ll -rth spare-file</span></span><br><span class=\"line\">-rw-r--r--  1 yangyitong  staff   5.0M  4 12 23:44 spare-file</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">检查文件占用多少空间</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">du</span> -B 1 spare-file</span></span><br><span class=\"line\">0    spare-file</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/mysql/learn-mysql-015/mysql_transparent_compressed.png\" loading=\"lazy\"></p>\n<ul>\n<li><p>压缩后，原来16k的数据压缩成4k</p>\n</li>\n<li><p>剩余的12k空间用特殊的字符填充</p>\n</li>\n<li><p>在写入文件系统时调用punching holes写入，实际只写入4k数据</p>\n</li>\n<li><p>被填充的12k的空间，可以提供给后续的插入，更新使用</p>\n</li>\n<li><p>从innodb的角度看还是16k的页大小，只是文件系统知道页只需要4k就能够存储(对innodb时透明的)</p>\n</li>\n<li><p>spaceID和pageNumber的读取方式没有发生变化(细节由文件系统屏蔽)</p>\n</li>\n<li><p>由于文件系统的块大小时4k，所以压缩后存储的空间也是4k对其的</p>\n<blockquote>\n<p>如果16k压缩成了10k，那么就需要3个4k去存储</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>系统以及文件系统的支持</p>\n<ol>\n<li><p>操作系统以及内核</p>\n<ul>\n<li><p>RHEL7 kernel &gt;&#x3D; 3.10.0-123 </p>\n</li>\n<li><p>Debian 7 kernel &gt;&#x3D; 3.2  </p>\n</li>\n<li><p>Ubuntu 12.04LTS kernel &gt;&#x3D; 3.2  </p>\n</li>\n<li><p>Ubuntu 14.0.4LTS kernel &gt;&#x3D; 3.13</p>\n</li>\n<li><p>Oracle和Suse可以参考官方文档</p>\n</li>\n</ul>\n</li>\n<li><p>文件系统</p>\n<ul>\n<li><p>支持Hole Punch</p>\n</li>\n<li><p>比如XFS，EXT4，NTFS等</p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><p>关于warning</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> warnings; </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------+---------------------------------------------------------------------------------------------------------------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> Level <span class=\"operator\">|</span> Code <span class=\"operator\">|</span> Message <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------+---------------------------------------------------------------------------------------------------------------------------+ </span></span><br><span class=\"line\"><span class=\"operator\">|</span> Warning <span class=\"operator\">|</span> <span class=\"number\">138</span> <span class=\"operator\">|</span> InnoDB: Punch hole <span class=\"keyword\">not</span> supported <span class=\"keyword\">by</span> the file <span class=\"keyword\">system</span> <span class=\"keyword\">or</span> the tablespace page size <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">large</span> enough. Compression disabled <span class=\"operator\">|</span> </span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------+---------------------------------------------------------------------------------------------------------------------------+ </span></span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"type\">row</span> <span class=\"keyword\">in</span> <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>原因1是我的内核版本太低，不支持</p>\n</li>\n<li><p>原因2是因为general方式安装的mysql不支持透明压缩，需要自己编译</p>\n</li>\n</ul>\n</li>\n</ul>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-如何学习 MySQL","url":"/mysql/learn-mysql-019/","content":"<blockquote>\n<p>《高性能 MySQL》第四版发布后，收到了很多读者的反馈，其中关注最多的是作为一个初学者，应该如何能够较为系统的学习 MySQL，从而应对日常工作或者获得更好的职业发展。</p>\n</blockquote>\n<p>《高性能 MySQL》第四版发布后，收到了很多读者的反馈，其中关注最多的是作为一个初学者，应该如何能够较为系统的学习 MySQL，从而应对日常工作或者获得更好的职业发展。于是和多个业内朋友讨论后，整理了一些 MySQL 学习的推荐资源，供初学者参考。</p>\n<p>本文分成几部分，包括业界专家的经验、推荐 MySQL 书籍、MySQL 视频 &#x2F; 音频资源、MySQL 其他资源或者 MySQL 学习方式等。</p>\n<h2 id=\"1、阿里云的数据库专家-Yangyidba\"><a href=\"#1、阿里云的数据库专家-Yangyidba\" class=\"headerlink\" title=\"1、阿里云的数据库专家 Yangyidba\"></a>1、阿里云的数据库专家 Yangyidba</h2><hr>\n<p><img src=\"/mysql/learn-mysql-019/20230324-ec9159d6-1f25-4460-b143-bb534f05c885.png\" loading=\"lazy\"></p>\n<p><strong>提问：刚刚入行时，有哪些资料给你了帮助？</strong></p>\n<p>正式接触 MySQL 是 2011 年底，当时的公司的数据库版本主要是 5.5 版本和少量 5.1 版本。因为之前学 Oracle 的经验是查看官方文档，学习 MySQL 资料主要是 “官方文档” 和当时的淘宝 DBA 团队组织的技术大学的技术分享，学习 MySQL 技术的技术特性和经典案例。</p>\n<p>其实就现在而言，MySQL 官方文档依然是最好的学习资料和教材, 里面非常详细的说明 MySQL 的基础架构，redo，undo，读写逻辑，字段类型，锁，存储引擎，主从复制，MGR ，性能优化等等。把官方文档通读一遍，基本上能超越 60-70% 左右的 DBA，为什么不是更高呢？因为学习技术是为了使用技能。</p>\n<p><strong>提问：进一步了解 MySQL &#x2F; 数据库，哪些资料给了你帮助？</strong></p>\n<p>换个回答的方式，哪些因素帮助我提升数据库技能水平？总结起来大概三个方面：</p>\n<ol>\n<li><p>掌握基础知识之后，会有 “纸上来得终觉浅，绝知此事要躬行”” 的想法。基于对各种 MySQL 技术知识点和 功能特性的理解，搭建单节点, 主备模式环境 做各种功能测试，并且将知识点的验证或者分析过程下来写博客，比如死锁，能将常见的 20 个死锁常见分析过程总结下来，相信死锁问题再也难不倒你了。</p>\n</li>\n<li><p>如果是第一条是模拟考，那么真实的业务场景则是实战演练，在海量的业务场景下，层出不穷的业务问题和技术难点驱动 DBA 对 数据库的使用和限制了解的更多。比如：</p>\n</li>\n</ol>\n<ul>\n<li><p>truncat 表 如何恢复?</p>\n</li>\n<li><p>如果有 500g binlog，如何加速 binlog 应用？</p>\n</li>\n<li><p>如何删除 3T 的大表？</p>\n</li>\n<li><p>秒杀场景下数据库设计和优化？</p>\n</li>\n<li><p>如何排查业务访问 db RT 异常?</p>\n</li>\n<li><p>为什么业务写完立即查询当时查不到?</p>\n</li>\n</ul>\n<ol start=\"3\">\n<li>和优秀的同事或者优秀的人同行，比如有解决不了的疑惑可以咨询内核开发。</li>\n</ol>\n<p><strong>提问：现在回头来看，哪些资料你觉得是最推荐的，分别对于初入学，和深入学习的人来说？</strong></p>\n<p>对于初学者而言，首要目标是 夯实基础，学好基础 &#x2F; 理论知识。</p>\n<ol>\n<li>官方文档</li>\n<li>《高性能 MySQL》</li>\n<li>《MySQL 性能调优与架构设计》</li>\n<li>《MySQL 技术内幕: InnoDB 存储引擎》</li>\n</ol>\n<p>对于深入学习的人来说， 单独的数据库学习是没有意义的，必须服务好具体的业务场景才能发挥其价值。推荐：</p>\n<ol>\n<li>《数据密集型应用系统设计》</li>\n<li>《性能之巅》</li>\n<li>《漫画算法》</li>\n</ol>\n<p>学习和总结各种业务场景下的数据库架构设计 ，数据库高可用，容灾，强红包，秒杀，直播弹幕等等。</p>\n<p><img src=\"/mysql/learn-mysql-019/20230324-9befc5e3-c74b-41a6-87fb-4ff5e2e05f66.png\" loading=\"lazy\"></p>\n<p>对于初学者，建议自己手动安装常见的架构，比如最简单的一主一备，作为验证环境。找一些操作案例较多的博客或公众号文章，照着作者的思路执行。</p>\n<p>然后再自己设计一些执行案例，先自己推导结果，再执行验证，在验证过程中加深理解或者勘误。</p>\n<p>内核学习也可以延用这个方法，在验证过程中设想如果是自己实现这个功能的，会怎么写，然后通过阅读源码理解作者的设计思路。就是看源码要带着问题去看，找只要主要流程，GDB 去调试单步执行。</p>\n<p><img src=\"/mysql/learn-mysql-019/20230324-0ba735dd-342d-49ac-b88d-16df2ebf1452.png\" loading=\"lazy\"></p>\n<p><strong>推荐的重要学习资料包括：</strong></p>\n<ol>\n<li>MySQL 官方文档</li>\n<li>《MySQL 技术内幕：InnoDB 存储引擎》</li>\n<li>MySQL 周边组件的文档与源码，如 percona toolkit、MHA 等</li>\n<li>初学者：丁奇 45 讲、MySQL 官方文档</li>\n<li>深入学习：主要还是积累、排错，云数据库相关还是需要看下技术相关的论文。</li>\n</ol>\n<p>MySQL 作为当前最流行的关系型数据库，相关的书籍也非常多，这里罗列基本推荐如下：</p>\n<p><img src=\"/mysql/learn-mysql-019/20230324-a2d40815-db16-4347-9b89-22c99c28aa68.png\" loading=\"lazy\"></p>\n<p>MySQL 相关的书籍</p>\n<p>文档是最全面和权威的参考，而其他三本都是，根据豆瓣网友打分进行推荐的。第一本《MySQL 是怎样运行的》适用于完全的初学者，内容由浅到深。第二本《高性能 MySQL》则从 “优化” 为入口，非常系统介绍了 MySQL 的架构、优化，是一本非常好的进阶书籍。第三本是《MySQL 技术内幕 InnoDB 存储引擎》，这本书深入的介绍了 MySQL 核心组件 InnoDB 存储引擎，涵盖了数据库的事务原理、调度、物理存储、锁等知识。</p>\n<p>另外，其实 MySQL 领域还有很多书籍偏重各有不同，这里不一一推荐了。</p>\n<h2 id=\"1、《MySQL-是怎样运行的》\"><a href=\"#1、《MySQL-是怎样运行的》\" class=\"headerlink\" title=\"1、《MySQL 是怎样运行的》\"></a>1、《MySQL 是怎样运行的》</h2><p>这本书于 2020 年出版，是一本比较新的书籍，整个书籍也是围绕其标题展开《MySQL 是怎样运行的：从根儿上理解 MySQL》。这本书最大的特点是，全书有非常清晰的脉络，可以说是由 “入门到精通”，书中放弃了一定的完整性（这个可以去看 MySQL 文档），而是非常接地气的从零开始，用了很多形象的比喻介绍 MySQL 数据库的各个概念。</p>\n<p>同时，该书籍在每个章节对相关的概念也都进入了非常深入的讨论，例如，关于索引的介绍，从什么事索引、索引的物理结构开始介绍，然后，开始介绍 MySQL 的索引在查询、排序等场景的使用，最后，再介绍一些常见的索引优化技巧，包括普通索引、前缀索引、覆盖索引等。</p>\n<p>总得来说，这本书是最近几年，面向于初学者非常不错的一本书。</p>\n<h2 id=\"2、《高性能-MySQL》\"><a href=\"#2、《高性能-MySQL》\" class=\"headerlink\" title=\"2、《高性能 MySQL》\"></a>2、《高性能 MySQL》</h2><p>《高性能 MySQL》则从 “优化” 为入口，将 MySQL 相关的知识点聚合在一起，包括了查询性能优化（SQL 优化）、高性能索引、库表结构（Schema）优化等，也包括了服务器配置（硬件和软件）优化、架构优化（包括了复制、只读节点、分片）等，还介绍了部分云服务商的 MySQL 等内容，是一本非常适合进阶阅读的书籍。</p>\n<p>该书籍的作者、译者，也都是一直活跃在数据库领域第一线的数据库开发者，对于 MySQL 实践有着非常丰富经验。这也保障概书籍整体质量不错，不仅可以作为系统的阅读使用，也可以作为一个参考手册，可以根据自己工作需要，不定期的翻阅其中的部分章节。</p>\n<h2 id=\"3、《MySQL-技术内幕-InnoDB-存储引擎》\"><a href=\"#3、《MySQL-技术内幕-InnoDB-存储引擎》\" class=\"headerlink\" title=\"3、《MySQL 技术内幕 InnoDB 存储引擎》\"></a>3、《MySQL 技术内幕 InnoDB 存储引擎》</h2><p>这本书则以 InnoDB 为切入点，非常深入的介绍了 InnoDB 或者说数据库的原理。InnoDB 可以说是 MySQL 最为核心的组件，其原理不仅仅适用于 MySQL，也几乎适用于大多数关系型数据库系统。</p>\n<p>具体的，概书籍覆盖的内容包括了 MySQL&#x2F;InnoDB 物理存储结构、索引、锁、事务等等。本书底层原理为出发点，帮助开发者理解 MySQL 行为、特点。</p>\n<p>本书非常适合，对 MySQL 已经有一定程度了解，又希望更加深入了解其底层实现原理的人，或者是工作中需要对 MySQL 源码层进行修改或者定制的数据库内核开发者。</p>\n<h2 id=\"4、用好-MySQL-官方文档\"><a href=\"#4、用好-MySQL-官方文档\" class=\"headerlink\" title=\"4、用好 MySQL 官方文档\"></a>4、用好 MySQL 官方文档</h2><p>MySQL 官方文档可以说是最为权威、更新最为及时、质量也应该是最高的 MySQL 学习资料了。在早期，市面上还没有那么书籍的时候，我个人也是通过精读 MySQL 官方文档，以此为深入学习 MySQL、甚至是深入学习数据库原理的知识库。</p>\n<p>但是，官方文档为了保证完整性、准确性，会导致其看起来非常冗长、繁琐，有时候则感觉是在隔靴挠痒，偏向于介绍实现方式或原理以及 MySQL 提供的功能，而不会介绍读者最需要的最佳实践。例如，官方文档会详细介绍每个字段类型和参数详情，但是不会告诉你，哪些字段类型应该多用，哪些字段类型应该少用。</p>\n<p><strong>了解了官方文档的这些特性之后，官方文档阅读的几个要点总结如下：</strong></p>\n<ul>\n<li>在阅读 MySQL 官方文档之前，需要先花些时间了解文档的整体架构，方便后续阅读查阅；</li>\n<li>在需要了解某个具体 MySQL 知识点时，建议可以精读 MySQL 文档；</li>\n<li>如果希望系统的了解某个 MySQL 特效的时候，可以完整的阅读；</li>\n<li>MySQL 文档 MySQL 官方文档最新的都是英文的，需要有一定的英文阅读能力。</li>\n</ul>\n<p>总得来说，多阅读官方文档，虽然刚开始会觉得有些晦涩，坚持下来，你会发现收获巨大。</p>\n<p>另外，阅读官方文档也要注意：也正是因为官方文档注重保障完整性、准确性，所以必定会繁琐、冗长，而不怎么介绍最佳实践经验，甚至一些主流的应用等，例如官方文档也只会将内容限定在 MySQL 本身，而不会包括硬件、软件或者云环境的相关的内容。</p>\n<h2 id=\"5、视频-x2F-音频资源\"><a href=\"#5、视频-x2F-音频资源\" class=\"headerlink\" title=\"5、视频 &#x2F; 音频资源\"></a>5、视频 &#x2F; 音频资源</h2><p>现在也越来越多的人通过视频的方式去在线的学习各类知识，B 站上也有一些面相 MySQL 初学者的视频资源，质量我不太好评价，不过作为文字、书籍的补充学习，看一些视频学习还是非常不错的。大家可以去 B 站搜索一下 “MySQL 初学者” 就有很多的相关视频了，质量良莠不齐，需要大家自己甄别适合自己的。这里仅推荐一下由极客时间推出的《MySQL 实战 45 讲》。</p>\n<p><strong>《MySQL 实战 45 讲》</strong></p>\n<p><img src=\"/mysql/learn-mysql-019/20230324-020bd002-ff53-47f4-a901-49f7db40ac91.png\" loading=\"lazy\"></p>\n<p>该系列价格也非常便宜，可以说是买不了吃亏、买不了上当，反倒是容易买到自己不能全部看完 &#x2F; 听完的懊恼：《MySQL 实战 45 讲》。</p>\n<h2 id=\"1、使用-Google-x2F-Baidu-或者-ChatGPT\"><a href=\"#1、使用-Google-x2F-Baidu-或者-ChatGPT\" class=\"headerlink\" title=\"1、使用 Google&#x2F;Baidu 或者 ChatGPT\"></a>1、使用 Google&#x2F;Baidu 或者 ChatGPT</h2><p>通常，对于某个非常具体的知识点或者行业 &#x2F; 场景最佳实践，在文档中都不会覆盖，但是，因为 MySQL 的用户量极大，在互联网上也有非常多的分享和讨论，从初阶到高阶，面相各个级别的内容都有，可以说是一个大宝库，用好了也是可以事半功倍的。</p>\n<h2 id=\"2、多总结、多分享、多交流\"><a href=\"#2、多总结、多分享、多交流\" class=\"headerlink\" title=\"2、多总结、多分享、多交流\"></a>2、多总结、多分享、多交流</h2><p>学习本身通常都是无趣的，如果学习的知识不能够很快的在实际工作中使用，也很容易忘记。另一个非常好的学习方法，不仅仅限于学习 MySQL，就是分享很总结。一方面，可以让你系统的把一个知识点了解的比较完整和透彻，也可以帮你更好的记录，大大加深理解与记忆。</p>\n<h2 id=\"3、学以致用\"><a href=\"#3、学以致用\" class=\"headerlink\" title=\"3、学以致用\"></a>3、学以致用</h2><p>也许你学习 MySQL 的原因可能只是因为面试、解决一个工作中的问题、增长知识或者只是兴趣，无论是哪个原因促使你学习，动手练习并在工作中使用这些知识，都是非常有效的。如果，你对 MySQL 或者数据库很有兴趣，那么则建议在当前的公司，找一个与数据库更近的岗位工作，这样自然可以事半功倍。</p>\n<h2 id=\"4、MySQL-源代码\"><a href=\"#4、MySQL-源代码\" class=\"headerlink\" title=\"4、MySQL 源代码\"></a>4、MySQL 源代码</h2><p>MySQL 是一个开源数据库，另一个独天得厚的资源是 MySQL 源代码。不过，MySQL 发展的时间已经非常长了，其代码复杂度也比较高，可以考虑从一两个小的模块、小的功能点着手，去学习、验证。</p>\n<h2 id=\"5、学术论文\"><a href=\"#5、学术论文\" class=\"headerlink\" title=\"5、学术论文\"></a>5、学术论文</h2><p>当如果需要了解某个具体模块的来龙去脉以及设计思想的时候，有时候去查找一些经典的数据库领域论文可以很好的帮助你解决相关的疑问。有一套大部头《Readings in Database Systems》可以作为参考或者开始，不过内容较多，需要花费大量时间，总得来说不太适合初学者。</p>\n<p>对于不同基础的人，学习的重点和方法是各有不同的，所以本文会列举主要的 MySQL 数据库的学习资源和方法，读者需要结合自己的实际情况选择合适的方法。如果你有好的经验分享，可以在留言评论谈谈你的经验。</p>\n<p>orczhou 是《高性能 MySQL》的书籍的译者，同时也是来自 NineData（<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9kYi5wcm8vZGIvd3d3Lm5pbmVkYXRhLmNsb3Vk\">www.ninedata.cloud<i class=\"fa fa-external-link-alt\"></i></span>）的工程师。NineData 向企业、开发者提供高效、安全的数据库 SQL 开发、数据库备份、数据复制 &#x2F; 迁移 &#x2F; 集成、数据对比等功能，是一个 SaaS 服务开箱即用，可以快速提升企业 SQL 开发效率，保障企业数据安全。</p>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-页和记录","url":"/mysql/learn-mysql-017/","content":"<h2 id=\"页的结构\"><a href=\"#页的结构\" class=\"headerlink\" title=\"页的结构\"></a>页的结构</h2><p><img src=\"/mysql/learn-mysql-017/page_structure.png\" loading=\"lazy\"></p>\n<ol>\n<li><p>file header</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>大小</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>FIL_PAGE_SPACE_OR_CHKSUM</td>\n<td>4</td>\n<td></td>\n</tr>\n<tr>\n<td>FIL_PAGE_OFFSET</td>\n<td>4</td>\n<td></td>\n</tr>\n<tr>\n<td>FIL_PAGE_PREV</td>\n<td>4</td>\n<td>其实就是page_number(前一个)</td>\n</tr>\n<tr>\n<td>FIL_PAGE_NEXT</td>\n<td>4</td>\n<td>其实就是page_number(后一个)</td>\n</tr>\n<tr>\n<td>FIL_PAGE_LSN</td>\n<td>8</td>\n<td></td>\n</tr>\n<tr>\n<td>FIL_PAGE_TYPE</td>\n<td>2</td>\n<td></td>\n</tr>\n<tr>\n<td>FIL_PAGE_FILE_FLUSH_LSN</td>\n<td>8</td>\n<td></td>\n</tr>\n<tr>\n<td>FIL_PAGE_ARCH_LOG_NO_OR_SPACE_ID</td>\n<td>4</td>\n<td></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>在一个页中不仅仅只有记录，还有file header，page header，file trailer等</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"记录\"><a href=\"#记录\" class=\"headerlink\" title=\"记录\"></a>记录</h2><ol>\n<li><p>row_format</p>\n<ul>\n<li><p>REDUDENT：兼容老版本的innodb，mysql4.1版本之前</p>\n</li>\n<li><p>COMPACT：mysql5.6版本的默认格式</p>\n</li>\n<li><p>COMPRESSED：支持压缩</p>\n</li>\n<li><p>DYNAMIC：大对象记录优化，mysql5.7版本默认格式</p>\n</li>\n</ul>\n</li>\n<li><p>compact结构</p>\n<p><img src=\"/mysql/learn-mysql-017/row_compact.png\" loading=\"lazy\"></p>\n<ul>\n<li><p>variable string length list：变长字段列表，表示有多少个变长字段，且序号逆序显示</p>\n</li>\n<li><p>null flag：是否有null值</p>\n</li>\n<li><p>rowid：B+树索引键值</p>\n</li>\n<li><p>trx id：事务ID，6个字节</p>\n</li>\n<li><p>roll pointer：回滚指针，7个字节</p>\n</li>\n</ul>\n</li>\n<li><p>compact示例</p>\n<ul>\n<li><p>创建mytest表，格式为compact，且没有显示定义主键和非空唯一健，故使用系统定义的ROWID。并插入3条记录</p>\n<p><img src=\"/mysql/learn-mysql-017/compact_text.png\" loading=\"lazy\"></p>\n</li>\n<li><p>将mytest表结构进行dump。图中红色部分对应第一条记录，黄色部分对应第二条记录，深蓝色部分对应第三条记录</p>\n<p><img src=\"/mysql/learn-mysql-017/mytest_dump.png\" loading=\"lazy\"></p>\n</li>\n<li><p>将红色部分对应的第一条记录进行解析</p>\n<p><img src=\"/mysql/learn-mysql-017/mytest_compact_first_row.png\" loading=\"lazy\"></p>\n<ol>\n<li><p>variable string length list</p>\n<p>03 02 01 ，表示有三个变长字段(varchar，varbinary，text等)，且逆序存放(为了提高CPU的cache的命中率)</p>\n</li>\n<li><p>null flag</p>\n<p>00，表示记录中不存在null</p>\n</li>\n<li><p>record header</p>\n<p>5个字节，比较底层(比如看该记录有没有被删除)</p>\n</li>\n<li><p>rowID</p>\n<p>主键ID, 00 00 00 2b 68 00，从这个值可以看出，不是每张表从1开始递增的，是全局的ROWID</p>\n</li>\n<li><p>TransactionID</p>\n<p>事务ID</p>\n</li>\n<li><p>roll pointer</p>\n<p>回滚指针</p>\n</li>\n</ol>\n</li>\n<li><p>char和varchar的区别</p>\n<blockquote>\n<p>结果：</p>\n<p>在多字符集(UTF8mb4)下：</p>\n<ol>\n<li><p>char(N)中存储的数据长度为N-4N，当存储数据长度为M，未达到N时，则填充空格，且空格的长度取最小的长度N-M，而不是4N-M</p>\n</li>\n<li><p>varchar(N)则不填充空格</p>\n</li>\n</ol>\n<p>注意：char数据本身是定长数据，但是中多字节字符集下，表现行为和varchar类似，失去了原来的优势，当数据更新变长后可能无法原地更新</p>\n</blockquote>\n</li>\n<li><p>原地更新(in place update)</p>\n<p><img src=\"/mysql/learn-mysql-017/in_place_update.png\" loading=\"lazy\"></p>\n<ul>\n<li><p>原地更新不会占用新的物理空间</p>\n</li>\n<li><p>非原地更新需要删除(物理删除)，原来的空间数据，然后将更新后的数据插入到页的后面</p>\n</li>\n<li><p>删除的数据空间，会插入到free_list链表到头部</p>\n</li>\n<li><p>原地更新不会触发分裂</p>\n</li>\n</ul>\n<blockquote>\n<p>free_list是将页中被删除的空间串联在一起(组成一个链表)，当有数据被插入到页内时，先看下free_list中第一个空间的大小，如果空间合适，就将该记录插入到第一个空间中去，如果不合适，直接插入到页的尾部剩余空间。(不去查看free_list的第二个空间)。当页的数据被插满了，不会马上进行分页，而是进行reorganize操作，即将页内的数据在内存中进行整理，然后覆盖原来的页(不影响性能)，所以innodb不需要碎片整理。</p>\n</blockquote>\n</li>\n<li><p>Reorganize</p>\n<p><img src=\"/mysql/learn-mysql-017/Reorganize.png\" loading=\"lazy\"></p>\n</li>\n</ul>\n</li>\n<li><p>dynamic</p>\n<p>dynamic相比compact，优化了大对象记录的存储</p>\n<p>假设有一条记录有A，B，C，D 四列，其中D列的是text类型，且含有2W个字节的长度。</p>\n<ul>\n<li><p>compact</p>\n<p>compact会存储text中的前768个字节的数据，剩余的数据通过20个字节的指针指向溢出页</p>\n<p><img src=\"/mysql/learn-mysql-017/compact_data_type_for_text.png\" loading=\"lazy\"></p>\n<blockquote>\n<p>相对compact，dynamic在一个页中存储的记录数更多(因为有768字节的前缀，一条记录的字节数假设时800字节，那么16k的页只能存放20条数据，而之前我们测算可以存放80条记录)。这样一来，B+树的高度可能会变高，读取IO次数可能会变多</p>\n<p>一个页能存放的记录越多，则性能越优</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-Mysql基于ibd文件恢复数据","url":"/mysql/learn-mysql-023/","content":"<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FueW9uZ2ppbi9teXNxbF9pYmQ=\">mysql_ibd<i class=\"fa fa-external-link-alt\"></i></span>是一个用于从mysql的ibd文件导入数据库表的脚本，针对innodb存储引擎。</p>\n<p>如果您的数据表使用的是MyISAM引擎，请移步<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL2ltcG9ydC10YWJsZS5odG1s\">mysql文档<i class=\"fa fa-external-link-alt\"></i></span>，使用<code>import table from</code>从frm和MYD文件恢复表数据。</p>\n<p>对于innodb引擎，在mysql8以前的版本下，每个表在数据目录下有frm文件和ibd文件，前者是表结构，后者是表数据。从mysql8开始，表的结构信息等元数据通过sdi保存，sdi嵌入到ibd文件里面。所以一个表只对应一个数据文件。  </p>\n<p>对于mysql8之前版本有frm文件的情况，mysql提供了<code>mysqlfrm</code>工具可以从frm生成建表语句。但对于mysql8之后版本，只提供了<code>ibd2sdi</code>工具从ibd文件生成sdi文件（JSON形式的表结构），不能直接生成sql语句。</p>\n<p>这个项目支持了下面两个功能：</p>\n<ul>\n<li>对于mysql8之后版本，支持从ibd生成建表语句</li>\n<li>对任意版本mysql，支持表结构恢复后，<strong>ibd文件批量导入表数据</strong></li>\n</ul>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><h3 id=\"有frm和ibd文件-mysql5-6-x2F-mysql5-7\"><a href=\"#有frm和ibd文件-mysql5-6-x2F-mysql5-7\" class=\"headerlink\" title=\"有frm和ibd文件(mysql5.6&#x2F;mysql5.7)\"></a>有frm和ibd文件(mysql5.6&#x2F;mysql5.7)</h3><p>请参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qYW1lc2luZ29sZC5jb20vcmVzdG9yaW5nLW15c3FsLWRhdGFiYXNlLWZybS1pYmQ=\">这篇文章<i class=\"fa fa-external-link-alt\"></i></span>或<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYmEuc3RhY2tleGNoYW5nZS5jb20vYS83MTc4NQ==\">这个回答<i class=\"fa fa-external-link-alt\"></i></span>，从frm文件生成建表语句，执行创建表结构。<br>如果表比较少，可以直接按上面的文章中的方法，手动从ibd导入表数据。<br>如果表比较多，可以使用本脚本，修改<code>config.yml</code>配置文件，更新目录和数据库信息，使用命令<code>python main.py load_data</code>导入数据到数据库即可。</p>\n<h3 id=\"只有ibd文件-mysql8\"><a href=\"#只有ibd文件-mysql8\" class=\"headerlink\" title=\"只有ibd文件(mysql8)\"></a>只有ibd文件(mysql8)</h3><blockquote>\n<p>尽量保持新数据库和原数据库版本一致，否则可能在导入数据时出现错误。</p>\n</blockquote>\n<ol>\n<li><p>修改<code>config.yml</code>中的<code>input_ibds</code>和<code>output</code>项，设置为ibd文件目录</p>\n<blockquote>\n<p>input_ibds存放的是备份的ibd文件的目录</p>\n<p>output是保存生成sql的目录</p>\n</blockquote>\n</li>\n<li><p>执行<code>python main.py tosql</code>，从ibd文件生成sdi和sql文件</p>\n</li>\n<li><p>检查sql文件并执行，创建空表</p>\n</li>\n<li><p>修改<code>config.yml</code>中<code>mysql_db_dir</code>和<code>db_info</code>项，设置为新数据库的数据目录</p>\n<blockquote>\n<p>mysql_db_dir是新数据库的ibd文件目录</p>\n<p>db_info时新数据库的链接参数配置</p>\n</blockquote>\n</li>\n<li><p>执行<code>python main.py load_data</code>从ibd文件批量导入数据到数据库（请在数据库服务器上运行）</p>\n</li>\n</ol>\n<h3 id=\"相关问题\"><a href=\"#相关问题\" class=\"headerlink\" title=\"相关问题\"></a>相关问题</h3><p><strong>Schema mismatch (Clustered index validation failed. Because the .cfg file is missing, table definition of the IBD file could be different. Or the data file itself is already corrupted.)</strong><br>在mysql8之后的ibd导入时，偶尔会出现这个错误。使用<code>ibd2sdi</code>工具从新表生成sdi，对比新旧的sdi文件，基本都是一样的，暂时不确定原因。遇到这个错误暂时只能用其他手段恢复表数据了。如果哪位朋友解决了这个问题，请打开issue告知~</p>\n<p><strong>查看自增起始值</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> information_schema.`TABLES` <span class=\"keyword\">where</span> table_name <span class=\"operator\">=</span> <span class=\"string\">&#x27;employees&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><strong>自增起始值问题</strong><br>从ibd文件导入数据后，表的自增列的起始值依然是0，在插入新数据的时候会报错，可使用下面命令手动查询恢复：  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">max</span>(id) <span class=\"keyword\">from</span> `mytable`;</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> `mytable` AUTO_INCREMENT<span class=\"operator\">=</span>val<span class=\"operator\">+</span><span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-MySQL知识点总结","url":"/mysql/learn-mysql-022/","content":"<blockquote>\n<p>MySQL 这一块的知识还是挺多的，问深度的话， 一般都是如何调优的，当然少不了 MySQL 的基础等知识。</p>\n</blockquote>\n<h3 id=\"数据库引擎-innodb-与-myisam-的区别\"><a href=\"#数据库引擎-innodb-与-myisam-的区别\" class=\"headerlink\" title=\"数据库引擎 innodb 与 myisam 的区别\"></a>数据库引擎 innodb 与 myisam 的区别</h3><h4 id=\"InnoDB\"><a href=\"#InnoDB\" class=\"headerlink\" title=\"InnoDB\"></a>InnoDB</h4><p>是 MySQL 默认的<strong>事务型</strong>存储引擎，只有在需要它不支持的特性时，才考虑使用其它存储引擎。</p>\n<p>实现了四个标准的隔离级别，默认级别是<strong>可重复读</strong> (REPEATABLE READ)。在可重复读隔离级别下，<strong>通过多版本并发控制 (MVCC)+ 间隙锁 (Next-Key Locking) 防止幻影读。</strong></p>\n<p>主索引是<strong>聚簇索引</strong>，在索引中保存了数据，从而避免直接读取磁盘，因此对查询性能有很大的提升。</p>\n<p>内部做了很多优化，包括从磁盘读取数据时采用的<strong>可预测性读</strong>、能够加快读操作并且自动创建的<strong>自适应哈希索引</strong>、能够加速插入操作的插入缓冲区等。</p>\n<p>支持真正的<strong>在线热备份</strong>。其它存储引擎不支持在线热备份，要获取一致性视图需要停止对所有表的写入，而在读写混合场景中，停止写入可能也意味着停止读取。</p>\n<h4 id=\"MyISAM\"><a href=\"#MyISAM\" class=\"headerlink\" title=\"MyISAM\"></a>MyISAM</h4><p>设计简单，数据以<strong>紧密格式存储</strong>。对于只读数据，或者表比较小、可以容忍修复操作，则依然可以使用它。</p>\n<p>提供了大量的特性，包括<strong>压缩表</strong>、<strong>空间数据索引</strong>等。</p>\n<p><strong>不支持事务</strong>。</p>\n<p><strong>不支持行级锁</strong>，只能对整张表加锁，读取时会对需要读到的所有表加共享锁，写入时则对表加排它锁。但在表有读取操作的同时，也可以往表中插入新的记录，这被称为并发插入 (CONCURRENT INSERT)。</p>\n<p>可以手工或者自动执行检查和修复操作，但是和事务恢复以及崩溃恢复不同，可能导致一些数据丢失，而且修复操作是非常慢的。</p>\n<p>如果指定了 DELAY_KEY_WRITE 选项，在每次修改执行完成时，不会立即将修改的索引数据写入磁盘，而是会写到内存中的键缓冲区，只有在清理键缓冲区或者关闭表的时候才会将对应的索引块写入磁盘。这种方式可以极大的提升写入性能，但是在数据库或者主机崩溃时会造成索引损坏，需要执行修复操作。</p>\n<h4 id=\"比较\"><a href=\"#比较\" class=\"headerlink\" title=\"比较\"></a>比较</h4><ul>\n<li><strong>事务</strong>: InnoDB 是事务型的，可以使用 Commit 和 Rollback 语句。</li>\n<li><strong>并发</strong>: MyISAM 只支持表级锁，而 InnoDB 还支持行级锁。</li>\n<li><strong>外键</strong>: InnoDB 支持外键。</li>\n<li><strong>备份</strong>: InnoDB 支持在线热备份。</li>\n<li><strong>崩溃恢复</strong>: MyISAM 崩溃后发生损坏的概率比 InnoDB 高很多，而且恢复的速度也更慢。</li>\n<li><strong>其它特性</strong>: MyISAM 支持压缩表和空间数据索引。</li>\n</ul>\n<h3 id=\"MySQL-是如何执行一条-SQL-的\"><a href=\"#MySQL-是如何执行一条-SQL-的\" class=\"headerlink\" title=\"MySQL 是如何执行一条 SQL 的\"></a>MySQL 是如何执行一条 SQL 的</h3><p><strong>MySQL 内部可以分为服务层和存储引擎层两部分：</strong></p>\n<ol>\n<li><strong>服务层包括连接器、查询缓存、分析器、优化器、执行器等</strong>，涵盖 MySQL 的大多数核心服务功能，以及所有的内置函数（如日期、时间、数学和加密函数等），所有跨存储引擎的功能都在这一层实现，比如存储过程、触发器、视图等。</li>\n<li><strong>存储引擎层负责数据的存储和提取。</strong>其架构模式是插件式的，支持 InnoDB、MyISAM、Memory 等多个存储引擎。现在最常用的存储引擎是 InnoDB，它从 MySQL 5.5.5 版本开始成为了默认的存储引擎。</li>\n</ol>\n<p><strong>Server 层按顺序执行 sql 的步骤为：</strong></p>\n<p>客户端请求 -&gt; 连接器（验证用户身份，给予权限） -&gt; 查询缓存（存在缓存则直接返回，不存在则执行后续操作）-&gt; 分析器（对 SQL 进行词法分析和语法分析操作） -&gt; 优化器（主要对执行的 sql 优化选择最优的执行方案方法） -&gt; 执行器（执行时会先看用户是否有执行权限，有才去使用这个引擎提供的接口）-&gt; 去引擎层获取数据返回（如果开启查询缓存则会缓存查询结果）</p>\n<p><strong>简单概括</strong>：</p>\n<ul>\n<li><strong>连接器</strong>：管理连接、权限验证；</li>\n<li><strong>查询缓存</strong>：命中缓存则直接返回结果；</li>\n<li><strong>分析器</strong>：对 SQL 进行词法分析、语法分析；（判断查询的 SQL 字段是否存在也是在这步）</li>\n<li><strong>优化器</strong>：执行计划生成、选择索引；</li>\n<li><strong>执行器</strong>：操作引擎、返回结果；</li>\n<li><strong>存储引擎</strong>：存储数据、提供读写接口。</li>\n</ul>\n<h3 id=\"mysql-的-acid-原理\"><a href=\"#mysql-的-acid-原理\" class=\"headerlink\" title=\"mysql 的 acid 原理\"></a>mysql 的 acid 原理</h3><p><strong>ACID 嘛，原子性 (Atomicity)、一致性 (Consistency)、隔离性 (Isolation)、持久性 (Durability)！</strong></p>\n<p>我们以从 A 账户转账 50 元到 B 账户为例进行说明一下 ACID，四大特性。</p>\n<h4 id=\"原子性\"><a href=\"#原子性\" class=\"headerlink\" title=\"原子性\"></a>原子性</h4><p>根据定义，原子性是指一个事务是一个不可分割的工作单位，其中的操作要么都做，要么都不做。即要么转账成功，要么转账失败，是不存在中间的状态！</p>\n<p><strong>如果无法保证原子性会怎么样？</strong></p>\n<p>OK，就会出现<strong>数据不一致</strong>的情形，A 账户减去 50 元，而 B 账户增加 50 元操作失败。系统将无故丢失 50 元～</p>\n<h4 id=\"隔离性\"><a href=\"#隔离性\" class=\"headerlink\" title=\"隔离性\"></a>隔离性</h4><p>根据定义，隔离性是指多个事务并发执行的时候，<strong>事务内部的操作与其他事务是隔离的</strong>，并发执行的各个事务之间不能互相干扰。</p>\n<p><strong>如果无法保证隔离性会怎么样？</strong></p>\n<p>OK，假设 A 账户有 200 元，B 账户 0 元。A 账户往 B 账户转账两次，金额为 50 元，分别在两个事务中执行。如果无法保证隔离性，会出现下面的情形</p>\n<p>如图所示，如果不保证隔离性，A 扣款两次，而 B 只加款一次，凭空消失了 50 元，依然出现了<strong>数据不一致</strong>的情形！</p>\n<h4 id=\"持久性\"><a href=\"#持久性\" class=\"headerlink\" title=\"持久性\"></a>持久性</h4><p>根据定义，<strong>持久性是指事务一旦提交，它对数据库的改变就应该是永久性的</strong>。接下来的其他操作或故障不应该对其有任何影响。</p>\n<p><strong>如果无法保证持久性会怎么样？</strong></p>\n<p>在 MySQL 中，为了解决 CPU 和磁盘速度不一致问题，MySQL 是将磁盘上的数据加载到内存，对内存进行操作，然后再回写磁盘。好，假设此时宕机了，在内存中修改的数据全部丢失了，持久性就无法保证。</p>\n<p>设想一下，系统提示你转账成功。但是你发现金额没有发生任何改变，此时数据出现了不合法的数据状态，我们将这种状态认为是<strong>数据不一致</strong>的情形。</p>\n<h4 id=\"一致性\"><a href=\"#一致性\" class=\"headerlink\" title=\"一致性\"></a>一致性</h4><p>根据定义，一致性是指事务执行前后，数据处于一种合法的状态，这种状态是语义上的而不是语法上的。 那什么是合法的数据状态呢？ oK，这个状态是满足预定的约束就叫做合法的状态，再通俗一点，这状态是由你自己来定义的。<strong>满足这个状态，数据就是一致的，不满足这个状态，数据就是不一致的</strong>！</p>\n<p><strong>如果无法保证一致性会怎么样？</strong></p>\n<ul>\n<li>例一：A 账户有 200 元，转账 300 元出去，此时 A 账户余额为 - 100 元。你自然就发现了此时数据是不一致的，为什么呢？因为你定义了一个状态，余额这列必须大于 0。</li>\n<li>例二：A 账户 200 元，转账 50 元给 B 账户，A 账户的钱扣了，但是 B 账户因为各种意外，余额并没有增加。你也知道此时数据是不一致的，为什么呢？因为你定义了一个状态，要求 A+B 的余额必须不变。</li>\n</ul>\n<h4 id=\"mysql-怎么保证一致性？\"><a href=\"#mysql-怎么保证一致性？\" class=\"headerlink\" title=\"mysql 怎么保证一致性？\"></a>mysql 怎么保证一致性？</h4><p>OK，这个问题分为两个层面来说。 <strong>从数据库层面</strong>，数据库通过原子性、隔离性、持久性来保证一致性。也就是说 ACID 四大特性之中，C (一致性) 是目的，A (原子性)、I (隔离性)、D (持久性) 是手段，是为了保证一致性，数据库提供的手段。数据库必须要实现 AID 三大特性，才有可能实现一致性。例如，原子性无法保证，显然一致性也无法保证。</p>\n<p>但是，如果你在事务里故意写出违反约束的代码，一致性还是无法保证的。例如，你在转账的例子中，你的代码里故意不给 B 账户加钱，那一致性还是无法保证。因此，还必须从应用层角度考虑。</p>\n<p><strong>从应用层面</strong>，通过代码判断数据库数据是否有效，然后决定回滚还是提交数据！</p>\n<h4 id=\"mysql-怎么保证原子性\"><a href=\"#mysql-怎么保证原子性\" class=\"headerlink\" title=\"mysql 怎么保证原子性\"></a>mysql 怎么保证原子性</h4><p>OK，是利用 Innodb 的 <code>undo log</code>。 <code>undo log</code> 名为回滚日志，是实现原子性的关键，当事务回滚时能够<strong>撤销所有已经成功执行的 sql 语句</strong>，他需要记录你要回滚的相应日志信息。 例如</p>\n<ul>\n<li>(1) 当你 delete 一条数据的时候，就需要记录这条数据的信息，回滚的时候，insert 这条旧数据</li>\n<li>(2) 当你 update 一条数据的时候，就需要记录之前的旧值，回滚的时候，根据旧值执行 update 操作</li>\n<li>(3) 当年 insert 一条数据的时候，就需要这条记录的主键，回滚的时候，根据主键执行 delete 操作</li>\n</ul>\n<p><code>undo log</code> 记录了这些回滚需要的信息，当事务执行失败或调用了 rollback，导致事务需要回滚，便可以利用 undo log 中的信息将数据回滚到修改之前的样子。</p>\n<h4 id=\"mysql-怎么保证持久性的\"><a href=\"#mysql-怎么保证持久性的\" class=\"headerlink\" title=\"mysql 怎么保证持久性的\"></a>mysql 怎么保证持久性的</h4><p>OK，是利用 Innodb 的 <code>redo log</code>。 正如之前说的，Mysql 是先把磁盘上的数据加载到内存中，在内存中对数据进行修改，再刷回磁盘上。如果此时突然宕机，内存中的数据就会丢失。 <em>怎么解决这个问题？</em> 简单啊，事务提交前直接把数据写入磁盘就行啊。 <em>这么做有什么问题？</em></p>\n<ul>\n<li>只修改一个页面里的一个字节，就要将整个页面刷入磁盘，太浪费资源了。毕竟一个页面 16kb 大小，你只改其中一点点东西，就要将 16kb 的内容刷入磁盘，听着也不合理。</li>\n<li>毕竟一个事务里的 SQL 可能牵涉到多个数据页的修改，而这些数据页可能不是相邻的，也就是属于随机 IO。显然操作随机 IO，速度会比较慢。</li>\n</ul>\n<p>于是，决定采用 <code>redo log</code> 解决上面的问题。当做数据修改的时候，不仅在内存中操作，还会在 <code>redo log</code> 中记录这次操作。当事务提交的时候，会将 <code>redo log</code> 日志进行刷盘 (<code>redo log</code> 一部分在内存中，一部分在磁盘上)。当数据库宕机重启的时候，会将 <code>redo log</code> 中的内容恢复到数据库中，再根据 <code>undo log</code> 和 <code>binlog</code> 内容决定回滚数据还是提交数据。</p>\n<p><strong>采用 redo log 的好处？</strong></p>\n<p>其实好处就是将 <code>redo log</code> 进行刷盘比对数据页刷盘效率高，具体表现如下</p>\n<ul>\n<li><code>redo log</code> 体积小，毕竟只记录了哪一页修改了啥，因此体积小，刷盘快。</li>\n<li><code>redo log</code> 是一直往末尾进行追加，属于顺序 IO。效率显然比随机 IO 来的快。</li>\n</ul>\n<h4 id=\"mysql-怎么保证隔离性\"><a href=\"#mysql-怎么保证隔离性\" class=\"headerlink\" title=\"mysql 怎么保证隔离性\"></a>mysql 怎么保证隔离性</h4><p>利用的是锁和 MVCC 机制。</p>\n<h3 id=\"并发事务带来的问题\"><a href=\"#并发事务带来的问题\" class=\"headerlink\" title=\"并发事务带来的问题\"></a>并发事务带来的问题</h3><h4 id=\"脏读\"><a href=\"#脏读\" class=\"headerlink\" title=\"脏读\"></a>脏读</h4><p><img src=\"/mysql/learn-mysql-022/dd782132-d830-4c55-9884-cfac0a541b8e.png\" loading=\"lazy\"></p>\n<h4 id=\"丢弃修改\"><a href=\"#丢弃修改\" class=\"headerlink\" title=\"丢弃修改\"></a>丢弃修改</h4><p>T1 和 T2 两个事务都对一个数据进行修改，<strong>T1 先修改，T2 随后修改，T2 的修改覆盖了 T1 的修改</strong>。例如：事务 1 读取某表中的数据 A&#x3D;20，事务 2 也读取 A&#x3D;20，事务 1 修改 A&#x3D;A-1，事务 2 也修改 A&#x3D;A-1，最终结果 A&#x3D;19，事务 1 的修改被丢失。</p>\n<p><img src=\"/mysql/learn-mysql-022/88ff46b3-028a-4dbb-a572-1f062b8b96d3.png\" loading=\"lazy\"></p>\n<h4 id=\"不可重复读\"><a href=\"#不可重复读\" class=\"headerlink\" title=\"不可重复读\"></a>不可重复读</h4><p><strong>T2 读取一个数据，T1 对该数据做了修改。如果 T2 再次读取这个数据，此时读取的结果和第一次读取的结果不同</strong>。</p>\n<p><img src=\"/mysql/learn-mysql-022/c8d18ca9-0b09-441a-9a0c-fb063630d708.png\" loading=\"lazy\"></p>\n<h4 id=\"幻读\"><a href=\"#幻读\" class=\"headerlink\" title=\"幻读\"></a>幻读</h4><p><strong>T1 读取某个范围的数据，T2 在这个范围内插入新的数据，T1 再次读取这个范围的数据，此时读取的结果和和第一次读取的结果不同</strong>。</p>\n<p><img src=\"/mysql/learn-mysql-022/72fe492e-f1cb-4cfc-92f8-412fb3ae6fec.png\" loading=\"lazy\"></p>\n<h4 id=\"不可重复读和幻读区别\"><a href=\"#不可重复读和幻读区别\" class=\"headerlink\" title=\"不可重复读和幻读区别\"></a>不可重复读和幻读区别</h4><p><strong>不可重复读的重点是修改，幻读的重点在于新增或者删除</strong>。</p>\n<p>例 1（同样的条件，你读取过的数据，再次读取出来发现值不一样了 ）：事务 1 中的 A 先生读取自己的工资为 1000 的操 作还没完成，事务 2 中的 B 先生就修改了 A 的工资为 2000，导 致 A 再读自己的工资时工资变为 2000；这就是不可重复读。</p>\n<p>例 2（同样的条件，第 1 次和第 2 次读出来的记录数不一样 ）：假某工资单表中工资大于 3000 的有 4 人，事务 1 读取了所 有工资大于 3000 的人，共查到 4 条记录，这时事务 2 又插入了一条工资大于 3000 的记录，事务 1 再次读取时查到的记 录就变为了 5 条，这样就导致了幻读。</p>\n<h3 id=\"数据库的隔离级别\"><a href=\"#数据库的隔离级别\" class=\"headerlink\" title=\"数据库的隔离级别\"></a>数据库的隔离级别</h3><ol>\n<li>未提交读，事务中发生了修改，即使没有提交，其他事务也是可见的，比如对于一个数 A 原来 50 修改为 100，但是我还没有提交修改，另一个事务看到这个修改，而这个时候原事务发生了回滚，这时候 A 还是 50，但是另一个事务看到的 A 是 100. <strong>可能会导致脏读、幻读或不可重复读</strong></li>\n<li>提交读，对于一个事务从开始直到提交之前，所做的任何修改是其他事务不可见的，举例就是对于一个数 A 原来是 50，然后提交修改成 100，这个时候另一个事务在 A 提交修改之前，读取的 A 是 50，刚读取完，A 就被修改成 100，这个时候另一个事务再进行读取发现 A 就突然变成 100 了；<strong>可以阻止脏读，但是幻读或不可重复读仍有可能发生</strong></li>\n<li>可重复读，就是对一个记录读取多次的记录是相同的，比如对于一个数 A 读取的话一直是 A，前后两次读取的 A 是一致的；<strong>可以阻止脏读和不可重复读，但幻读仍有可能发生。</strong></li>\n<li>可串行化读，在并发情况下，和串行化的读取的结果是一致的，没有什么不同，比如不会发生脏读和幻读；<strong>该级别可以防止脏读、不可重复读以及幻读。</strong></li>\n</ol>\n<table><thead><tr><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻影读</th></tr></thead><tbody><tr><td>READ-UNCOMMITTED</td><td>√</td><td>√</td><td>√</td></tr><tr><td>READ-COMMITTED</td><td>×</td><td>√</td><td>√</td></tr><tr><td>REPEATABLE-READ</td><td>×</td><td>×</td><td>√</td></tr><tr><td>SERIALIZABLE</td><td>×</td><td>×</td><td>×</td></tr></tbody></table>\n\n<p>MySQL InnoDB 存储引擎的默认支持的隔离级别是 REPEATABLE-READ（可重读）。</p>\n<p><strong>这里需要注意的是</strong>：与 SQL 标准不同的地方在于 InnoDB 存储引擎在 REPEATABLE-READ（可重读）事务隔离级别 下使用的是 <strong>Next-Key Lock 锁</strong>算法，因此可以避免幻读的产生，这与其他数据库系统 (如 SQL Server) 是不同的。所以 说 InnoDB 存储引擎的默认支持的隔离级别是 REPEATABLE-READ（可重读） 已经可以完全保证事务的隔离性要 求，即达到了 SQL 标准的 SERIALIZABLE (可串行化) 隔离级别。</p>\n<p>因为隔离级别越低，事务请求的锁越少，所以大部分数据库系统的隔离级别都是 READ-COMMITTED (读取提交内 容):，但是你要知道的是 InnoDB 存储引擎默认使用 <strong>REPEATABLE-READ（可重读）并不会有任何性能损失</strong>。</p>\n<p>InnoDB 存储引擎在分布式事务 的情况下一般会用到 SERIALIZABLE (可串行化) 隔离级别。</p>\n<h3 id=\"为什么使用索引\"><a href=\"#为什么使用索引\" class=\"headerlink\" title=\"为什么使用索引\"></a>为什么使用索引</h3><ul>\n<li>通过创建<strong>唯一性索引</strong>，可以保证数据库表中每一行数据的唯一性。</li>\n<li>可以大大<strong>加快数据的检索速度</strong>，这也是创建索引的最主要的原因。</li>\n<li>帮助服务器<strong>避免排序和临时表</strong></li>\n<li>将<strong>随机 IO 变为顺序 IO</strong>。</li>\n<li>可以加速<strong>表和表之间的连接</strong>，特别是在实现数据的参考完整性方面特别有意义。</li>\n</ul>\n<h3 id=\"索引这么多优点，为什么不对表总的每一列创建一个索引\"><a href=\"#索引这么多优点，为什么不对表总的每一列创建一个索引\" class=\"headerlink\" title=\"索引这么多优点，为什么不对表总的每一列创建一个索引\"></a>索引这么多优点，为什么不对表总的每一列创建一个索引</h3><ul>\n<li>当对表中的数据进行增加、删除和修改的时候，<strong>索引也要动态的维护</strong>，这样就降低了数据的维护速度。</li>\n<li><strong>索引需要占物理空间</strong>，除了数据表占数据空间之外，每一个索引还要占一定的物理空间，如果要建立簇索引，那么需要的空间就会更大。</li>\n<li><strong>创建索引和维护索引要耗费时间</strong>，这种时间随着数据量的增加而增加</li>\n</ul>\n<h3 id=\"索引如何提高查询速度的\"><a href=\"#索引如何提高查询速度的\" class=\"headerlink\" title=\"索引如何提高查询速度的\"></a>索引如何提高查询速度的</h3><p>将无序的数据变成相对有序的数据（就像查有目的一样）</p>\n<h3 id=\"使用索引的注意事项\"><a href=\"#使用索引的注意事项\" class=\"headerlink\" title=\"使用索引的注意事项\"></a>使用索引的注意事项</h3><ul>\n<li>在经常需要搜索的列上，可以加快搜索的速度；</li>\n<li>在经常使用在 where 子句中的列上面创建索引，加快条件的判断速度。</li>\n<li>在经常需要排序的列上创建索引，因为索引已经排序，这样查询可以利用索引的排序，加快排序查询时间</li>\n<li>在中到大型表索引都是非常有效的，但是特大型表的维护开销会很大，不适合建索引</li>\n<li>在经常用到连续的列上，这些列主要是由一些外键，可以加快连接的速度</li>\n<li>避免 where 子句中对字段施加函数，这会造成无法命中索引</li>\n<li>在使用 InnoDB 时使用与业务无关的自增主键作为主键，即使用逻辑主键，而不要使用业务主键。</li>\n<li><strong>将打算加索引的列设置为 NOT NULL，否则将导致引擎放弃使用索引而进行全表扫描</strong></li>\n<li>删除长期未使用的索引，不用的索引的存在会造成不必要的性能损耗</li>\n<li>在使用 limit offset 查询缓存时，可以借助索引来提高性能。</li>\n</ul>\n<h3 id=\"MySQL-索引主要使用的两种数据结构\"><a href=\"#MySQL-索引主要使用的两种数据结构\" class=\"headerlink\" title=\"MySQL 索引主要使用的两种数据结构\"></a>MySQL 索引主要使用的两种数据结构</h3><ul>\n<li><strong>哈希索引</strong>，对于哈希索引来说，底层的数据结构肯定是哈希表，因此在绝大多数需求为单条记录查询的时候，可以选择哈希索引，查询性能最快；其余大部分场景，建议选择 BTree 索引</li>\n<li><strong>BTree 索引</strong>，Mysql 的 BTree 索引使用的是 B 树中的 B+Tree 但对于主要的两种存储引擎（MyISAM 和 InnoDB）的实现方式是不同的。</li>\n</ul>\n<h3 id=\"myisam-和-innodb-实现-btree-索引方式的区别\"><a href=\"#myisam-和-innodb-实现-btree-索引方式的区别\" class=\"headerlink\" title=\"myisam 和 innodb 实现 btree 索引方式的区别\"></a>myisam 和 innodb 实现 btree 索引方式的区别</h3><ul>\n<li>MyISAM，<strong>B+Tree 叶节点的 data 域存放的是数据记录的地址</strong>，在索引检索的时候，首先按照 B+Tree 搜索算法搜索索引，如果指定的 key 存在，则取出其 data 域的值，然后以 data 域的值为地址读区相应的数据记录，这被称为 “非聚簇索引”</li>\n<li>InnoDB，其数据文件本身就是索引文件，相比 MyISAM，<strong>索引文件和数据文件是分离的</strong>，<strong>其表数据文件本身就是按 B+Tree 组织的一个索引结构，树的节点 data 域保存了完整的数据记录</strong>，这个索引的 key 是数据表的主键，因此 InnoDB 表数据文件本身就是主索引。这被称为 “聚簇索引” 或者聚集索引，而其余的索引都作为辅助索引，辅助索引的 data 域存储相应记录主键的值而不是地址，这也是和 MyISAM 不同的地方，在根据主索引搜索时，直接找到 key 所在的节点即可取出数据；在根据辅助索引查找时，则需要先取出主键的值，在走一遍主索引。因此，在设计表的时候，不建议使用过长的字段为主键，也不建议使用非单调的字段作为主键，这样会造成主索引频繁分裂。</li>\n</ul>\n<h3 id=\"数据库结构优化\"><a href=\"#数据库结构优化\" class=\"headerlink\" title=\"数据库结构优化\"></a>数据库结构优化</h3><ul>\n<li><strong>范式优化</strong>： 比如消除冗余（节省空间。。）</li>\n<li><strong>反范式优化</strong>：比如适当加冗余等（减少 join）</li>\n<li><strong>限定数据的范围</strong>： 务必禁止不带任何限制数据范围条件的查询语句。比如：我们当用户在查询订单历史的时候，我们可以控制在一个月的范围内。</li>\n<li><strong>读 &#x2F; 写分离</strong>： 经典的数据库拆分方案，主库负责写，从库负责读；</li>\n<li><strong>拆分表</strong>：分区将数据在物理上分隔开，不同分区的数据可以制定保存在处于不同磁盘上的数据文件里。这样，当对这个表进行查询时，只需要在表分区中进行扫描，而不必进行全表扫描，明显缩短了查询时间，另外处于不同磁盘的分区也将对这个表的数据传输分散在不同的磁盘 I&#x2F;O，一个精心设置的分区可以将数据传输对磁盘 I&#x2F;O 竞争均匀地分散开。对数据量大的时时表可采取此方法。可按月自动建表分区。</li>\n</ul>\n<p><strong>拆分其实又分垂直拆分和水平拆分：</strong></p>\n<ul>\n<li>案例： 简单购物系统暂设涉及如下表：</li>\n<li><ol>\n<li>产品表（数据量 10w，稳定）</li>\n</ol>\n</li>\n<li><ol>\n<li>订单表（数据量 200w，且有增长趋势）</li>\n</ol>\n</li>\n<li><ol>\n<li>用户表 （数据量 100w，且有增长趋势）</li>\n</ol>\n</li>\n<li>以 mysql 为例讲述下水平拆分和垂直拆分，mysql 能容忍的数量级在百万静态数据可以到千万</li>\n<li><strong>垂直拆分：</strong><ul>\n<li>解决问题：表与表之间的 io 竞争</li>\n<li>不解决问题：单表中数据量增长出现的压力</li>\n<li>方案： 把产品表和用户表放到一个 server 上 订单表单独放到一个 server 上</li>\n</ul>\n</li>\n<li><strong>水平拆分：</strong><ul>\n<li>解决问题：单表中数据量增长出现的压力</li>\n<li>不解决问题：表与表之间的 io 争夺</li>\n</ul>\n</li>\n<li>方案：<strong>用户表</strong> 通过性别拆分为男用户表和女用户表，<strong>订单表</strong> 通过已完成和完成中拆分为已完成订单和未完成订单，<strong>产品表</strong> 未完成订单放一个 server 上，已完成订单表盒男用户表放一个 server 上，女用户表放一个 server 上 (女的爱购物 哈哈)。</li>\n</ul>\n<h3 id=\"主键超键候选键外键是什么\"><a href=\"#主键超键候选键外键是什么\" class=\"headerlink\" title=\"主键超键候选键外键是什么\"></a>主键超键候选键外键是什么</h3><ul>\n<li><strong>超键</strong>：在关系中能唯一标识<strong>元组的属性集</strong>称为关系模式的超键</li>\n<li><strong>候选键</strong>：不含有<strong>多余属性的超键</strong>称为候选键。也就是在候选键中，若再删除属性，就不是键了！</li>\n<li><strong>主键</strong>：<strong>用户选作元组标识的一个候选键程序主键</strong></li>\n<li><strong>外键</strong>：如果关系模式 <strong>R 中属性 K 是其它模式的主键</strong>，那么 <strong>k 在模式 R 中称为外键</strong>。</li>\n</ul>\n<p><strong>举例</strong>：</p>\n<table><thead><tr><th>学号</th><th>姓名</th><th>性别</th><th>年龄</th><th>系别</th><th>专业</th></tr></thead><tbody><tr><td>20020612</td><td>李辉</td><td>男</td><td>20</td><td>计算机</td><td>软件开发</td></tr><tr><td>20060613</td><td>张明</td><td>男</td><td>18</td><td>计算机</td><td>软件开发</td></tr><tr><td>20060614</td><td>王小玉</td><td>女</td><td>19</td><td>物理</td><td>力学</td></tr><tr><td>20060615</td><td>李淑华</td><td>女</td><td>17</td><td>生物</td><td>动物学</td></tr><tr><td>20060616</td><td>赵静</td><td>男</td><td>21</td><td>化学</td><td>食品化学</td></tr><tr><td>20060617</td><td>赵静</td><td>女</td><td>20</td><td>生物</td><td>植物学</td></tr></tbody></table>\n\n<ol>\n<li>超键：于是我们从例子中可以发现 学号是标识学生实体的唯一标识。那么该元组的超键就为学号。除此之外我们还可以把它跟其他属性组合起来，比如：(<code>学号</code>，<code>性别</code>)，(<code>学号</code>，<code>年龄</code>)</li>\n<li>候选键：根据例子可知，学号是一个可以唯一标识元组的唯一标识，因此学号是一个候选键，实际上，候选键是超键的子集，比如 （学号，年龄）是超键，但是它不是候选键。因为它还有了额外的属性。</li>\n<li>主键：简单的说，例子中的元组的候选键为学号，但是我们选定他作为该元组的唯一标识，那么学号就为主键。</li>\n<li>外键是相对于主键的，比如在学生记录里，主键为学号，在成绩单表中也有学号字段，因此学号为成绩单表的外键，为学生表的主键。</li>\n</ol>\n<p><strong>主键为候选键的子集，候选键为超键的子集，而外键的确定是相对于主键的。</strong></p>\n<h3 id=\"drop-delete-与-truncate-的区别\"><a href=\"#drop-delete-与-truncate-的区别\" class=\"headerlink\" title=\"drop,delete 与 truncate 的区别\"></a>drop,delete 与 truncate 的区别</h3><ul>\n<li><p>drop 直接删掉表；</p>\n</li>\n<li><p>truncate 删除表中数据，再插入时自增长 id 又从 1 开始；</p>\n</li>\n<li><p>delete 删除表中数据，可以加 where 字句。</p>\n</li>\n<li><p>DELETE 语句执行删除的过程是每次从表中删除一行，并且同时将该行的删除操作作为事务记录在日志中保存以便进行进行回滚操作。TRUNCATE TABLE 则一次性地从表中删除所有的数据并不把单独的删除操作记录记入日志保存，删除行是不能恢复的。并且在删除的过程中不会激活与表有关的删除触发器。执行速度快。</p>\n</li>\n<li><p>表和索引所占空间。当表被 TRUNCATE 后，这个表和索引所占用的空间会恢复到初始大小，而 DELETE 操作不会减少表或索引所占用的空间。drop 语句将表所占用的空间全释放掉。</p>\n</li>\n<li><p>一般而言，drop &gt; truncate &gt; delete</p>\n</li>\n<li><p>应用范围。TRUNCATE 只能对 TABLE；DELETE 可以是 table 和 view</p>\n</li>\n<li><p>TRUNCATE 和 DELETE 只删除数据，而 DROP 则删除整个表（结构和数据）。</p>\n</li>\n<li><p>truncate 与不带 where 的 delete ：只删除数据，而不删除表的结构（定义）drop 语句将删除表的结构被依赖的约束（constrain), 触发器（trigger) 索引（index); 依赖于该表的存储过程 &#x2F; 函数将被保留，但其状态会变为：invalid。</p>\n</li>\n<li><p>delete 语句为 DML（Data Manipulation Language), 这个操作会被放到 rollback segment 中，事务提交后才生效。如果有相应的 tigger, 执行的时候将被触发。</p>\n</li>\n<li><p>truncate、drop 是 DDL（Data Define Language), 操作立即生效，原数据不放到 rollback segment 中，不能回滚</p>\n</li>\n<li><p>在没有备份情况下，谨慎使用 drop 与 truncate。要删除部分数据行采用 delete 且注意结合 where 来约束影响范围。回滚段要足够大。要删除表用 drop; 若想保留表而将表中数据删除，如果于事务无关，用 truncate 即可实现。如果和事务有关，或老是想触发 trigger, 还是用 delete。</p>\n</li>\n<li><p>Truncate table 表名 速度快，而且效率高，因为: truncate table 在功能上与不带 WHERE 子句的 DELETE 语句相同：二者均删除表中的全部行。但 TRUNCATE TABLE 比 DELETE 速度快，且使用的系统和事务日志资源少。DELETE 语句每次删除一行，并在事务日志中为所删除的每行记录一项。TRUNCATE TABLE 通过释放存储表数据所用的数据页来删除数据，并且只在事务日志中记录页的释放。</p>\n</li>\n<li><p>TRUNCATE TABLE 删除表中的所有行，但表结构及其列、约束、索引等保持不变。新行标识所用的计数值重置为该列的种子。如果想保留标识计数值，请改用 DELETE。如果要删除表定义及其数据，请使用 DROP TABLE 语句。</p>\n</li>\n<li><p>对于由 FOREIGN KEY 约束引用的表，不能使用 TRUNCATE TABLE，而应使用不带 WHERE 子句的 DELETE 语句。由于 TRUNCATE TABLE 不记录在日志中，所以它不能激活触发器。</p>\n</li>\n</ul>\n<h3 id=\"视图的作用，视图可以更改吗\"><a href=\"#视图的作用，视图可以更改吗\" class=\"headerlink\" title=\"视图的作用，视图可以更改吗\"></a>视图的作用，视图可以更改吗</h3><p>视图是虚拟的表，与包含数据的表不一样，视图只包含使用时动态检索数据的查询；不包含任何列或数据。使用视图可以简化复杂的 sql 操作，隐藏具体的细节，保护数据；视图创建后，可以使用与表相同的方式利用它们。</p>\n<p>视图不能被索引，也不能有关联的触发器或默认值，如果视图本身内有 order by 则对视图再次 order by 将被覆盖。</p>\n<p>创建视图：<code>create view xxx as xxxx</code></p>\n<p>对于某些视图比如未使用联结子查询分组聚集函数 Distinct Union 等，是可以对其更新的，对视图的更新将对基表进行更新；但是视图主要用于简化检索，保护数据，并不用于更新，而且大部分视图都不可以更新。</p>\n<h3 id=\"数据库范式\"><a href=\"#数据库范式\" class=\"headerlink\" title=\"数据库范式\"></a>数据库范式</h3><h4 id=\"第一范式\"><a href=\"#第一范式\" class=\"headerlink\" title=\"第一范式\"></a>第一范式</h4><p>在任何一个关系数据库中，第一范式（1NF）是对关系模式的基本要求，不满足第一范式（1NF）的数据库就不是关系数据库。 所谓第一范式（1NF）是指数据库表的每一列都是不可分割的基本数据项，同一列中不能有多个值，即实体中的某个属性不能有多个值或者不能有重复的属性。如果出现重复的属性，就可能需要定义一个新的实体，新的实体由重复的属性构成，新实体与原实体之间为一对多关系。在第一范式（1NF）中表的每一行只包含一个实例的信息。简而言之，<strong>第一范式就是无重复的列</strong>。</p>\n<h4 id=\"第二范式\"><a href=\"#第二范式\" class=\"headerlink\" title=\"第二范式\"></a>第二范式</h4><p>第二范式（2NF）是在第一范式（1NF）的基础上建立起来的，即满足第二范式（2NF）必须先满足第一范式（1NF）。第二范式（2NF）要求数据库表中的每个实例或行必须可以被惟一地区分。为实现区分通常需要为表加上一个列，以存储各个实例的惟一标识。这个惟一属性列被称为主关键字或主键、主码。 第二范式（2NF）要求实体的属性完全依赖于主关键字。所谓完全依赖是指不能存在仅依赖主关键字一部分的属性，如果存在，那么这个属性和主关键字的这一部分应该分离出来形成一个新的实体，新实体与原实体之间是一对多的关系。为实现区分通常需要为表加上一个列，以存储各个实例的惟一标识。简而言之，<strong>第二范式就是非主属性非部分依赖于主关键字</strong>。</p>\n<h4 id=\"第三范式\"><a href=\"#第三范式\" class=\"headerlink\" title=\"第三范式\"></a>第三范式</h4><p>满足第三范式（3NF）必须先满足第二范式（2NF）。简而言之，第三范式（3NF）要求一个数据库表中不包含已在其它表中已包含的非主关键字信息。例如，<strong>存在一个部门信息表，其中每个部门有部门编号（dept_id）、部门名称、部门简介等信息。那么在员工信息表中列出部门编号后就不能再将部门名称、部门简介等与部门有关的信息再加入员工信息表中。如果不存在部门信息表，则根据第三范式（3NF）也应该构建它，否则就会有大量的数据冗余。</strong>简而言之，第三范式就是属性不依赖于其它非主属性。（我的理解是消除冗余）</p>\n<h3 id=\"什么是覆盖索引\"><a href=\"#什么是覆盖索引\" class=\"headerlink\" title=\"什么是覆盖索引\"></a>什么是覆盖索引</h3><p>如果一个索引包含（或者说覆盖）所有需要查询的字段的值，我们就称 之为 “覆盖索引”。我们知道在 InnoDB 存储引 擎中，如果不是主键索引，叶子节点存储的是主键 + 列值。最终还是要 “回表”，也就是要通过主键再查找一次，这样就 会比较慢。覆盖索引就是把要查询出的列和索引是对应的，不做回表操作！</p>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-MySQL 之 InnoDB 表空间","url":"/mysql/learn-mysql-020/","content":"<blockquote>\n<p>MySQL 之 InnoDB 表空间，介绍 MySQL 的 InnoDB 存储引擎表空间结构。</p>\n</blockquote>\n<p>InnoDB 支持许多种类型的表空间，本文重点关注独立表空间和系统表空间的结构。它们的结构比较相似，但是由于系统表空间中额外包含了一些关于整个系统的信息，所以我们先挑简单一点的独立表空间来介绍，稍后再说系统表空间的结构。</p>\n<p>区（Extent）的概念</p>\n<hr>\n<p>表空间中的页实在是太多了，为了更好的管理这些页面，InnoDB 提出了区（英文名：extent）的概念。对于 <strong>16KB 的页</strong>来说，<strong>连续的 64 个页就是一个区</strong>，也就是说<strong>一个区默认占用 1MB 空间大小</strong>。不论是系统表空间还是独立表空间，都可以看成是由若干个区组成的，<strong>每 256 个区被划分成一组</strong>。画个图表示就是这样：</p>\n<p><img src=\"/mysql/learn-mysql-020/modb_20211023_3580f8ea-33a4-11ec-aead-38f9d3cd240d.png\" loading=\"lazy\"></p>\n<p>其中 extent 0 ~ extent 255 这 256 个区算是第一个组，extent 256 ~ extent 511 这 256 个区算是第二个组，extent 512 ~ extent 767 这 256 个区算是第三个组（上图中并未画全第三个组全部的区，请自行脑补），依此类推可以划分更多的组。这些组的头几个页面的类型都是类似的，就像这样：</p>\n<p><img src=\"/mysql/learn-mysql-020/modb_20211023_358ada72-33a4-11ec-aead-38f9d3cd240d.png\" loading=\"lazy\"></p>\n<p>从上图中我们能得到如下信息：</p>\n<ul>\n<li><p>第一个组最开始的 3 个页面的类型是固定的，也就是说 extent 0 这个区最开始的 3 个页面的类型是固定的，分别是：</p>\n</li>\n<li><p><strong>FSP_HDR 类型：这个类型的页面是用来登记整个表空间的一些整体属性以及本组所有的区，也就是 extent 0 ~ extent 255 这 256 个区的属性。需要注意的一点是，<strong><strong>整个</strong></strong>表空间只有一个 FSP_HDR 类型的页面</strong>。</p>\n</li>\n<li><p><strong>IBUF_BITMAP 类型：这个类型的页面是存储本组所有的区的所有页面关于 INSERT BUFFER 的信息</strong>。</p>\n</li>\n<li><p><strong>INODE 类型：这个类型的页面存储了许多称为 INODE 的数据结构</strong>。</p>\n</li>\n<li><p>其余各组最开始的 2 个页面的类型是固定的，也就是说 extent 256、extent 512 这些区最开始的 2 个页面的类型是固定的，分别是：</p>\n</li>\n<li><p><strong>XDES 类型：全称是 extent descriptor，用来登记本组 256 个区的属性，也就是说对于在 extent 256 区中的该类型页面存储的就是 extent 256 ~ extent 511 这些区的属性，对于在 extent 512 区中的该类型页面存储的就是 extent 512 ~ extent 767 这些区的属性</strong>。上边介绍的 <strong>FSP_HDR 类型的页面其实和 XDES 类型的页面的作用类似，只不过 FSP_HDR 类型的页面还会额外存储一些表空间的属性</strong>。</p>\n</li>\n<li><p>IBUF_BITMAP 类型：同上，不再赘述。</p>\n</li>\n</ul>\n<p>宏观的结构就是这样了，里边儿的名词大家也不用记清楚，只要大致记得：表空间被划分为许多连续的区，每个区默认由 64 个页组成，每 256 个区划分为一组，每个组的最开始的几个页面类型是固定的就好了。</p>\n<p>段（Segment）的概念</p>\n<hr>\n<p>如果我们表中数据量很少的话，比如说你的表中只有几十条、几百条数据的话，的确用不到区的概念，因为简单的几个页就能把对应的数据存储起来，但是你架不住表里的记录越来越多呀。从理论上说，不引入区的概念只使用页的概念对存储引擎的运行并没啥影响，但是我们来考虑一下下边这个场景：</p>\n<ul>\n<li>我们每向表中插入一条记录，本质上就是向该表的聚簇索引以及所有二级索引代表的 B + 树的节点中插入数据。而 B + 树的每一层中的页都会形成一个双向链表，如果是以页为单位来分配存储空间的话，双向链表相邻的两个页之间的物理位置可能离得非常远。我们介绍 B + 树索引的适用场景的时候特别提到范围查询只需要定位到最左边的记录和最右边的记录，然后沿着双向链表一直扫描就可以了，而如果链表中相邻的两个页物理位置离得非常远，就是所谓的随机 I&#x2F;O。再一次强调，磁盘的速度和内存的速度差了好几个数量级，随机 I&#x2F;O 是非常慢的，所以我们应该尽量让链表中相邻的页的物理位置也相邻，这样进行范围查询的时候才可以使用所谓的顺序 I&#x2F;O。</li>\n</ul>\n<p>所以才引入了区（extent）的概念，一个区就是在物理位置上连续的 64 个页。在表中数据量大的时候，为某个索引分配空间的时候就不再按照页为单位分配了，而是按照区为单位分配，甚至在表中的数据十分非常特别多的时候，可以一次性分配多个连续的区。虽然可能造成一点点空间的浪费（数据不足填充满整个区），但是从性能角度看，可以消除很多的随机 I&#x2F;O，功大于过。</p>\n<p>我们提到的范围查询，其实是对 B + 树叶子节点中的记录进行顺序扫描，而如果不区分叶子节点和非叶子节点，统统把节点代表的页面放到申请到的区中的话，进行范围扫描的效果就大打折扣了。所以 <strong>InnoDB 对 B + 树的叶子节点和非叶子节点进行了区别对待，也就是说叶子节点有自己独有的区，非叶子节点也有自己独有的区。存放叶子节点的区的集合就算是一个段（segment），存放非叶子节点的区的集合也算是一个段。也就是说一个索引会生成 2 个段，一个叶子节点段，一个非叶子节点段</strong>。</p>\n<p><strong>默认情况下一个使用 InnoDB 存储引擎的表只有一个聚簇索引，一个索引会生成 2 个段，而段是以区为单位申请存储空间的</strong>，一个区默认占用 1M 存储空间，所以默认情况下一个只存了几条记录的小表也需要 2M 的存储空间么？以后每次添加一个索引都要多申请 2M 的存储空间么？这对于存储记录比较少的表简直是天大的浪费。InnoDB 挺节俭的，当然也考虑到了这种情况。这个问题的症结在于到现在为止我们介绍的区都是非常纯粹的，也就是一个区被整个分配给某一个段，或者说区中的所有页面都是为了存储同一个段的数据而存在的，即使段的数据填不满区中所有的页面，那余下的页面也不能挪作他用。<strong>现在为了考虑以完整的区为单位分配给某个段对于数据量较小的表太浪费存储空间的这种情况，InnoDB 提出了一个碎片（fragment）区的概念，也就是在一个碎片区中，并不是所有的页都是为了存储同一个段的数据而存在的，而是碎片区中的页可以用于不同的目的，比如有些页用于段 A，有些页用于段 B，有些页甚至哪个段都不属于。****碎片区直属于表空间，并不属于任何一个段。</strong>所以此后<strong>为某个段分配存储空间的策略</strong>是这样的：</p>\n<ul>\n<li><p><strong>在刚开始向表中插入数据的时候，段是从某个碎片区以单个页面为单位来分配存储空间的</strong>。</p>\n</li>\n<li><p><strong>当某个段已经占用了 32 个碎片区页面之后，就会以完整的区为单位来分配存储空间</strong>。</p>\n</li>\n</ul>\n<p><strong>所以现在****段不能仅定义为是某些区的集合，更精确的应该是某些零散的页面以及一些完整的区的集合</strong>。除了索引的叶子节点段和非叶子节点段之外，InnoDB 中还有为存储一些特殊的数据而定义的段，比如回滚段，当然我们现在并不关心别的类型的段，现在只需要知道段是一些零散的页面以及一些完整的区的集合就好了。</p>\n<p>区的分类</p>\n<hr>\n<p>表空间的是由若干个区组成的，这些区大体上可以分为 4 种类型：</p>\n<ul>\n<li><p><strong>空闲的区：现在还没有用到这个区中的任何页面</strong>。</p>\n</li>\n<li><p><strong>有剩余空间的碎片区：表示碎片区中还有可用的页面</strong>。</p>\n</li>\n<li><p><strong>没有剩余空间的碎片区：表示碎片区中的所有页面都被使用，没有空闲页面</strong>。</p>\n</li>\n<li><p><strong>附属于某个段的区。每一个索引都可以分为叶子节点段和非叶子节点段，除此之外 InnoDB 还会另外定义一些特殊作用的段，****在这些段中的数据量很大时将使用区来作为基本的分配单位</strong>。</p>\n</li>\n</ul>\n<p>这 4 种类型的区也可以被称为区的 4 种状态（State），InnoDB 为这 4 种状态的区定义了特定的名词：</p>\n<table><tbody><tr><th>状态名</th><th>含义</th></tr></tbody><tbody><tr><td>FREE</td><td>空闲的区</td></tr><tr><td>FREE_FRAG</td><td>有剩余空间的碎片区</td></tr><tr><td>FULL_FRAG</td><td>没有剩余空间的碎片区</td></tr><tr><td>FSEG</td><td>附属于某个段的区</td></tr></tbody></table>\n\n<p><strong>需要再次强调一遍的是，处于 FREE、FREE_FRAG 以及 FULL_FRAG 这三种状态的区都是独立的，算是直属于表空间；而处于 FSEG 状态的区是附属于某个段的。</strong></p>\n<p>小提示</p>\n<p><strong>如果把表空间比作是国家，段就相当于省，区就相当于市。一般的市都是属于某个省，就像 FSEG 状态的区全部属于某个段。而 FREE、FREE_FRAG、FULL_FRAG 这三种状态的区却直接隶属于表空间，就像北京市、天津市、上海市是直接属于国家管理一样。</strong></p>\n<p><strong>为了方便管理这些区，InnoDB 设计了一个称为 XDES Entry 的结构（全称就是 Extent Descriptor Entry），每一个区都对应着一个 XDES Entry 结构，这个结构记录了对应的区的一些属性</strong>。我们先看图来对这个结构有个大致的了解：</p>\n<p><img src=\"/mysql/learn-mysql-020/modb_20211023_359c1918-33a4-11ec-aead-38f9d3cd240d.png\" loading=\"lazy\"></p>\n<p>从图中我们可以看出，XDES Entry 是一个 40 个字节的结构，大致分为 4 个部分，各个部分的释义如下：</p>\n<ul>\n<li><strong>Segment ID（8 字节）</strong></li>\n</ul>\n<p>每一个段都有一个唯一的编号，用 ID 表示，此处的 Segment ID 字段表示就是该区所在的段。当然前提是该区已经被分配给某个段了，不然的话该字段的值没啥意义。</p>\n<ul>\n<li><strong>List Node（12 字节）</strong></li>\n</ul>\n<p>这个部分可以将若干个 XDES Entry 结构串联成一个链表，大家看一下这个 List Node 的结构：</p>\n<p><img src=\"/mysql/learn-mysql-020/modb_20211023_35a60e64-33a4-11ec-aead-38f9d3cd240d.png\" loading=\"lazy\"></p>\n<p>如果我们想定位表空间内的某一个位置的话，只需指定页号以及该位置在指定页号中的页内偏移量即可。所以：</p>\n<ul>\n<li><p>Prev Node Page Number 和 Prev Node Offset 的组合就是指向前一个 XDES Entry 的指针</p>\n</li>\n<li><p>Next Node Page Number 和 Next Node Offset 的组合就是指向后一个 XDES Entry 的指针。</p>\n</li>\n<li><p><strong>State（4 字节）</strong></p>\n</li>\n</ul>\n<p>这个字段表明区的状态。可选的值就是我们前边说过的那 4 个，分别是：FREE、FREE_FRAG、FULL_FRAG 和 FSEG。</p>\n<ul>\n<li><strong>Page State Bitmap（16 字节）</strong></li>\n</ul>\n<p><strong>这个部分共占用 16 个字节，也就是 128 个比特位。我们说一个区默认有 64 个页，这 128 个比特位被划分为 64 个部分，每个部分 2 个比特位，对应区中的一个页。</strong>比如 Page State Bitmap 部分的第 1 和第 2 个比特位对应着区中的第 1 个页面，第 3 和第 4 个比特位对应着区中的第 2 个页面，依此类推，Page State Bitmap 部分的第 127 和 128 个比特位对应着区中的第 64 个页面。<strong>这两个比特位的第一个位表示对应的页是否是空闲的，第二个比特位还没有用</strong>。</p>\n<p>XDES Entry 链表</p>\n<hr>\n<p>到现在为止，我们已经提出了区、段、碎片区、附属于段的区、XDES Entry 等概念，我们把事情搞这么麻烦的初心仅仅是想提高向表插入数据的效率又不至于数据量少的表浪费空间。现在我们知道向表中插入数据本质上就是向表中各个索引的叶子节点段、非叶子节点段插入数据，也知道了不同的区有不同的状态，再回到最初的起点，捋一捋向某个段中插入数据的过程：</p>\n<ul>\n<li><strong>当段中数据较少的时候，首先会查看表空间中是否有状态为 FREE_FRAG 的区，也就是找还有空闲空间的碎片区，如果找到了，那么从该区中取一些零散的页把数据插进去；否则到表空间下申请一个状态为 FREE 的区，也就是空闲的区，把该区的状态变为 FREE_FRAG，然后从该新申请的区中取一些零散的页把数据插进去。之后不同的段使用零散页的时候都会从该区中取，直到该区中没有空闲空间，然后该区的状态就变成了 FULL_FRAG</strong>。</li>\n</ul>\n<p>现在的问题是你怎么知道表空间里的哪些区是 FREE 的，哪些区的状态是 FREE_FRAG 的，哪些区是 FULL_FRAG 的？要知道表空间的大小是可以不断增大的，当增长到 GB 级别的时候，区的数量也就上千了，我们总不能每次都遍历这些区对应的 XDES Entry 结构吧？这时候就是 <strong>XDES Entry 中的 List Node</strong> 部分发挥奇效的时候了，我们可以通过 List Node 中的指针，做这么三件事：</p>\n<ul>\n<li><p><strong>把状态为 FREE 的区对应的 XDES Entry 结构通过 List Node 来连接成一个链表，这个链表我们就称之为 FREE 链表</strong>。</p>\n</li>\n<li><p><strong>把状态为 FREE_FRAG 的区对应的 XDES Entry 结构通过 List Node 来连接成一个链表，这个链表我们就称之为 FREE_FRAG 链表</strong>。</p>\n</li>\n<li><p><strong>把状态为 FULL_FRAG 的区对应的 XDES Entry 结构通过 List Node 来连接成一个链表，这个链表我们就称之为 FULL_FRAG 链表</strong>。</p>\n</li>\n</ul>\n<p>这样每当我们想找一个 FREE_FRAG 状态的区时，就直接把 FREE_FRAG 链表的头节点拿出来，从这个节点中取一些零散的页来插入数据，当这个节点对应的区用完时，就修改一下这个节点的 State 字段的值，然后从 FREE_FRAG 链表中移到 FULL_FRAG 链表中。同理，如果 FREE_FRAG 链表中一个节点都没有，那么就直接从 FREE 链表中取一个节点移动到 FREE_FRAG 链表的状态，并修改该节点的 STATE 字段值为 FREE_FRAG，然后从这个节点对应的区中获取零散的页就好了。</p>\n<ul>\n<li>当段中数据已经占满了 32 个零散的页后，就直接申请完整的区来插入数据了。</li>\n</ul>\n<p>还是那个问题，我们怎么知道哪些区属于哪个段的呢？再遍历各个 XDES Entry 结构？遍历是不可能遍历的，这辈子都不可能遍历的，有链表还遍历个毛线啊。所以我们把状态为 FSEG 的区对应的 XDES Entry 结构都加入到一个链表喽？傻呀，不同的段哪能共用一个区呢？你想把索引 a 的叶子节点段和索引 b 的叶子节点段都存储到一个区中么？显然我们想要每个段都有它独立的链表，所以可以根据段号（也就是 Segment ID）来建立链表，有多少个段就建多少个链表？好像也有点问题，因为一个段中可以有好多个区，有的区是完全空闲的，有的区还有一些页面可以用，有的区已经没有空闲页面可以用了，所以我们有必要继续细分，InnoDB 为每个段中的区对应的 XDES Entry 结构建立了三个链表：</p>\n<ul>\n<li><p><strong>FREE 链表：同一个段中，所有页面都是空闲的区对应的 XDES Entry 结构会被加入到这个链表。注意和直属于表空间的 FREE 链表区别开了，此处的 FREE 链表是附属于某个段的</strong>。</p>\n</li>\n<li><p><strong>NOT_FULL 链表：同一个段中，仍有空闲空间的区对应的 XDES Entry 结构会被加入到这个链表</strong>。</p>\n</li>\n<li><p><strong>FULL 链表：同一个段中，已经没有空闲空间的区对应的 XDES Entry 结构会被加入到这个链表</strong>。</p>\n</li>\n</ul>\n<p>强调一遍，每一个索引都对应两个段，每个段都会维护上述的 3 个链表。</p>\n<p>举个栗子🌰，比如下边这个表：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">CREATE TABLE t (  c1 INT NOT NULL AUTO_INCREMENT,  c2 VARCHAR(100),  c3 VARCHAR(100),  PRIMARY KEY (c1),  KEY idx_c2 (c2))ENGINE=InnoDB;</span><br></pre></td></tr></table></figure>\n\n<p><strong>这个表 t 共有两个索引，一个聚簇索引，一个二级索引 idx_c2，所以这个表共有 4 个段，每个段都会维护上述 3 个链表，总共是 12 个链表，加上我们上边说过的直属于表空间的 3 个链表，整个独立表空间共需要维护 15 个链表。所以段在数据量比较大时插入数据的话，会先获取 NOT_FULL 链表的头节点，直接把数据插入这个头节点对应的区中即可，如果该区的空间已经被用完，就把该节点移到 FULL 链表中</strong>。</p>\n<p>链表基节点</p>\n<hr>\n<p>上边介绍了很多链表，怎么找到这些链表呢，或者说怎么找到某个链表的头节点或者尾节点在表空间中的位置呢？InnoDB 当然考虑了这个问题，设计了一个叫 List Base Node 的结构，翻译成中文就是<strong>链表的基节点</strong>。这个结构中包含了链表的头节点和尾节点的指针以及这个链表中包含了多少节点的信息，我们画图看一下这个结构的示意图：</p>\n<p><img src=\"/mysql/learn-mysql-020/modb_20211023_35b25408-33a4-11ec-aead-38f9d3cd240d.png\" loading=\"lazy\"></p>\n<p>我们上边介绍的每个链表都对应这么一个 List Base Node 结构，其中：</p>\n<ul>\n<li><p><strong>List Length 表明该链表一共有多少节点</strong>。</p>\n</li>\n<li><p><strong>First Node Page Number 和 First Node Offset 表明该链表的头节点在表空间中的位置</strong>。</p>\n</li>\n<li><p><strong>Last Node Page Number 和 Last Node Offset 表明该链表的尾节点在表空间中的位置</strong>。</p>\n</li>\n</ul>\n<p>一般我们把某个链表对应的 List Base Node 结构放置在表空间中固定的位置，这样想找定位某个链表就变得非常简单啦。</p>\n<p>链表小结</p>\n<hr>\n<p><strong>综上所述，表空间是由若干个区组成的，每个区都对应一个 XDES Entry 的结构，直属于表空间的区对应的 XDES Entry 结构可以分成 FREE、FREE_FRAG 和 FULL_FRAG 这 3 个链表；每个段可以附属若干个区，每个段中的区对应的 XDES Entry 结构可以分成 FREE、NOT_FULL 和 FULL 这 3 个链表。</strong>每个链表都对应一个 List Base Node 的结构，这个结构里记录了链表的头、尾节点的位置以及该链表中包含的节点数。正是因为这些链表的存在，管理这些区才变成了一件非常简单的事情。</p>\n<p>段的结构</p>\n<hr>\n<p>我们前边说过，段其实不对应表空间中某一个连续的物理区域，而是一个逻辑上的概念，由若干个零散的页面以及一些完整的区组成。像每个区都有对应的 XDES Entry 来记录这个区中的属性一样，InnoDB 为每个段都定义了一个 INODE Entry 结构来记录一下段中的属性。大家看一下示意图：</p>\n<p><img src=\"/mysql/learn-mysql-020/modb_20211023_35bbd62c-33a4-11ec-aead-38f9d3cd240d.png\" loading=\"lazy\"></p>\n<p>它的各个部分释义如下：</p>\n<ul>\n<li><strong>Segment ID</strong></li>\n</ul>\n<p>就是指这个 INODE Entry 结构对应的段的编号（ID）。</p>\n<ul>\n<li><strong>NOT_FULL_N_USED</strong></li>\n</ul>\n<p>这个字段指的是在 NOT_FULL 链表中已经使用了多少个页面。</p>\n<ul>\n<li><strong>3 个 List Base Node</strong></li>\n</ul>\n<p>分别为段的 FREE 链表、NOT_FULL 链表、FULL 链表定义了 List Base Node，这样我们想查找某个段的某个链表的头节点和尾节点的时候，就可以直接到这个部分找到对应链表的 List Base Node。so easy!</p>\n<ul>\n<li><strong>Magic Number</strong></li>\n</ul>\n<p>这个值是用来标记这个 INODE Entry 是否已经被初始化了（初始化的意思就是把各个字段的值都填进去了）。如果这个数字是值的 97937874，表明该 INODE Entry 已经初始化，否则没有被初始化。（不用纠结这个值有啥特殊含义，规定）。</p>\n<ul>\n<li><strong>Fragment Array Entry</strong></li>\n</ul>\n<p>段是一些零散页面和一些完整的区的集合，每个 Fragment Array Entry 结构都对应着一个零散的页面，这个结构一共 4 个字节，表示一个零散页面的页号。</p>\n<p>结合着这个 INODE Entry 结构，大家可能对段是一些零散页面和一些完整的区的集合的理解再次深刻一些。</p>\n<p>各类型页面详细情况</p>\n<hr>\n<p>FSP_HDR 类型</p>\n<hr>\n<p>表空间的第一个页面，页号为 0。这个页面的类型是 FSP_HDR，它存储了表空间的一些整体属性以及第一个组内 256 个区的对应的 XDES Entry 结构，直接看这个类型的页面的示意图：</p>\n<p><img src=\"/mysql/learn-mysql-020/modb_20211023_35c5d0dc-33a4-11ec-aead-38f9d3cd240d.png\" loading=\"lazy\"></p>\n<p>一个完整的 FSP_HDR 类型的页面大致由 5 个部分组成，各个部分的具体释义如下表：</p>\n<table><tbody><tr><th>名称</th><th>中文名</th><th>占用空间大小</th><th>简单描述</th></tr></tbody><tbody><tr><td>File Header</td><td>文件头部</td><td>38 字节</td><td>页的一些通用信息</td></tr><tr><td>File Space Header</td><td>表空间头部</td><td>112 字节</td><td>表空间的一些整体属性信息</td></tr><tr><td>XDES Entry</td><td>区描述信息</td><td>10240 字节</td><td>存储本组 256 个区对应的属性信息</td></tr><tr><td>Empty Space</td><td>尚未使用空间</td><td>5986 字节</td><td>用于页结构的填充，没啥实际意义</td></tr><tr><td>File Trailer</td><td>文件尾部</td><td>8 字节</td><td>校验页是否完整</td></tr></tbody></table>\n\n<p>File Header 和 File Trailer 就不再强调了，另外的几个部分中，Empty Space 是尚未使用的空间，我们不用管它，重点来看看 File Space Header 和 XDES Entry 这两个部分。</p>\n<p>File Space Header 部分</p>\n<hr>\n<p>这个部分是用来存储表空间的一些整体属性信息的，详看下图：</p>\n<p><img src=\"/mysql/learn-mysql-020/modb_20211023_35d42ae2-33a4-11ec-aead-38f9d3cd240d.png\" loading=\"lazy\"></p>\n<p>下面是各个属性的简单描述：</p>\n<table><tbody><tr><th>名称</th><th>占用空间大小</th><th>描述</th></tr></tbody><tbody><tr><td>Space ID</td><td>4 字节</td><td>表空间的 ID</td></tr><tr><td>Not Used</td><td>4 字节</td><td>这 4 个字节未被使用，可以忽略</td></tr><tr><td>Size</td><td>4 字节</td><td>当前表空间占有的页面数</td></tr><tr><td>FREE Limit</td><td>4 字节</td><td>尚未被初始化的最小页号，大于或等于这个页号的区对应的 XDES Entry 结构都没有被加入 FREE 链表</td></tr><tr><td>Space Flags</td><td>4 字节</td><td>表空间的一些占用存储空间比较小的属性</td></tr><tr><td>FRAG_N_USED</td><td>4 字节</td><td>FREE_FRAG 链表中已使用的页面数量</td></tr><tr><td>List Base Node for FREE List</td><td>16 字节</td><td>FREE 链表的基节点</td></tr><tr><td>List Base Node for FREE_FRAG List</td><td>16 字节</td><td>FREE_FRAG 链表的基节点</td></tr><tr><td>List Base Node for FULL_FRAG List</td><td>16 字节</td><td>FULL_FRAG 链表的基节点</td></tr><tr><td>Next Unused Segment ID</td><td>8 字节</td><td>当前表空间中下一个未使用的 Segment ID</td></tr><tr><td>List Base Node for SEG_INODES_FULL List</td><td>16 字节</td><td>SEG_INODES_FULL 链表的基节点</td></tr><tr><td>List Base Node for SEG_INODES_FREE List</td><td>16 字节</td><td>SEG_INODES_FREE 链表的基节点</td></tr></tbody></table>\n\n<p>这里头的 Space ID、Not Used、Size 这三个字段大家肯定一看就懂，其他的字段我们再详细看一下：</p>\n<ul>\n<li><strong>List Base Node for FREE List、List Base Node for FREE_FRAG List、List Base Node for FULL_FRAG List</strong></li>\n</ul>\n<p>这三个大家看着太亲切了，分别是直属于表空间的 FREE 链表的基节点、FREE_FRAG 链表的基节点、FULL_FRAG 链表的基节点，这三个链表的基节点在表空间的位置是固定的，就是在表空间的第一个页面（也就是 FSP_HDR 类型的页面）的 File Space Header 部分。所以之后定位这几个链表就很简单啦。</p>\n<ul>\n<li><strong>FRAG_N_USED</strong></li>\n</ul>\n<p>这个字段表明在 FREE_FRAG 链表中已经使用的页面数量。</p>\n<ul>\n<li><strong>FREE Limit</strong></li>\n</ul>\n<p>我们知道表空间都对应着具体的磁盘文件，一开始我们创建表空间的时候对应的磁盘文件中都没有数据，所以我们需要对表空间完成一个初始化操作，包括为表空间中的区建立 XDES Entry 结构，为各个段建立 INODE Entry 结构，建立各种链表吧啦吧啦的各种操作。我们可以一开始就为表空间申请一个特别大的空间，但是实际上有绝大部分的区是空闲的，我们可以选择把所有的这些空闲区对应的 XDES Entry 结构加入 FREE 链表，也可以选择只把一部分的空闲区加入 FREE 链表，等啥时候空闲链表中的 XDES Entry 结构对应的区不够使了，再把之前没有加入 FREE 链表的空闲区对应的 XDES Entry 结构加入 FREE 链表，中心思想就是啥时候用到啥时候初始化，InnoDB 采用的就是后者，他们为表空间定义了 FREE Limit 这个字段，在该字段表示的页号之前的区都被初始化了，之后的区尚未被初始化。</p>\n<ul>\n<li><strong>Next Unused Segment ID</strong></li>\n</ul>\n<p>表中每个索引都对应 2 个段，每个段都有一个唯一的 ID，那当我们为某个表新创建一个索引的时候，就意味着要创建两个新的段。那怎么为这个新创建的段找一个唯一的 ID 呢？去遍历现在表空间中所有的段么？我们说过，遍历是不可能遍历的，这辈子都不可能遍历，InnoDB 提出了这个名叫 Next Unused Segment ID 的字段，该字段表明当前表空间中最大的段 ID 的下一个 ID，这样在创建新段的时候赋予新段一个唯一的 ID 值就 so easy 啦，直接使用这个字段的值就好了。</p>\n<ul>\n<li><strong>Space Flags</strong></li>\n</ul>\n<p>表空间对于一些布尔类型的属性，或者只需要寥寥几个比特位搞定的属性都放在了这个 Space Flags 中存储，虽然它只有 4 个字节，32 个比特位大小，却存储了好多表空间的属性，详细情况如下表：</p>\n<table><tbody><tr><th>标志名称</th><th>占用空间（单位：bit）</th><th>描述</th></tr></tbody><tbody><tr><td>POST_ANTELOPE</td><td>1</td><td>表示文件格式是否大于 ANTELOPE</td></tr><tr><td>ZIP_SSIZE</td><td>4</td><td>表示压缩页面的大小</td></tr><tr><td>ATOMIC_BLOBS</td><td>1</td><td>表示是否自动把值非常长的字段放到 BLOB 页里</td></tr><tr><td>PAGE_SIZE</td><td>4</td><td>页面大小</td></tr><tr><td>DATA_DIR</td><td>1</td><td>表示表空间是否是从默认的数据目录中获取的</td></tr><tr><td>SHARED</td><td>1</td><td>是否为共享表空间</td></tr><tr><td>TEMPORARY</td><td>1</td><td>是否为临时表空间</td></tr><tr><td>ENCRYPTION</td><td>1</td><td>表空间是否加密</td></tr><tr><td>UNUSED</td><td>18</td><td>没有使用到的比特位</td></tr></tbody></table>\n\n<ul>\n<li><strong>List Base Node for SEG_INODES_FULL List 和 List Base Node for SEG_INODES_FREE List</strong></li>\n</ul>\n<p>每个段对应的 INODE Entry 结构会集中存放到一个类型为 <strong>INODE</strong> 的页中，如果表空间中的段特别多，则会有多个 INODE Entry 结构，可能一个页放不下，这些 INODE 类型的页会组成两种列表：</p>\n<ul>\n<li><p>SEG_INODES_FULL 链表，该链表中的 INODE 类型的页面都已经被 INODE Entry 结构填充满了，没空闲空间存放额外的 INODE Entry 了。</p>\n</li>\n<li><p>SEG_INODES_FREE 链表，该链表中的 INODE 类型的页面仍有空闲空间来存放 INODE Entry 结构。</p>\n</li>\n</ul>\n<p>由于我们现在还没有详细介绍 INODE 类型页，所以等会说过 INODE 类型的页之后再回过头来看着两个链表。</p>\n<p>XDES Entry 部分</p>\n<hr>\n<p>紧接着 File Space Header 部分的就是 XDES Entry 部分了，我们嘴上说过无数次，却从没见过真身的 XDES Entry 就是在表空间的第一个页面中保存的。我们知道一个 XDES Entry 结构的大小是 40 字节，但是一个页面的大小有限，只能存放有限个 XDES Entry 结构，所以我们才把 256 个区划分成一组，在每组的第一个页面中存放 256 个 XDES Entry 结构。大家回看那个 FSP_HDR 类型页面的示意图，XDES Entry 0 就对应着 extent 0，XDES Entry 1 就对应着 extent 1... 依此类推，XDES Entry255 就对应着 extent 255。</p>\n<p>因为每个区对应的 XDES Entry 结构的地址是固定的，所以我们访问这些结构就非常简单啦。</p>\n<p>XDES 类型</p>\n<hr>\n<p>每一个 XDES Entry 结构对应表空间的一个区，虽然一个 XDES Entry 结构只占用 40 字节，但你抵不住表空间的区的数量也多啊。在区的数量非常多时，一个单独的页可能就不够存放足够多的 XDES Entry 结构，所以我们把表空间的区分为了若干个组，每组开头的一个页面记录着本组内所有的区对应的 XDES Entry 结构。由于第一个组的第一个页面有些特殊，因为它也是整个表空间的第一个页面，所以除了记录本组中的所有区对应的 XDES Entry 结构以外，还记录着表空间的一些整体属性，这个页面的类型就是我们刚刚说完的 FSP_HDR 类型，整个表空间里只有一个这个类型的页面。除去第一个分组以外，之后的每个分组的第一个页面只需要记录本组内所有的区对应的 XDES Entry 结构即可，不需要再记录表空间的属性了，为了和 FSP_HDR 类型做区别，我们把之后每个分组的第一个页面的类型定义为 XDES，它的结构和 FSP_HDR 类型是非常相似的：</p>\n<p><img src=\"/mysql/learn-mysql-020/modb_20211023_35e0acb8-33a4-11ec-aead-38f9d3cd240d.png\" loading=\"lazy\"></p>\n<p><strong>与 FSP_HDR 类型的页面对比，除了少了 File Space Header 部分之外，也就是除了少了记录表空间整体属性的部分之外，其余的部分是一样一样的</strong>。</p>\n<p>IBUF_BITMAP 类型</p>\n<hr>\n<p>每个分组的第二个页面的类型都是 IBUF_BITMAP，这种类型的页里边记录了一些有关 Change Buffer 的信息。</p>\n<p>INODE 类型</p>\n<hr>\n<p>再次对比前边介绍表空间的图，第一个分组的第三个页面的类型是 INODE。我们前边说过 InnoDB 为每个索引定义了两个段，而且为某些特殊功能定义了些特殊的段。为了方便管理，他们又为每个段设计了一个 INODE Entry 结构，这个结构中记录了关于这个段的相关属性。而我们这会儿要介绍的这个 INODE 类型的页就是为了存储 INODE Entry 结构而存在的。</p>\n<p><img src=\"/mysql/learn-mysql-020/modb_20211023_35ee0c8c-33a4-11ec-aead-38f9d3cd240d.png\" loading=\"lazy\"></p>\n<p>一个 INODE 类型的页面是由这几部分构成的：</p>\n<table><tbody><tr><th>名称</th><th>中文名</th><th>占用空间大小</th><th>简单描述</th></tr></tbody><tbody><tr><td>File Header</td><td>文件头部</td><td>38 字节</td><td>页的一些通用信息</td></tr><tr><td>List Node for INODE Page List</td><td>通用链表节点</td><td>12 字节</td><td>存储上一个 INODE 页面和下一个 INODE 页面的指针</td></tr><tr><td>INODE Entry</td><td>段描述信息</td><td>16320 字节</td><td>存储段描述信息</td></tr><tr><td>Empty Space</td><td>尚未使用空间</td><td>6 字节</td><td>用于页结构的填充，没啥实际意义</td></tr><tr><td>File Trailer</td><td>文件尾部</td><td>8 字节</td><td>校验页是否完整</td></tr></tbody></table>\n\n<p>除了 File Header、Empty Space、File Trailer 这几个老朋友外，我们重点关注 List Node for INODE Page List 和 INODE Entry 这两个部分。</p>\n<p>首先看 INODE Entry 部分，我们前边已经详细介绍过这个结构的组成了，主要包括对应的段内零散页面的地址以及附属于该段的 FREE、NOT_FULL 和 FULL 链表的基节点。每个 INODE Entry 结构占用 192 字节，一个页面里可以存储 85 个这样的结构。</p>\n<p>重点看一下 List Node for INODE Page List，因为一个表空间中可能存在超过 85 个段，所以可能一个 INODE 类型的页面不足以存储所有的段对应的 INODE Entry 结构，所以就需要额外的 INODE 类型的页面来存储这些结构。还是为了方便管理这些 INODE 类型的页面，InnoDB 将这些 INODE 类型的页面串联成两个不同的链表：</p>\n<ul>\n<li><p><strong>SEG_INODES_FULL 链表：该链表中的 INODE 类型的页面中已经没有空闲空间来存储额外的 INODE Entry 结构了</strong>。</p>\n</li>\n<li><p><strong>SEG_INODES_FREE 链表：该链表中的 INODE 类型的页面中还有空闲空间来存储额外的 INODE Entry 结构了</strong>。</p>\n</li>\n</ul>\n<p>想必大家已经认出这两个链表了，我们前边提到过这两个链表的基节点就存储在 File Space Header 里边，也就是说这两个链表的基节点的位置是固定的，所以我们可以很轻松的访问到这两个链表。以后每当我们新创建一个段（创建索引时就会创建段）时，都会创建一个 INODE Entry 结构与之对应，存储 INODE Entry 的大致过程就是这样的：</p>\n<ul>\n<li><p><strong>先看看 SEG_INODES_FREE 链表是否为空，如果不为空，直接从该链表中获取一个节点，也就相当于获取到一个仍有空闲空间的 INODE 类型的页面，然后把该 INODE Entry 结构放到该页面中。当该页面中无剩余空间时，就把该页放到 SEG_INODES_FULL 链表中</strong>。</p>\n</li>\n<li><p><strong>如果 SEG_INODES_FREE 链表为空，则需要从表空间的 FREE_FRAG 链表中申请一个页面，修改该页面的类型为 INODE，把该页面放到 SEG_INODES_FREE 链表中，与此同时把该 INODE Entry 结构放入该页面</strong>。</p>\n</li>\n</ul>\n<p>Segment Header 结构的运用</p>\n<hr>\n<p>我们知道一个索引会产生两个段，分别是叶子节点段和非叶子节点段，而每个段都会对应一个 INODE Entry 结构，那我们怎么知道某个段对应哪个 INODE Entry 结构呢？所以得找个地方记下来这个对应关系。记得之前学习过的数据页 MySQL 之数据页结构，也就是 INDEX 类型的页有一个 Page Header 部分，所以把 Page Header 部分粘一下：</p>\n<p><img src=\"/mysql/learn-mysql-020/modb_20211023_36004dc0-33a4-11ec-aead-38f9d3cd240d.png\" loading=\"lazy\"></p>\n<p>其中的 PAGE_BTR_SEG_LEAF 和 PAGE_BTR_SEG_TOP 都占用 10 个字节，它们其实对应一个叫 Segment Header 的结构，该结构图示如下：</p>\n<p><img src=\"/mysql/learn-mysql-020/modb_20211023_360a4898-33a4-11ec-aead-38f9d3cd240d.png\" loading=\"lazy\"></p>\n<p>各个部分的具体释义如下：</p>\n<table><tbody><tr><th>名称</th><th>占用空间大小</th><th>描述</th></tr></tbody><tbody><tr><td>Space ID of the INODE Entry</td><td>4 字节</td><td>INODE Entry 结构所在的表空间 ID</td></tr><tr><td>Page Number of the INODE Entry</td><td>4 字节</td><td>INODE Entry 结构所在的页面页号</td></tr><tr><td>Byte Offset of the INODE Entry</td><td>2 字节</td><td>INODE Entry 结构在该页面中的偏移量</td></tr></tbody></table>\n\n<p>这样子就很清晰了，<strong>PAGE_BTR_SEG_LEAF 记录着叶子节点段对应的 INODE Entry 结构的地址是哪个表空间的哪个页面的哪个偏移量，PAGE_BTR_SEG_TOP 记录着非叶子节点段对应的 INODE Entry 结构的地址是哪个表空间的哪个页面的哪个偏移量。这样子<strong><strong>索引和其对应的段的关系就建立起来</strong></strong>了。不过需要注意的一点是，****因为一个索引只对应两个段，所以只需要在索引的根页面中记录这两个结构即可</strong>。</p>\n<p>真实表空间对应的文件大小</p>\n<hr>\n<p>Q：上边的这些概念已经压的快喘不过气了。不过独立表空间有那么大么？我到数据目录里看了，一个新建的表对应的. ibd 文件只占用了 96K，才 6 个页面大小，上边的说了那么多概念，那么大的空间占用，为什么只有 96KB 大小？</p>\n<p>A：一开始表空间占用的空间自然是很小，因为表里边都没有数据。.ibd 文件是自扩展的，随着表中数据的增多，表空间对应的文件也逐渐增大。</p>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql_dba","url":"/mysql/mysql_dba/","content":"<h2 id=\"mac-mysql-install\"><a href=\"#mac-mysql-install\" class=\"headerlink\" title=\"mac mysql install\"></a>mac mysql install</h2><ol>\n<li><p>安装</p>\n<blockquote>\n<p>brew install <span class=\"exturl\" data-url=\"bWFpbHRvOiYjeDZkOyYjMTIxOyYjMTE1OyYjMTEzOyYjeDZjOyYjNjQ7JiN4MzU7JiM0NjsmIzU1Ow==\">&#x6d;&#121;&#115;&#113;&#x6c;&#64;&#x35;&#46;&#55;<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n</li>\n<li><p>设置环境变量</p>\n<blockquote>\n<p>ln -s &#x2F;opt&#x2F;homebrew&#x2F;opt&#x2F;<span class=\"exturl\" data-url=\"bWFpbHRvOiYjMTA5OyYjeDc5OyYjeDczOyYjMTEzOyYjMTA4OyYjeDQwOyYjNTM7JiN4MmU7JiN4Mzc7\">&#109;&#x79;&#x73;&#113;&#108;&#x40;&#53;&#x2e;&#x37;<i class=\"fa fa-external-link-alt\"></i></span>&#x2F; &#x2F;opt&#x2F;mysql&#x2F;mysql</p>\n<p>echo PATH&#x3D;&#x2F;opt&#x2F;mysql&#x2F;mysql&#x2F;bin:$PATH</p>\n</blockquote>\n</li>\n<li><p>设置root账户密码</p>\n<blockquote>\n<p>mysql_secure_installation</p>\n</blockquote>\n</li>\n<li><p>登录验证</p>\n<blockquote>\n<p>mysql -uroot -ppassword</p>\n</blockquote>\n<ol>\n<li><p>配置mycli登录</p>\n<p>db_local_mysql &#x3D; mysql:&#x2F;&#x2F;root:happy998518@localhost:3306</p>\n</li>\n<li><p>登录</p>\n<p> mycli -dsn db_local_mysql</p>\n</li>\n</ol>\n<hr>\n<p>说明：使用brew安装mysql，如果是mac m1的话，目前只能安装mysql5.7。默认的data目录中&#x2F;opt&#x2F;homebrew&#x2F;var&#x2F;mysql。查看my.cnf的文件位置，可以使用mysqld --help -vv | grep -10 my.cnf。默认中&#x2F;opt&#x2F;homebrew&#x2F;etc&#x2F;my.cnf</p>\n</li>\n</ol>\n<p>mysql 5.7版本以前都是有一个默认的数据库test，所有用户默认都有权限的，5.7以后基于安全考虑去掉了test数据库</p>\n<h2 id=\"mysql的版本升级\"><a href=\"#mysql的版本升级\" class=\"headerlink\" title=\"mysql的版本升级\"></a>mysql的版本升级</h2><ul>\n<li><p>安全关闭mysql服务</p>\n<blockquote>\n<p>mysqld stop</p>\n</blockquote>\n</li>\n<li><p>设置软链，将mysql的软链接由升级前的版本指向升级后的版本</p>\n<blockquote>\n<p>ln -s ..</p>\n<p>这时其实是可以启动mysql服务的，但是观察mysql的日志，由很多警告</p>\n</blockquote>\n</li>\n<li><p>使用mysql_upgrade -s -p升级</p>\n<blockquote>\n<p>回退的话，升级之前备份data下的mysql目录，系统表</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"mysql-参数\"><a href=\"#mysql-参数\" class=\"headerlink\" title=\"mysql 参数\"></a>mysql 参数</h2><ul>\n<li><p>查看当前参数的值</p>\n<blockquote>\n<p>select @@autocommit; 查看当前回话</p>\n<p>select @@global.autocommit; 查看全局</p>\n</blockquote>\n<p>如果参数既是session参数，又是global参数的话，修改global的，只对以后建立的数据库链接有效，已经存在会话是不修改，修改的参数不保存到配置文件中，需要修改配置文件</p>\n<blockquote>\n<p>但是修改 check_proxy_users 的全局参数的值，当前会话生效。check_proxy_users\b是全局参数。</p>\n</blockquote>\n</li>\n</ul>\n<p>grant all privileges on <em>.</em> to &#39;root&#39;@&#39;127.0.0.1&#39; identified by &#39;admin123&#39; <strong><mark>with grant option;</mark></strong></p>\n<blockquote>\n<p>with grant option; 设置这个用户可以给别的用户grant</p>\n</blockquote>\n<p>删除权限 revoke 只删除权限，不删除用户，也就是用户还可以登录。</p>\n<ul>\n<li><p>查看警告</p>\n<blockquote>\n<p>show warnings;</p>\n</blockquote>\n</li>\n<li><p>查看某个用户拥有哪些权限</p>\n<blockquote>\n<p>show grants for &#39;root&#39;@&#39;localhost&#39;</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"mysql的角色\"><a href=\"#mysql的角色\" class=\"headerlink\" title=\"mysql的角色\"></a>mysql的角色</h2><p>使用的proxy来模拟角色(mysql 5.7才支持的)</p>\n<blockquote>\n<p>前提：开启启用代理用户映射</p>\n<ol>\n<li><p><strong>set global check_proxy_users &#x3D; 1;</strong></p>\n</li>\n<li><p><strong>set global mysql_native_password_proxy_users &#x3D; 1;</strong></p>\n</li>\n</ol>\n</blockquote>\n<ol>\n<li><p>创建proxy用户 和 需要代理的用户</p>\n<blockquote>\n<p>create user &#39;shopcrm_dba&#39;@&#39;127.0.0.1&#39; identified by &#39;admin123&#39;;</p>\n<p>create user &#39;shopcrm_001&#39;@&#39;127.0.0.1&#39; identified by &#39;admin123&#39;;</p>\n<p>create user &#39;shopcrm_002&#39;@&#39;127.0.0.1&#39; identified by &#39;admin123&#39;;</p>\n</blockquote>\n</li>\n<li><p>将代理用户赋予权限</p>\n<blockquote>\n<p>grant select, insert on <em>.</em> to &#39;shopcrm_dba&#39;@&#39;127.0.0.1&#39;;</p>\n</blockquote>\n</li>\n<li><p>将需要的代理的用户赋予代理用户的权限</p>\n<blockquote>\n<p>grant proxy on &#39;shopcrn_dba&#39;@&#39;127.0.0.1&#39; to &#39;shopcrm_001&#39;@&#39;127.0.0.1&#39;;</p>\n<p>grant proxy on &#39;shopcrn_dba&#39;@&#39;127.0.0.1&#39; to &#39;shopcrm_002&#39;@&#39;127.0.0.1&#39;;</p>\n</blockquote>\n<p>如果登录的用户没有proxy。需要执行下面的sql，赋予代理权限</p>\n<p>grant proxy on &#39;&#39;@&#39;&#39; to &#39;root&#39;@&#39;127.0.0.1&#39; with grant option;</p>\n</li>\n<li><p>使用shopcrm_001登录_</p>\n<p><img src=\"/mysql/mysql_dba/mysql_proxy.png\" alt=\"mysql_proxy\" loading=\"lazy\"></p>\n</li>\n</ol>\n<h2 id=\"mysql的逻辑存储结构\"><a href=\"#mysql的逻辑存储结构\" class=\"headerlink\" title=\"mysql的逻辑存储结构\"></a>mysql的逻辑存储结构</h2><p>instance -&gt; database -&gt; schema -&gt; table -&gt; view</p>\n<h2 id=\"慢sql日志\"><a href=\"#慢sql日志\" class=\"headerlink\" title=\"慢sql日志\"></a>慢sql日志</h2><blockquote>\n<p>记录的是大于设置慢sql查询的阈值的，没有等于</p>\n</blockquote>\n<ul>\n<li><p>相关参数</p>\n<p><strong>slow_query_log</strong><br>是否开启慢查询日志 </p>\n<p><strong>slow_query_log_file</strong><br>◦ 慢查询日志文件名, 在 my.cnf 我们已经定义为slow.log，默认是 机器名-slow.log </p>\n<p><strong>long_query_time</strong><br> 制定慢查询阈值, 单位是秒，且当版本 &gt;&#x3D;5.5.X ，支持毫秒。例如 0.5 即为 500ms<br>大于该值，不包括值本身。例如该值为2，则执行时间正好等于2的SQL语句不会记录</p>\n<p><strong>log_queries_not_using_indexes</strong><br>将没有使用索引的SQL记录到慢查询日志<br>如果一开始因为数据少，查表快，耗时的SQL语句没被记录，当数据量大时，该SQL可能会执行很长时间 需要测试阶段就要发现问题，减小上线后出现问题的概率</p>\n<p><strong>log_throttle_queries_not_using_indexes</strong><br>限制每分钟内，在慢查询日志中，去记录没有使用索引的SQL语句的次数;版本需要 &gt;&#x3D;5.6.X<br>因为没有使用索引的SQL可能会短时间重复执行，为了避免日志快速增大，限制每分钟的记录次数 </p>\n<p><strong>min_examined_row_limit</strong><br>扫描记录少于改值的SQL不记录到慢查询日志<br>结合去记录没有使用索引的SQL语句的例􏰀，有可能存在某一个表，数据量维持在百行左右，且没有建立索引。这种表即使不建立索引，查询也很快，扫描记录很小，如果确定有这种表，则可以通过此参数设置，将这个SQL不记录到慢查询日志。</p>\n<p><strong>log_slow_admin_statements</strong><br>记录超时的管理操作SQL到慢查询日志，比如ALTER&#x2F;ANALYZE TABLE</p>\n<p><strong>log_output</strong><br>慢查询日志的格式，[FILE | TABLE | NONE]，默认是FILE;版本 &gt;&#x3D;5.5<br>如果设置为TABLE，则记录的到 mysql.slow_log </p>\n<p><strong>log_slow_slave_statements</strong><br>在从服务器上开启慢查询日志 • log_timestamps<br>写入时区信息。可􏰁据需求记录UTC时间或者服务器本地系统时间</p>\n</li>\n</ul>\n<p>如果慢sql文件比较大，可以tail -10000 ｜ mysqldumpslow </p>\n<ul>\n<li><p>将慢sql日志保存到表中</p>\n<blockquote>\n<p>表 myslq.slow_log</p>\n<p>set global log_output &#x3D; 4; &#x2F;&#x2F; 1是NONE，2是FILE，4是TABLE</p>\n<p>show variables like &#39;log_output%&#39;</p>\n</blockquote>\n<p>如果想用table到话，需要将slow_log表到存储引擎有默认到csv格式修改成MyISAM。备份数据的时候，需要忽略mysql.slow_log表 _</p>\n<blockquote>\n<p>show engines;</p>\n<p>show create table slow_log;</p>\n<p>alter table slow_log engine &#x3D; MyISAM;</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS43L2VuL251bWVyaWMtdHlwZXMuaHRtbA==\">数据类型<i class=\"fa fa-external-link-alt\"></i></span></h2><ul>\n<li><p>整数类型</p>\n<ol>\n<li>unsigned or signed</li>\n</ol>\n</li>\n</ul>\n<p>◦ 据实际情况使用，一般情况下推荐默认的sigend </p>\n<p>◦ unsigned 的注意事项</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">create table test_unsigned(a int unsigned, b int unsigned);</span> </span><br><span class=\"line\">Query OK, 0 rows affected (0.14 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">insert into test_unsigned values(1, 2);</span> </span><br><span class=\"line\">Query OK, 1 row affected (0.03 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">select a - b from test_unsigned;</span></span><br><span class=\"line\">ERROR 1690 (22003): BIGINT UNSIGNED value is out of range in &#x27;(`burn_test`.`test_unsigned`.`a` - `burn_test`.`test_unsigned`.`b`)&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\"><span class=\"built_in\">set</span> sql_mode = <span class=\"string\">&#x27;no_unsigned_subtraction&#x27;</span>; -- 这样就可以得到负数 Query OK, 0 rows affected (0.00 sec)int(N) 和 zerofill</span> </span><br></pre></td></tr></table></figure>\n\n<p>  2. int(N) 和 zerofill</p>\n<p> ◦ int(N)中的N是显示宽度，不表示存储的数字的长度的上限。<br> ◦ zerofill表示当存储的数字长度&lt; N时，用数字0填充左边，直至补满长度N </p>\n<p> ◦ 当存储数字的长度超过N时，按照实际存储的数字显示</p>\n<ul>\n<li><p>字符串类型</p>\n<ol>\n<li><p>char(N)和varchar(N)</p>\n<p>n表示的最大字符，很字符集有关，不是最大字节数。</p>\n</li>\n<li><p>可以使用<strong>exdump -C test_char.idb</strong> 验证char和varchar的区别</p>\n</li>\n</ol>\n</li>\n<li><p>日期类型</p>\n<blockquote>\n<p>timestamp带时区</p>\n</blockquote>\n<ol>\n<li><p>now()和sysdate()的区别</p>\n<blockquote>\n<p>select now(), sysdate(), sleep(5), now(), sysdate();</p>\n<p>或者</p>\n<p>select now(6), sysdate(6);</p>\n</blockquote>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"mysql的null\"><a href=\"#mysql的null\" class=\"headerlink\" title=\"mysql的null\"></a>mysql的null</h2><ol>\n<li>null与null比较，返回null</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> <span class=\"keyword\">select</span> <span class=\"keyword\">null</span> <span class=\"keyword\">in</span> (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"keyword\">null</span>) <span class=\"operator\">/</span><span class=\"operator\">/</span> <span class=\"keyword\">null</span></span><br><span class=\"line\"><span class=\"number\">2.</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">in</span> (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"keyword\">null</span>) <span class=\"operator\">/</span><span class=\"operator\">/</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">3.</span> <span class=\"keyword\">select</span> <span class=\"number\">2</span> <span class=\"keyword\">in</span> (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"keyword\">null</span>) <span class=\"operator\">/</span><span class=\"operator\">/</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">4.</span> <span class=\"keyword\">select</span> <span class=\"keyword\">null</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"keyword\">null</span>); <span class=\"operator\">/</span><span class=\"operator\">/</span> <span class=\"keyword\">null</span></span><br><span class=\"line\"><span class=\"number\">5.</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"keyword\">null</span>); <span class=\"operator\">/</span><span class=\"operator\">/</span> <span class=\"number\">0</span> 等于 <span class=\"keyword\">select</span> i <span class=\"keyword\">in</span> (<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"keyword\">null</span>)的结果却反 </span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>对于包含了 NULL 值的 IN 操作，总是返回 True 或者 NULL<br>NOT IN 返回 NOT True (False) 或者 NOT NULL (NULL)</p>\n</blockquote>\n<h2 id=\"获取行号\"><a href=\"#获取行号\" class=\"headerlink\" title=\"获取行号\"></a>获取行号</h2><blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"variable\">@rn</span>:<span class=\"operator\">=</span><span class=\"variable\">@rn</span><span class=\"operator\">+</span><span class=\"number\">1</span> <span class=\"keyword\">AS</span> row_no,</span><br><span class=\"line\">            e.emp_no,</span><br><span class=\"line\">            concat(e.first_name, <span class=\"string\">&#x27; &#x27;</span>, e.last_name) <span class=\"keyword\">AS</span> emp_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> employees <span class=\"keyword\">AS</span> e,</span><br><span class=\"line\"></span><br><span class=\"line\">  (<span class=\"keyword\">SELECT</span> <span class=\"variable\">@rn</span>:<span class=\"operator\">=</span><span class=\"number\">0</span>) <span class=\"keyword\">AS</span> r</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> emp_no <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;100%&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> emp_no <span class=\"keyword\">DESC</span> LIMIT <span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"分数排名\"><a href=\"#分数排名\" class=\"headerlink\" title=\"分数排名\"></a>分数排名</h3><blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> salary,</span><br><span class=\"line\">       emp_no,</span><br><span class=\"line\">       <span class=\"keyword\">CASE</span></span><br><span class=\"line\">           <span class=\"keyword\">WHEN</span> <span class=\"variable\">@prev</span>_salary <span class=\"operator\">=</span> salary <span class=\"keyword\">THEN</span> <span class=\"variable\">@rank</span>_no</span><br><span class=\"line\">           <span class=\"keyword\">WHEN</span> <span class=\"variable\">@prev</span>_salary :<span class=\"operator\">=</span> salary <span class=\"keyword\">THEN</span> <span class=\"variable\">@rank</span>_no :<span class=\"operator\">=</span> @ rank_no <span class=\"operator\">+</span> <span class=\"number\">1</span></span><br><span class=\"line\">       <span class=\"keyword\">END</span> <span class=\"keyword\">AS</span> rank_no</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  (<span class=\"keyword\">SELECT</span> salary,</span><br><span class=\"line\">          emp_no</span><br><span class=\"line\">   <span class=\"keyword\">FROM</span> salaries</span><br><span class=\"line\">   <span class=\"keyword\">WHERE</span> salary <span class=\"keyword\">BETWEEN</span> <span class=\"number\">99995</span> <span class=\"keyword\">AND</span> <span class=\"number\">100000</span></span><br><span class=\"line\">   <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> salary <span class=\"keyword\">DESC</span>, emp_no <span class=\"keyword\">ASC</span>) <span class=\"keyword\">AS</span> s,</span><br><span class=\"line\"></span><br><span class=\"line\">  (<span class=\"keyword\">SELECT</span> <span class=\"variable\">@prev</span>_salary :<span class=\"operator\">=</span> <span class=\"keyword\">NULL</span>, <span class=\"variable\">@rank</span>_no :<span class=\"operator\">=</span> <span class=\"number\">0</span>) <span class=\"keyword\">AS</span> t;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+--------+---------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> salary <span class=\"operator\">|</span> emp_no <span class=\"operator\">|</span> rank_no <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+--------+---------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">100000</span> <span class=\"operator\">|</span> <span class=\"number\">14321</span>  <span class=\"operator\">|</span> <span class=\"number\">1</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">100000</span> <span class=\"operator\">|</span> <span class=\"number\">21546</span>  <span class=\"operator\">|</span> <span class=\"number\">1</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">100000</span> <span class=\"operator\">|</span> <span class=\"number\">222235</span> <span class=\"operator\">|</span> <span class=\"number\">1</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">100000</span> <span class=\"operator\">|</span> <span class=\"number\">259902</span> <span class=\"operator\">|</span> <span class=\"number\">1</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">100000</span> <span class=\"operator\">|</span> <span class=\"number\">261168</span> <span class=\"operator\">|</span> <span class=\"number\">1</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">100000</span> <span class=\"operator\">|</span> <span class=\"number\">261550</span> <span class=\"operator\">|</span> <span class=\"number\">1</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">100000</span> <span class=\"operator\">|</span> <span class=\"number\">400917</span> <span class=\"operator\">|</span> <span class=\"number\">1</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">100000</span> <span class=\"operator\">|</span> <span class=\"number\">431717</span> <span class=\"operator\">|</span> <span class=\"number\">1</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">100000</span> <span class=\"operator\">|</span> <span class=\"number\">439061</span> <span class=\"operator\">|</span> <span class=\"number\">1</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">100000</span> <span class=\"operator\">|</span> <span class=\"number\">483067</span> <span class=\"operator\">|</span> <span class=\"number\">1</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">100000</span> <span class=\"operator\">|</span> <span class=\"number\">489082</span> <span class=\"operator\">|</span> <span class=\"number\">1</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">100000</span> <span class=\"operator\">|</span> <span class=\"number\">491679</span> <span class=\"operator\">|</span> <span class=\"number\">1</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">100000</span> <span class=\"operator\">|</span> <span class=\"number\">491713</span> <span class=\"operator\">|</span> <span class=\"number\">1</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99999</span>  <span class=\"operator\">|</span> <span class=\"number\">14182</span>  <span class=\"operator\">|</span> <span class=\"number\">2</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99999</span>  <span class=\"operator\">|</span> <span class=\"number\">61751</span>  <span class=\"operator\">|</span> <span class=\"number\">2</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99999</span>  <span class=\"operator\">|</span> <span class=\"number\">77075</span>  <span class=\"operator\">|</span> <span class=\"number\">2</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99999</span>  <span class=\"operator\">|</span> <span class=\"number\">206043</span> <span class=\"operator\">|</span> <span class=\"number\">2</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99999</span>  <span class=\"operator\">|</span> <span class=\"number\">235675</span> <span class=\"operator\">|</span> <span class=\"number\">2</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99999</span>  <span class=\"operator\">|</span> <span class=\"number\">245186</span> <span class=\"operator\">|</span> <span class=\"number\">2</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99999</span>  <span class=\"operator\">|</span> <span class=\"number\">283410</span> <span class=\"operator\">|</span> <span class=\"number\">2</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99999</span>  <span class=\"operator\">|</span> <span class=\"number\">299970</span> <span class=\"operator\">|</span> <span class=\"number\">2</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99999</span>  <span class=\"operator\">|</span> <span class=\"number\">400638</span> <span class=\"operator\">|</span> <span class=\"number\">2</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99999</span>  <span class=\"operator\">|</span> <span class=\"number\">401461</span> <span class=\"operator\">|</span> <span class=\"number\">2</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99999</span>  <span class=\"operator\">|</span> <span class=\"number\">405955</span> <span class=\"operator\">|</span> <span class=\"number\">2</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99999</span>  <span class=\"operator\">|</span> <span class=\"number\">429672</span> <span class=\"operator\">|</span> <span class=\"number\">2</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99999</span>  <span class=\"operator\">|</span> <span class=\"number\">442806</span> <span class=\"operator\">|</span> <span class=\"number\">2</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99998</span>  <span class=\"operator\">|</span> <span class=\"number\">20541</span>  <span class=\"operator\">|</span> <span class=\"number\">3</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99998</span>  <span class=\"operator\">|</span> <span class=\"number\">104585</span> <span class=\"operator\">|</span> <span class=\"number\">3</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">99998</span>  <span class=\"operator\">|</span> <span class=\"number\">202958</span> <span class=\"operator\">|</span> <span class=\"number\">3</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+--------+---------+</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"统计没有创建主键的表\"><a href=\"#统计没有创建主键的表\" class=\"headerlink\" title=\"统计没有创建主键的表\"></a>统计没有创建主键的表</h3><figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> TABLE_NAME,</span><br><span class=\"line\">       table_schema</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> tables</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> TABLE_NAME <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span></span><br><span class=\"line\">    (<span class=\"keyword\">SELECT</span> TABLE_NAME</span><br><span class=\"line\">     <span class=\"keyword\">FROM</span> COLUMNS</span><br><span class=\"line\">     <span class=\"keyword\">WHERE</span> `COLUMN_KEY` <span class=\"operator\">=</span> <span class=\"string\">&#x27;PRI&#x27;</span></span><br><span class=\"line\">       <span class=\"keyword\">AND</span> `TABLE_SCHEMA` <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span> (<span class=\"string\">&#x27;sys&#x27;</span>,</span><br><span class=\"line\">                                  <span class=\"string\">&#x27;information_schema&#x27;</span>,</span><br><span class=\"line\">                                  <span class=\"string\">&#x27;mysql&#x27;</span>,</span><br><span class=\"line\">                                  <span class=\"string\">&#x27;performance_schema&#x27;</span>)</span><br><span class=\"line\">     <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> TABLE_NAME</span><br><span class=\"line\">     <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> TABLE_NAME)</span><br><span class=\"line\">  <span class=\"keyword\">AND</span> table_schema <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span> (<span class=\"string\">&#x27;sys&#x27;</span>,</span><br><span class=\"line\">                           <span class=\"string\">&#x27;information_schema&#x27;</span>,</span><br><span class=\"line\">                           <span class=\"string\">&#x27;performance_schema&#x27;</span>,</span><br><span class=\"line\">                           <span class=\"string\">&#x27;mysql&#x27;</span>);</span><br></pre></td></tr></table></figure>\n","categories":["mysql"]},{"title":"mysql学习笔记-详细介绍innodb内存结构","url":"/mysql/learn-mysql-024/","content":"<h2 id=\"heap-number\"><a href=\"#heap-number\" class=\"headerlink\" title=\"heap number\"></a>heap number</h2><ul>\n<li><p>heap number表示的是页中每个记录插入的顺序序号</p>\n<ul>\n<li>假设插入的数据是 a，b，d，e，g；则对应的heap_number是2，3，4，5，6</li>\n<li>0和1被infimun和supermum所使用<ul>\n<li>infimun对应最小的heap_number</li>\n<li>supermum对应最大的head_number，随着数据的插入，该值会被更新</li>\n</ul>\n</li>\n<li>update对head_number没有影响</li>\n<li>heap_number是物理的，存储在row的record header字段中</li>\n</ul>\n<p><img src=\"/mysql/learn-mysql-024/image-20230401231752713.png\" alt=\"image-20230401231752713\" loading=\"lazy\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">shell&gt; </span><span class=\"language-bash\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -p 5 -R 127 record-dump</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-024/image-20230401231917442.png\" alt=\"image-20230401231917442\" style=\"zoom:50%;\">\n\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> engine innodb status; ## 查看锁信息</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"缓冲池-buffer-bool\"><a href=\"#缓冲池-buffer-bool\" class=\"headerlink\" title=\"缓冲池(buffer bool)\"></a>缓冲池(buffer bool)</h2><ul>\n<li><p><strong>缓冲池介绍</strong></p>\n<ul>\n<li>每次读写数据都是通过buffer pool<ul>\n<li>当buffer pool中没有用户所需要的数据是，才会从磁盘中获取</li>\n</ul>\n</li>\n<li>通过innodb_buffer_pool_size设置总容量，该值越大越好</li>\n<li>innodb_buffer_pool_instances设置为多少个缓冲池<ul>\n<li>总容量还是innodb_buffer_size</li>\n<li>设置多少个instances可将热点数据分散，提高并发性能(建议设置成cpu个数)</li>\n</ul>\n</li>\n<li>buffer pool是以页为单位进行管理的，且大小和innodb_page_size一致</li>\n</ul>\n<p><img src=\"/mysql/learn-mysql-024/image-20230401232957861.png\" alt=\"image-20230401232957861\" loading=\"lazy\"></p>\n</li>\n<li><p><strong>buffer pool性能测试</strong></p>\n<p><img src=\"/mysql/learn-mysql-024/image-20230401233221806.png\" alt=\"image-20230401233221806\" loading=\"lazy\"></p>\n<blockquote>\n<p>18G的测试数据，80M条记录</p>\n<ol>\n<li>当buffer pool使用的内存超过数据库大小时，比如20G(数据库中所有数据都在内存中)，此时的性能有很大的提升。</li>\n<li>该图测试的TPS(每秒事务数)，sysbench中一个事务有18条sql组成，即这里的QPS时4.5w</li>\n<li>内存减少10%，性能下降60%</li>\n</ol>\n</blockquote>\n</li>\n<li><p><strong>buffer pool的管理</strong></p>\n<ul>\n<li><p>buffer pool的组成</p>\n<p><img src=\"/mysql/learn-mysql-024/image-20230401233740442.png\" alt=\"image-20230401233740442\" loading=\"lazy\"></p>\n<ul>\n<li><p>free list</p>\n<blockquote>\n<p>buffer pool刚启动时，有一个16k的空白页，这些页存放(链表串联)在free list中</p>\n</blockquote>\n</li>\n<li><p>lru list</p>\n<blockquote>\n<p>当读取一个数据页的时候，就从free list中取出一个页，存入数据，并将该页放入到lru list中</p>\n</blockquote>\n</li>\n<li><p>flush list</p>\n<blockquote>\n<ol>\n<li>当lru list中的页第一次被修改了，将该页的指针(page number)放入到flush list(只要修改过，就放入，不管修改次数)</li>\n<li>flush list中包含脏页(数据经过修改，但是未刷入磁盘的页)</li>\n<li>flush list中存放的不是一个页，而是页的指针(page number)</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>查看buffer pool的状态</p>\n<ul>\n<li><p>使用命令 show engine innodb status;</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:(<span class=\"keyword\">none</span>)<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> engine innodb status;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+------+----------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Type   <span class=\"operator\">|</span> Name <span class=\"operator\">|</span> Status                                                                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+------+----------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> InnoDB <span class=\"operator\">|</span>      <span class=\"operator\">|</span>                                                                                  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span>                                            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"number\">2023</span><span class=\"number\">-04</span><span class=\"number\">-01</span> <span class=\"number\">15</span>:<span class=\"number\">46</span>:<span class=\"number\">33</span> <span class=\"number\">0xfffe0c1ac1c0</span> INNODB MONITOR OUTPUT                         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span>                                            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">Per</span> <span class=\"keyword\">second</span> averages calculated <span class=\"keyword\">from</span> the <span class=\"keyword\">last</span> <span class=\"number\">13</span> seconds                          <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">-----------------                                                                |</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> 省略其他输出.......                                                                <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">----------------------                                                           |</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> BUFFER POOL <span class=\"keyword\">AND</span> MEMORY                                                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">----------------------                                                           |</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Total <span class=\"keyword\">large</span> memory allocated <span class=\"number\">6596591616</span>                                          <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Dictionary memory allocated <span class=\"number\">123994</span>                                               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Buffer pool size   <span class=\"number\">393168</span>                                                        <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">Free</span> buffers       <span class=\"number\">392675</span>                                                        <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Database pages     <span class=\"number\">493</span>                                                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">Old</span> database pages <span class=\"number\">0</span>                                                             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Modified db pages  <span class=\"number\">0</span>                                                             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pending <span class=\"keyword\">reads</span>      <span class=\"number\">0</span>                                                             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pending writes: LRU <span class=\"number\">0</span>, flush list <span class=\"number\">0</span>, single page <span class=\"number\">0</span>                               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pages made young <span class=\"number\">0</span>, <span class=\"keyword\">not</span> young <span class=\"number\">0</span>                                                  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"number\">0.00</span> youngs<span class=\"operator\">/</span>s, <span class=\"number\">0.00</span> non<span class=\"operator\">-</span>youngs<span class=\"operator\">/</span>s                                                 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pages read <span class=\"number\">441</span>, created <span class=\"number\">52</span>, written <span class=\"number\">56</span>                                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"number\">0.00</span> <span class=\"keyword\">reads</span><span class=\"operator\">/</span>s, <span class=\"number\">0.00</span> creates<span class=\"operator\">/</span>s, <span class=\"number\">0.00</span> writes<span class=\"operator\">/</span>s                                      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">No</span> buffer pool page gets since the <span class=\"keyword\">last</span> printout                                 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pages read ahead <span class=\"number\">0.00</span><span class=\"operator\">/</span>s, evicted <span class=\"keyword\">without</span> access <span class=\"number\">0.00</span><span class=\"operator\">/</span>s, Random read ahead <span class=\"number\">0.00</span><span class=\"operator\">/</span>s <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> LRU len: <span class=\"number\">493</span>, unzip_LRU len: <span class=\"number\">0</span>                                                   <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> I<span class=\"operator\">/</span>O sum[<span class=\"number\">0</span>]:cur[<span class=\"number\">0</span>], unzip sum[<span class=\"number\">0</span>]:cur[<span class=\"number\">0</span>]                                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">----------------------                                                           |</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> INDIVIDUAL BUFFER POOL INFO                                                      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">----------------------                                                           |</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">---BUFFER POOL 0                                                                 |</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Buffer pool size   <span class=\"number\">49146</span>                                                         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">Free</span> buffers       <span class=\"number\">49046</span>                                                         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Database pages     <span class=\"number\">100</span>                                                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">Old</span> database pages <span class=\"number\">0</span>                                                             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Modified db pages  <span class=\"number\">0</span>                                                             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pending <span class=\"keyword\">reads</span>      <span class=\"number\">0</span>                                                             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pending writes: LRU <span class=\"number\">0</span>, flush list <span class=\"number\">0</span>, single page <span class=\"number\">0</span>                               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pages made young <span class=\"number\">0</span>, <span class=\"keyword\">not</span> young <span class=\"number\">0</span>                                                  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"number\">0.00</span> youngs<span class=\"operator\">/</span>s, <span class=\"number\">0.00</span> non<span class=\"operator\">-</span>youngs<span class=\"operator\">/</span>s                                                 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pages read <span class=\"number\">100</span>, created <span class=\"number\">0</span>, written <span class=\"number\">2</span>                                             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"number\">0.00</span> <span class=\"keyword\">reads</span><span class=\"operator\">/</span>s, <span class=\"number\">0.00</span> creates<span class=\"operator\">/</span>s, <span class=\"number\">0.00</span> writes<span class=\"operator\">/</span>s                                      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">No</span> buffer pool page gets since the <span class=\"keyword\">last</span> printout                                 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pages read ahead <span class=\"number\">0.00</span><span class=\"operator\">/</span>s, evicted <span class=\"keyword\">without</span> access <span class=\"number\">0.00</span><span class=\"operator\">/</span>s, Random read ahead <span class=\"number\">0.00</span><span class=\"operator\">/</span>s <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> LRU len: <span class=\"number\">100</span>, unzip_LRU len: <span class=\"number\">0</span>                                                   <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> I<span class=\"operator\">/</span>O sum[<span class=\"number\">0</span>]:cur[<span class=\"number\">0</span>], unzip sum[<span class=\"number\">0</span>]:cur[<span class=\"number\">0</span>]                                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+------+----------------------------------------------------------------------------------+</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Buffer pool size的单位是页，Modified db pages是脏页， young表示的是old --&gt; new的状态</p>\n</blockquote>\n</li>\n<li><p>使用原数据表INNODB_BUFFER_PAGE_LRU</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:information_schema<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> `INNODB_BUFFER_PAGE_LRU`;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span>[ <span class=\"number\">1.</span> <span class=\"type\">row</span> ]<span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span><span class=\"operator\">*</span></span><br><span class=\"line\">POOL_ID             <span class=\"operator\">|</span> <span class=\"number\">0</span></span><br><span class=\"line\">LRU_POSITION        <span class=\"operator\">|</span> <span class=\"number\">0</span></span><br><span class=\"line\">SPACE               <span class=\"operator\">|</span> <span class=\"number\">0</span></span><br><span class=\"line\">PAGE_NUMBER         <span class=\"operator\">|</span> <span class=\"number\">7</span></span><br><span class=\"line\">PAGE_TYPE           <span class=\"operator\">|</span> <span class=\"keyword\">SYSTEM</span></span><br><span class=\"line\">FLUSH_TYPE          <span class=\"operator\">|</span> <span class=\"number\">1</span></span><br><span class=\"line\">FIX_COUNT           <span class=\"operator\">|</span> <span class=\"number\">0</span></span><br><span class=\"line\">IS_HASHED           <span class=\"operator\">|</span> <span class=\"keyword\">NO</span></span><br><span class=\"line\">NEWEST_MODIFICATION <span class=\"operator\">|</span> <span class=\"number\">1381535819</span></span><br><span class=\"line\">OLDEST_MODIFICATION <span class=\"operator\">|</span> <span class=\"number\">0</span></span><br><span class=\"line\">ACCESS_TIME         <span class=\"operator\">|</span> <span class=\"number\">18035656</span></span><br><span class=\"line\">TABLE_NAME          <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span></span><br><span class=\"line\">INDEX_NAME          <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span></span><br><span class=\"line\">NUMBER_RECORDS      <span class=\"operator\">|</span> <span class=\"number\">0</span></span><br><span class=\"line\">DATA_SIZE           <span class=\"operator\">|</span> <span class=\"number\">0</span></span><br><span class=\"line\">COMPRESSED_SIZE     <span class=\"operator\">|</span> <span class=\"number\">0</span></span><br><span class=\"line\">COMPRESSED          <span class=\"operator\">|</span> <span class=\"keyword\">NO</span></span><br><span class=\"line\">IO_FIX              <span class=\"operator\">|</span> IO_NONE</span><br><span class=\"line\">IS_OLD              <span class=\"operator\">|</span> <span class=\"keyword\">NO</span></span><br><span class=\"line\">FREE_PAGE_CLOCK     <span class=\"operator\">|</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>NEWEST_MODIFICATION: 表示的是该页最近一次(最新)被修改的lsn值</p>\n<p>OLDEST_MODIFICATION: 表示的是该页在buffer pool中第一次被修改的lsn值，flush list是根据该值进行排序的，该值越小，表示该页应该最新被刷新</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>lru list的管理</p>\n<ul>\n<li><p>使用mid point的lru算法</p>\n<ol>\n<li><p>当该页被第一次读取时，该页优先放在mid point的位置</p>\n</li>\n<li><p>当被读取到第二次时，才会将该页放入到new page的首部</p>\n</li>\n<li><p>innodb_old_blocks_pct参数控制mid point的位置，默认37，即3&#x2F;8的位置</p>\n<img src=\"/mysql/learn-mysql-024/innodb-buffer-pool-list.png\" alt=\"innodb_buffer_pool_lru_list.\" style=\"zoom:75%;\">\n\n<blockquote>\n<p>LRU list中new page和old page时在一个链表上的，访问多的就从mid point排到了链表的前面，然后冷的页面就慢慢的被挤到了old page中，如果old中的数据被继续多次访问，还是会回到new中</p>\n<ol>\n<li>mid --&gt; new</li>\n<li>mid --&gt; old --&gt; new</li>\n<li>mid --&gt; old --&gt; 刷回磁盘</li>\n<li>new --&gt; old --&gt; 刷回磁盘</li>\n</ol>\n<p>当free list中没有空闲的页时，就需要从old page中将最后的页(被淘汰的)取出，给新的查询所使用</p>\n<p>如果被淘汰的页时脏页(page number在flush list中)，则需要先刷回磁盘后，在给新的查询使用</p>\n</blockquote>\n</li>\n</ol>\n<ul>\n<li><p>避免扫描语句污染lru</p>\n<p>当使用select * from tablename时，则该语句会读取某个页很多次(即该页可能被读取了两次以上，读取一条记录，就需要读取一次页)</p>\n<ol>\n<li><p>Innodb_old_block_time</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:information_schema<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> <span class=\"string\">&#x27;innodb_old%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name          <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_old_blocks_pct  <span class=\"operator\">|</span> <span class=\"number\">37</span>    <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_old_blocks_time <span class=\"operator\">|</span> <span class=\"number\">1000</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------+-------+</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>innodb_old_blocks_time单位时秒</p>\n<ol>\n<li>当该页第一次被读取时，该页放在mid point位置，但是随后无论读多少次，在innodb_old_blocks_time的时间内都不管(被视作只读取了一次)，等这个世界过去了，如果该页还是被读取了，才会将该页放入到new page的首部</li>\n<li>通常select * 扫描操作不回超过1s，一个页很快就被扫描完了</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>buffer pool的预热</p>\n<p>mysql5.6以后，可以在停机的时候dump出buffer pool的数据(space，page number)，然后在启动的时候load进buffer pool，该功能可以让mysql启动时自动预热，无需人工干预</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:information_schema<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> <span class=\"string\">&#x27;innodb_buffer_pool%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------------+----------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name                       <span class=\"operator\">|</span> <span class=\"keyword\">Value</span>          <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------------+----------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_buffer_pool_chunk_size       <span class=\"operator\">|</span> <span class=\"number\">134217728</span>      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_buffer_pool_dump_at_shutdown <span class=\"operator\">|</span> <span class=\"keyword\">ON</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_buffer_pool_dump_now         <span class=\"operator\">|</span> OFF            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_buffer_pool_dump_pct         <span class=\"operator\">|</span> <span class=\"number\">40</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_buffer_pool_filename         <span class=\"operator\">|</span> ib_buffer_pool <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_buffer_pool_instances        <span class=\"operator\">|</span> <span class=\"number\">8</span>              <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_buffer_pool_load_abort       <span class=\"operator\">|</span> OFF            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_buffer_pool_load_at_startup  <span class=\"operator\">|</span> <span class=\"keyword\">ON</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_buffer_pool_load_now         <span class=\"operator\">|</span> OFF            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_buffer_pool_size             <span class=\"operator\">|</span> <span class=\"number\">6442450944</span>     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------------+----------------+</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>innodb_buffer_pool_dump_pct: dump的百分比，是每个buffer pool文件，而不是整体</p>\n<ol>\n<li>dump的越多，启动的越慢</li>\n<li>频繁的手工dump(set innodb_buffer_pool_dump_now &#x3D; 1)，会导致buffer pool中的数据越来越少，是因为设置了innodb_buffer_pool_dump_pct</li>\n<li>如果做了高可用，可以定期dump，然后将dump文件传输到slave上，然后直接load(set innodb_buffer_pool_load_now &#x3D; 1)</li>\n<li>load now和dump now都是异步处理的</li>\n</ol>\n</blockquote>\n<blockquote>\n<p>提示：</p>\n<p>由于innodb_buffer_pool_dump_cpt是针对每个innodb pool的百分比，测试的时候应该将其调整的小一些</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>buffer pool与压缩页</p>\n<ul>\n<li><p>查找buffer pool中的压缩页</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> table_name, space, page_number, index_name, compressed_size, compressed <span class=\"keyword\">from</span> information_schema.`INNODB_UFFER_PAGE_LRU` <span class=\"keyword\">where</span> `COMPRESSED_SIZE` <span class=\"operator\">!=</span> <span class=\"number\">0</span> limit <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+-------+-------------+-----------------+-----------------+------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> table_name              <span class=\"operator\">|</span> space <span class=\"operator\">|</span> page_number <span class=\"operator\">|</span> index_name      <span class=\"operator\">|</span> compressed_size <span class=\"operator\">|</span> compressed <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+-------+-------------+-----------------+-----------------+------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>                  <span class=\"operator\">|</span> <span class=\"number\">64</span>    <span class=\"operator\">|</span> <span class=\"number\">0</span>           <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>          <span class=\"operator\">|</span> <span class=\"number\">4096</span>            <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>                  <span class=\"operator\">|</span> <span class=\"number\">64</span>    <span class=\"operator\">|</span> <span class=\"number\">1</span>           <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>          <span class=\"operator\">|</span> <span class=\"number\">4096</span>            <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>                  <span class=\"operator\">|</span> <span class=\"number\">64</span>    <span class=\"operator\">|</span> <span class=\"number\">2</span>           <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>          <span class=\"operator\">|</span> <span class=\"number\">4096</span>            <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> `ypb`.`test_compressed` <span class=\"operator\">|</span> <span class=\"number\">64</span>    <span class=\"operator\">|</span> <span class=\"number\">3</span>           <span class=\"operator\">|</span> GEN_CLUST_INDEX <span class=\"operator\">|</span> <span class=\"number\">4096</span>            <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>                  <span class=\"operator\">|</span> <span class=\"number\">67</span>    <span class=\"operator\">|</span> <span class=\"number\">320</span>         <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>          <span class=\"operator\">|</span> <span class=\"number\">4096</span>            <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>                  <span class=\"operator\">|</span> <span class=\"number\">67</span>    <span class=\"operator\">|</span> <span class=\"number\">321</span>         <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>          <span class=\"operator\">|</span> <span class=\"number\">4096</span>            <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>                  <span class=\"operator\">|</span> <span class=\"number\">67</span>    <span class=\"operator\">|</span> <span class=\"number\">322</span>         <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>          <span class=\"operator\">|</span> <span class=\"number\">4096</span>            <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>                  <span class=\"operator\">|</span> <span class=\"number\">67</span>    <span class=\"operator\">|</span> <span class=\"number\">323</span>         <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>          <span class=\"operator\">|</span> <span class=\"number\">4096</span>            <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>                  <span class=\"operator\">|</span> <span class=\"number\">67</span>    <span class=\"operator\">|</span> <span class=\"number\">324</span>         <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>          <span class=\"operator\">|</span> <span class=\"number\">4096</span>            <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>                  <span class=\"operator\">|</span> <span class=\"number\">67</span>    <span class=\"operator\">|</span> <span class=\"number\">325</span>         <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>          <span class=\"operator\">|</span> <span class=\"number\">4096</span>            <span class=\"operator\">|</span> <span class=\"keyword\">NO</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+-------+-------------+-----------------+-----------------+------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span>  <span class=\"keyword\">select</span> table_id, name, space, row_format, zip_page_size <span class=\"keyword\">from</span> information_schema.`INNODB_SYS_TABLES` <span class=\"keyword\">where</span> `SPACE` <span class=\"keyword\">in</span> (<span class=\"number\">64</span>, <span class=\"number\">67</span>);</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+---------------------+-------+------------+---------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> table_id <span class=\"operator\">|</span> name                <span class=\"operator\">|</span> space <span class=\"operator\">|</span> row_format <span class=\"operator\">|</span> zip_page_size <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+---------------------+-------+------------+---------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">68</span>       <span class=\"operator\">|</span> ypb<span class=\"operator\">/</span>test_compressed <span class=\"operator\">|</span> <span class=\"number\">64</span>    <span class=\"operator\">|</span> Compressed <span class=\"operator\">|</span> <span class=\"number\">4096</span>          <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+---------------------+-------+------------+---------------+</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>压缩页在内存中的存放</p>\n<ul>\n<li><p>压缩页存放在unzip_lru中</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> engine innodb status;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+------+----------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Type   <span class=\"operator\">|</span> Name <span class=\"operator\">|</span> Status                                                                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+------+----------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> InnoDB <span class=\"operator\">|</span>      <span class=\"operator\">|</span>                                                                                  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> BUFFER POOL <span class=\"keyword\">AND</span> MEMORY                                                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">----------------------                                                           |</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Total <span class=\"keyword\">large</span> memory allocated <span class=\"number\">6596591616</span>                                          <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Dictionary memory allocated <span class=\"number\">144581</span>                                               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Buffer pool size   <span class=\"number\">393174</span>                                                        <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">Free</span> buffers       <span class=\"number\">319176</span>                                                        <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Database pages     <span class=\"number\">64425</span>                                                         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">Old</span> database pages <span class=\"number\">23619</span>                                                         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Modified db pages  <span class=\"number\">0</span>                                                             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pending <span class=\"keyword\">reads</span>      <span class=\"number\">0</span>                                                             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pending writes: LRU <span class=\"number\">0</span>, flush list <span class=\"number\">0</span>, single page <span class=\"number\">0</span>                               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pages made young <span class=\"number\">0</span>, <span class=\"keyword\">not</span> young <span class=\"number\">0</span>                                                  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"number\">0.00</span> youngs<span class=\"operator\">/</span>s, <span class=\"number\">0.00</span> non<span class=\"operator\">-</span>youngs<span class=\"operator\">/</span>s                                                 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pages read <span class=\"number\">6567</span>, created <span class=\"number\">57858</span>, written <span class=\"number\">105643</span>                                   <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"number\">0.00</span> <span class=\"keyword\">reads</span><span class=\"operator\">/</span>s, <span class=\"number\">0.00</span> creates<span class=\"operator\">/</span>s, <span class=\"number\">0.00</span> writes<span class=\"operator\">/</span>s                                      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">No</span> buffer pool page gets since the <span class=\"keyword\">last</span> printout                                 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pages read ahead <span class=\"number\">0.00</span><span class=\"operator\">/</span>s, evicted <span class=\"keyword\">without</span> access <span class=\"number\">0.00</span><span class=\"operator\">/</span>s, Random read ahead <span class=\"number\">0.00</span><span class=\"operator\">/</span>s <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> LRU len: <span class=\"number\">64425</span>, unzip_LRU len: <span class=\"number\">38273</span>                                             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> I<span class=\"operator\">/</span>O sum[<span class=\"number\">0</span>]:cur[<span class=\"number\">0</span>], unzip sum[<span class=\"number\">0</span>]:cur[<span class=\"number\">0</span>]                                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">----------------------                                                           |</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> INDIVIDUAL BUFFER POOL INFO                                                      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">----------------------                                                           |</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">---BUFFER POOL 0                                                                 |</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Buffer pool size   <span class=\"number\">49152</span>                                                         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">Free</span> buffers       <span class=\"number\">39845</span>                                                         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Database pages     <span class=\"number\">8087</span>                                                          <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">Old</span> database pages <span class=\"number\">2965</span>                                                          <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Modified db pages  <span class=\"number\">0</span>                                                             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pending <span class=\"keyword\">reads</span>      <span class=\"number\">0</span>                                                             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pending writes: LRU <span class=\"number\">0</span>, flush list <span class=\"number\">0</span>, single page <span class=\"number\">0</span>                               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pages made young <span class=\"number\">0</span>, <span class=\"keyword\">not</span> young <span class=\"number\">0</span>                                                  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"number\">0.00</span> youngs<span class=\"operator\">/</span>s, <span class=\"number\">0.00</span> non<span class=\"operator\">-</span>youngs<span class=\"operator\">/</span>s                                                 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pages read <span class=\"number\">870</span>, created <span class=\"number\">7217</span>, written <span class=\"number\">12719</span>                                      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"number\">0.00</span> <span class=\"keyword\">reads</span><span class=\"operator\">/</span>s, <span class=\"number\">0.00</span> creates<span class=\"operator\">/</span>s, <span class=\"number\">0.00</span> writes<span class=\"operator\">/</span>s                                      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">No</span> buffer pool page gets since the <span class=\"keyword\">last</span> printout                                 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pages read ahead <span class=\"number\">0.00</span><span class=\"operator\">/</span>s, evicted <span class=\"keyword\">without</span> access <span class=\"number\">0.00</span><span class=\"operator\">/</span>s, Random read ahead <span class=\"number\">0.00</span><span class=\"operator\">/</span>s <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> LRU len: <span class=\"number\">8087</span>, unzip_LRU len: <span class=\"number\">4874</span>                                               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> I<span class=\"operator\">/</span>O sum[<span class=\"number\">0</span>]:cur[<span class=\"number\">0</span>], unzip sum[<span class=\"number\">0</span>]:cur[<span class=\"number\">0</span>]                                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+------+----------------------------------------------------------------------------------+</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>unzip_LRU len: 压缩页LRU的长度在buffer pool中的长度</p>\n</blockquote>\n</li>\n<li><p>伙伴算法</p>\n<blockquote>\n<ol>\n<li>磁盘中存放压缩页row_format&#x3D;compressed，假设key_block_size&#x3D;8k，buffer pool的页大小时16k</li>\n<li>向free list中申请空闲的页，如果没有空闲的页，则向RLU list申请页，如果LRU满了，则找LRU中最后一个页，如果最后页是脏页，则做flush操作，最后得到一个空白的16k的页</li>\n<li>该16k的空白页，就给8k的压缩页使用，剩余的8k空间，保存到8k到free list中</li>\n<li>如果有一个4k到压缩页，将8k到free list中的空闲页给他用，然后将多余的4k空间保存到4k到free list中去</li>\n</ol>\n</blockquote>\n<p><img src=\"/mysql/learn-mysql-024/image-20230402224313552.png\" alt=\"image-20230402224313552\" loading=\"lazy\"></p>\n<blockquote>\n<ol>\n<li>通过上面的方式，不同大小的页可以在同一个buffer pool中使用</li>\n<li>不能根据页的大小来划分缓冲池，缓冲池中页的大小就是固定大小，(等于innodb_page_size)</li>\n<li>LRU list和Flush list不需要根据页大小划分，都是统一的innodb_page_size大小</li>\n</ol>\n</blockquote>\n</li>\n<li><p>压缩页在内存中的保留</p>\n<ol>\n<li>压缩页需要中buffer pool中解压</li>\n<li>原来的压缩页保留在buffer pool中</li>\n</ol>\n<blockquote>\n<p>缺点就是压缩页占用了buffer pool的大小，对于热点数据来说，相当于内存变小了，可能造成性能下降</p>\n<ol>\n<li>所以在开启了压缩后，buffer pool的空间要相应的增大</li>\n<li>如果启用压缩后节省了磁盘io能够抵消buffer pool空间变小所带来的性能下降，那整体性能还是会上涨</li>\n<li>启用压缩的前提是，内存尽可能大</li>\n</ol>\n</blockquote>\n<ol start=\"3\">\n<li>压缩页保留的原因是为了在更新数据的时候，将redo添加到压缩页的空闲部分，如果要刷回磁盘，可以直接将压缩页刷回去，如果该页被写满，则做一次reorganize操作(在此之前需要解压)，真的写满了才做分裂</li>\n</ol>\n<p><img src=\"/mysql/learn-mysql-024/image-20230402225556931.png\" alt=\"image-20230402225556931\" loading=\"lazy\"></p>\n<blockquote>\n<p>保留压缩页是为了更快的刷回磁盘</p>\n<p>解压页是为了更快的查询</p>\n</blockquote>\n<p>透明压缩表没有上面压缩页的问题，因为压缩是文件系统层的，对mysql是透明的</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"checkpoint\"><a href=\"#checkpoint\" class=\"headerlink\" title=\"checkpoint\"></a>checkpoint</h2><ul>\n<li><p><strong>checkpint的作用</strong></p>\n<ul>\n<li>缩短数据库恢复时间</li>\n<li>缓冲池不够用时，将脏页刷新到磁盘</li>\n<li>重做日志不可用时，刷新脏页</li>\n</ul>\n<blockquote>\n<ol>\n<li>数据页首先被读取到缓冲池中，当数据页中某几条记录被更新或者插入新记录时，所有的操作都是先在buffer pool中完成的</li>\n<li>buffer pool中的某个页和磁盘中的某个页在(space，page_number)上是相同的，但是其内容可能是不同的(buffer pool中被更新过)，形成了脏页</li>\n<li>要定期将缓冲池中的脏页刷回磁盘，达到最终一致性，即通过checkpoint机制来刷新脏页</li>\n</ol>\n</blockquote>\n<p><img src=\"/mysql/learn-mysql-024/image-20230402230705699.png\" alt=\"image-20230402230705699\" loading=\"lazy\"></p>\n</li>\n<li><p><strong>lsn(log sequence number)</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> engine innodb status;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+------+----------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Type   <span class=\"operator\">|</span> Name <span class=\"operator\">|</span> Status                                                                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+------+----------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> InnoDB <span class=\"operator\">|</span>      <span class=\"operator\">|</span>                                                                                  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span>                                            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"number\">2023</span><span class=\"number\">-04</span><span class=\"number\">-02</span> <span class=\"number\">15</span>:<span class=\"number\">08</span>:<span class=\"number\">05</span> <span class=\"number\">0xfffe040e61c0</span> INNODB MONITOR OUTPUT                         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span><span class=\"operator\">=</span>                                            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">Per</span> <span class=\"keyword\">second</span> averages calculated <span class=\"keyword\">from</span> the <span class=\"keyword\">last</span> <span class=\"number\">39</span> seconds                          <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">---                                                                              |</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> LOG                                                                              <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">---                                                                              |</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Log sequence number <span class=\"number\">2290380642</span>                                                   <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Log flushed up <span class=\"keyword\">to</span>   <span class=\"number\">2290380642</span>                                                   <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Pages flushed up <span class=\"keyword\">to</span> <span class=\"number\">2290380642</span>                                                   <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">Last</span> checkpoint <span class=\"keyword\">at</span>  <span class=\"number\">2290380633</span>                                                   <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"number\">0</span> pending log flushes, <span class=\"number\">0</span> pending chkp writes                                     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"number\">784</span> log i<span class=\"operator\">/</span>o<span class=\"string\">&#x27;s done, 0.00 log i/o&#x27;</span>s<span class=\"operator\">/</span><span class=\"keyword\">second</span>                                        <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">----------------------                                                           |</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+------+----------------------------------------------------------------------------------+</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Log sequence number: 当前内存中最新的lsn</p>\n<p>Log flushed up to: redo刷新到磁盘的lsn</p>\n<p>Pages flushed up to: 最后一次刷新到磁盘上的页的最新的lsn(NEWEST_MODIFICATION)</p>\n<p>Last checkpoint at: 最后一次刷到磁盘上页的第一次被修改的lsn(OLDEST_MODIFICATION)</p>\n<p>lsn是一个字节数</p>\n<ol>\n<li>log sequence number和log flush up这两个lsn可能回不同，运行过程中可能回出现小于后者，因为redo日志也是先在内存中更新，在刷新到磁盘的</li>\n<li>pages flushed up和last checkpoint其实都指向了最后一个刷新到磁盘的页，只是pages flushed up代表了页中的NEWEST_MODIFICATION，而last checkpoint代表了OLDEST_MODIFICATION<ul>\n<li>flush list使用OLDEST_MODIFICATION进行排序，在刷新脏页时，checkpoint的lsn值就对应时当前刷新到某个页的OLDEST_MODIFICATION</li>\n<li>当某个页只被修改过一次，则pages flushed up和last checkpoint会想等，反之多次修改，则pages flushed up大于last checkpoint</li>\n<li>在恢复时，从checkpoint开始恢复，如果当前页的lsn大于checkpoint的lsn，表示不需要恢复了</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<ul>\n<li><p>日志(redo)中的lsn</p>\n<p>假设当前的lsn为c，此时对某个页被修改，则会产生M个字节的日志，则此时的lsn为c+m，日志中的lsn代表了日志一共写入了多少字节</p>\n</li>\n<li><p>页中的lsn</p>\n<p>页中也有lsn，表示该页被修改的时候，对应的lsn是多少</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">desc</span> information_schema.INNODB_BUFFER_PAGE_LRU;</span><br></pre></td></tr></table></figure>\n\n<p>page中的lsn主要用在恢复的时候，保存在页头</p>\n</li>\n<li><p>checkpoint的lsn</p>\n<p>每个数据库中也有一个lsn，表示最后一个刷新到磁盘页的lsn，表明了该lsn之前的数据已经刷新到磁盘了，且如果需要做恢复操作，也只要从当前这个checkpoint lsn开始恢复</p>\n<blockquote>\n<p>checkpoint lsn写在redo log的前2k空间中</p>\n<ol>\n<li>日志中的lsn &#x3D; checkpoint的lsn。表示所有页都已经刷新会磁盘</li>\n<li>日志中的lsn &gt; checkpoint的lsn。表示还有页没有刷新到磁盘，如果是宕机，则需要用日志恢复</li>\n<li>日志中的lsn &lt; checkpoint的lsn，报错</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p><strong>checkpint的分类</strong></p>\n<ul>\n<li><p>sharp checkpoint</p>\n<ul>\n<li>将所有脏页刷新会磁盘</li>\n<li>通常在数据库关闭的时候</li>\n<li>刷新的时候hang住</li>\n<li>innodb_fast_shutdown &#x3D; 1&#x2F;0</li>\n</ul>\n</li>\n<li><p>fuzzy checkpoint</p>\n<ul>\n<li><p>将部分脏页刷新到磁盘</p>\n</li>\n<li><p>对系统影响小</p>\n</li>\n<li><p>innodb_io_capacity</p>\n<blockquote>\n<p>最小限制100</p>\n<p>一次最多刷新到脏页能力，与iops有关</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>刷新</strong></p>\n<ul>\n<li><p>master thread checkpoint </p>\n<p>从flush list中刷新</p>\n</li>\n<li><p>flush lru list checkpoint</p>\n<p>从lru list中刷新</p>\n<p>innodb_lru_scan_depth表示的是每次进行lru list刷新脏页的数量</p>\n<blockquote>\n<p>该参数是应用到每个buffer pool实例中的，总数为 innodb_lru_scan_depth * innodb_buffer_pool_instances</p>\n<p>建议该值不要超过innodb_io_capacity&#x2F;innodb_buffer_pool_instances</p>\n</blockquote>\n</li>\n<li><p>async&#x2F;sync flush checkpoint</p>\n<p>重做日志</p>\n</li>\n<li><p>dirty page too much checkpoint</p>\n<p>innodb_max_dirty_pages_pct参数控制</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"double-write\"><a href=\"#double-write\" class=\"headerlink\" title=\"double write\"></a>double write</h2><ul>\n<li><p>double write介绍</p>\n<p>double write的目的是为了保证数据库写入的可靠性，避免partial write的情况</p>\n<blockquote>\n<p>partial write(部分写)</p>\n<ol>\n<li>16k的页只写了4k，8k，12k的情况(此时是不完整的，不干净的页)</li>\n<li>不可以通过redo进行恢复。redo恢复的前提是该页必须是完整的，干净的</li>\n</ol>\n</blockquote>\n<p>double write是全局的</p>\n<p>共享表空间存在一个段对象double write，让后这个段由两个区(一个区1m)组成</p>\n<p>2m固定大小(both file and memory)</p>\n<p>页在刷新时，首选顺序的写入到double write</p>\n<p>然后再刷新到磁盘(ibd)</p>\n<img src=\"/mysql/learn-mysql-024/image-20230403110338141.png\" alt=\"image-20230403110338141\" style=\"zoom:50%;\">\n\n<blockquote>\n<p>double write buffer：1， double write(ibdata1)， 2，ibd</p>\n<ol>\n<li>将脏页copy到double write buffer对象中，默认2m大小</li>\n<li>将double write buffer中的对象先写入到ibdata1共享表空间中， 2m循环覆盖，顺序写入，一次IO</li>\n<li>在根据(space，page_number)写入到原来的ibd文件中</li>\n<li>如果是在写入ibdata1时，发生宕机，此刻原来的ibd file是完整的，干净的，下次启动可以根据redo文件进行恢复</li>\n<li>如果是写入到ibd文件时，发生了宕机，此刻原来的ibdata1中存在副本，可以直接覆盖ibd文件中去，然后在进行redo恢复</li>\n</ol>\n<p>redo时物理逻辑的，物理表示记录的日志针对的是页的修改，逻辑表示记录日志的内容时逻辑的</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%double%write%&#x27;</span>;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name      <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_doublewrite <span class=\"operator\">|</span> <span class=\"keyword\">ON</span>    <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+-------+</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>double write开销</p>\n<ul>\n<li>假设每个页大小16k，则2m的double write中存放了128个页，在使用了double write之后，IO从原来的128次变成了128+1次IO，而不是128+128次IO</li>\n<li>double write的2m数据时顺序刷人磁盘的，是一次IO，该IO的大小是2m</li>\n<li>开启double write的性能降低5%～25%</li>\n<li>slave服务器同样需要开启</li>\n</ul>\n</li>\n<li><p>double write可以关闭的前提</p>\n<ul>\n<li>支持原子写入的设备</li>\n<li>Innodb_doublewrite&#x3D;0表示关闭double write功能</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"insert-x2F-change-buffer\"><a href=\"#insert-x2F-change-buffer\" class=\"headerlink\" title=\"insert&#x2F;change buffer\"></a>insert&#x2F;change buffer</h2><ul>\n<li><p>insert&#x2F;change buffer介绍</p>\n<ul>\n<li>mysql5.5版本之前叫做insert buffer，现在叫做change buffer</li>\n<li>提高辅助索引的插入性能</li>\n<li>非唯一的二级索引</li>\n<li>insert&#x2F;change buffer是一个持久化的对象，在ibdata1中，同时页会写入redo日志</li>\n<li>insert&#x2F;change buffer页是一颗B+数，每次缓存2k的记录</li>\n<li>开启后有30%的性能提升</li>\n<li>mysql5.5版本之前，可以设置的最大只是buffer pool的1&#x2F;2，现在最大只能是1&#x2F;4</li>\n<li>当insert buffer进行合并的时候，性能下降</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%change_buffer%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name                 <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_change_buffer_max_size <span class=\"operator\">|</span> <span class=\"number\">25</span>    <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_change_buffering       <span class=\"operator\">|</span> <span class=\"keyword\">all</span>   <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------+-------+</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>insert&#x2F;change buffer举例</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> t (</span><br><span class=\"line\">    a <span class=\"type\">INT</span> AUTO_INCREMENT, <span class=\"comment\">-- a是自增</span></span><br><span class=\"line\">    b <span class=\"type\">VARCHAR</span>(<span class=\"number\">30</span>),        <span class=\"comment\">-- b是varchar</span></span><br><span class=\"line\">    <span class=\"keyword\">PRIMARY</span> KEY(a)        <span class=\"comment\">-- a是主键</span></span><br><span class=\"line\">    key(b)                <span class=\"comment\">-- b是二级索引</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>对于主键(a列)，每次插入都要立即插入对应的聚集索引中(在内存中的就直接插入，不在内存就先读取到内存)</p>\n</li>\n<li><p>对于二级索引(secondary index)(b列)</p>\n<ol>\n<li>在没有insert&#x2F;change buffer时，每次插入一条记录，就要读取一次页(读取内存，或者从磁盘读取到内存)，让后将记录插入到页中</li>\n<li>在有insert&#x2F;change buffer时，插入一条记录时，先判断记录对应要插入到二级索引(secondary index)页是否在buffer pool中，如果该二级索引页已经在buffer pool中，则直接插入，反之，将其cache起来，放入到insert&#x2F;change buffer中，等待该二级索引页被读到时，将insert&#x2F;change buffer中对该页的记录进行合并(merge)进去，从而减少IO操作</li>\n</ol>\n<blockquote>\n<p>insert&#x2F;change buffer就是用来提升二级索引插入的性能</p>\n<p>使用空间换时间，批量插入的方式(二级索引不着急插入，只要主键已经插入了即可)</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>insert&#x2F;change buffer性能</p>\n<img src=\"/mysql/learn-mysql-024/image-20230403115403008.png\" alt=\"image-20230403115403008\" style=\"zoom:50%;\">\n\n<ul>\n<li>左图开启了insert&#x2F;change buffer，而右图未开启</li>\n<li>一开启都比较高的原因是因为还没有全量进行刷磁盘(脏页全部在buffer pool中，还没满)，当insert buffer进行合并的时候，性能才开始下降</li>\n<li>开启insert&#x2F;change buffer后，insert的常量值在5k左右</li>\n<li>ssd场景下页建议开启</li>\n</ul>\n</li>\n<li><p>insert&#x2F;change buffer查看</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> engine innodb status;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+------+----------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Type   <span class=\"operator\">|</span> Name <span class=\"operator\">|</span> Status                                                                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+------+----------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> InnoDB <span class=\"operator\">|</span>      <span class=\"operator\">|</span>                                                                                  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">-------------------------------------                                            |</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"keyword\">INSERT</span> BUFFER <span class=\"keyword\">AND</span> ADAPTIVE HASH INDEX                                            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> <span class=\"comment\">-------------------------------------                                            |</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> Ibuf: size <span class=\"number\">1</span>, <span class=\"keyword\">free</span> list len <span class=\"number\">0</span>, seg size <span class=\"number\">2</span>, <span class=\"number\">0</span> merges                              <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> merged operations:                                                               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span>  <span class=\"keyword\">insert</span> <span class=\"number\">0</span>, <span class=\"keyword\">delete</span> mark <span class=\"number\">0</span>, <span class=\"keyword\">delete</span> <span class=\"number\">0</span>                                               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span> discarded operations:                                                            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span>        <span class=\"operator\">|</span>      <span class=\"operator\">|</span>  <span class=\"keyword\">insert</span> <span class=\"number\">0</span>, <span class=\"keyword\">delete</span> mark <span class=\"number\">0</span>, <span class=\"keyword\">delete</span> <span class=\"number\">0</span>                                               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+------+----------------------------------------------------------------------------------+</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>seg size: 页的数量。假如页的大小是8k，则seg_size * 8k就是insert&#x2F;change buffer使用的内存大小</li>\n<li>merges: 合并了多少页，这里为0，可能是buffer pool足够大，数据页都缓存到内存中了，就用不到buffer了</li>\n<li>mergeed insert: 插入了多少条记录，insert&#x2F;merges就是插入到效率，插入一条记录，就要读取一次页</li>\n<li>discarded operations: 应该是很小的值，或者为0，当记录写入到insert&#x2F;change buffer后，对应的表被删除了，则相应的buffer中的记录就应该被丢弃</li>\n</ol>\n<blockquote>\n<p>使用insert&#x2F;change buffer的前提是，需要使用随机IO，这时才放入buffer中，如果页已经在buffer pool中了，就不需要使用insert&#x2F;change buffer了</p>\n</blockquote>\n</li>\n<li><p>change buffer</p>\n<p>从mysql5.5以后，该名为change buffer，表示不仅仅适用于insert</p>\n<ol>\n<li>insert</li>\n<li>delete mark：标记删除</li>\n<li>purge：清除</li>\n<li>innodb_change_buffering&#x3D;{all,none,inserts,deletes,purge,changes&#x3D;(insert &amp; delete marking)}</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"adaptive-hash-index-自适应hash索引\"><a href=\"#adaptive-hash-index-自适应hash索引\" class=\"headerlink\" title=\"adaptive hash index(自适应hash索引)\"></a>adaptive hash index(自适应hash索引)</h2><ul>\n<li>检索的时间复杂度。B+tree O(t)，只能定位到该记录所在的页，hash O(1)，可以直接定位到记录</li>\n<li>可以自己判断是否是活跃的页，如果是活跃的页，可以自动做hash，管理员无需干预</li>\n<li>mysql5.6版本以后，官方不建议使用自适应hash索引，cpu使用率变高，但是性能没有提升</li>\n<li>mysql5.7中增加了innodb_adaptive_hash_index_parts，增加分片，以减少竞争</li>\n<li>只对等值的操作有意义</li>\n</ul>\n<h2 id=\"flush-neighbor-page-FNP\"><a href=\"#flush-neighbor-page-FNP\" class=\"headerlink\" title=\"flush neighbor page(FNP)\"></a>flush neighbor page(FNP)</h2><ul>\n<li>刷新脏页所在的区(extent)的所有脏页，合并IO，随机转顺序的优化<ul>\n<li>写入的数据太多</li>\n<li>如果业务确实是频繁更新，那刷新页会很频繁</li>\n</ul>\n</li>\n<li>对传统机械盘有意义<ul>\n<li>innodb_flush_neighbors&#x3D;{0|1|2}(&gt;&#x3D;mysql5.6)</li>\n<li>0: 表示关闭该功能</li>\n<li>1: 表示刷新一个区内的脏页</li>\n<li>2: 表示刷新几个连续的脏页</li>\n</ul>\n</li>\n<li>ssd建议关闭该功能。非ssd建议使用2</li>\n</ul>\n","categories":["mysql"],"tags":["mysql5.7"]},{"title":"mysql学习笔记-Mysql工具之innodb_ruby：探究InnoDB存储结构的利器","url":"/mysql/learn-mysql-021/","content":"<blockquote>\n<p>innodb_ruby 是一款用 ruby 写的用来分析 innodb 物理文件的专业 DBA 工具，可以通过这款工具来窥探 innodb 内部的一些结构。</p>\n</blockquote>\n<p><strong>innodb_ruby简介</strong></p>\n<p>innodb_ruby是一款用ruby写的用来分析innodb物理文件的专业DBA工具，可以通过这款工具来窥探innodb内部的一些结构，注意不要在线上使用此工具，以避免对线上服务造成影响。官方网址 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ydWJ5Z2Vtcy5vcmcvZ2Vtcy9pbm5vZGJfcnVieQ==\">https://rubygems.org/gems/innodb_ruby<i class=\"fa fa-external-link-alt\"></i></span>。</p>\n<p><strong>命令语法</strong></p>\n<p>在执行命令时，建议切换到mysql的datadir目录里</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sxf@ubuntu:~$ innodb_space --help</span><br><span class=\"line\"></span><br><span class=\"line\">Usage: innodb_space &lt;options&gt; &lt;mode&gt;</span><br><span class=\"line\">innodb_space &lt;选项&gt; &lt;模式&gt;</span><br><span class=\"line\">命令主要分 options 和 mode 两大部分。</span><br><span class=\"line\"></span><br><span class=\"line\">Invocation examples:</span><br><span class=\"line\"></span><br><span class=\"line\">  innodb_space -s ibdata1 [-T tname [-I iname]] [options] &lt;mode&gt;</span><br><span class=\"line\">    Use ibdata1 as the system tablespace and load the tname table (and the</span><br><span class=\"line\">    iname index for modes that require it) from data located in the system</span><br><span class=\"line\">    tablespace data dictionary. This will automatically generate a record</span><br><span class=\"line\">    describer for any indexes.</span><br><span class=\"line\"></span><br><span class=\"line\">    参数：</span><br><span class=\"line\">    -s 参数指的是系统表空间文件 ibdata1, 这个一般在datadir目录里可以找到。</span><br><span class=\"line\">    -T 数据表名称，一般为数据库其中一个表的物理文件路径</span><br><span class=\"line\">    -I 表示索引的名称, 如果是主键的话，直接填写 -I PRIMARY 即可，此时可省略此参数</span><br><span class=\"line\"></span><br><span class=\"line\">    如 innodb_space -s ibdata1 -T lab/tb space-indexes,则表示查看lab数据库的tb表的索引统计信息</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  innodb_space -f tname.ibd [-r ./desc.rb -d DescClass] [options] &lt;mode&gt;</span><br><span class=\"line\">    Use the tname.ibd table (and the DescClass describer where required).</span><br><span class=\"line\"></span><br><span class=\"line\">The following options are supported:</span><br><span class=\"line\"></span><br><span class=\"line\">  --help, -?</span><br><span class=\"line\">    Print this usage text.</span><br><span class=\"line\"></span><br><span class=\"line\">  --trace, -t</span><br><span class=\"line\">    Enable tracing of all data read. Specify twice to enable even more</span><br><span class=\"line\">    tracing (including reads during opening of the tablespace) which can</span><br><span class=\"line\">    be quite noisy.</span><br><span class=\"line\"></span><br><span class=\"line\">  --system-space-file, -s &lt;arg&gt;</span><br><span class=\"line\">    Load the system tablespace file or files &lt;arg&gt;: Either a single file e.g.</span><br><span class=\"line\">    &quot;ibdata1&quot;, a comma-delimited list of files e.g. &quot;ibdata1,ibdata1&quot;, or a</span><br><span class=\"line\">    directory name. If a directory name is provided, it will be scanned for all</span><br><span class=\"line\">    files named &quot;ibdata?&quot; which will then be sorted alphabetically and used to</span><br><span class=\"line\">    load the system tablespace.</span><br><span class=\"line\"></span><br><span class=\"line\">  --table-name, -T &lt;name&gt;</span><br><span class=\"line\">    Use the table name &lt;name&gt;.</span><br><span class=\"line\">    表名</span><br><span class=\"line\"></span><br><span class=\"line\">  --index-name, -I &lt;name&gt;</span><br><span class=\"line\">    Use the index name &lt;name&gt;.</span><br><span class=\"line\">    索引名</span><br><span class=\"line\"></span><br><span class=\"line\">  --space-file, -f &lt;file&gt;</span><br><span class=\"line\">    Load the tablespace file &lt;file&gt;.</span><br><span class=\"line\"></span><br><span class=\"line\">  --page, -p &lt;page&gt;</span><br><span class=\"line\">    Operate on the page &lt;page&gt;.</span><br><span class=\"line\">    页数</span><br><span class=\"line\"></span><br><span class=\"line\">  --level, -l &lt;level&gt;</span><br><span class=\"line\">    Operate on the level &lt;level&gt;.</span><br><span class=\"line\">    索引树层级数，一般不会超过3</span><br><span class=\"line\"></span><br><span class=\"line\">  --list, -L &lt;list&gt;</span><br><span class=\"line\">    Operate on the list &lt;list&gt;.</span><br><span class=\"line\"></span><br><span class=\"line\">  --fseg-id, -F &lt;fseg_id&gt;</span><br><span class=\"line\">      Operate on the file segment (fseg) &lt;fseg_id&gt;.</span><br><span class=\"line\"></span><br><span class=\"line\">  --require, -r &lt;file&gt;</span><br><span class=\"line\">    Use Ruby&#x27;s &quot;require&quot; to load the file &lt;file&gt;. This is useful for loading</span><br><span class=\"line\">    classes with record describers.</span><br><span class=\"line\"></span><br><span class=\"line\">  --describer, -d &lt;describer&gt;</span><br><span class=\"line\">    Use the named record describer to parse records in index pages.</span><br><span class=\"line\"></span><br><span class=\"line\">The following modes are supported:</span><br><span class=\"line\">模式项列表</span><br><span class=\"line\"></span><br><span class=\"line\">  系统表空间</span><br><span class=\"line\">  system-spaces</span><br><span class=\"line\">    Print a summary of all spaces in the system.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  数据字典表(information_schema中数据库SYS_TABLES表内容，下同)</span><br><span class=\"line\">  data-dictionary-tables</span><br><span class=\"line\">    Print all records in the SYS_TABLES data dictionary table.</span><br><span class=\"line\"></span><br><span class=\"line\">  data-dictionary-columns</span><br><span class=\"line\">    Print all records in the SYS_COLUMNS data dictionary table.</span><br><span class=\"line\"></span><br><span class=\"line\">  data-dictionary-indexes</span><br><span class=\"line\">    Print all records in the SYS_INDEXES data dictionary table.</span><br><span class=\"line\"></span><br><span class=\"line\">  data-dictionary-fields</span><br><span class=\"line\">    Print all records in the SYS_FIELDS data dictionary table.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  汇总表空间中的所有页信息，需要使用 --page/-p 参数指定页数</span><br><span class=\"line\">  space-summary</span><br><span class=\"line\">    Summarize all pages within a tablespace. A starting page number can be</span><br><span class=\"line\">    provided with the --page/-p argument.</span><br><span class=\"line\"></span><br><span class=\"line\">  汇总表空间中的所有索引页信息，对于分析每个页记录填充率情况的时候很有用，同样需要使用--page/-p指定页数</span><br><span class=\"line\">  space-index-pages-summary</span><br><span class=\"line\">    Summarize all &quot;INDEX&quot; pages within a tablespace. This is useful to analyze</span><br><span class=\"line\">    page fill rates and record counts per page. In addition to &quot;INDEX&quot; pages,</span><br><span class=\"line\">    &quot;ALLOCATED&quot; pages are also printed and assumed to be completely empty.</span><br><span class=\"line\">    A starting page number can be provided with the --page/-p argument.</span><br><span class=\"line\"></span><br><span class=\"line\">  与space-index-pages-summary差不多，但只显示一些摘要信息，需要配合参数一块使用</span><br><span class=\"line\">  space-index-fseg-pages-summary</span><br><span class=\"line\">    The same as space-index-pages-summary but only iterate one fseg, provided</span><br><span class=\"line\">    with the --fseg-id/-F argument.</span><br><span class=\"line\"></span><br><span class=\"line\">  space-index-pages-free-plot</span><br><span class=\"line\">    Use Ruby&#x27;s gnuplot module to produce a scatterplot of page free space for</span><br><span class=\"line\">    all &quot;INDEX&quot; and &quot;ALLOCATED&quot; pages in a tablespace. More aesthetically</span><br><span class=\"line\">    pleasing plots can be produced with space-index-pages-summary output,</span><br><span class=\"line\">    but this is a quick and easy way to produce a passable plot. A starting</span><br><span class=\"line\">    page number can be provided with the --page/-p argument.</span><br><span class=\"line\"></span><br><span class=\"line\">  遍历空间中的所有页面，统计每个类型的页共占用了多少页</span><br><span class=\"line\">  space-page-type-regions</span><br><span class=\"line\">    Summarize all contiguous regions of the same page type. This is useful to</span><br><span class=\"line\">    provide an overall view of the space and allocations within it. A starting</span><br><span class=\"line\">    page number can be provided with the --page/-p argument.</span><br><span class=\"line\"></span><br><span class=\"line\">  按类型汇总所有页面信息</span><br><span class=\"line\">  space-page-type-summary</span><br><span class=\"line\">    Summarize all pages by type. A starting page number can be provided with</span><br><span class=\"line\">    the --page/-p argument.</span><br><span class=\"line\"></span><br><span class=\"line\">  表空间中所有索引统计信息（系统空间或每个文件表空间）</span><br><span class=\"line\">  space-indexes</span><br><span class=\"line\">    Summarize all indexes (actually each segment of the indexes) to show</span><br><span class=\"line\">    the number of pages used and allocated, and the segment fill factor.</span><br><span class=\"line\"></span><br><span class=\"line\">  space-lists</span><br><span class=\"line\">    Print a summary of all lists in a space.</span><br><span class=\"line\"></span><br><span class=\"line\">  space-list-iterate</span><br><span class=\"line\">    Iterate through the contents of a space list.</span><br><span class=\"line\"></span><br><span class=\"line\">  space-extents</span><br><span class=\"line\">    Iterate through all extents, printing the extent descriptor bitmap.</span><br><span class=\"line\"></span><br><span class=\"line\">  space-extents-illustrate</span><br><span class=\"line\">    Iterate through all extents, illustrating the extent usage using ANSI</span><br><span class=\"line\">    color and Unicode box drawing characters to show page usage throughout</span><br><span class=\"line\">    the space.</span><br><span class=\"line\"></span><br><span class=\"line\">  space-extents-illustrate-svg</span><br><span class=\"line\">    Iterate through all extents, illustrating the extent usage in SVG format</span><br><span class=\"line\">    printed to stdout to show page usage throughout the space.</span><br><span class=\"line\"></span><br><span class=\"line\">  space-lsn-age-illustrate</span><br><span class=\"line\">    Iterate through all pages, producing a heat map colored by the page LSN</span><br><span class=\"line\">    using ANSI color and Unicode box drawing characters, allowing the user to</span><br><span class=\"line\">    get an overview of page modification recency.</span><br><span class=\"line\"></span><br><span class=\"line\">  space-lsn-age-illustrate-svg</span><br><span class=\"line\">    Iterate through all pages, producing a heat map colored by the page LSN</span><br><span class=\"line\">    producing SVG format output, allowing the user to get an overview of page</span><br><span class=\"line\">    modification recency.</span><br><span class=\"line\"></span><br><span class=\"line\">  space-inodes-fseg-id</span><br><span class=\"line\">    Iterate through all inodes, printing only the FSEG ID.</span><br><span class=\"line\"></span><br><span class=\"line\">  space-inodes-summary</span><br><span class=\"line\">    Iterate through all inodes, printing a short summary of each FSEG.</span><br><span class=\"line\"></span><br><span class=\"line\">  space-inodes-detail</span><br><span class=\"line\">    Iterate through all inodes, printing a detailed report of each FSEG.</span><br><span class=\"line\"></span><br><span class=\"line\">  通过递归整个B+树（通过递归扫描所有页面，而不仅仅是按列表的叶子页面）来执行索引扫描（执行完整索引扫描）</span><br><span class=\"line\">  index-recurse</span><br><span class=\"line\">    Recurse an index, starting at the root (which must be provided in the first</span><br><span class=\"line\">    --page/-p argument), printing the node pages, node pointers (links), leaf</span><br><span class=\"line\">    pages. A record describer must be provided with the --describer/-d argument</span><br><span class=\"line\">    to recurse indexes (in order to parse node pages).</span><br><span class=\"line\"></span><br><span class=\"line\">  将索引作为索引递归进行递归处理，但在索引页中打印每条记录的偏移量</span><br><span class=\"line\">  index-record-offsets</span><br><span class=\"line\">    Recurse an index as index-recurse does, but print the offsets of each</span><br><span class=\"line\">    record within the page.</span><br><span class=\"line\"></span><br><span class=\"line\">  index-digraph</span><br><span class=\"line\">    Recurse an index as index-recurse does, but print a dot-compatible digraph</span><br><span class=\"line\">    instead of a human-readable summary.</span><br><span class=\"line\"></span><br><span class=\"line\">  打印指定 level 级别的所有page信息</span><br><span class=\"line\">  index-level-summary</span><br><span class=\"line\">    Print a summary of all pages at a given level (provided with the --level/-l</span><br><span class=\"line\">    argument) in an index.</span><br><span class=\"line\"></span><br><span class=\"line\">  index-fseg-internal-lists</span><br><span class=\"line\">  index-fseg-leaf-lists</span><br><span class=\"line\">    Print a summary of all lists in an index file segment. Index root page must</span><br><span class=\"line\">    be provided with --page/-p.</span><br><span class=\"line\"></span><br><span class=\"line\">  index-fseg-internal-list-iterate</span><br><span class=\"line\">  index-fseg-leaf-list-iterate</span><br><span class=\"line\">    Iterate the file segment list (whose name is provided in the first --list/-L</span><br><span class=\"line\">    argument) for internal or leaf pages for a given index (whose root page</span><br><span class=\"line\">    is provided in the first --page/-p argument). The lists used for each</span><br><span class=\"line\">    index are &quot;full&quot;, &quot;not_full&quot;, and &quot;free&quot;.</span><br><span class=\"line\"></span><br><span class=\"line\">  index-fseg-internal-frag-pages</span><br><span class=\"line\">  index-fseg-leaf-frag-pages</span><br><span class=\"line\">    Print a summary of all fragment pages in an index file segment. Index root</span><br><span class=\"line\">    page must be provided with --page/-p.</span><br><span class=\"line\"></span><br><span class=\"line\">  page-dump</span><br><span class=\"line\">    Dump the contents of a page, using the Ruby pp (&quot;pretty-print&quot;) module.</span><br><span class=\"line\"></span><br><span class=\"line\">  page-account</span><br><span class=\"line\">    Account for a page&#x27;s usage in FSEGs.</span><br><span class=\"line\"></span><br><span class=\"line\">  page-validate</span><br><span class=\"line\">    Validate the contents of a page.</span><br><span class=\"line\"></span><br><span class=\"line\">  页目录字典记录</span><br><span class=\"line\">  page-directory-summary</span><br><span class=\"line\">    Summarize the record contents of the page directory in a page. If a record</span><br><span class=\"line\">    describer is available, the key of each record will be printed.</span><br><span class=\"line\"></span><br><span class=\"line\">  对一个页的所有记录进行汇总</span><br><span class=\"line\">  page-records</span><br><span class=\"line\">    Summarize all records within a page.</span><br><span class=\"line\"></span><br><span class=\"line\">  详细说明一个页面的内容，并且根据类型进行着色显示</span><br><span class=\"line\">  page-illustrate</span><br><span class=\"line\">    Produce an illustration of the contents of a page.</span><br><span class=\"line\"></span><br><span class=\"line\">  record-dump</span><br><span class=\"line\">    Dump a detailed description of a record and the data it contains. A record</span><br><span class=\"line\">    offset must be provided with -R/--record.</span><br><span class=\"line\"></span><br><span class=\"line\">  record-history</span><br><span class=\"line\">    Summarize the history (undo logs) for a record. A record offset must be</span><br><span class=\"line\">    provided with -R/--record.</span><br><span class=\"line\"></span><br><span class=\"line\">  undo-history-summary</span><br><span class=\"line\">    Summarize all records in the history list (undo logs).</span><br><span class=\"line\"></span><br><span class=\"line\">  undo-record-dump</span><br><span class=\"line\">    Dump a detailed description of an undo record and the data it contains.</span><br><span class=\"line\">    A record offset must be provided with -R/--record.</span><br></pre></td></tr></table></figure>\n\n<p><strong>数据准备</strong></p>\n<ul>\n<li><p>表结构</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">CREATE TABLE `t_user` (</span><br><span class=\"line\">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class=\"line\">  `c_user_id` varchar(36) NOT NULL DEFAULT &#x27;&#x27;,</span><br><span class=\"line\">  `c_name` varchar(22) NOT NULL DEFAULT &#x27;&#x27;,</span><br><span class=\"line\">  `c_province_id` int(11) NOT NULL,</span><br><span class=\"line\">  `c_city_id` int(11) NOT NULL,</span><br><span class=\"line\">  `create_time` datetime NOT NULL,</span><br><span class=\"line\">  PRIMARY KEY (`id`),</span><br><span class=\"line\">  KEY `idx_user_id` (`c_user_id`)</span><br><span class=\"line\">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>第一种方式: 使用存储过程和内存表</p>\n<ul>\n<li><p>创建内存表</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 利用 MySQL 内存表插入速度快的特点，我们先利用函数和存储过程在内存表中生成数据，然后再从内存表插入普通表中</span><br><span class=\"line\">&gt; create table t_user_memory like t_user;</span><br><span class=\"line\">&gt; alter table t_user_memory engine = MEMORY;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建自定义函数和存储过程</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 创建随机字符串和随机时间的函</span><br><span class=\"line\">mysql&gt; delimiter ?</span><br><span class=\"line\">mysql&gt; CREATE DEFINER=`root`@`%` FUNCTION `randStr`(n INT) RETURNS varchar(255) CHARSET utf8mb4</span><br><span class=\"line\">    -&gt;     DETERMINISTIC</span><br><span class=\"line\">    -&gt; BEGIN</span><br><span class=\"line\">    -&gt;     DECLARE chars_str varchar(100) DEFAULT &#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;;</span><br><span class=\"line\">    -&gt;     DECLARE return_str varchar(255) DEFAULT &#x27;&#x27; ;</span><br><span class=\"line\">    -&gt;     DECLARE i INT DEFAULT 0;</span><br><span class=\"line\">    -&gt;     WHILE i &lt; n DO</span><br><span class=\"line\">    -&gt;         SET return_str = concat(return_str, substring(chars_str, FLOOR(1 + RAND() * 62), 1));</span><br><span class=\"line\">    -&gt;         SET i = i + 1;</span><br><span class=\"line\">    -&gt;     END WHILE;</span><br><span class=\"line\">    -&gt;     RETURN return_str;</span><br><span class=\"line\">    -&gt; END?</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; CREATE DEFINER=`root`@`%` FUNCTION `randDataTime`(sd DATETIME,ed DATETIME) RETURNS datetime</span><br><span class=\"line\">    -&gt;     DETERMINISTIC</span><br><span class=\"line\">    -&gt; BEGIN</span><br><span class=\"line\">    -&gt;     DECLARE sub INT DEFAULT 0;</span><br><span class=\"line\">    -&gt;     DECLARE ret DATETIME;</span><br><span class=\"line\">    -&gt;     SET sub = ABS(UNIX_TIMESTAMP(ed)-UNIX_TIMESTAMP(sd));</span><br><span class=\"line\">    -&gt;     SET ret = DATE_ADD(sd,INTERVAL FLOOR(1+RAND()*(sub-1)) SECOND);</span><br><span class=\"line\">    -&gt;     RETURN ret;</span><br><span class=\"line\">    -&gt; END ?</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; delimiter ;</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建插入数据存储过程</span><br><span class=\"line\">mysql&gt; CREATE DEFINER=`root`@`%` PROCEDURE `add_t_user_memory`(IN n int)</span><br><span class=\"line\">    -&gt; BEGIN</span><br><span class=\"line\">    -&gt;     DECLARE i INT DEFAULT 1;</span><br><span class=\"line\">    -&gt;     WHILE (i &lt;= n) DO</span><br><span class=\"line\">    -&gt;         INSERT INTO t_user_memory (c_user_id, c_name, c_province_id,c_city_id, create_time) VALUES (uuid(), randStr(20), FLOOR(RAND() * 1000), FLOOR(RAND() * 100), NOW());</span><br><span class=\"line\">    -&gt;         SET i = i + 1;</span><br><span class=\"line\">    -&gt;     END WHILE;</span><br><span class=\"line\">    -&gt; END</span><br><span class=\"line\">    -&gt; ?</span><br><span class=\"line\">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>调用存储过程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">CALL add_t_user_memory(1000000);</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>从内存表中插入普通表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_user <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_user_memory;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>第二种方式: 使用mysqlslap生成大量的测试数据</p>\n<ul>\n<li>定义表结构</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 表结构</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `t_people` (</span><br><span class=\"line\">  `id` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  `user_id` <span class=\"type\">varchar</span>(<span class=\"number\">36</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">  `c_name` <span class=\"type\">varchar</span>(<span class=\"number\">22</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">  `c_age` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`id`),</span><br><span class=\"line\">  KEY `idx_user_id` (`user_id`)</span><br><span class=\"line\">) ENGINE<span class=\"operator\">=</span>InnoDB <span class=\"keyword\">DEFAULT</span> CHARSET<span class=\"operator\">=</span>utf8mb4;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>mysqlslap插入数据</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysqlslap -h127.0.0.1 -uhadoop -padmin123 --concurrency=10 --number-of-queries=1000000 --create-schema=&#x27;tbl_innodb_ruby&#x27; --query=&quot;insert into t_people(user_id, c_name, c_age) values (randNum(6), randStr(20), FLOOR(RAND() * 100));&quot;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>concurrency: 并发数</p>\n<p>number-of-queries: 查询的总次数</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>第三种方式：采用临时表</p>\n<ul>\n<li><p>创建临时数据表tmp_table</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> tmp_table (</span><br><span class=\"line\">\tid <span class=\"type\">INT</span>,</span><br><span class=\"line\">\t<span class=\"keyword\">PRIMARY</span> KEY (id)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用 python或者bash 生成 100w 记录的数据文件（python瞬间就会生成完）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">python -c <span class=\"string\">&quot;for i in range(1, 1+1000000): print(i)&quot;</span> &gt; base.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>导入数据到临时表tmp_table中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql&gt; load data infile &#x27;/Users/LJTjintao/temp/base.txt&#x27; replace into table tmp_table;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意： 导入数据时有可能会报错，原因是mysql默认没有开secure_file_priv（ 这个参数用来限制数据导入和导出操作的效果，例如执行LOAD DATA、SELECT … INTO OUTFILE语句和LOAD_FILE()函数。这些操作需要用户具有FILE权限。 ）</p>\n<p>解决办法：在mysql的配置文件中（my.ini 或者 my.conf）中添加 secure_file_priv &#x3D; &#x2F;Users&#x2F;LJTjintao&#x2F;temp&#x2F;&#96;, 然后重启mysql 解决</p>\n</blockquote>\n</li>\n<li><p>以临时表为基础数据，插入数据到t_user中</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> t_user</span><br><span class=\"line\">    <span class=\"operator\">-</span><span class=\"operator\">&gt;</span>   <span class=\"keyword\">SELECT</span></span><br><span class=\"line\">    <span class=\"operator\">-</span><span class=\"operator\">&gt;</span>     id,</span><br><span class=\"line\">    <span class=\"operator\">-</span><span class=\"operator\">&gt;</span>     uuid(),</span><br><span class=\"line\">    <span class=\"operator\">-</span><span class=\"operator\">&gt;</span>     CONCAT(<span class=\"string\">&#x27;userNickName&#x27;</span>, id),</span><br><span class=\"line\">    <span class=\"operator\">-</span><span class=\"operator\">&gt;</span>     <span class=\"built_in\">FLOOR</span>(Rand() <span class=\"operator\">*</span> <span class=\"number\">1000</span>),</span><br><span class=\"line\">    <span class=\"operator\">-</span><span class=\"operator\">&gt;</span>     <span class=\"built_in\">FLOOR</span>(Rand() <span class=\"operator\">*</span> <span class=\"number\">100</span>),</span><br><span class=\"line\">    <span class=\"operator\">-</span><span class=\"operator\">&gt;</span>     NOW()</span><br><span class=\"line\">    <span class=\"operator\">-</span><span class=\"operator\">&gt;</span>   <span class=\"keyword\">FROM</span></span><br><span class=\"line\">    <span class=\"operator\">-</span><span class=\"operator\">&gt;</span>     tmp_table;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<p><strong>Space(表空间)相关</strong></p>\n<ul>\n<li>查看系统所有可用的表空间及统计信息：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people system-spaces | sed &#x27;s/[,#$@!%~ ][ ]*/\\t/g&#x27; | sed &#x27;s/\\t/,/g&#x27; | sed &#x27;s/.$//&#x27; | csvlook</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327163213077.png\" alt=\"image-20230327163213077\" style=\"zoom:50%;\"> \n\n<blockquote>\n<p>第一列是表空间名，第二列是对应表空间所分配数据页(page)的数量，第三列是索引数量</p>\n</blockquote>\n<ul>\n<li>查看t_people表空间数据分布：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people space-page-type-regions</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327164232473.png\" alt=\"image-20230327164232473\" style=\"zoom:50%;\">\n\n<p>哈哈，眼熟吗？还有印象吗</p>\n<ul>\n<li><p><strong>start</strong>：开始的PAGE_NO</p>\n</li>\n<li><p><strong>end</strong>：结束的PAGE_NO</p>\n</li>\n<li><p><strong>FSP_HDR</strong>：表空间第 1 个区的第 1 个页为FSP_HDR(file space header)，保存了这个表空间的大小，以及完全没有被使用的extents，fragment的以及inode使用情况，整个表空间只有一个 FSP_HDR 类型的页面。如图，count 列表示占用的 Page 数量为 1；</p>\n</li>\n<li><p><strong>IBUF_BITMAP</strong>：表空间第 1 个区的第 2 个页，这个页就是插入缓存bitmap页，用于记录插入缓冲区的一些信息。主要用于跟踪随后的每个page的change buffer信息，使用4个bit来描述每个page的change buffer信息。如图，IBUF_BITMAP 占用了 1 个 Page；</p>\n</li>\n<li><p><strong>INODE</strong>：表空间第 1 个区的第 3 个页，InnoDB 为每个索引定义了 2 个段，INODE Entry 结构记录了关于段的相关属性信息。如图，INODE 也占用了 1 个 Page。</p>\n</li>\n</ul>\n<blockquote>\n<p>名词解释</p>\n<ol>\n<li>FIL_PAGE_INDEX: B+tree叶节点</li>\n<li>FIL_PAGE_UNDO_LOG：undo log页</li>\n<li>FIL_PAGE_INODE：索引节点</li>\n<li>FIL_PAGE_IBUF_FREE_LIST：insert buffer空闲列表</li>\n<li>FIL_PAGE_TYPE_ALLOCATED：该页为最新分配</li>\n<li>FIL_PAGE_IBUF_BITMAP：insert buffer位图</li>\n<li>FIL_PAGE_TYPE_SYS：系统页</li>\n<li>FIL_PAGE_TYPE_TRX_SYS：事务系统数据</li>\n<li>FIL_PAGE_TYPE_FSP_HDR：File Space Header</li>\n<li>FIL_PAGE_TYPE_XDES：扩展描述页</li>\n<li>FIL_PAGE_TYPE_BLOB：blob页</li>\n</ol>\n</blockquote>\n<p>如图，我们还可以知道索引的分布情况。也可以通过 information_schema 库表 INNODB_SYS_INDEXES、INNODB_SYS_TABLES 查看：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:tbl_innodb_ruby<span class=\"operator\">&gt;</span> <span class=\"keyword\">SELECT</span> sys_tbls.name, sys_idxs.name, sys_idxs.index_id, type, sys_idxs.space, sys_idxs.PAGE_NOFROM information_schema.INNODB_SYS_INDEXES sys_idxs, information_schema.INNODB_SYS_TABLES sys_tbls <span class=\"keyword\">WHERE</span> sys_idxs.table_id <span class=\"operator\">=</span> sys_tbls.table_i</span><br><span class=\"line\">                                     <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> d <span class=\"keyword\">AND</span> sys_tbls.name<span class=\"operator\">=</span><span class=\"string\">&#x27;test_innodb_ruby/t_people&#x27;</span> <span class=\"keyword\">AND</span> sys_idxs.space <span class=\"operator\">&lt;&gt;</span> <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327165318132.png\" alt=\"image-20230327165318132\" style=\"zoom:50%;\">\n\n<p>如图，其中 PAGE_NO 为 3 的 Page 保存了 PRIMARY 的信息，索引的编号是 85. PAGE_NO为4的page保存了idx_user_id辅助索引的信息，索引编号是86</p>\n<ul>\n<li>查看t_people表数据行分布情况：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people space-index-pages-summary | sed <span class=\"string\">&#x27;s/[,#$@!%~ ][ ]*/\\t/g&#x27;</span> | sed <span class=\"string\">&#x27;s/\\t/,/g&#x27;</span> | sed <span class=\"string\">&#x27;s/.$//&#x27;</span> | csvlook | <span class=\"built_in\">head</span> -n 100</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327165844024.png\" alt=\"image-20230327165844024\" style=\"zoom:50%;\">\n\n<p>这个选项可以获取到的信息较上一个选项粒度更细了，可以看到页号（page 列）、索引编号（index 列）、也可以得到树的高度（level 字段 + 1，如图我们的 t_people 表的树高是 3 层）、同时可以看到数据在每个 Page 的占用情况（data 列）、每个 Page 空闲的空间（free 列）、每个 Page 有多少行数据（records 列），都可以通过 space-index-pages-summary 选项获取到。</p>\n<blockquote>\n<p>小提示</p>\n<p>这里还是要补充一个知识点，我认为比较重要。细心的你可能会发现，上图中，很多 Page 的 free 空闲空间都是 1032 字节，我们知道 InnoDB 一个 Page 是 16KB（16384 字节），但是感觉为什么一个 Page 的空间没有被完全分配掉，会剩余 1&#x2F;16 的空闲空间？这就要涉及到一个知识点，有关于 InnoDB Page 的填充率。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">MySQL hadoop<span class=\"variable\">@localhost</span>:tbl_innodb_ruby<span class=\"operator\">&gt;</span> <span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> <span class=\"string\">&#x27;innodb%fill%&#x27;</span>;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Variable_name      <span class=\"operator\">|</span> <span class=\"keyword\">Value</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+-------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> innodb_fill_factor <span class=\"operator\">|</span> <span class=\"number\">100</span>   <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------+-------+</span></span><br></pre></td></tr></table></figure>\n\n<p>控制 Page 填充率参数 innodb_fill_factor 默认值是 100，也就是 100% 填充，但是，MySQL 官档中有这样两段描述。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS43L2VuL2lubm9kYi1wYXJhbWV0ZXJzLmh0bWw=\">https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"/mysql/learn-mysql-021/modb_20211120_752ec134-49b6-11ec-adf3-38f9d3cd240d.png\" loading=\"lazy\"></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS43L2VuL2lubm9kYi1waHlzaWNhbC1zdHJ1Y3R1cmUuaHRtbA==\">https://dev.mysql.com/doc/refman/5.7/en/innodb-physical-structure.html<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p><img src=\"/mysql/learn-mysql-021/modb_20211120_753e74a8-49b6-11ec-adf3-38f9d3cd240d.png\" loading=\"lazy\"></p>\n</blockquote>\n<blockquote>\n<p>解释一下上面的这两段话：</p>\n<p>1、innodb_fill_factor&#x3D;100，也会预留 1&#x2F;16 的空闲空间，用于现存记录长度扩展使用；</p>\n<p>2、预留 1&#x2F;16 这个规则，只针对聚簇索引（Clustered Index）的叶子节点有效。对于聚簇索引的非叶子节点（Non-Leaf）以及辅助索引（叶子及非叶子）节点都没有这个规则；</p>\n<p>3、innodb_fill_factor 选项对 B + 树索引的叶子节点及非叶子节点都有效，但对数据类型 TEXT&#x2F;BLOB 可能发生行溢出的 Page 无效；</p>\n<p>4、在最佳的顺序插入数据模式下，Page 填充率有可能可以达到 15&#x2F;16；</p>\n<p>5、在随机插入数据模式下，Page 填充率大约为 1&#x2F;2~15&#x2F;16。  </p>\n</blockquote>\n<ul>\n<li>查看对应表空间的区（Extent）信息：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people space-extents-illustrate</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327171348204.png\" alt=\"image-20230327171348204\" style=\"zoom:50%;\">\n\n<img src=\"/mysql/learn-mysql-021/image-20230327171458177.png\" alt=\"image-20230327171348204\" style=\"zoom:50%;\">\n\n<blockquote>\n<p>如图可得，我们 words 的表空间总共连续分配了 5952&#x2F;64 + 1 &#x3D; 93 + 1 &#x3D; 94 个区（Extent），一个区是 64 个 Page（大家应该还记得这个数字），分别以页号（PAGE_NO）0、64、128、192、256、320 为每个区的起始页。System（就是我们之前说的 FSP_HDR、IBUF_BITMAP、INODE）共计 3 个 Page，占用总分配空间的 0.05；Index 编号为 85 的聚簇索引（存放真实数据）共计 3616 个 Page，占用总分配空间的 60.11%；Index编号为86的辅助索引共计1555个page，占用总分配空间的25.85%； Free space 空闲空间（分配但未使用的空间）共计 842 个 Page，占用总分配空间的 14.00%。</p>\n</blockquote>\n<ul>\n<li>查看段的相关属性信息（INODE）：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看统计信息</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people space-inodes-summary</span></span><br><span class=\"line\">INODE fseg_id=1, pages=5, frag=5, full=0, not_full=0, free=0</span><br><span class=\"line\">INODE fseg_id=2, pages=4128, frag=32, full=55, not_full=9, free=0</span><br><span class=\"line\">INODE fseg_id=3, pages=4, frag=4, full=0, not_full=0, free=0</span><br><span class=\"line\">INODE fseg_id=4, pages=1824, frag=32, full=23, not_full=5, free=0</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看详细信息</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people space-inodes-detail</span></span><br><span class=\"line\">INODE fseg_id=1, pages=5, frag=5 pages (3, 133, 134, 135, 138), full=0 extents (), not_full=0 extents () (0/0 pages used), free=0 extents ()</span><br><span class=\"line\">INODE fseg_id=2, pages=4128, frag=32 pages (5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 19, 20, 21, 22, 24, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 51), full=55 extents (64-127, 192-255, 320-383, 384-447, 512-575, 576-639, 640-703, 832-895, 960-1023, 1024-1087, 1088-1151, 1152-1215, 1216-1279, 1280-1343, 1600-1663, 1792-1855, 1856-1919, 1920-1983, 1984-2047, 2048-2111, 1408-1471, 2240-2303, 2304-2367, 2368-2431, 1536-1599, 2624-2687, 2752-2815, 2816-2879, 3072-3135, 3200-3263, 3456-3519, 3584-3647, 3648-3711, 3712-3775, 3776-3839, 3840-3903, 3904-3967, 4032-4095, 4096-4159, 4160-4223, 4224-4287, 4288-4351, 4352-4415, 4480-4543, 4544-4607, 4672-4735, 4736-4799, 4800-4863, 4928-4991, 5056-5119, 5120-5183, 5312-5375, 5440-5503, 5632-5695, 5760-5823), not_full=9 extents (2112-2175, 2176-2239, 2496-2559, 2944-3007, 3328-3391, 3968-4031, 4416-4479, 5248-5311, 5888-5951) (59/576 pages used), free=0 extents ()</span><br><span class=\"line\">INODE fseg_id=3, pages=4, frag=4 pages (4, 136, 137, 139), full=0 extents (), not_full=0 extents () (0/0 pages used), free=0 extents ()</span><br><span class=\"line\">INODE fseg_id=4, pages=1824, frag=32 pages (10, 11, 15, 16, 23, 25, 26, 29, 40, 42, 44, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 128, 129, 130, 131, 132), full=23 extents (256-319, 448-511, 704-767, 768-831, 896-959, 1344-1407, 1472-1535, 1664-1727, 1728-1791, 2432-2495, 2560-2623, 2688-2751, 2880-2943, 3008-3071, 3136-3199, 3264-3327, 3392-3455, 3520-3583, 4608-4671, 4864-4927, 4992-5055, 5184-5247, 5376-5439), not_full=5 extents (5504-5567, 5568-5631, 5696-5759, 5824-5887, 5952-6015) (47/320 pages used), free=0 extents ()</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ol>\n<li><p>如图可得，记录系统 3 个固定的页的 fseg_id（段号：Segment ID）为 1，且总共占用 5 个 Page。</p>\n</li>\n<li><p>fseg_id为2的信息就比较丰富了：分配的空间总共占用了4128个Page，frag（空闲空间的碎片区：零散的页）共占用了32个Page，并且详细记录了这32个Page的页号（PAGE_NO）</p>\n</li>\n<li><p>状态为full（FULL_FRAG链表）的区一共有55个，总共占用两个完整区的55*64个页，括号中的是页号（PAGE_NO）</p>\n</li>\n<li><p>状态为not_full（FREE_FRAG）的区（FREE_FRAG链表）总共有9个，其中已经使用的页59个，未使用9*64-59 &#x3D; 517个Page</p>\n</li>\n</ol>\n</blockquote>\n<blockquote>\n<p>小提示</p>\n<p><strong>这个&#39;frag&#x3D;32&#39;需要注意，我们知道当段中数据已经占满了 32 个零散的页后，就直接申请完整的区来插入数据了。但是，本例正好为 32 个零散 Page 的临界值，还没有申请完整的区来插入数据，所以这 32 个 Page 还是属于段中的零散页范畴，不属于任何区，InnoDB 还是以 Page 为单位来进行管理，所以页号（PAGE_NO）也会被单独展示出来，这点需要注意</strong>。</p>\n<p><strong>呼应上述&#39;frag&#x3D;32&#39;，&#39;not_full&#x3D;9 extents (2112-2175, 2176-2239, 2496-2559, 2944-3007, 3328-3391, 3968-4031, 4416-4479, 5248-5311, 5888-5951) (59&#x2F;576 pages used)&#39;这个状态为 FREE_FRAG 的区（FREE_FRAG 链表）因为已经使用 59 个 Page，所以就以整个区（Extent）为单位进行管理了。&#39;pages&#x3D;4128&#39;就是相当于 55+9 个完整的区加上 32 个零散的页（(55+9)×64+32&#x3D;4128），哈哈是不是感觉很有意思</strong>。</p>\n</blockquote>\n<ul>\n<li>查看索引结构、数据分布情况：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people space-indexes | sed &#x27;s/[,#$@!%~ ][ ]*/\\t/g&#x27; | sed &#x27;s/\\t/,/g&#x27; | sed &#x27;s/.$//&#x27; | csvlook</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327180443634.png\" alt=\"image-20230327180443634\" style=\"zoom:50%;\">\n\n<blockquote>\n<p>列说明： </p>\n<p>name：索引的名称，PRIMARY 代表的就是聚集索引，因为 InnoDB 表是索引组织表，行记录就是聚集索引；idx_user_id 就是辅助索引的名称。<br>root：索引中根节点的 page 号；可以看出聚集索引的根节点是第 3 个 page（为什么是从第三个 page 开始，看下文 space-page-type-regions），辅助索引的根节点是第 4 个 page。<br>fseg：page 的说明，internal 表示非叶子节点或属于根节点，leaf 表示叶子节点（也就是数据页）。<br>used：索引使用了多少个 page，可以看出聚集索引的根节点使用了 5 个 page，叶子节点使用了 3611 个 page；辅助索引 idx_user_id 的叶子节点使用了 1511 个 page。<br>allocated：索引分配了多少个 page，可以看出聚集索引的根节点分配了 5 个 page，叶子节点分配了 4128 个 page；辅助索引 idx_user_id 的叶子节点分配了 1824 个 page<br>fill_factor：索引的填充度，所有的填充度都是 100%。</p>\n</blockquote>\n<ul>\n<li>查看表空间所有页面的 LSN（Log Sequence Number：日志逻辑序列号，不仅存在于 Redo Log，同时，File Header 部分的 FIL_PAGE_LSN 属性也记录着页面被最后修改时对应的日志序列位置）：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people space-lsn-age-illustrate</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327181438638.png\" alt=\"image-20230327181438638\" style=\"zoom:50%;\">\n\n<p><strong>Index（B + 树索引）相关</strong>  </p>\n<ul>\n<li>遍历聚簇索引整个 B + 树，扫描所有页面（由于全部输出内容非常大，本例我们只输出部分）：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -I PRIMARY  index-recurse | head -n 25</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327181655575.png\" alt=\"image-20230327181655575\" style=\"zoom:50%;\">\n\n<blockquote>\n<p>这条命令会从 root 开始，全表扫描，以升序的方式遍历整个 B+Tree 索引树，遍历过程中会输出每个 page 以及指针的信息，包括叶子节点 Page 和非叶子节点 Page。</p>\n</blockquote>\n<ul>\n<li>遍历聚簇索引 B + 树的数据页 Page、记录 Record 的偏移量：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -I PRIMARY index-record-offsets | head -n 25</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327181819041.png\" alt=\"image-20230327181819041\" style=\"zoom:50%;\">\n\n<blockquote>\n<p>和 index-recurse 选项功能类似，但是遍历出的结果是偏移量。</p>\n</blockquote>\n<ul>\n<li>查看指定 Level（B + 树层高）的所有页面信息：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># -l 0, 1, 2</span><br><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -I PRIMARY -l 0 index-level-summary | head -n 25</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327181952283.png\" alt=\"image-20230327181952283\" style=\"zoom:50%;\">\n\n<blockquote>\n<p>我们 words 表的 B + 树树高只有 3 层，所以只能查得 3 层的数据。还有很多功能选项，大家感兴趣可以自己尝试。</p>\n</blockquote>\n<p><strong>Page（数据页）相关</strong></p>\n<ul>\n<li>查看指定页号（PAGE_NO）的数据页说明信息：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -p 3  page-account</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327182305370.png\" alt=\"image-20230327182305370\" style=\"zoom:50%;\">\n\n<blockquote>\n<p>由图可知，Page 的类型是 B+Tree 索引；第 0 到 63 页的区（Extent）描述符位于第 0 号 Page 偏移量 158 处；区（Extent）未完全分配、可能有碎片区（零散页）；该 Page 被区（Extent）描述符所标记，该区（Extent）属于 FREE_FRAG 状态的 List；该 Page 位于 FSEG 1 的段 Fragment Array（碎片数组中；该 FSEG（段）位于索引 ID 为 85 的内部段中；索引的根页面是 Page 3（PAGE_NO&#x3D;3，也就是当前页就是根页面）；索引是 tbl_innodb_ruby&#x2F;t_people 表的主键（聚簇索引）。</p>\n<p>可以根据 space-index-pages-summary 功能选项，查看任何 1 个 Page 的说明信息</p>\n<ol>\n<li>-p 0 表示的是FSP_HDR.</li>\n<li>-p 1 表示的是IBUF_BITMAP</li>\n<li>-p 2 表示的是INODE</li>\n</ol>\n</blockquote>\n<ul>\n<li>查看指定页号（PAGE_NO）页目录（Page Directory，Slot，槽）的信息：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -p 4128  page-directory-summary</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327182937848.png\" alt=\"image-20230327182937848\" style=\"zoom:50%;\">\n\n<blockquote>\n<p>由图可得，Slot 编号、偏移量、数据类型（infimum - 最小值、node_pointer - 节点指针、supremum - 最大值）、每个槽位拥有的数据量（owned）、还有索引key（聚集索引或者辅助索引）值信息。</p>\n</blockquote>\n<ul>\n<li>查看聚簇索引的非叶子节点（Clustered Index Non-Leaf）记录 Record 信息：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -p 3 page-records | head -n 25</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327183306953.png\" alt=\"image-20230327183306953\" style=\"zoom:50%;\">\n\n<blockquote>\n<p>如图，<strong>存储的是主键值 + 页号（PAGE_NO）</strong>。</p>\n<p>其中 -p 3 是根据 index-level-summary -I PRIMARY -l 2 得到的</p>\n</blockquote>\n<ul>\n<li>查看聚簇索引的叶子节点（Clustered Index Leaf）记录 Record 信息：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -p 5 page-records | head -n 25</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327183647822.png\" alt=\"image-20230327183647822\" style=\"zoom:50%;\">\n\n<blockquote>\n<p>如图，<strong>存储的是完整的记录</strong>。 </p>\n<p>其中 -p 5 是根据 index-level-summary -I PRIMARY -l 0 得到的</p>\n</blockquote>\n<ul>\n<li>查看辅助索引的非叶子节点（Secondary Index Non-Leaf）记录 Record 信息：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -p 136 page-records | head -n 25</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327184200586.png\" alt=\"image-20230327184200586\" style=\"zoom:50%;\">\n\n<blockquote>\n<p>如图，<strong>存储的是辅助索引字段值 + 页号（PAGE_NO）</strong>。</p>\n<p>其中-p 136 是是根据 -I idx_user_id -l 1 index-level-summary 得到的</p>\n</blockquote>\n<ul>\n<li>查看辅助索引的叶子节点（Secondary Index Leaf）记录 Record 信息：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -p 10 page-records | head -n 25</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327184524277.png\" alt=\"image-20230327184524277\" style=\"zoom:50%;\">\n\n<blockquote>\n<p>如图，<strong>存储的是辅助索引字段值 + 主键值</strong>。</p>\n<p>其中-p 136 是是根据 -I idx_user_id -l 0 index-level-summary 得到的</p>\n</blockquote>\n<p>到这里，是不是再回头看之前的文章，有一种：“我悟了！” 的感觉。  </p>\n<ul>\n<li>查看 t_people 表空间数据页 Page 的详细的各属性信息：</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -p 3 page-dump</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ruby\"><table><tr><td class=\"code\"><pre><span class=\"line\">#&lt;Innodb::Page::Index:0x0000000104b7d9a0&gt;:</span><br><span class=\"line\"><span class=\"comment\"># 文件头</span></span><br><span class=\"line\">fil <span class=\"symbol\">header:</span></span><br><span class=\"line\">#&lt;struct Innodb::Page::FilHeader</span><br><span class=\"line\"> # 页的checksum值</span><br><span class=\"line\"> checksum=1222139710,</span><br><span class=\"line\"> # 表空间中页的偏移量</span><br><span class=\"line\"> offset=3,</span><br><span class=\"line\"> # 当前页的上一个页，B+Tree特性决定了叶子结点必须是双向列表</span><br><span class=\"line\"> prev=nil,</span><br><span class=\"line\"> # 当前页的下一个页，B+Tree特性决定了叶子结点必须是双向列表</span><br><span class=\"line\"> next=nil,</span><br><span class=\"line\"> # 代表该页最后被修改的日志序列位置LSN（Log Sequence Number）</span><br><span class=\"line\"> lsn=1381530869,</span><br><span class=\"line\"> # InnoDB存储引擎页的类型</span><br><span class=\"line\"> type=:INDEX,</span><br><span class=\"line\"> # 如果页存放在系统共享表空间，表示文件至少被更新到了该LSN值；对于独立表空间，都为0</span><br><span class=\"line\"> flush_lsn=0,</span><br><span class=\"line\"> # 代表页属于哪个表空间</span><br><span class=\"line\"> space_id=53&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文件结尾信息</span></span><br><span class=\"line\">fil <span class=\"symbol\">trailer:</span></span><br><span class=\"line\"><span class=\"comment\"># 检测页是否完整写入磁盘。前4字节代表页的checksum值，最后4字节和File Header中的FIL_PAGE_LSN(lsn)相同。checksum的默认算法是crc32</span></span><br><span class=\"line\">#&lt;struct Innodb::Page::FilTrailer checksum=1222139710, lsn_low32=1381530869&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 页头</span></span><br><span class=\"line\">page <span class=\"symbol\">header:</span></span><br><span class=\"line\">#&lt;struct Innodb::Page::Index::PageHeader</span><br><span class=\"line\"> # 在Page Directory页目录中的Slot槽数</span><br><span class=\"line\"> n_dir_slots=2,</span><br><span class=\"line\"> # 堆中第一个记录的指针，记录在页中是根据堆的形式存放的</span><br><span class=\"line\"> heap_top=172,</span><br><span class=\"line\"> n_heap_format=32774,</span><br><span class=\"line\"> # 堆中的记录数。一共占用2字节，但是第15位表示行记录格式</span><br><span class=\"line\"> n_heap=6,</span><br><span class=\"line\"> format=:compact,</span><br><span class=\"line\"> # 已删除记录的字节数，即行记录结构中delete flag为1的记录大小的总数</span><br><span class=\"line\"> garbage_offset=0,</span><br><span class=\"line\"> garbage_size=0,</span><br><span class=\"line\"> # 最后插入记录的位置</span><br><span class=\"line\"> last_insert_offset=164,</span><br><span class=\"line\"> # 最后插入的方向</span><br><span class=\"line\"> direction=:right,</span><br><span class=\"line\"> n_direction=3,</span><br><span class=\"line\"> # 该页中记录的数量</span><br><span class=\"line\"> n_recs=4,</span><br><span class=\"line\"> # 修改当前页面的最大事务ID，注意该值仅在Secondary Index中定义</span><br><span class=\"line\"> max_trx_id=0,</span><br><span class=\"line\"> # 当前页在索引树中的位置，0x00代表叶节点，叶节点总是在第0层</span><br><span class=\"line\"> level=2,</span><br><span class=\"line\"> # 索引ID，表示当前页属于哪个索引</span><br><span class=\"line\"> index_id=85&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">fseg <span class=\"symbol\">header:</span></span><br><span class=\"line\">#&lt;struct Innodb::Page::Index::FsegHeader</span><br><span class=\"line\"> leaf=</span><br><span class=\"line\">  &lt;Innodb::Inode space=&lt;Innodb::Space file=&quot;tbl_innodb_ruby/t_people.ibd&quot;, page_size=16384, pages=6656&gt;, fseg=<span class=\"number\">2</span>&gt;,</span><br><span class=\"line\"> internal=</span><br><span class=\"line\">  &lt;<span class=\"title class_\">Innodb</span><span class=\"symbol\">:</span><span class=\"symbol\">:Inode</span> space=&lt;<span class=\"title class_\">Innodb</span><span class=\"symbol\">:</span><span class=\"symbol\">:Space</span> file=<span class=\"string\">&quot;tbl_innodb_ruby/t_people.ibd&quot;</span>, page_size=<span class=\"number\">16384</span>, pages=<span class=\"number\">6656</span>&gt;, fseg=<span class=\"number\">1</span>&gt;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">sizes:</span></span><br><span class=\"line\">  header           <span class=\"number\">120</span></span><br><span class=\"line\">  trailer            <span class=\"number\">8</span></span><br><span class=\"line\">  directory          <span class=\"number\">4</span></span><br><span class=\"line\">  free           <span class=\"number\">16200</span></span><br><span class=\"line\">  used             <span class=\"number\">184</span></span><br><span class=\"line\">  record            <span class=\"number\">52</span></span><br><span class=\"line\">  per record     <span class=\"number\">13.00</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 页目录</span></span><br><span class=\"line\">page <span class=\"symbol\">directory:</span></span><br><span class=\"line\">[<span class=\"number\">99</span>, <span class=\"number\">112</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">system <span class=\"symbol\">records:</span></span><br><span class=\"line\">#&lt;struct Innodb::Page::Index::SystemRecord</span><br><span class=\"line\"> offset=99,</span><br><span class=\"line\"> header=</span><br><span class=\"line\">  #&lt;struct Innodb::Page::Index::RecordHeader</span><br><span class=\"line\">   length=5,</span><br><span class=\"line\">   next=125,</span><br><span class=\"line\">   type=:infimum,</span><br><span class=\"line\">   heap_number=0,</span><br><span class=\"line\">   n_owned=1,</span><br><span class=\"line\">   info_flags=0,</span><br><span class=\"line\">   offset_size=nil,</span><br><span class=\"line\">   n_fields=nil,</span><br><span class=\"line\">   nulls=nil,</span><br><span class=\"line\">   lengths=nil,</span><br><span class=\"line\">   externs=nil&gt;,</span><br><span class=\"line\"> <span class=\"keyword\">next</span>=<span class=\"number\">125</span>,</span><br><span class=\"line\"> data=<span class=\"string\">&quot;infimum\\x00&quot;</span>,</span><br><span class=\"line\"> length=<span class=\"number\">8</span>&gt;</span><br><span class=\"line\">#&lt;struct Innodb::Page::Index::SystemRecord</span><br><span class=\"line\"> offset=112,</span><br><span class=\"line\"> header=</span><br><span class=\"line\">  #&lt;struct Innodb::Page::Index::RecordHeader</span><br><span class=\"line\">   length=5,</span><br><span class=\"line\">   next=112,</span><br><span class=\"line\">   type=:supremum,</span><br><span class=\"line\">   heap_number=1,</span><br><span class=\"line\">   n_owned=5,</span><br><span class=\"line\">   info_flags=0,</span><br><span class=\"line\">   offset_size=nil,</span><br><span class=\"line\">   n_fields=nil,</span><br><span class=\"line\">   nulls=nil,</span><br><span class=\"line\">   lengths=nil,</span><br><span class=\"line\">   externs=nil&gt;,</span><br><span class=\"line\"> <span class=\"keyword\">next</span>=<span class=\"number\">112</span>,</span><br><span class=\"line\"> data=<span class=\"string\">&quot;supremum&quot;</span>,</span><br><span class=\"line\"> length=<span class=\"number\">8</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">garbage <span class=\"symbol\">records:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">records:</span></span><br><span class=\"line\">#&lt;struct Innodb::Page::Index::UserRecord</span><br><span class=\"line\"> type=:clustered,</span><br><span class=\"line\"> format=:compact,</span><br><span class=\"line\"> offset=125,</span><br><span class=\"line\"> header=</span><br><span class=\"line\">  #&lt;struct Innodb::Page::Index::RecordHeader</span><br><span class=\"line\">   length=5,</span><br><span class=\"line\">   next=138,</span><br><span class=\"line\">   type=:node_pointer,</span><br><span class=\"line\">   heap_number=2,</span><br><span class=\"line\">   n_owned=0,</span><br><span class=\"line\">   info_flags=1,</span><br><span class=\"line\">   offset_size=nil,</span><br><span class=\"line\">   n_fields=nil,</span><br><span class=\"line\">   nulls=[],</span><br><span class=\"line\">   lengths=&#123;&#125;,</span><br><span class=\"line\">   externs=[]&gt;,</span><br><span class=\"line\"> <span class=\"keyword\">next</span>=<span class=\"number\">138</span>,</span><br><span class=\"line\"> key=</span><br><span class=\"line\">  [#&lt;struct Innodb::Page::Index::FieldDescriptor</span><br><span class=\"line\">    name=&quot;id&quot;,</span><br><span class=\"line\">    type=&quot;INT&quot;,</span><br><span class=\"line\">    value=1,</span><br><span class=\"line\">    extern=nil&gt;],</span><br><span class=\"line\"> row=[],</span><br><span class=\"line\"> sys=[],</span><br><span class=\"line\"> child_page_number=<span class=\"number\">133</span>,</span><br><span class=\"line\"> transaction_id=<span class=\"literal\">nil</span>,</span><br><span class=\"line\"> roll_pointer=<span class=\"literal\">nil</span>,</span><br><span class=\"line\"> length=<span class=\"number\">8</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#&lt;struct Innodb::Page::Index::UserRecord</span><br><span class=\"line\"> type=:clustered,</span><br><span class=\"line\"> format=:compact,</span><br><span class=\"line\"> offset=138,</span><br><span class=\"line\"> header=</span><br><span class=\"line\">  #&lt;struct Innodb::Page::Index::RecordHeader</span><br><span class=\"line\">   length=5,</span><br><span class=\"line\">   next=151,</span><br><span class=\"line\">   type=:node_pointer,</span><br><span class=\"line\">   heap_number=3,</span><br><span class=\"line\">   n_owned=0,</span><br><span class=\"line\">   info_flags=0,</span><br><span class=\"line\">   offset_size=nil,</span><br><span class=\"line\">   n_fields=nil,</span><br><span class=\"line\">   nulls=[],</span><br><span class=\"line\">   lengths=&#123;&#125;,</span><br><span class=\"line\">   externs=[]&gt;,</span><br><span class=\"line\"> <span class=\"keyword\">next</span>=<span class=\"number\">151</span>,</span><br><span class=\"line\"> key=</span><br><span class=\"line\">  [#&lt;struct Innodb::Page::Index::FieldDescriptor</span><br><span class=\"line\">    name=&quot;id&quot;,</span><br><span class=\"line\">    type=&quot;INT&quot;,</span><br><span class=\"line\">    value=166430,</span><br><span class=\"line\">    extern=nil&gt;],</span><br><span class=\"line\"> row=[],</span><br><span class=\"line\"> sys=[],</span><br><span class=\"line\"> child_page_number=<span class=\"number\">134</span>,</span><br><span class=\"line\"> transaction_id=<span class=\"literal\">nil</span>,</span><br><span class=\"line\"> roll_pointer=<span class=\"literal\">nil</span>,</span><br><span class=\"line\"> length=<span class=\"number\">8</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#&lt;struct Innodb::Page::Index::UserRecord</span><br><span class=\"line\"> type=:clustered,</span><br><span class=\"line\"> format=:compact,</span><br><span class=\"line\"> offset=151,</span><br><span class=\"line\"> header=</span><br><span class=\"line\">  #&lt;struct Innodb::Page::Index::RecordHeader</span><br><span class=\"line\">   length=5,</span><br><span class=\"line\">   next=164,</span><br><span class=\"line\">   type=:node_pointer,</span><br><span class=\"line\">   heap_number=4,</span><br><span class=\"line\">   n_owned=0,</span><br><span class=\"line\">   info_flags=0,</span><br><span class=\"line\">   offset_size=nil,</span><br><span class=\"line\">   n_fields=nil,</span><br><span class=\"line\">   nulls=[],</span><br><span class=\"line\">   lengths=&#123;&#125;,</span><br><span class=\"line\">   externs=[]&gt;,</span><br><span class=\"line\"> <span class=\"keyword\">next</span>=<span class=\"number\">164</span>,</span><br><span class=\"line\"> key=</span><br><span class=\"line\">  [#&lt;struct Innodb::Page::Index::FieldDescriptor</span><br><span class=\"line\">    name=&quot;id&quot;,</span><br><span class=\"line\">    type=&quot;INT&quot;,</span><br><span class=\"line\">    value=499330,</span><br><span class=\"line\">    extern=nil&gt;],</span><br><span class=\"line\"> row=[],</span><br><span class=\"line\"> sys=[],</span><br><span class=\"line\"> child_page_number=<span class=\"number\">135</span>,</span><br><span class=\"line\"> transaction_id=<span class=\"literal\">nil</span>,</span><br><span class=\"line\"> roll_pointer=<span class=\"literal\">nil</span>,</span><br><span class=\"line\"> length=<span class=\"number\">8</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#&lt;struct Innodb::Page::Index::UserRecord</span><br><span class=\"line\"> type=:clustered,</span><br><span class=\"line\"> format=:compact,</span><br><span class=\"line\"> offset=164,</span><br><span class=\"line\"> header=</span><br><span class=\"line\">  #&lt;struct Innodb::Page::Index::RecordHeader</span><br><span class=\"line\">   length=5,</span><br><span class=\"line\">   next=112,</span><br><span class=\"line\">   type=:node_pointer,</span><br><span class=\"line\">   heap_number=5,</span><br><span class=\"line\">   n_owned=0,</span><br><span class=\"line\">   info_flags=0,</span><br><span class=\"line\">   offset_size=nil,</span><br><span class=\"line\">   n_fields=nil,</span><br><span class=\"line\">   nulls=[],</span><br><span class=\"line\">   lengths=&#123;&#125;,</span><br><span class=\"line\">   externs=[]&gt;,</span><br><span class=\"line\"> <span class=\"keyword\">next</span>=<span class=\"number\">112</span>,</span><br><span class=\"line\"> key=</span><br><span class=\"line\">  [#&lt;struct Innodb::Page::Index::FieldDescriptor</span><br><span class=\"line\">    name=&quot;id&quot;,</span><br><span class=\"line\">    type=&quot;INT&quot;,</span><br><span class=\"line\">    value=833329,</span><br><span class=\"line\">    extern=nil&gt;],</span><br><span class=\"line\"> row=[],</span><br><span class=\"line\"> sys=[],</span><br><span class=\"line\"> child_page_number=<span class=\"number\">138</span>,</span><br><span class=\"line\"> transaction_id=<span class=\"literal\">nil</span>,</span><br><span class=\"line\"> roll_pointer=<span class=\"literal\">nil</span>,</span><br><span class=\"line\"> length=<span class=\"number\">8</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p>查看下聚簇索引的叶子节点的各项属性信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -p 3 page-dump | cat | grep -n -A 60 &#x27;^records:&#x27;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">93:records:</span><br><span class=\"line\">94-#&lt;struct Innodb::Page::Index::UserRecord</span><br><span class=\"line\">95- type=:clustered,</span><br><span class=\"line\">96- format=:compact,</span><br><span class=\"line\">97- offset=125,</span><br><span class=\"line\">98- header=</span><br><span class=\"line\">99-  #&lt;struct Innodb::Page::Index::RecordHeader</span><br><span class=\"line\">100-   length=5,</span><br><span class=\"line\">101-   next=138,</span><br><span class=\"line\">102-   type=:node_pointer,</span><br><span class=\"line\">103-   heap_number=2,</span><br><span class=\"line\">104-   n_owned=0,</span><br><span class=\"line\">105-   info_flags=1,</span><br><span class=\"line\">106-   offset_size=nil,</span><br><span class=\"line\">107-   n_fields=nil,</span><br><span class=\"line\">108-   nulls=[],</span><br><span class=\"line\">109-   lengths=&#123;&#125;,</span><br><span class=\"line\">110-   externs=[]&gt;,</span><br><span class=\"line\">111- next=138,</span><br><span class=\"line\">112- key=</span><br><span class=\"line\">113-  [#&lt;struct Innodb::Page::Index::FieldDescriptor</span><br><span class=\"line\">114-    name=&quot;id&quot;,</span><br><span class=\"line\">115-    type=&quot;INT&quot;,</span><br><span class=\"line\">116-    value=1,</span><br><span class=\"line\">117-    extern=nil&gt;],</span><br><span class=\"line\">118- row=[],</span><br><span class=\"line\">119- sys=[],</span><br><span class=\"line\">120- child_page_number=133,</span><br><span class=\"line\">121- transaction_id=nil,</span><br><span class=\"line\">122- roll_pointer=nil,</span><br><span class=\"line\">123- length=8&gt;</span><br><span class=\"line\">124-</span><br><span class=\"line\">125-#&lt;struct Innodb::Page::Index::UserRecord</span><br><span class=\"line\">126- type=:clustered,</span><br><span class=\"line\">127- format=:compact,</span><br><span class=\"line\">128- offset=138,</span><br><span class=\"line\">129- header=</span><br><span class=\"line\">130-  #&lt;struct Innodb::Page::Index::RecordHeader</span><br><span class=\"line\">131-   length=5,</span><br><span class=\"line\">132-   next=151,</span><br><span class=\"line\">133-   type=:node_pointer,</span><br><span class=\"line\">134-   heap_number=3,</span><br><span class=\"line\">135-   n_owned=0,</span><br><span class=\"line\">136-   info_flags=0,</span><br><span class=\"line\">137-   offset_size=nil,</span><br><span class=\"line\">138-   n_fields=nil,</span><br><span class=\"line\">139-   nulls=[],</span><br><span class=\"line\">140-   lengths=&#123;&#125;,</span><br><span class=\"line\">141-   externs=[]&gt;,</span><br><span class=\"line\">142- next=151,</span><br><span class=\"line\">143- key=</span><br><span class=\"line\">144-  [#&lt;struct Innodb::Page::Index::FieldDescriptor</span><br><span class=\"line\">145-    name=&quot;id&quot;,</span><br><span class=\"line\">146-    type=&quot;INT&quot;,</span><br><span class=\"line\">147-    value=166430,</span><br><span class=\"line\">148-    extern=nil&gt;],</span><br><span class=\"line\">149- row=[],</span><br><span class=\"line\">150- sys=[],</span><br><span class=\"line\">151- child_page_number=134,</span><br><span class=\"line\">152- transaction_id=nil,</span><br><span class=\"line\">153- roll_pointer=nil,</span><br></pre></td></tr></table></figure>\n\n<p>如图展示的是一些 Page 的详细信息，大家看下图对号入座。</p>\n<p><img src=\"/mysql/learn-mysql-021/modb_20211120_783b79ee-49b6-11ec-adf3-38f9d3cd240d.png\" loading=\"lazy\"></p>\n<ul>\n<li><p>查看某个 Page 各属性信息空间占用情况及百分比：</p>\n<ul>\n<li><p>聚簇索引非叶子节点页 &#x2F; 根页面（Clustered Index Non-Leaf）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -p 3 page-illustrate</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327185142292.png\" alt=\"image-20230327185142292\" style=\"zoom:50%;\">\n\n<blockquote>\n<p>红框部分为颜色说明及各属性空间占用百分比。</p>\n</blockquote>\n</li>\n<li><p>聚簇索引的叶子节点页（Clustered Index Leaf）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -p 5 page-illustrate</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327190015480.png\" alt=\"image-20230327190015480\" style=\"zoom:50%;\"></li>\n</ul>\n</li>\n</ul>\n<p><strong>Record（记录）相关</strong>  </p>\n<ul>\n<li>查看指定偏移量的记录 Record 详细信息：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -p 5 -R 127 record-dump</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327190619666.png\" alt=\"image-20230327190619666\" style=\"zoom:50%;\">\n\n<ul>\n<li>查看指定偏移量记录 Record 的历史记录（为指定偏移量记录的 UNDO LOG）：</li>\n</ul>\n<p>修改 tbl_innodb_ruby.t_people 表 id&#x3D;10 的数据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">UPDATe t_people SET c_name = &quot;ypb_test&quot; WHERE id=10;</span><br></pre></td></tr></table></figure>\n\n<p>抓取 test_innodb_ruby.words 表所有记录和 Page 的对应关系：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people  -I PRIMARY index-recurse | grep -B 20 -n &#x27;(id=10)&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>定位 id&#x3D;10 的记录所在的 Page，获取 PAGE_NO：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people  -I PRIMARY index-recurse | grep -B 20 -n &#x27;(id=10)&#x27;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327191903009.png\" alt=\"image-20230327191903009\" style=\"zoom:50%;\">\n\n<blockquote>\n<p> 如图，我们看到数据已经被修改成&#39;ypb_test&#39;，且知道了 id&#x3D;10 这行数据所在的 Page 是 PAGE_NO&#x3D;5。  </p>\n</blockquote>\n<p>获取 t_people 表空间数据页 Page 的详细信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -p 5 page-dump | grep -B 35 -n  &quot;ypb_test&quot;</span><br></pre></td></tr></table></figure>\n\n<p>获取 id&#x3D;10 这行记录的偏移量：</p>\n<img src=\"/mysql/learn-mysql-021/image-20230327192114564.png\" alt=\"image-20230327192114564\" style=\"zoom:50%;\">\n\n<blockquote>\n<p>如图，我们知道了偏移量是 offset&#x3D;613。所以我们就可以通过指定偏移量查询该条 Record 的历史记录。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">innodb_space -s ibdata1 -T tbl_innodb_ruby/t_people -p 5 -R 613 record-history</span><br></pre></td></tr></table></figure>\n\n<img src=\"/mysql/learn-mysql-021/image-20230327192244144.png\" alt=\"image-20230327192244144\" style=\"zoom:50%;\">","categories":["mysql"],"tags":["mysql5.7","innobd_ruby"]},{"title":"404","url":"//404.html","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">██╗  ██╗ ██████╗ ██╗  ██╗    ███╗   ██╗ ██████╗ ████████╗</span><br><span class=\"line\">██║  ██║██╔═████╗██║  ██║    ████╗  ██║██╔═══██╗╚══██╔══╝</span><br><span class=\"line\">███████║██║██╔██║███████║    ██╔██╗ ██║██║   ██║   ██║</span><br><span class=\"line\">╚════██║████╔╝██║╚════██║    ██║╚██╗██║██║   ██║   ██║</span><br><span class=\"line\">     ██║╚██████╔╝     ██║    ██║ ╚████║╚██████╔╝   ██║</span><br><span class=\"line\">     ╚═╝ ╚═════╝      ╚═╝    ╚═╝  ╚═══╝ ╚═════╝    ╚═╝</span><br><span class=\"line\"></span><br><span class=\"line\">    ███████╗ ██████╗ ██╗   ██╗███╗   ██╗██████╗</span><br><span class=\"line\">    ██╔════╝██╔═══██╗██║   ██║████╗  ██║██╔══██╗</span><br><span class=\"line\">    █████╗  ██║   ██║██║   ██║██╔██╗ ██║██║  ██║</span><br><span class=\"line\">    ██╔══╝  ██║   ██║██║   ██║██║╚██╗██║██║  ██║</span><br><span class=\"line\">    ██║     ╚██████╔╝╚██████╔╝██║ ╚████║██████╔╝</span><br><span class=\"line\">    ╚═╝      ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═════╝</span><br></pre></td></tr></table></figure>\n"},{"title":"Documentation","url":"/docs/index.html","content":"<h3 id=\"Elegant-and-Powerful-Theme-for-Hexo\"><a href=\"#Elegant-and-Powerful-Theme-for-Hexo\" class=\"headerlink\" title=\"Elegant and Powerful Theme for Hexo\"></a>Elegant and Powerful Theme for Hexo</h3><p>Theme NexT has the following features:</p>\n<ul>\n<li>Vanilla JavaScript.</li>\n<li>Support <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jYW5pdXNlLmNvbS9wcmVmZXJzLWNvbG9yLXNjaGVtZQ==\">native dark mode<i class=\"fa fa-external-link-alt\"></i></span>.</li>\n<li>Support <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01vT3gvcGpheA==\">Pjax<i class=\"fa fa-external-link-alt\"></i></span> to deliver a fast browsing experience.</li>\n<li>Integrated <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWF0aGpheC5vcmcv\">MathJax<i class=\"fa fa-external-link-alt\"></i></span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYXRleC5vcmcv\">KaTeX<i class=\"fa fa-external-link-alt\"></i></span> mathematical formula rendering.</li>\n<li>Integrated <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb3ppbGxhLmdpdGh1Yi5pby9wZGYuanMv\">PDF.js<i class=\"fa fa-external-link-alt\"></i></span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJtYWlkLWpzLmdpdGh1Yi5pby9tZXJtYWlkLw==\">mermaid diagram<i class=\"fa fa-external-link-alt\"></i></span>.</li>\n<li>Support <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXNxdXMuY29tLw==\">Disqus<i class=\"fa fa-external-link-alt\"></i></span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaGFuZ3lhbi5rdWFpemhhbi5jb20v\">Changyan<i class=\"fa fa-external-link-alt\"></i></span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9saXZlcmUuY29tLw==\">LiveRe<i class=\"fa fa-external-link-alt\"></i></span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRhbGsuZ2l0aHViLmlvLw==\">Gitalk<i class=\"fa fa-external-link-alt\"></i></span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly91dHRlcmFuYy5lcy8=\">Utterances<i class=\"fa fa-external-link-alt\"></i></span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly9pc3NvLWNvbW1lbnRzLmRlLw==\">Isso<i class=\"fa fa-external-link-alt\"></i></span> comment systems.</li>\n<li>Support a large number of third-party statistics services.</li>\n<li>Easy to switch CDN provider.</li>\n<li>Easy to customize content or modify style.</li>\n</ul>\n<h3 id=\"Four-Schemes-in-One\"><a href=\"#Four-Schemes-in-One\" class=\"headerlink\" title=\"Four Schemes in One\"></a>Four Schemes in One</h3><p>By using different Schemes in NexT, you can simply change the style of your blog, and nearly all options can be used in all schemes.</p>\n<style>\n.image-comparison-container {\n    position: relative;\n}\n\n.image-comparison {\n    opacity: 1 !important;\n}\n\n@keyframes next-clip-path {\n    from {\n        clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);\n    }\n    to {\n        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\n    }\n}\n\n.image-comparison:last-of-type {\n    animation: next-clip-path 8s alternate ease-in-out infinite;\n    position: absolute;\n    top: 0;\n}\n</style>\n<div class=\"image-comparison-container\">\n    <img class=\"image-comparison\" src=\"/images/next-schemes.png\" alt=\"NexT Schemes\">\n    <img class=\"image-comparison\" src=\"/images/next-schemes-dark.png\" alt=\"NexT Schemes\">\n</div>\n\n<h3 id=\"Multilingual-Support\"><a href=\"#Multilingual-Support\" class=\"headerlink\" title=\"Multilingual Support\"></a>Multilingual Support</h3><p>Thanks to the contribution of our users and developers, <a href=\"/docs/theme-settings/internationalization.html#Choosing-Language\">NexT now supports over 20 languages</a>.</p>\n<div class=\"group-picture\"><div class=\"group-picture-row\"><div class=\"group-picture-column\"><img src=\"/images/en.png\" alt=\"English translation\" loading=\"lazy\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\"><img src=\"/images/cn.png\" alt=\"Chinese translation\" loading=\"lazy\"></div><div class=\"group-picture-column\"><img src=\"/images/ru.png\" alt=\"Russian translation\" loading=\"lazy\"></div></div></div>\n\n<h3 id=\"Code-Highlighting-Themes\"><a href=\"#Code-Highlighting-Themes\" class=\"headerlink\" title=\"Code Highlighting Themes\"></a>Code Highlighting Themes</h3><p>NexT uses code highlighting themes from the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oaWdobGlnaHRqcy5vcmcv\">Highlight.js<i class=\"fa fa-external-link-alt\"></i></span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcmlzbWpzLmNvbS8=\">Prism<i class=\"fa fa-external-link-alt\"></i></span> package, and makes <a href=\"/docs/theme-settings/miscellaneous.html#Codeblock-Style\">more than 300 themes</a> available to you.</p>\n<!-- Inspired by https://github.com/sindresorhus/css-in-readme-like-wat -->\n<table>\n<thead>\n<tr>\n<th align=\"center\">Tomorrow</th>\n<th align=\"center\">Tomorrow Night</th>\n<th align=\"center\">Tomorrow Night Eighties</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><img src=\"/images/tomorrow.svg\" alt=\"Tomorrow\" loading=\"lazy\"></td>\n<td align=\"center\"><img src=\"/images/tomorrow-night.svg\" alt=\"Tomorrow Night\" loading=\"lazy\"></td>\n<td align=\"center\"><img src=\"/images/tomorrow-night-eighties.svg\" alt=\"Tomorrow Night Eighties\" loading=\"lazy\"></td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Tomorrow Night Blue</th>\n<th align=\"center\">Tomorrow Night Bright</th>\n<th align=\"center\">Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><img src=\"/images/tomorrow-night-blue.svg\" alt=\"Tomorrow Night Blue\" loading=\"lazy\"></td>\n<td align=\"center\"><img src=\"/images/tomorrow-night-bright.svg\" alt=\"Tomorrow Night Bright\" loading=\"lazy\"></td>\n<td align=\"center\"><img src=\"/images/default.svg\" alt=\"Default\" loading=\"lazy\"></td>\n</tr>\n</tbody></table>\n<h3 id=\"Supported-Browsers\"><a href=\"#Supported-Browsers\" class=\"headerlink\" title=\"Supported Browsers\"></a>Supported Browsers</h3><p>We design NexT to support the latest web browsers. We support the current versions of Chrome, Firefox, Safari, and Microsoft Edge. Many CSS3 and ES6 features are used in theme NexT, including CSS Variables, Destructuring assignment, Arrow functions and Spread operator.</p>\n<table>\n<thead>\n<tr>\n<th>Browser</th>\n<th>Supported versions</th>\n<th>Release date</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><i class=\"fab fa-internet-explorer fa-2x\"></i> IE</td>\n<td>N&#x2F;A</td>\n<td>Oct 17, 2013</td>\n</tr>\n<tr>\n<td><i class=\"fab fa-chrome fa-2x\"></i> Chrome</td>\n<td>60+</td>\n<td>Jul 25, 2017</td>\n</tr>\n<tr>\n<td><i class=\"fab fa-firefox-browser fa-2x\"></i> Firefox</td>\n<td>55+</td>\n<td>Aug 8, 2017</td>\n</tr>\n<tr>\n<td><i class=\"fab fa-opera fa-2x\"></i> Opera</td>\n<td>47+</td>\n<td>Aug 9, 2017</td>\n</tr>\n<tr>\n<td><i class=\"fab fa-safari fa-2x\"></i> Safari</td>\n<td>11+</td>\n<td>Sep 19, 2017</td>\n</tr>\n<tr>\n<td><i class=\"fab fa-edge fa-2x\"></i> Edge</td>\n<td>80+</td>\n<td>Feb 7, 2020</td>\n</tr>\n</tbody></table>\n<p>Some other new Web APIs, such as <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jYW5pdXNlLmNvbS9pbnRlcnNlY3Rpb25vYnNlcnZlcg==\">IntersectionObserver<i class=\"fa fa-external-link-alt\"></i></span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jYW5pdXNlLmNvbS9mZXRjaA==\">Fetch API<i class=\"fa fa-external-link-alt\"></i></span>, are used by NexT plugins. They are not core functions of NexT, so we have no plans to make them compatible with legacy browsers.</p>\n<p>In addition, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jYW5pdXNlLmNvbS9jc3Mtc3RpY2t5\">CSS position: sticky<i class=\"fa fa-external-link-alt\"></i></span> is used for sidebar positioning. On browsers that do not support this property, its fallback style <code>position: static</code> will be used.</p>\n<h3 id=\"Customize-Your-NexT\"><a href=\"#Customize-Your-NexT\" class=\"headerlink\" title=\"Customize Your NexT\"></a>Customize Your NexT</h3><p>NexT have flexible but simple options, and you can make your own blog with built-in third-party support. Now let&#39;s <a href=\"/docs/getting-started/\">get started</a>.</p>\n"},{"title":"分类","url":"/categories/index.html","content":""},{"title":"about","url":"/about/index.html","content":""},{"title":"Plugins","url":"/plugins/index.html","content":"<h3 id=\"Hexo-Plugins\"><a href=\"#Hexo-Plugins\" class=\"headerlink\" title=\"Hexo Plugins\"></a>Hexo Plugins</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by1nZW5lcmF0b3Itc2VhcmNoZGI=\">hexo-generator-searchdb<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by1wYW5ndQ==\">hexo-pangu<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by1maWx0ZXItbWF0aGpheA==\">hexo-filter-mathjax<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by13b3JkLWNvdW50ZXI=\">hexo-word-counter<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by1vcHRpbWl6ZQ==\">hexo-optimize<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<h3 id=\"NexT-Plugins\"><a href=\"#NexT-Plugins\" class=\"headerlink\" title=\"NexT Plugins\"></a>NexT Plugins</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by1uZXh0LXRocmVl\">hexo-next-three<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by1uZXh0LWZpcmV3b3Jrcw==\">hexo-next-fireworks<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by1uZXh0LWV4aWY=\">hexo-next-exif<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by1uZXh0LXZhbGluZQ==\">hexo-next-valine<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by1uZXh0LWdpc2N1cw==\">hexo-next-giscus<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<hr>\n<ul>\n<li>Visit the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvYXdlc29tZS1uZXh0\">Awesome NexT<i class=\"fa fa-external-link-alt\"></i></span> list for more plugins.</li>\n</ul>\n"},{"title":"Troubleshooting","url":"/docs/troubleshooting.html","content":"<h3 id=\"Quick-Debug-Instructions\"><a href=\"#Quick-Debug-Instructions\" class=\"headerlink\" title=\"Quick Debug Instructions\"></a>Quick Debug Instructions</h3><p><strong>Before submitting an Issue on GitHub, you can follow the steps below to debug:</strong></p>\n<p>If you get an error message from Hexo or your browser:</p>\n<ul>\n<li>If the error comes from a Hexo plugin, such as hexo-word-counter, please submit an Issue to its GitHub repository.</li>\n<li>If the error comes from a third-party service, such as the Gitalk comment system, please submit an Issue to its GitHub repository.</li>\n<li>Otherwise, please search in Google &#x2F; Stackoverflow &#x2F; GitHub Issues, or report it to us when submitting a new Issue.</li>\n</ul>\n<p>The following steps will help you determine the cause of the problem:</p>\n<ul>\n<li>Execute <code>hexo clean</code>, clear the browser cache and purge CDN cache (or disable all CDN services) - This may take some time to take effect.</li>\n<li>Disable browser plug-ins or use other devices and browsers to test, because bugs may only occur in specific browsers.</li>\n<li>Switch to another theme and check if the bug still exists (e.g. default theme landscape).</li>\n<li>Upgrade theme NexT to the latest version.</li>\n<li>Upgrade Hexo and all Hexo plugins to the latest version. You can use tools like <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvbnBtLWNoZWNr\">npm-check<i class=\"fa fa-external-link-alt\"></i></span>.</li>\n<li>Upgrade or downgrade Node.js to the latest LTS version.</li>\n<li>Uninstall all non-essential Hexo plugins, or delete <code>node_modules</code> and then reinstall all plugins using <code>npm install --force</code>.</li>\n</ul>\n<p>If you decide to submit an Issue, please answer the following questions based on the Issue template:</p>\n<ul>\n<li>Can you reproduce the problem? Can you reliably reproduce the issue? If not, provide details about how often the problem happens and under which conditions it normally happens.</li>\n<li>Did the problem start happening recently or was this always a problem?</li>\n<li>If the problem started happening recently, can you reproduce the problem in an older version of NexT? What&#39;s the most recent version in which the problem doesn&#39;t happen? You can download older versions of NexT from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0L3JlbGVhc2Vz\">the releases page<i class=\"fa fa-external-link-alt\"></i></span>.</li>\n<li>Which version of Node, Hexo and NexT are you using? You can get the exact version by running <code>node -v</code>, <code>hexo version</code> in your terminal.</li>\n<li>Which packages do you have installed? You can get that list by copying the output from <code>npm ls --depth 0</code> in Hexo root directory.</li>\n</ul>\n<h3 id=\"Keep-Up-Indentation\"><a href=\"#Keep-Up-Indentation\" class=\"headerlink\" title=\"Keep Up Indentation\"></a>Keep Up Indentation</h3><p>When you edit any YAML configs, always need to keep up indents.<br>Currently, in all Hexo and NexT configuration files parameters uses <strong>2 spaces indents</strong> from parent option.</p>\n<p>If you encounter other yaml errors, you can also check if there is a syntax problem in the configuration file or front-matter.</p>\n<h3 id=\"Set-skip-render\"><a href=\"#Set-skip-render\" class=\"headerlink\" title=\"Set skip_render\"></a>Set <code>skip_render</code></h3><p>If you want to skip rendering for some files, you can set <code>skip_render</code> in the <mark class=\"label info\">Hexo config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">skip_render:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">robots.txt</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">CNAME</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Dark-Mode-not-Working\"><a href=\"#Dark-Mode-not-Working\" class=\"headerlink\" title=\"Dark Mode not Working\"></a>Dark Mode not Working</h3><p>There are 3 prerequisites for Dark Mode to work:</p>\n<ol>\n<li>Enable <code>darkmode</code> in <mark class=\"label primary\">NexT config file</mark>.</li>\n<li>Your browser supports <code>prefers-color-scheme</code> media query. (Supported by most browsers released after 2020)</li>\n<li>Enable Dark Mode in your operating system settings.</li>\n</ol>\n<p>In some operating systems, such as macOS, you can configure to enable dark mode at night. In other operating systems, the default color scheme is light, so you need to turn on Dark Mode in the system settings manually.</p>\n<h3 id=\"TOC-Issues\"><a href=\"#TOC-Issues\" class=\"headerlink\" title=\"TOC Issues\"></a>TOC Issues</h3><p>Do not write a skip-level heading in the post. For example, a third-tier heading <code>###</code> followed by a <code>#####</code> is not recommended.<br>See: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L2lzc3Vlcy84ODI=\">https://github.com/theme-next/hexo-theme-next/issues/882<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>If you are using <code>hexo-renderer-markdown-it</code>, it&#39;s recommended to install <code>markdown-it-named-headings</code> to make the TOC work correctly.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install markdown-it-named-headings</span><br></pre></td></tr></table></figure>\n\n<p>See: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L2lzc3Vlcy8xMTY4\">https://github.com/theme-next/hexo-theme-next/issues/1168<i class=\"fa fa-external-link-alt\"></i></span><br>Here is the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLXJlbmRlcmVyLW1hcmtkb3duLWl0L3B1bGwvOTA=\">Pull Request with bugfix for default config<i class=\"fa fa-external-link-alt\"></i></span> of <code>hexo-renderer-markdown-it</code> plugin.</p>\n<h3 id=\"Favicon-Set-but-Doesn-39-t-Work\"><a href=\"#Favicon-Set-but-Doesn-39-t-Work\" class=\"headerlink\" title=\"Favicon Set but Doesn&#39;t Work\"></a>Favicon Set but Doesn&#39;t Work</h3><p>Put your <code>favicon</code> under <mark class=\"label info\">site's</mark> <code>source</code> dir. If you find that your Favicon doesn&#39;t work, please clean your browser&#39;s cache first and then visit your Favicon&#39;s URL directly, which should be <code>http(s)://your-domain.com/favicon.ico</code>.</p>\n<div class=\"note warning\"><p>If your site is in a subdirectory please set it to <code>favicon: favicon.ico</code>.</p>\n</div>\n"},{"title":"Configuration","url":"/docs/getting-started/configuration.html","content":"<p>How to configure NexT theme? The traditional approach is to edit <mark class=\"label primary\">NexT config file</mark> (<code>thems/next/_config.yml</code> or <code>node_modules/hexo-theme-next/_config.yml</code>) directly. However, the config file will be overwritten when upgrade NexT theme via git or npm, which brings inconvenience to the configuration of the theme.</p>\n<p>At present, NexT encourages users to use the Alternate Theme Config. It&#39;s a feature of Hexo and the documentation is here: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvY29uZmlndXJhdGlvbi5odG1sI1VzaW5nLWFuLUFsdGVybmF0ZS1Db25maWc=\">Hexo Configuration<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<p>This tutorial shows you how to configure NexT using Alternate Theme Config. Please choose only one of the following solutions and resume next steps.</p>\n<h3 id=\"config-name-yml\"><a href=\"#config-name-yml\" class=\"headerlink\" title=\"_config.[name].yml\"></a><code>_config.[name].yml</code></h3><p>With this way, all your theme configurations locate in config file <code>/_config.[name].yml</code>. Replace <code>[name]</code> with the value of <code>theme</code> option in <mark class=\"label info\">Hexo config file</mark>. For NexT theme, the file name is <code>_config.next.yml</code> by default.</p>\n<h4 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h4><ol>\n<li><p>Please ensure you are using Hexo 5.0 or later.</p>\n</li>\n<li><p>Create a config file in site&#39;s root directory, e.g. <code>_config.next.yml</code>.</p>\n</li>\n<li><p>Copy needed NexT theme options from <mark class=\"label primary\">NexT config file</mark> into this config file. If it is the first time to install NexT, then copy the whole <mark class=\"label primary\">NexT config file</mark> by the following command:</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Installed through npm</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> node_modules/hexo-theme-next/_config.yml _config.next.yml</span><br><span class=\"line\"><span class=\"comment\"># Installed through Git</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> themes/next/_config.yml _config.next.yml</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"theme-config\"><a href=\"#theme-config\" class=\"headerlink\" title=\"theme_config\"></a><code>theme_config</code></h3><p>With this way, all your Hexo and NexT configurations locate in main <mark class=\"label info\">Hexo config file</mark>. You don&#39;t need to edit <mark class=\"label primary\">NexT config file</mark> or create any new files. But you need to <strong><a href=\"/docs/troubleshooting.html#Keep-Up-Indentation\">keep up indentation</a></strong> within <code>theme_config</code> option.</p>\n<h4 id=\"Usage-1\"><a href=\"#Usage-1\" class=\"headerlink\" title=\"Usage\"></a>Usage</h4><p>Copy needed NexT theme options from <mark class=\"label primary\">NexT config file</mark> into <mark class=\"label info\">Hexo config file</mark>, then</p>\n<ol>\n<li>Move all these settings to the right with two spaces indentation (in Visual Studio Code: select all strings, <kbd>CTRL</kbd> + <kbd>]</kbd>).</li>\n<li>Add <code>theme_config:</code> parameter above all this settings.</li>\n</ol>\n<h3 id=\"next-yml-Deprecated\"><a href=\"#next-yml-Deprecated\" class=\"headerlink\" title=\"next.yml (Deprecated)\"></a><code>next.yml</code> (Deprecated)</h3><p>Older versions of NexT theme also provide another configuration method, which is to place the theme configuration in the <code>/source/_data/next.yml</code> file. This method is deprecated, please use <code>_config.next.yml</code> instead. If the <code>/source/_data/next.yml</code> file exists, move it to the Hexo root directory and rename it to <code>_config.next.yml</code>.</p>\n"},{"title":"Deployment","url":"/docs/getting-started/deployment.html","content":"<h3 id=\"Local-Deployment\"><a href=\"#Local-Deployment\" class=\"headerlink\" title=\"Local Deployment\"></a>Local Deployment</h3><ol>\n<li>Modify files locally.</li>\n<li>Localization testing: <code>hexo clean &amp;&amp; hexo s</code>.</li>\n<li>Deployment: <code>hexo g -d</code>.</li>\n</ol>\n<h3 id=\"Continuous-Integration\"><a href=\"#Continuous-Integration\" class=\"headerlink\" title=\"Continuous Integration\"></a>Continuous Integration</h3><ul>\n<li>Edit the file directly online, effective immediately</li>\n<li>Automatic deployment, simultaneous deployment to multiple locations</li>\n</ul>\n<h4 id=\"Cloudflare-Pages\"><a href=\"#Cloudflare-Pages\" class=\"headerlink\" title=\"Cloudflare Pages\"></a>Cloudflare Pages</h4><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYWdlcy5jbG91ZGZsYXJlLmNvbS8=\">Cloudflare Pages<i class=\"fa fa-external-link-alt\"></i></span> is a JAMstack platform for frontend developers to collaborate and deploy websites. You can connect your GitHub or GitLab account with Cloudflare Pages. After that, you just need to push your blog source code to the repository, and create a new project in Cloudflare Pages. In the project&#39;s settings, you can configure the build settings as shown below.</p>\n<p><img src=\"/images/cloudflare-pages.png\" alt=\"Cloudflare Pages\" loading=\"lazy\"></p>\n<p>Cloudflare Pages will automatically build and deploy your site.</p>\n<h4 id=\"Netlify\"><a href=\"#Netlify\" class=\"headerlink\" title=\"Netlify\"></a>Netlify</h4><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmV0bGlmeS5jb20v\">Netlify<i class=\"fa fa-external-link-alt\"></i></span> is an all-in-one platform for automating modern web projects. Replace your hosting infrastructure, continuous integration, and deployment pipeline with a single workflow. Integrate dynamic functionality like serverless functions, user authentication, and form handling as your projects grow.</p>\n<p>Perhaps you have already found that this website is deployed on Netlify. Checkout <code>deploy.sh</code> and <code>netlify.toml</code> in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvdGhlbWUtbmV4dC1kb2Nz\">theme-next-docs<i class=\"fa fa-external-link-alt\"></i></span> repository for more information.</p>\n<h4 id=\"Github-Pages\"><a href=\"#Github-Pages\" class=\"headerlink\" title=\"Github Pages\"></a>Github Pages</h4><p>This Github Action automating Hexo deployment workflow, to allow you to publish your Hexo site on Github Pages: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NtYTExYmxhY2svaGV4by1hY3Rpb24=\">hexo-action<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<h4 id=\"Gitlab-CI\"><a href=\"#Gitlab-CI\" class=\"headerlink\" title=\"Gitlab CI\"></a>Gitlab CI</h4><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdpdGxhYi5jb20vZWUvY2kv\">GitLab<i class=\"fa fa-external-link-alt\"></i></span> offers a continuous integration service and pages service. If you add a <code>.gitlab-ci.yml</code> file to the root directory of your repository, and configure your GitLab project to use a Runner, then each commit or push, triggers your CI pipeline. The <code>.gitlab-ci.yml</code> file tells the GitLab runner what to do. By default it runs a pipeline with three stages: build, test, and deploy. You don&#39;t need to use all three stages; stages with no jobs are simply ignored. And at the end, your websites will be published on GitLab Host automatically.</p>\n<ol>\n<li><p>Add <code>.gitlab-ci.yml</code> to the root directory of your repository, and configure it.</p>\n <figure class=\"highlight yml\"><figcaption><span>hexo/.gitlab-ci.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">image:</span> <span class=\"string\">node:lts</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">before_script:</span></span><br><span class=\"line\">  <span class=\"comment\"># Set TimeZone, eg: Asia/Shanghai</span></span><br><span class=\"line\">  <span class=\"comment\"># - export TZ=&#x27;Asia/Shanghai&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\"># Restore last modified time</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&quot;git ls-files -z | while read -d &#x27;&#x27; path; do touch -d \\&quot;$(git log -1 --format=\\&quot;@%ct\\&quot; \\&quot;$path\\&quot;)\\&quot; \\&quot;$path\\&quot;; done&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">pages:</span></span><br><span class=\"line\">  <span class=\"attr\">stage:</span> <span class=\"string\">build</span></span><br><span class=\"line\">  <span class=\"attr\">cache:</span></span><br><span class=\"line\">    <span class=\"attr\">paths:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">node_modules/</span></span><br><span class=\"line\">  <span class=\"attr\">script:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">npm</span> <span class=\"string\">install</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">npx</span> <span class=\"string\">hexo</span> <span class=\"string\">deploy</span></span><br><span class=\"line\">  <span class=\"attr\">artifacts:</span></span><br><span class=\"line\">    <span class=\"attr\">paths:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">public</span></span><br><span class=\"line\">  <span class=\"attr\">only:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Upload <code>scaffolds</code>, <code>source</code>, <code>themes</code>, <code>.gitignore</code>, <code>.gitlab-ci.yml</code>, <code>_config.yml</code>, and <code>package.json</code> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRsYWIuY29tLw==\">your Gitlab repository<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git init</span><br><span class=\"line\">$ ssh -T git@gitlab.com</span><br><span class=\"line\">$ git remote add origin YOUR-GITLAB-REPO-SSH-LINK</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m &quot;COMMIT MESSAGE&quot;</span><br><span class=\"line\">$ git push -u origin master</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>Now, your static website is available at <code>https://yourname.gitlab.io/project</code> that is similar to GitHub. <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRsYWIuY29tL2hlbHAvdXNlci9wcm9qZWN0L3BhZ2VzL2luZGV4Lm1k\">More GitLab Pages config in here<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<p>Of course, you can also publish static website on GitHub Pages or others pages service. There are two ways to configure <code>.gitlab-ci.yml</code>:</p>\n<div class=\"tabs\" id=\"gitlab-ci\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#gitlab-ci-1\"><code>HTTPS</code></a></li><li class=\"tab\"><a href=\"#gitlab-ci-2\"><code>SSH</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"gitlab-ci-1\"><ul>\n<li><p>Get the Access Token: <code>Settings</code> → <code>Developer settings</code> → <code>Personal access token</code> → <code>Generate new token</code>. Set access rights according to the actual situation. It should be noted that the access token is only displayed once on this page, and it should be copied, otherwise it can only be regenerated.</p>\n</li>\n<li><p>Click <code>SETTINGS-CI/CD → Variables</code> in Gitlab, and defined access token as custom variable <code>GITHUB_ACCESS_TOKEN</code>. Or set <code>USERNAME</code> <code>PASSWORD</code> variable for coding repo.</p>\n</li>\n<li><p>Configure <code>.gitlab-ci.yml</code>: <strong>only add deploy stage at the end of this file</strong></p>\n  <figure class=\"highlight yml\"><figcaption><span>hexo/.gitlab-ci.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">github:</span></span><br><span class=\"line\">  <span class=\"attr\">stage:</span> <span class=\"string\">deploy</span></span><br><span class=\"line\">  <span class=\"attr\">script:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">cd</span> <span class=\"string\">./public</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">git</span> <span class=\"string\">init</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">&quot;YOUR-USER-NAME&quot;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">&quot;YOUR-EMAIL&quot;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">.</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">&quot;gitlab-auto-deploy&quot;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">--force</span> <span class=\"string\">--quiet</span> <span class=\"string\">--set-upstream</span> <span class=\"string\">https://$GITHUB_ACCESS_TOKEN@github.com/username/username.github.io.git</span> <span class=\"string\">master</span> <span class=\"comment\"># replace github_access_token</span></span><br><span class=\"line\">  <span class=\"comment\"># - git config http.postBuffer 524288000</span></span><br><span class=\"line\">  <span class=\"comment\"># - git push --force --quiet --set-upstream https://$USERNAME:$PASSWORD@git.coding.net/username/reponame.git master # replace username &amp; password, please escape the password</span></span><br><span class=\"line\">  <span class=\"attr\">only:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure></li>\n</ul></div><div class=\"tab-pane\" id=\"gitlab-ci-2\"><p>Deploy key is a SSH key set in your repo to grant client read-only (as well as r&#x2F;w, if you want) access to your repo. This method is suitable for most public blog repositories and there are no private sub-modules in the repositories.</p>\n<ul>\n<li><p>Generate a deploy key</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -b 4096 -C &quot;&#123;email&#125;&quot; -f ~/.ssh/deploy_key</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Click <code>SETTINGS-CI/CD → Variables</code> in Gitlab, copy the content of private key and defined it as custom variable <code>DEPLOY_PRIVATE_KEY</code>.</p>\n</li>\n<li><p>Configure <code>.gitlab-ci.yml</code>: <strong>only update script in <code>before_script</code></strong></p>\n  <figure class=\"highlight yml\"><figcaption><span>hexo/.gitlab-ci.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">before_script:</span></span><br><span class=\"line\">  <span class=\"comment\"># Set TimeZone, eg: Asia/Shanghai</span></span><br><span class=\"line\">  <span class=\"comment\"># - export TZ=&#x27;Asia/Shanghai&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">&quot;YOUR-USER-NAME&quot;</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">&quot;YOUR-EMAIL&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Restore last modified time</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&quot;git ls-files -z | while read -d &#x27;&#x27; path; do touch -d \\&quot;$(git log -1 --format=\\&quot;@%ct\\&quot; \\&quot;$path\\&quot;)\\&quot; \\&quot;$path\\&quot;; done&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># Install ssh-agent if not already installed, it is required by Docker.</span></span><br><span class=\"line\">  <span class=\"comment\"># (change apt-get to yum if you use a CentOS-based image)</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;which ssh-agent || ( apt-get update -y &amp;&amp; apt-get install openssh-client -y )&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\"># Run ssh-agent (inside the build environment)</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">eval</span> <span class=\"string\">$(ssh-agent</span> <span class=\"string\">-s)</span></span><br><span class=\"line\">  <span class=\"comment\"># Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ssh-add</span> <span class=\"string\">&lt;(echo</span> <span class=\"string\">&quot;$DEPLOY_PRIVATE_KEY&quot;</span><span class=\"string\">)</span></span><br><span class=\"line\">  <span class=\"comment\"># For Docker builds disable host key checking. Be aware that by adding that</span></span><br><span class=\"line\">  <span class=\"comment\"># you are susceptible to man-in-the-middle attacks.</span></span><br><span class=\"line\">  <span class=\"comment\"># WARNING: Use this only with the Docker executor, if you use it with shell</span></span><br><span class=\"line\">  <span class=\"comment\"># you will overwrite your user&#x27;s SSH config.</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">mkdir</span> <span class=\"string\">-p</span> <span class=\"string\">~/.ssh</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">&#x27;[[ -f /.dockerenv ]] &amp;&amp; echo -e &quot;Host *\\n\\tStrictHostKeyChecking no\\n\\n&quot; &gt; ~/.ssh/config&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\"># In order to properly check the server&#x27;s host key, assuming you created the</span></span><br><span class=\"line\">  <span class=\"comment\"># SSH_SERVER_HOSTKEYS variable previously, uncomment the following two lines</span></span><br><span class=\"line\">  <span class=\"comment\"># instead.</span></span><br><span class=\"line\">  <span class=\"comment\"># - mkdir -p ~/.ssh</span></span><br><span class=\"line\">  <span class=\"comment\"># - &#x27;[[ -f /.dockerenv ]] &amp;&amp; echo &quot;$SSH_SERVER_HOSTKEYS&quot; &gt; ~/.ssh/known_hosts&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Install pandoc, eg: v1.19.2.1</span></span><br><span class=\"line\">  <span class=\"comment\"># - wget https://github.com/jgm/pandoc/releases/download/1.19.2.1/pandoc-1.19.2.1-1-amd64.deb</span></span><br><span class=\"line\">  <span class=\"comment\"># - dpkg -i ./pandoc-1.19.2.1-1-amd64.deb</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">image:</span> <span class=\"string\">node:lts</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">pages:</span></span><br><span class=\"line\">  <span class=\"attr\">cache:</span></span><br><span class=\"line\">    <span class=\"attr\">paths:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">node_modules/</span></span><br><span class=\"line\">  <span class=\"attr\">script:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">npm</span> <span class=\"string\">install</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">npx</span> <span class=\"string\">hexo</span> <span class=\"string\">deploy</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">artifacts:</span></span><br><span class=\"line\">    <span class=\"attr\">paths:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">public</span></span><br><span class=\"line\">  <span class=\"attr\">only:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure></li>\n</ul></div></div></div>\n\n<div class=\"note danger\"><p>Variables are not masked, and their values can be shown in the job logs if explicitly asked to do so. So make sure gitlab pipelines can only be viewed by yourself.</p>\n</div>\n"},{"title":"标签","url":"/tags/index.html","content":""},{"title":"Getting Started","url":"/docs/getting-started/index.html","content":"<h3 id=\"Hexo-Installation\"><a href=\"#Hexo-Installation\" class=\"headerlink\" title=\"Hexo Installation\"></a>Hexo Installation</h3><p>If this is your first time using Hexo, you can take some time to review the Hexo Docs to see <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">how to install Hexo<i class=\"fa fa-external-link-alt\"></i></span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2V0dXA=\">initialize a site<i class=\"fa fa-external-link-alt\"></i></span>. After the installation is successful, you should be able to execute <code>hexo</code> (or <code>npx hexo</code>) on the command line, and there must be <code>package.json</code>, <code>source</code>, <code>themes</code> and other directories in your <mark class=\"label info\">site root directory</mark>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo-site</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br><span class=\"line\">_config.yml  node_modules  package-lock.json  package.json  scaffolds  <span class=\"built_in\">source</span>  themes</span><br></pre></td></tr></table></figure>\n\n<div class=\"note info\"><p>If you are new to Node.js or Hexo, you can also modify the source code of an existing Hexo website instead of creating a new one, to help you understand how Hexo works. In fact, the document you are reading is generated by Hexo with NexT, and you can install it with the following command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/next-theme/theme-next-docs</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> theme-next-docs</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n</div>\n\n<p>Make sure that you have installed Hexo and created a site with it successfully, because the following documents require you to operate in the <mark class=\"label info\">site root directory</mark>.</p>\n<h3 id=\"NexT-Installation\"><a href=\"#NexT-Installation\" class=\"headerlink\" title=\"NexT Installation\"></a>NexT Installation</h3><p>The detailed steps to install or upgrade the theme are as follows.</p>\n<h4 id=\"Downloading-NexT\"><a href=\"#Downloading-NexT\" class=\"headerlink\" title=\"Downloading NexT\"></a>Downloading NexT</h4><p>It&#39;s easy to install Hexo theme: you can choose to install the theme through npm, or download the source code of the theme in the <code>themes</code> directory under <mark class=\"label info\">site root directory</mark>.</p>\n<div class=\"tabs\" id=\"downloading-next\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#downloading-next-1\">Using <code>npm</code></a></li><li class=\"tab\"><a href=\"#downloading-next-2\">Using <code>git</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"downloading-next-1\"><p>If you&#39;re using Hexo 5.0 or later, the simplest way to install is through npm.</p>\n<p>Open your Terminal, change to Hexo <mark class=\"label info\">site root directory</mark> and install NexT theme:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo-site</span><br><span class=\"line\">$ npm install hexo-theme-next</span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"downloading-next-2\"><p>If you know about <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS8=\">Git<i class=\"fa fa-external-link-alt\"></i></span>, you can clone the whole repository and update it in any time with <code>git pull</code> command instead of downloading archive manually.</p>\n<p>Open your terminal, change to Hexo <mark class=\"label info\">site root directory</mark> and clone the latest master branch of NexT theme:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo-site</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></div></div></div>\n\n<div class=\"note primary\"><p>You can also read <a href=\"/docs/getting-started/installation.html\">detailed installation instructions</a> if you want any other installation variant.</p>\n</div>\n\n<h4 id=\"Upgrading-NexT\"><a href=\"#Upgrading-NexT\" class=\"headerlink\" title=\"Upgrading NexT\"></a>Upgrading NexT</h4><p>A new version of NexT will be released every month. Please read the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0L3JlbGVhc2Vz\">release notes<i class=\"fa fa-external-link-alt\"></i></span> before updating the theme. You can update NexT by the following command.</p>\n<div class=\"tabs\" id=\"upgrading-next\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#upgrading-next-1\">Using <code>npm</code></a></li><li class=\"tab\"><a href=\"#upgrading-next-2\">Using <code>git</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"upgrading-next-1\"><p>Install the latest version through npm:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo-site</span><br><span class=\"line\">$ npm install hexo-theme-next@latest</span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"upgrading-next-2\"><p>Or update to the latest master branch:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo-site</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> themes/next</span><br><span class=\"line\">$ git pull origin master</span><br></pre></td></tr></table></figure>\n\n<p>When running <code>git pull</code>, you can bypass merge conflicts (error message like <strong>«Commit your changes or stash them before you can merge»</strong>) by using the <code>Commit</code>, <code>Stash</code> or <code>Reset</code> commands for local changes. See <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzE1NzQ1NDI0LzU4NjE0OTU=\">here<i class=\"fa fa-external-link-alt\"></i></span> how to do it.</p></div></div></div>\n\n<div class=\"note warning\"><p>If you are still using NexT version 5 or 7, you can read <a href=\"/docs/getting-started/upgrade.html\">instructions for upgrading from legacy version</a>.</p>\n</div>\n\n<h3 id=\"Configuration-Files\"><a href=\"#Configuration-Files\" class=\"headerlink\" title=\"Configuration Files\"></a>Configuration Files</h3><p>After the installation of Hexo and NexT, you may found that there are two configuration files using by Hexo and both called <code>_config.yml</code>:</p>\n<ol>\n<li>The first one is under <mark class=\"label info\">site root directory</mark>, which contains Hexo&#39;s config.</li>\n<li>The second one is under <mark class=\"label primary\">theme root directory</mark> (e.g. <code>themes/next/_config.yml</code> or <code>node_modules/hexo-theme-next/_config.yml</code>), which is provided by NexT and contains theme&#39;s config.</li>\n</ol>\n<p>Let&#39;s call the first one – <mark class=\"label info\">Hexo config file</mark>, and the second one – <mark class=\"label primary\">NexT config file</mark>.</p>\n<div class=\"note warning\"><p>However, we do not recommend directly modifying the <mark class=\"label primary\">NexT config file</mark>. It is quite often running into conflict status when updating NexT theme via <code>git pull</code>, or need to merge configurations manually when upgrading to new releases. For the theme installed through npm, it is also difficult to modify the <mark class=\"label primary\">NexT config file</mark> in <code>node_modules</code>.</p>\n<p>In order to resolve this issue, we recommend using the <a href=\"/docs/getting-started/configuration.html\">Alternate Theme Config</a> feature to configure theme NexT.</p>\n</div>\n\n<h3 id=\"Hexo-Configuration\"><a href=\"#Hexo-Configuration\" class=\"headerlink\" title=\"Hexo Configuration\"></a>Hexo Configuration</h3><p>The following settings in <mark class=\"label info\">Hexo config file</mark> are very helpful for optimizing your website.</p>\n<h4 id=\"Configuring-Author\"><a href=\"#Configuring-Author\" class=\"headerlink\" title=\"Configuring Author\"></a>Configuring Author</h4><p>Edit <mark class=\"label info\">Hexo config file</mark> and set the value of <code>author</code> to your nickname.</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\"><span class=\"attr\">author:</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Configuring-Description\"><a href=\"#Configuring-Description\" class=\"headerlink\" title=\"Configuring Description\"></a>Configuring Description</h4><p>Edit <mark class=\"label info\">Hexo config file</mark> and set the value of <code>description</code> to your description, which can be a sentence you like.</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\"><span class=\"attr\">description:</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Enabling-NexT\"><a href=\"#Enabling-NexT\" class=\"headerlink\" title=\"Enabling NexT\"></a>Enabling NexT</h4><p>Like all Hexo themes, after you download it, open <mark class=\"label info\">Hexo config file</mark>, find <code>theme</code> option, and change its value to <code>next</code> (or another theme directory name).</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">next</span></span><br></pre></td></tr></table></figure>\n\n<p>Now you have installed NexT theme and enabled it. The following steps will help you verify whether NexT is enabled correctly.</p>\n<h3 id=\"Checking-NexT\"><a href=\"#Checking-NexT\" class=\"headerlink\" title=\"Checking NexT\"></a>Checking NexT</h3><p>It&#39;s recommended to use <code>hexo clean</code> to clean Hexo&#39;s cache first.<br>Then start Hexo local server with debug parameter (by adding <code>--debug</code>), the whole command is <code>hexo s --debug</code>. You can see the output while running, and if you find problem, you can use the output to help others locate error better. When it prints:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>\n\n<p>Now you can open <code>http://localhost:4000</code> in your browser, and check whether the site works correctly.</p>\n<div class=\"note success\"><p>If you find your site looks like this picture, you have installed it correctly. That&#39;s default NexT scheme – Muse.<br><img src=\"/images/next-default-scheme.png\" alt=\"Default Scheme – Muse\" loading=\"lazy\"></p>\n</div>\n\n<p>After that we can <a href=\"/docs/getting-started/deployment.html\">configure deployment</a>.</p>\n<p>If everything is OK, in next steps we will change some settings including <a href=\"/docs/theme-settings/\">personalization</a> and <a href=\"/docs/third-party-services/\">third-party services integration</a>.</p>\n"},{"title":"Installation","url":"/docs/getting-started/installation.html","content":"<h3 id=\"Select-Version\"><a href=\"#Select-Version\" class=\"headerlink\" title=\"Select Version\"></a>Select Version</h3><p>A new version of NexT will be released every month. You can choose to install the latest version or choose a stable old version.</p>\n<div class=\"tabs\" id=\"download-next\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#download-next-1\"><mark class=\"label success\">Latest Master Branch</mark></a></li><li class=\"tab\"><a href=\"#download-next-2\">Latest Release Version</a></li><li class=\"tab\"><a href=\"#download-next-3\">Specific Release Version</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"download-next-1\"><p><strong>Option 1: Download the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0L2FyY2hpdmUvbWFzdGVyLnppcA==\">Latest Master Branch<i class=\"fa fa-external-link-alt\"></i></span></strong></p>\n<p>May be <strong>unstable</strong>, but includes <strong>latest features</strong>. At most cases useful and recommended for advanced users and for developers.</p></div><div class=\"tab-pane\" id=\"download-next-2\"><p><strong>Option 2: Download the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0L3JlbGVhc2VzL2xhdGVzdA==\">Latest Release Version<i class=\"fa fa-external-link-alt\"></i></span></strong></p>\n<p>At most cases <strong>stable</strong>. Recommended for beginners.</p></div><div class=\"tab-pane\" id=\"download-next-3\"><p><strong>Option 3: Download the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0L3JlbGVhc2Vz\">Specific Release Version<i class=\"fa fa-external-link-alt\"></i></span></strong></p>\n<p>In rare cases useful, but not recommended.<br>You must define version. Let&#39;s take <code>v8.0.0</code> as an example. Replace it with any version from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0L3RhZ3M=\">tags list<i class=\"fa fa-external-link-alt\"></i></span>.</p></div></div></div>\n\n<h3 id=\"Get-NexT\"><a href=\"#Get-NexT\" class=\"headerlink\" title=\"Get NexT\"></a>Get NexT</h3><p>There are <strong>2 recommended ways</strong> to download NexT: <code>npm</code> and <code>git</code>. You need to <strong>choose only one</strong> of them. Other installation methods, such as downloading and decompressing the theme source code in zip format from GitHub, are no longer recommended, because the installed theme is difficult to manage and upgrade.</p>\n<p>Change dir to <mark class=\"label info\">site root directory</mark> in the command line first, and then continue with the following steps.</p>\n<h4 id=\"Using-npm\"><a href=\"#Using-npm\" class=\"headerlink\" title=\"Using npm\"></a>Using <code>npm</code></h4><p>If you&#39;re using Hexo 5.0 or later, you can install <code>hexo-theme-next</code> through npm.</p>\n<div class=\"tabs\" id=\"using-npm\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#using-npm-1\">Latest Release Version</a></li><li class=\"tab\"><a href=\"#using-npm-2\">Specific Release Version</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"using-npm-1\"><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-theme-next@latest</span><br></pre></td></tr></table></figure>\n\n<p>This variant will install the <strong>latest release version</strong>.</p></div><div class=\"tab-pane\" id=\"using-npm-2\"><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-theme-next@8.0.0</span><br></pre></td></tr></table></figure>\n\n<p>This variant will install the <strong>specific release version</strong>.</p></div></div></div>\n\n<h4 id=\"Using-git\"><a href=\"#Using-git\" class=\"headerlink\" title=\"Using git\"></a>Using <code>git</code></h4><div class=\"tabs\" id=\"using-git\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#using-git-1\">Latest Master Branch</a></li><li class=\"tab\"><a href=\"#using-git-2\">Specific Release Version</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"using-git-1\"><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n\n<p>Or download via mirror on GitLab:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://gitlab.com/hexo-theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n\n<p>This variant will install the <strong>whole repository</strong> (with <code>.git</code> directory inside).<br>And in any time you can update current version with git (instructions below) and switch to any tagged release or on latest master or any other branch.</p>\n<p>Get tags list:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> themes/next</span><br><span class=\"line\">$ git tag -l</span><br><span class=\"line\">...</span><br><span class=\"line\">v8.0.0-rc.1</span><br><span class=\"line\">v8.0.0-rc.2</span><br><span class=\"line\">v8.0.0-rc.3</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>For example, you want to switch on <code>v8.0.0</code> tagged release version. Input the following command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout tags/v8.0.0</span><br><span class=\"line\">Note: switching to <span class=\"string\">&#x27;tags/v8.0.0&#x27;</span>.</span><br><span class=\"line\">...</span><br><span class=\"line\">HEAD is now at f27e45b Release v8.0.0</span><br></pre></td></tr></table></figure>\n\n<p>If you want to switch on latest release version without defining tag (optional)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout $(git describe --tags $(git rev-list --tags --max-count=1))</span><br></pre></td></tr></table></figure>\n\n<p>And if you want to switch back on master branch, input this command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git checkout master</span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"using-git-2\"><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> --branch v8.0.0 https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n\n<p>Or download via mirror on GitLab:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> --branch v8.0.0 https://gitlab.com/hexo-theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n\n<p>This variant will install the <strong>specific release version</strong> (with <code>.git</code> directory inside).<br>And in any time you can switch to any tagged release, but with limit to specific version.</p></div></div></div>\n\n<p>And if you see any error message during update (something like <strong>«Commit your changes or stash them before you can merge»</strong>), recommended to learn <a href=\"/docs/getting-started/configuration.html\">Alternate Theme Config</a> feature. Howbeit, you can bypass update errors by <code>Commit</code>, <code>Stash</code> or <code>Discard</code> local changes. See <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzE1NzQ1NDI0LzU4NjE0OTU=\">here<i class=\"fa fa-external-link-alt\"></i></span> how to do it.</p>\n<h3 id=\"Set-It-Up\"><a href=\"#Set-It-Up\" class=\"headerlink\" title=\"Set It Up\"></a>Set It Up</h3><p>When NexT download will complete, we must go back to previous guide and follow <a href=\"/docs/getting-started/#Enabling-NexT\">Enabling NexT</a> instructions.</p>\n"},{"title":"Upgrade","url":"/docs/getting-started/upgrade.html","content":"<h3 id=\"NexT-Compatibility-with-Hexo-Version\"><a href=\"#NexT-Compatibility-with-Hexo-Version\" class=\"headerlink\" title=\"NexT Compatibility with Hexo Version\"></a>NexT Compatibility with Hexo Version</h3><table>\n<thead>\n<tr>\n<th>Version</th>\n<th>Hexo 3.0.0-beta.4 or earlier</th>\n<th>Hexo 3.0.0-rc.1 ~ 3.9</th>\n<th>Hexo 4.0 ~ 4.2.1</th>\n<th>Hexo 5.0 or later</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>NexT v0.4.5.1 or earlier</td>\n<td>✅</td>\n<td>✅</td>\n<td>❌ Icon (2)</td>\n<td>❌ Icon (2)</td>\n</tr>\n<tr>\n<td>NexT v0.4.5.2 ~ v7.4.1</td>\n<td>⚠️ Data Files (1)</td>\n<td>✅</td>\n<td>❌ Icon (2)</td>\n<td>❌ Icon (2)</td>\n</tr>\n<tr>\n<td>NexT v7.4.2 ~ v8.1.0</td>\n<td>⚠️ Data Files (1)</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>NexT v8.2.0 or later</td>\n<td>⚠️ Nunjucks (3)</td>\n<td>⚠️ Nunjucks (3)</td>\n<td>⚠️ Nunjucks (3)</td>\n<td>✅</td>\n</tr>\n</tbody></table>\n<p>(1): Hexo 3.0.0-beta.4 or earlier does not support Data Files.<br>(2): Icons may not be displayed normally.<br>(3): Nunjucks renderer plugin required.</p>\n<h3 id=\"NexT-Repositories\"><a href=\"#NexT-Repositories\" class=\"headerlink\" title=\"NexT Repositories\"></a>NexT Repositories</h3><p>Due to historical reasons, NexT has three different repositories.</p>\n<table>\n<thead>\n<tr>\n<th>Years</th>\n<th>Version</th>\n<th>Repository</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2014 ~ 2017</td>\n<td>v5</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2lpc3NuYW4vaGV4by10aGVtZS1uZXh0\">https://github.com/iissnan/hexo-theme-next<i class=\"fa fa-external-link-alt\"></i></span></td>\n</tr>\n<tr>\n<td>2018 ~ 2019</td>\n<td>v6 ~ v7</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0\">https://github.com/theme-next/hexo-theme-next<i class=\"fa fa-external-link-alt\"></i></span></td>\n</tr>\n<tr>\n<td>2020</td>\n<td>v8</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0\">https://github.com/next-theme/hexo-theme-next<i class=\"fa fa-external-link-alt\"></i></span></td>\n</tr>\n</tbody></table>\n<h3 id=\"Upgrade-from-Legacy-Version\"><a href=\"#Upgrade-from-Legacy-Version\" class=\"headerlink\" title=\"Upgrade from Legacy Version\"></a>Upgrade from Legacy Version</h3><p>It&#39;s recommended to upgrade NexT to version 8 to get the latest features and supports in the new <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0\">Theme-Next<i class=\"fa fa-external-link-alt\"></i></span> repository.</p>\n<h4 id=\"Breaking-Changes\"><a href=\"#Breaking-Changes\" class=\"headerlink\" title=\"Breaking Changes\"></a>Breaking Changes</h4><p>There are some breaking changes that need attention when upgrading across versions.</p>\n<ol>\n<li><p>Update language configuration (for Simplified Chinese)<br> Since v6.0.3, <code>zh-Hans</code> has been renamed to <code>zh-CN</code>: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L3JlbGVhc2VzL3RhZy92Ni4wLjM=\">https://github.com/theme-next/hexo-theme-next/releases/tag/v6.0.3<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p> Users upgrading to v6.0.3 and later need to explicitly modify the <code>language</code> configuration in <mark class=\"label info\">Hexo config file</mark>, otherwise the language display is incorrect.</p>\n</li>\n<li><p>Since v8.0.0, all libraries under the <code>next/source/lib</code> directory was moved out to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvcGx1Z2lucw==\">@next-theme&#x2F;plugins<i class=\"fa fa-external-link-alt\"></i></span>. Please see this article for the new 3rd-party libraries installation method: <a href=\"/docs/third-party-services/#Adding-Plugins\">Adding Plugins</a>.</p>\n</li>\n</ol>\n<h4 id=\"Upgrade\"><a href=\"#Upgrade\" class=\"headerlink\" title=\"Upgrade\"></a>Upgrade</h4><p>So, NexT suggest to upgrade from version 5 or 7 to version 8 in this way:</p>\n<ol>\n<li>You need to do some copies of old NexT files:<br> 1.1. <code>_config.yml</code> or <code>next.yml</code> (if you used <a href=\"/docs/getting-started/configuration.html\">Alternate Theme Config</a>).<br> 1.2. Custom CSS files placed in <code>next/source/css/_custom/*</code> and <code>next/source/css/_variables/*</code> directories.<br> 1.3. Custom layout files placed in <code>next/layout/_custom/*</code>.<br> 1.4. Any another possible custom additions which can be found by compare tools between repositories.</li>\n<li>Then rename the old NexT folder, for example, rename <code>next</code> to <code>next-old</code>.</li>\n<li>Install the new version according to the method provided in this article: <a href=\"/docs/getting-started/installation.html\">installation instructions</a>. Run <code>hexo clean</code> and <code>hexo s</code> to check whether the site works correctly.</li>\n<li>Update Hexo and Hexo plugin<br> If after completing the above steps, an error occurs when executing <code>hexo s</code> or <code>hexo g</code>, it means that there may be a conflict between the old version of Hexo &#x2F; Hexo plugin and the new version of the theme NexT. We recommend upgrading Hexo and Hexo plugins to the latest version. You can run <code>npm outdated</code> to see all the upgradeable plugins.</li>\n<li>If you see any bugs or you simply does not like this version, you can switch back to the old version at any time.</li>\n</ol>\n"},{"title":"Front Matter","url":"/docs/advanced-settings/front-matter.html","content":"<blockquote>\n<p>Front-matter is a block of YAML or JSON at the beginning of the file that is used to configure settings for your writings. Front-matter is terminated by three dashes when written in YAML or three semicolons when written in JSON.<br>— from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZnJvbnQtbWF0dGVy\">Hexo site<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n</blockquote>\n<p><strong>YAML</strong></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hello</span> <span class=\"string\">World</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"string\">/7/13</span> <span class=\"number\">20</span><span class=\"string\">:46:25</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>JSON</strong></p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;title&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Hello World&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;date&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;2013/7/13 20:46:25&quot;</span></span><br><span class=\"line\">;;;</span><br></pre></td></tr></table></figure>\n\n<p>Next extends and provide more variables. It allows users to configure a single page.</p>\n<h3 id=\"Settings-amp-Their-Default-Values\"><a href=\"#Settings-amp-Their-Default-Values\" class=\"headerlink\" title=\"Settings &amp; Their Default Values\"></a>Settings &amp; Their Default Values</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Type</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>author</code></td>\n<td><code>string</code></td>\n<td>Author name for post copyright</td>\n<td><code>author</code> in Hexo <code>_config.yml</code></td>\n</tr>\n<tr>\n<td><code>post_link</code></td>\n<td><code>string</code></td>\n<td>Post link</td>\n<td>None</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td><code>string</code></td>\n<td>Docs <a href=\"/docs/theme-settings/posts.html#Preamble-Text\">here</a></td>\n<td>None</td>\n</tr>\n<tr>\n<td><code>direction</code></td>\n<td><code>string</code></td>\n<td>Available value: <code>rtl</code></td>\n<td>None</td>\n</tr>\n<tr>\n<td><code>header</code></td>\n<td><code>boolean</code></td>\n<td>Whether to display the post header in index page</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>mathjax</code></td>\n<td><code>boolean</code></td>\n<td>MathJax support</td>\n<td><code>math.every_page</code> in <code>_config.yml</code></td>\n</tr>\n<tr>\n<td><code>sidebar</code></td>\n<td><code>boolean</code></td>\n<td>Whether the sidebar will be shown</td>\n<td>Depends on <code>sidebar.display</code> in <code>_config.yml</code></td>\n</tr>\n<tr>\n<td><code>copyright</code></td>\n<td><code>boolean</code></td>\n<td>Whether to display copyright notices below the post with <code>theme.creative_commons.license</code> and <code>theme.creative_commons.post</code> enabled</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>sticky</code></td>\n<td><code>number</code></td>\n<td>Pin the post to the top of the index page. <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLWdlbmVyYXRvci1pbmRleA==\">hexo-generator-index<i class=\"fa fa-external-link-alt\"></i></span> plugin required</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>quicklink</code></td>\n<td><code>object</code> (1)</td>\n<td>Quicklink support</td>\n<td>From <code>_config.yml</code></td>\n</tr>\n<tr>\n<td><code>reward_settings</code></td>\n<td><code>object</code> (1)</td>\n<td>Reward settings</td>\n<td>From <code>_config.yml</code></td>\n</tr>\n<tr>\n<td><code>toc</code></td>\n<td><code>object</code> (1)</td>\n<td>Table of Contents in the sidebar</td>\n<td>From <code>_config.yml</code></td>\n</tr>\n</tbody></table>\n<p>(1): They have the same structure as the options in <mark class=\"label primary\">NexT config file</mark>.</p>\n<p><strong>Example</strong></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">toc:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">number:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">max_depth:</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">reward_settings:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">comment:</span> <span class=\"string\">Buy</span> <span class=\"string\">me</span> <span class=\"string\">a</span> <span class=\"string\">coffee</span></span><br><span class=\"line\"><span class=\"attr\">quicklink:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">delay:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">timeout:</span> <span class=\"number\">3000</span></span><br><span class=\"line\">  <span class=\"attr\">priority:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Undocumented-Front-matter-Variables\"><a href=\"#Undocumented-Front-matter-Variables\" class=\"headerlink\" title=\"Undocumented Front-matter Variables\"></a>Undocumented Front-matter Variables</h3><p>The following variables are not mentioned in the Hexo documentation, but are required by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLXRoZW1lLXVuaXQtdGVzdA==\">hexo-theme-unit-test<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Type</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>link</code></td>\n<td><code>string</code></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLXRoZW1lLXVuaXQtdGVzdC9ibG9iL21hc3Rlci9zb3VyY2UvX3Bvc3RzL2xpbmstcG9zdC5tZA==\">link-post<i class=\"fa fa-external-link-alt\"></i></span></td>\n</tr>\n<tr>\n<td><code>photos</code></td>\n<td><code>array</code></td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLXRoZW1lLXVuaXQtdGVzdC9ibG9iL21hc3Rlci9zb3VyY2UvX3Bvc3RzL2dhbGxlcnktcG9zdC5tZA==\">gallery-post<i class=\"fa fa-external-link-alt\"></i></span></td>\n</tr>\n</tbody></table>\n"},{"title":"Custom Files","url":"/docs/advanced-settings/custom-files.html","content":"<h3 id=\"Custom-File-Support\"><a href=\"#Custom-File-Support\" class=\"headerlink\" title=\"Custom File Support\"></a>Custom File Support</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L3B1bGwvODY4\">Pull Request #868<i class=\"fa fa-external-link-alt\"></i></span> has adjusted the way of customizing the layout or style, canceling the custom files (such as <code>_custom/custom.styl</code>) in the original theme directory, and only retaining the way of specifying the custom file in the <mark class=\"label primary\">NexT config file</mark>.</p>\n<p>It is a good practice to separate the custom files from the theme files, so that you can add custom content without modifying the original source code of the theme, and avoid conflicts due to <code>git merge</code>.</p>\n<p>As with <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZGF0YS1maWxlcw==\">Data Files<i class=\"fa fa-external-link-alt\"></i></span>, you can place all custom layouts or styles in a specific location (for example: <code>hexo/source/_data</code>). Add the custom file to <code>hexo/source/_data</code> and uncomment the content under the <code>custom_file_path</code> section in the <mark class=\"label primary\">NexT config file</mark>.</p>\n<div class=\"note warning\"><p>The file name and path must be the same in <code>custom_file_path</code>.</p>\n</div>\n\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_file_path:</span></span><br><span class=\"line\">  <span class=\"comment\">#head: source/_data/head.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#header: source/_data/header.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#sidebar: source/_data/sidebar.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#postMeta: source/_data/post-meta.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#postBodyEnd: source/_data/post-body-end.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#footer: source/_data/footer.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#bodyEnd: source/_data/body-end.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#variable: source/_data/variables.styl</span></span><br><span class=\"line\">  <span class=\"comment\">#mixin: source/_data/mixins.styl</span></span><br><span class=\"line\">  <span class=\"comment\">#style: source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>\n\n<p>In addition to <code>custom_file_path</code>, we also provide a more flexible way to customize, you can read the <a href=\"/docs/advanced-settings/injects.html\">Theme Inject</a> in documentation.</p>\n<h3 id=\"Examples-of-Modifying-Layout\"><a href=\"#Examples-of-Modifying-Layout\" class=\"headerlink\" title=\"Examples of Modifying Layout\"></a>Examples of Modifying Layout</h3><h4 id=\"Live2d-Widget\"><a href=\"#Live2d-Widget\" class=\"headerlink\" title=\"Live2d Widget\"></a>Live2d Widget</h4><p>Create and edit <code>source/_data/head.njk</code> in <mark class=\"label info\">site root directory</mark> and add the following content:</p>\n<figure class=\"highlight html\"><figcaption><span>hexo/source/_data/head.njk</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://fastly.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Then uncomment <code>head</code> under the <code>custom_file_path</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_file_path:</span></span><br><span class=\"line\">  <span class=\"attr\">head:</span> <span class=\"string\">source/_data/head.njk</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Netlify-Logo-in-Sidebar\"><a href=\"#Netlify-Logo-in-Sidebar\" class=\"headerlink\" title=\"Netlify Logo in Sidebar\"></a>Netlify Logo in Sidebar</h4><p>Create and edit <code>source/_data/sidebar.njk</code> in <mark class=\"label info\">site root directory</mark> and add the following content:</p>\n<figure class=\"highlight html\"><figcaption><span>hexo/source/_data/sidebar.njk</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cc-license animated&quot;</span> <span class=\"attr\">itemprop</span>=<span class=\"string\">&quot;sponsor&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://www.netlify.com&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;cc-opacity&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;Deploy with Netlify → https://www.netlify.com&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;80&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://www.netlify.com/img/global/badges/netlify-dark.svg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;Netlify&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Then uncomment <code>sidebar</code> under the <code>custom_file_path</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_file_path:</span></span><br><span class=\"line\">  <span class=\"attr\">sidebar:</span> <span class=\"string\">source/_data/sidebar.njk</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Examples-of-Modifying-Style\"><a href=\"#Examples-of-Modifying-Style\" class=\"headerlink\" title=\"Examples of Modifying Style\"></a>Examples of Modifying Style</h3><h4 id=\"Tagcloud-Color\"><a href=\"#Tagcloud-Color\" class=\"headerlink\" title=\"Tagcloud Color\"></a>Tagcloud Color</h4><p>Create and edit <code>source/_data/variables.styl</code> in <mark class=\"label info\">site root directory</mark> and add variables:</p>\n<figure class=\"highlight css\"><figcaption><span>hexo/source/_data/variables.styl</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">$tag-cloud-start      = <span class=\"selector-id\">#aaa</span>;</span><br><span class=\"line\">$tag-cloud-end        = <span class=\"selector-id\">#111</span>;</span><br><span class=\"line\">$tag-cloud-start-dark = <span class=\"selector-id\">#555</span>;</span><br><span class=\"line\">$tag-cloud-end-dark   = <span class=\"selector-id\">#eee</span>;</span><br></pre></td></tr></table></figure>\n\n<p>Then uncomment <code>variable</code> under the <code>custom_file_path</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_file_path:</span></span><br><span class=\"line\">  <span class=\"attr\">variable:</span> <span class=\"string\">source/_data/variables.styl</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"How-to-Change-Content-Width\"><a href=\"#How-to-Change-Content-Width\" class=\"headerlink\" title=\"How to Change Content Width\"></a>How to Change Content Width</h4><p>By default, the content width of NexT is controlled by the following variables:</p>\n<ul>\n<li><code>$content-desktop</code> → when screen width &lt; 1200px.</li>\n<li><code>$content-desktop-large</code> → when screen width &gt;&#x3D; 1200px.</li>\n<li><code>$content-desktop-largest</code> → when screen width &gt;&#x3D; 1600px.</li>\n<li>In mobile &#x2F; tablet devices it will use responsive width.</li>\n</ul>\n<p>You can override the default content width by editing <code>source/_data/variables.styl</code> in <mark class=\"label info\">site root directory</mark>.</p>\n<div class=\"tabs\" id=\"change-content-width\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#change-content-width-1\">Muse / Mist schemes</a></li><li class=\"tab\"><a href=\"#change-content-width-2\">Pisces / Gemini schemes</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"change-content-width-1\"><p>Default variables for both Muse and Mist schemes are defined as:</p>\n<figure class=\"highlight styl\"><figcaption><span>next/source/css/_variables/base.styl</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$content</span>-desktop         = <span class=\"number\">700px</span></span><br><span class=\"line\"><span class=\"variable\">$content</span>-desktop-large   = <span class=\"number\">800px</span></span><br><span class=\"line\"><span class=\"variable\">$content</span>-desktop-largest = <span class=\"number\">900px</span></span><br></pre></td></tr></table></figure>\n\n<p>For example, you may override these variables with percentage value to increase content width. Create and edit <code>source/_data/variables.styl</code> in <mark class=\"label info\">site root directory</mark> and add variables:</p>\n<figure class=\"highlight styl\"><figcaption><span>hexo/source/_data/variables.styl</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$content</span>-desktop         = <span class=\"number\">90%</span></span><br><span class=\"line\"><span class=\"variable\">$content</span>-desktop-large   = <span class=\"number\">90%</span></span><br><span class=\"line\"><span class=\"variable\">$content</span>-desktop-largest = <span class=\"number\">90%</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note warning\"><p>If values will in percents, during opening sidebar will dynamically decrease content width to defined by you percent.<br>But in standard behaviour, sidebar must displace content from yourself.<br>To around it, you can specify content width in <code>em</code>:</p>\n<figure class=\"highlight styl\"><figcaption><span>hexo/source/_data/variables.styl</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$content</span>-desktop         = <span class=\"number\">50em</span></span><br><span class=\"line\"><span class=\"variable\">$content</span>-desktop-large   = <span class=\"number\">55em</span></span><br><span class=\"line\"><span class=\"variable\">$content</span>-desktop-largest = <span class=\"number\">60em</span></span><br></pre></td></tr></table></figure>\n</div></div><div class=\"tab-pane\" id=\"change-content-width-2\"><p>Default variables for Pisces (and Gemini) scheme are defined as:</p>\n<figure class=\"highlight styl\"><figcaption><span>next/source/css/_variables/Pisces.styl</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$content</span>-desktop         = <span class=\"string\">&#x27;calc(100% - %s)&#x27;</span> % <span class=\"built_in\">unit</span>(<span class=\"variable\">$content</span>-desktop-<span class=\"attribute\">padding</span> / <span class=\"number\">2</span>, <span class=\"string\">&#x27;px&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable\">$content</span>-desktop-large   = <span class=\"number\">1160px</span></span><br><span class=\"line\"><span class=\"variable\">$content</span>-desktop-largest = <span class=\"number\">73%</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note warning\"><p><code>$content-desktop</code> value in this schemes is auto-responsive by default. It can be changed to any value too, but for better content visibility recommended to stay it as is.</p>\n</div>\n\n<p>In this schemes content width was defined on maximum and already balanced: if desktop width will be wider – content width will more narrowed for easier reading. But if you want to make more narrow content width in wider desktops, here is example. Create and edit <code>source/_data/variables.styl</code> in <mark class=\"label info\">site root directory</mark> and add variables:</p>\n<figure class=\"highlight styl\"><figcaption><span>hexo/source/_data/variables.styl</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$content</span>-desktop-large   = <span class=\"number\">65em</span></span><br><span class=\"line\"><span class=\"variable\">$content</span>-desktop-largest = <span class=\"number\">65%</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note info\"><p>In fact, Gemini scheme is just fork of Pisces scheme with some style improvements.<br>Therefore, almost all part of variables from Pisces scheme are imported to Gemini scheme too.<br>So, the changes of these variables or styles will be applied to both Pisces and Gemini schemes.</p>\n</div></div></div></div>\n\n<p>Then uncomment <code>variable</code> under the <code>custom_file_path</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_file_path:</span></span><br><span class=\"line\">  <span class=\"attr\">variable:</span> <span class=\"string\">source/_data/variables.styl</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Hide-Sidebar-on-Mobile\"><a href=\"#Hide-Sidebar-on-Mobile\" class=\"headerlink\" title=\"Hide Sidebar on Mobile\"></a>Hide Sidebar on Mobile</h4><p>Create and edit <code>source/_data/styles.styl</code> in <mark class=\"label info\">site root directory</mark> and add styles:</p>\n<figure class=\"highlight css\"><figcaption><span>hexo/source/_data/styles.styl</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">+tablet-mobile() &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.sidebar-toggle</span>, <span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Then uncomment <code>style</code> under the <code>custom_file_path</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_file_path:</span></span><br><span class=\"line\">  <span class=\"attr\">style:</span> <span class=\"string\">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Hide-quot-Keep-on-posting-quot-in-Archive-Page\"><a href=\"#Hide-quot-Keep-on-posting-quot-in-Archive-Page\" class=\"headerlink\" title=\"Hide &quot;Keep on posting&quot; in Archive Page\"></a>Hide &quot;Keep on posting&quot; in Archive Page</h4><p>Create and edit <code>source/_data/styles.styl</code> in <mark class=\"label info\">site root directory</mark> and add styles:</p>\n<figure class=\"highlight css\"><figcaption><span>hexo/source/_data/styles.styl</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.archive</span> <span class=\"selector-class\">.collection-title</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: none <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Then uncomment <code>style</code> under the <code>custom_file_path</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_file_path:</span></span><br><span class=\"line\">  <span class=\"attr\">style:</span> <span class=\"string\">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Injects","url":"/docs/advanced-settings/injects.html","content":"<h3 id=\"Injects\"><a href=\"#Injects\" class=\"headerlink\" title=\"Injects\"></a>Injects</h3><p>We extended the Hexo filter and added <code>theme_inject</code>, so user can add the desired custom content to any injection point.</p>\n<h4 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h4><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">filter</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&#x27;theme_inject&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">injects</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>A injects argument will get passed into the function, so we can use it add custom code in <code>injectPoint</code> as following.</p>\n<p>For inject view:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// The name of same `injectPoint` suggest be unique. If same, it will override low priority configurations.</span></span><br><span class=\"line\"><span class=\"comment\">// `locals` and `options` is the same as partial https://hexo.io/docs/helpers#partial.</span></span><br><span class=\"line\"><span class=\"comment\">// `order` defines the order of injection, which by default depends on the priority of injection.</span></span><br><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">filter</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&#x27;theme_inject&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">injects</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// it will put code from this filePath into injectPoint.</span></span><br><span class=\"line\">  injects.[injectPoint].<span class=\"title function_\">file</span>(name, filePath, [locals, options, order]);</span><br><span class=\"line\">  <span class=\"comment\">// it will put raw string as code into injectPoint.</span></span><br><span class=\"line\">  injects.[injectPoint].<span class=\"title function_\">raw</span>(name, raw, [locals, options, order]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<div class=\"note warning\"><p>You have to note <code>filePath</code>, it must be absolute path or relative to <code>hexo_dir</code>.</p>\n</div>\n\n<p>For inject style:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">filter</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&#x27;theme_inject&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">injects</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// it will put styleFile into injectPoint.</span></span><br><span class=\"line\">  injects.[injectPoint].<span class=\"title function_\">push</span>(styleFile);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>These are many <code>injectPoint</code>, defined in <a href=\"https://github.com/next-theme/hexo-theme-next/blob/master/scripts/events/lib/utils.js#L60\"><code>utils.js</code></a></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">views</span>: [<span class=\"string\">&#x27;head&#x27;</span>, <span class=\"string\">&#x27;header&#x27;</span>, <span class=\"string\">&#x27;sidebar&#x27;</span>, <span class=\"string\">&#x27;postMeta&#x27;</span>, <span class=\"string\">&#x27;postBodyEnd&#x27;</span>, ..., <span class=\"string\">&#x27;footer&#x27;</span>, <span class=\"string\">&#x27;bodyEnd&#x27;</span>],</span><br><span class=\"line\">  <span class=\"attr\">styles</span>: [<span class=\"string\">&#x27;variable&#x27;</span>, <span class=\"string\">&#x27;mixin&#x27;</span>, <span class=\"string\">&#x27;style&#x27;</span>]</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><code>custom_file_path</code> also uses this API, see <a href=\"https://github.com/next-theme/hexo-theme-next/blob/master/scripts/filters/default-injects.js\"><code>default-injects.js</code></a>. It will consume <code>custom</code> name in view inject points. So if you use <code>custom_file_path</code>, please not use <code>custom</code>.</p>\n<h4 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h4><p><strong>One:</strong> load a custom script. We can add it in <code>bodyEnd</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">filter</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&#x27;theme_inject&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">injects</span>) &#123;</span><br><span class=\"line\">  injects.<span class=\"property\">bodyEnd</span>.<span class=\"title function_\">raw</span>(<span class=\"string\">&#x27;load-custom-js&#x27;</span>, <span class=\"string\">&#x27;&lt;script src=&quot;js-path-or-cdn.js&quot;&gt;&lt;/script&gt;&#x27;</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>Two:</strong> add a custom <code>my-favourite-food.njk</code> to sidebar.</p>\n<p>Step1: you should create <code>my-favourite-food.njk</code> in any path(e.g. <code>source/_data/</code>) as below. You can get variable from <code>hexo</code> or <code>local</code> defined in filter.</p>\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">for</span></span> food <span class=\"keyword\">in</span> foods %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123; food &#125;&#125;</span><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endfor</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>Step2: add filter to load it.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">filter</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&#x27;theme_inject&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">injects</span>) &#123;</span><br><span class=\"line\">  injects.<span class=\"property\">sidebar</span>.<span class=\"title function_\">file</span>(<span class=\"string\">&#x27;my-favourite-food&#x27;</span>, <span class=\"string\">&#x27;source/_data/my-favourite-food.njk&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">foods</span>: [<span class=\"string\">&#x27;apple&#x27;</span>, <span class=\"string\">&#x27;orange&#x27;</span>]</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>Three:</strong> want to have big header, put <code>big-header.styl</code> to NexT.</p>\n<p>Of course, you need to create this file first(e.g. <code>source/_data/big-header.styl</code>).</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>And then add it in filter.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">filter</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&#x27;theme_inject&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">injects</span>) &#123;</span><br><span class=\"line\">  injects.<span class=\"property\">style</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;source/_data/big-header.styl&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Plugin\"><a href=\"#Plugin\" class=\"headerlink\" title=\"Plugin\"></a>Plugin</h4><p>We also support hexo&#39;s plugin system, which makes it easy to extend functions without modifying the source code of the core module. You can see <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvcGx1Z2lucy5odG1sI1BsdWdpbg==\">https://hexo.io/docs/plugins.html#Plugin<i class=\"fa fa-external-link-alt\"></i></span> to learn how to create a plugin.</p>\n"},{"title":"Advanced Settings","url":"/docs/advanced-settings/index.html","content":"<p>Besides common <a href=\"/docs/theme-settings/\">Theme Settings</a> and <a href=\"/docs/third-party-services/\">Third-party Plugins</a>, NexT supports some advanced settings which makes NexT customizable.<br>Please note that those settings may lead to abnormal behavior if they are wrong. Change them only when you know for what they are.</p>\n<ul>\n<li><a href=\"/docs/advanced-settings/vendors.html\">Vendors</a></li>\n<li><a href=\"/docs/advanced-settings/custom-files.html\">Custom Files</a></li>\n<li><a href=\"/docs/advanced-settings/injects.html\">Injects</a></li>\n<li><a href=\"/docs/advanced-settings/front-matter.html\">Front-matter</a></li>\n</ul>\n"},{"title":"Vendors","url":"/docs/advanced-settings/vendors.html","content":"<h3 id=\"CDN-Settings\"><a href=\"#CDN-Settings\" class=\"headerlink\" title=\"CDN Settings\"></a>CDN Settings</h3><p>You can specify a proper CDN provider in the <code>vendors</code> section in <mark class=\"label primary\">NexT config file</mark>, which can make the static assets of plugins load faster.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">vendors:</span></span><br><span class=\"line\">  <span class=\"comment\"># The CDN provider of NexT internal scripts.</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: local | jsdelivr | unpkg | cdnjs | custom</span></span><br><span class=\"line\">  <span class=\"comment\"># Warning: If you are using the latest master branch of NexT, please set `internal: local`</span></span><br><span class=\"line\">  <span class=\"attr\">internal:</span> <span class=\"string\">local</span></span><br><span class=\"line\">  <span class=\"comment\"># The default CDN provider of third-party plugins.</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: local | jsdelivr | unpkg | cdnjs | custom</span></span><br><span class=\"line\">  <span class=\"comment\"># Dependencies for `plugins: local`: https://github.com/next-theme/plugins</span></span><br><span class=\"line\">  <span class=\"attr\">plugins:</span> <span class=\"string\">cdnjs</span></span><br><span class=\"line\">  <span class=\"comment\"># Custom CDN URL</span></span><br><span class=\"line\">  <span class=\"comment\"># For example:</span></span><br><span class=\"line\">  <span class=\"comment\"># custom_cdn_url: https://cdn.jsdelivr.net/npm/$&#123;npm_name&#125;@$&#123;version&#125;/$&#123;minified&#125;</span></span><br><span class=\"line\">  <span class=\"comment\"># custom_cdn_url: https://cdnjs.cloudflare.com/ajax/libs/$&#123;cdnjs_name&#125;/$&#123;version&#125;/$&#123;cdnjs_file&#125;</span></span><br><span class=\"line\">  <span class=\"attr\">custom_cdn_url:</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Internal-Scripts\"><a href=\"#Internal-Scripts\" class=\"headerlink\" title=\"Internal Scripts\"></a>Internal Scripts</h4><p><code>internal: local</code> is used to set how to load the internal scripts, e.g. <code>source/js/utils.js</code>. These libraries are loaded from your site by default, they are required by the basic functions of NexT. Set <code>internal</code> to <code>jsdelivr</code>, <code>unpkg</code> or <code>cdnjs</code> to load them from the corresponding CDN.</p>\n<div class=\"note info\"><p>If your site is deployed to any free hosting service (Github, Gitlab, etc.), CDN links are recommended for internal scripts. CDN usually has faster speeds and no traffic restrictions.</p>\n</div>\n\n<div class=\"note danger\"><p>If you are using the latest master branch of NexT, please set <code>internal: local</code>.</p>\n</div>\n\n<h4 id=\"Third-party-Plugins\"><a href=\"#Third-party-Plugins\" class=\"headerlink\" title=\"Third-party Plugins\"></a>Third-party Plugins</h4><p><code>plugins: cdnjs</code> is used to set how to load the third-party plugins, e.g. <code>anime.js</code>. Third-party plugins are loaded from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG5qcy5jb20v\">CDNJS<i class=\"fa fa-external-link-alt\"></i></span> CDN by default.</p>\n<p>And we also provide other optional CDNs, including the famous <span class=\"exturl\" data-url=\"aHR0cHM6Ly91bnBrZy5jb20v\">UNPKG<i class=\"fa fa-external-link-alt\"></i></span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuanNkZWxpdnIuY29tLw==\">jsDelivr<i class=\"fa fa-external-link-alt\"></i></span>. These CDN providers are chosen to deliver our third-party plugins because they are fast and reliable. Set <code>plugins</code> to <code>unpkg</code> or <code>cdnjs</code> to load them from different CDN provider.</p>\n<div class=\"note warning\"><p>Particularly, if you are a Chinese blogger or most of your visits come from China, please note that <strong>the CDNJS is blocked in some parts of China</strong>, don&#39;t use it as your CDN provider.</p>\n</div>\n\n<div class=\"note info\"><p>If your would like to load all third-party plugins from your site, please set <code>plugins</code> to <code>local</code> and install the <code>@next-theme/plugins</code> package: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvcGx1Z2lucw==\">https://github.com/next-theme/plugins<i class=\"fa fa-external-link-alt\"></i></span><br>If your website is deployed in the local area network, then this will have a faster loading speed than CDN services.</p>\n</div>\n\n<h4 id=\"Custom-CDN-URLs\"><a href=\"#Custom-CDN-URLs\" class=\"headerlink\" title=\"Custom CDN URLs\"></a>Custom CDN URLs</h4><p>Sometimes you may need to use CDNs other than <code>jsdelivr</code>, <code>unpkg</code> or <code>cdnjs</code>. For example, users can get faster loading speed in certain areas using the mirror site of jsDelivr.</p>\n<p>To enable custom CDN URL, you need to set <code>internal: custom</code> and &#x2F; or <code>plugins: custom</code> in the <code>vendors</code> section, and then specify a CDN URL with the <code>custom_cdn_url</code> option.</p>\n<p>Remember to use the HTTPS protocol of CDN links when you enable HTTPS on your site.</p>\n<h5 id=\"jsDelivr-Mirrors\"><a href=\"#jsDelivr-Mirrors\" class=\"headerlink\" title=\"jsDelivr Mirrors\"></a>jsDelivr Mirrors</h5><p>jsDelivr could automatically minify the JS and CSS files, even if the package owner doesn&#39;t publish the minified version on npm. You just need to access <code>*.min.js</code> and  <code>*.min.css</code>, instead of <code>*.js</code> and  <code>*.css</code>. For more information: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuanNkZWxpdnIuY29tL2ZlYXR1cmVz\">https://www.jsdelivr.com/features<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>In theme NexT, you can simply use the variable <code>$&#123;minified&#125;</code> in <code>custom_cdn_url</code> to serve the minified version if you are using a mirror site of jsDelivr. NexT will automatically replace the variable <code>$&#123;minified&#125;</code> with the path of each JS file to load from CDN.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">vendors:</span></span><br><span class=\"line\">  <span class=\"attr\">custom_cdn_url:</span> <span class=\"string\">https://fastly.jsdelivr.net/npm/$&#123;npm_name&#125;@$&#123;version&#125;/$&#123;minified&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"CDNJS-Mirrors\"><a href=\"#CDNJS-Mirrors\" class=\"headerlink\" title=\"CDNJS Mirrors\"></a>CDNJS Mirrors</h5><figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">vendors:</span></span><br><span class=\"line\">  <span class=\"attr\">custom_cdn_url:</span> <span class=\"string\">https://cdnjs.cloudflare.com/ajax/libs/$&#123;cdnjs_name&#125;/$&#123;version&#125;/$&#123;cdnjs_file&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"CDN-URLs-For-Each-Library\"><a href=\"#CDN-URLs-For-Each-Library\" class=\"headerlink\" title=\"CDN URLs For Each Library\"></a>CDN URLs For Each Library</h4><p>Furthermore, you can configure the CDN URL of each library individually in the <code>vendors</code> section.</p>\n<p>The config is in format of <code>libname: CDN URL</code>. The <code>libname</code> is the same as in the <code>_vendors.yml</code> file. The <code>CDN URL</code> will override the default one.</p>\n<p>For example, if you want to set the CDN URL for <code>anime</code>, go to <mark class=\"label primary\">NexT config file</mark> and add a key named <code>anime</code> in the <code>vendors</code> section, and set its value to the CDN URL of anime.js:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">vendors:</span></span><br><span class=\"line\">  <span class=\"comment\"># ...</span></span><br><span class=\"line\">  <span class=\"comment\"># Some contents...</span></span><br><span class=\"line\">  <span class=\"comment\"># ...</span></span><br><span class=\"line\">  <span class=\"attr\">anime:</span> <span class=\"string\">//fastly.jsdelivr.net/gh/juliangarnier/anime@latest/lib/anime.min.js</span></span><br></pre></td></tr></table></figure>\n\n<p>It&#39;s recommended to use the same version of the library as in <code>_vendors.yml</code> to avoid potential problems.</p>\n"},{"title":"Custom Pages","url":"/docs/theme-settings/custom-pages.html","content":"<h3 id=\"Custom-Page-Support\"><a href=\"#Custom-Page-Support\" class=\"headerlink\" title=\"Custom Page Support\"></a>Custom Page Support</h3><p>Next allows users to add custom pages in menu.</p>\n<div class=\"tabs\" id=\"adding-custom-page\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#adding-custom-page-1\">Adding New Page →</a></li><li class=\"tab\"><a href=\"#adding-custom-page-2\">Setting Front-matter Values →</a></li><li class=\"tab\"><a href=\"#adding-custom-page-3\">Editting Menu</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"adding-custom-page-1\"><p>Change to <mark class=\"label info\">site root directory</mark> in your terminal. Use <code>hexo new page custom-name</code> to create a new <code>custom-name</code> page:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo-site</span><br><span class=\"line\">$ hexo new page custom-name</span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"adding-custom-page-2\"><p>Front-matter is a block of YAML or JSON at the beginning of the file that is used to configure settings for your writings. Settings front-matter values and more detailed can be found in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZnJvbnQtbWF0dGVy\">front-matter<i class=\"fa fa-external-link-alt\"></i></span>. You can also add contents in <code>custom-name/index.md</code> if you like.</p>\n<figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: custom-name</span><br><span class=\"line\"><span class=\"section\">date: 2014-12-22 12:39:04</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"adding-custom-page-3\"><p>Add <code>custom-name</code> to <code>menu</code> by editing <mark class=\"label primary\">NexT config file</mark>, like adding <code>about</code> page:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span></span><br><span class=\"line\">  <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span></span><br><span class=\"line\">  <span class=\"attr\">about:</span> <span class=\"string\">/about/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-user</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<p>If you want to add Tags or Categories page, please continue reading.<br>Please read <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZnJvbnQtbWF0dGVyI0NhdGVnb3JpZXMtYW1wLVRhZ3M=\">Hexo&#39;s Docs of Categories &amp; Tags<i class=\"fa fa-external-link-alt\"></i></span> to know how to add tags or categories for articles.<br>Following code shows you a example of article with tags:</p>\n<div class=\"tabs\" id=\"tags-variants\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tags-variants-1\">Variant 1</a></li><li class=\"tab\"><a href=\"#tags-variants-2\">Variant 2</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tags-variants-1\"><figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: Tags Testing Article</span><br><span class=\"line\"><span class=\"section\">tags: [Testing, Another Tag]</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"tags-variants-2\"><figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: Tags Testing Article</span><br><span class=\"line\">tags:</span><br><span class=\"line\"><span class=\"bullet\">  -</span> Testing</span><br><span class=\"line\"><span class=\"section\">  - Another Tag</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h3 id=\"Use-Archive-Page-as-Home-Page\"><a href=\"#Use-Archive-Page-as-Home-Page\" class=\"headerlink\" title=\"Use Archive Page as Home Page\"></a>Use Archive Page as Home Page</h3><p>You can configure the path of archive and index generator in <mark class=\"label info\">Hexo config file</mark>, e.g.</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">archive_dir:</span> <span class=\"string\">/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">index_generator:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">archives</span></span><br><span class=\"line\">  <span class=\"attr\">per_page:</span> <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"attr\">order_by:</span> <span class=\"string\">-date</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Adding-«Tags»-Page\"><a href=\"#Adding-«Tags»-Page\" class=\"headerlink\" title=\"Adding «Tags» Page\"></a>Adding «Tags» Page</h3><p>Adding «Tags» page and show «Tags» link in menu. «Tags» page will show all tags of site. If no article has tags, this page will leave blank.</p>\n<div class=\"tabs\" id=\"adding-tags-page\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#adding-tags-page-1\">Adding New Page →</a></li><li class=\"tab\"><a href=\"#adding-tags-page-2\">Setting Page Type →</a></li><li class=\"tab\"><a href=\"#adding-tags-page-3\">Editting Menu</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"adding-tags-page-1\"><p>Change to <mark class=\"label info\">site root directory</mark> in your terminal. Use <code>hexo new page tags</code> to create a new <code>tags</code> page:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo-site</span><br><span class=\"line\">$ hexo new page tags</span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"adding-tags-page-2\"><p>Edit the new page and change the type to <code>tags</code>, theme will show tags cloud automatically in this page. Page content looks like following:</p>\n<figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: Tags</span><br><span class=\"line\">date: 2014-12-22 12:39:04</span><br><span class=\"line\"><span class=\"section\">type: tags</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"adding-tags-page-3\"><p>Add <code>tags</code> to <code>menu</code> by editing <mark class=\"label primary\">NexT config file</mark>, like following:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span></span><br><span class=\"line\">  <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span></span><br><span class=\"line\">  <span class=\"attr\">tags:</span> <span class=\"string\">/tags/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-tags</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<div class=\"note warning\"><p>If you enable any comment system for your site, comments will be shown for all posts and pages.<br>See <a href=\"/docs/third-party-services/comments.html#How-to-Disable-Comments-on-Page\">«How to Disable Comments on Page»</a> if you want to do it for pages like <code>tags</code> or <code>categories</code>.</p>\n</div>\n\n<div class=\"note warning\"><p>The default Hexo plugin <code>hexo-generator-tag</code> provides an option called <code>enable_index_page</code>, which will conflict with the «Tags» page created above. Make sure you have the option disabled.</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">tag_generator:</span></span><br><span class=\"line\">  <span class=\"attr\">enable_index_page:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"Tagcloud\"><a href=\"#Tagcloud\" class=\"headerlink\" title=\"Tagcloud\"></a>Tagcloud</h4><p>By default, NexT has setted font color and size for tagcloud in tags page.<br>From NexT v7.0.2 you can customize them, just set related values in <mark class=\"label primary\">NexT config file</mark>:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># TagCloud settings for tags page.</span></span><br><span class=\"line\"><span class=\"attr\">tagcloud:</span></span><br><span class=\"line\">  <span class=\"attr\">min:</span> <span class=\"number\">12</span> <span class=\"comment\"># Minimum font size in px</span></span><br><span class=\"line\">  <span class=\"attr\">max:</span> <span class=\"number\">30</span> <span class=\"comment\"># Maximum font size in px</span></span><br><span class=\"line\">  <span class=\"attr\">amount:</span> <span class=\"number\">200</span> <span class=\"comment\"># Total amount of tags</span></span><br><span class=\"line\">  <span class=\"attr\">orderby:</span> <span class=\"string\">name</span> <span class=\"comment\"># Order of tags</span></span><br><span class=\"line\">  <span class=\"attr\">order:</span> <span class=\"number\">1</span> <span class=\"comment\"># Sort order</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Adding-«Categories»-Page\"><a href=\"#Adding-«Categories»-Page\" class=\"headerlink\" title=\"Adding «Categories» Page\"></a>Adding «Categories» Page</h3><div class=\"note default\"><p>«Categories» page can be added in similar way as <a href=\"#Adding-%C2%ABTags%C2%BB-Page\">«Tags» page</a>, only name there is difference: just need to replace <code>tags</code> with <code>categories</code>.</p>\n</div>\n\n<h3 id=\"Adding-Google-Calendar-Page\"><a href=\"#Adding-Google-Calendar-Page\" class=\"headerlink\" title=\"Adding Google Calendar Page\"></a>Adding Google Calendar Page</h3><p>Mind that you need to make sure first you are adding a calendar that is set to public. If you are unsure, please <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNpbXBsZWNhbGVuZGFyLmlvL21ha2UtZ29vZ2xlLWNhbGVuZGFyLXB1YmxpYy8=\">follow these instructions first to set a Google calendar public<i class=\"fa fa-external-link-alt\"></i></span> before adding it.</p>\n<p>More detailed documentation on creating &amp; managing a public Google calendar: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vY2FsZW5kYXIvYW5zd2VyLzM3MDgz\">https://support.google.com/calendar/answer/37083<i class=\"fa fa-external-link-alt\"></i></span></p>\n<div class=\"tabs\" id=\"calendar\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#calendar-1\">Setting Google Calendar →</a></li><li class=\"tab\"><a href=\"#calendar-2\">Adding Schedule Page →</a></li><li class=\"tab\"><a href=\"#calendar-3\">Setting Page Type →</a></li><li class=\"tab\"><a href=\"#calendar-4\">Editting Menu</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"calendar-1\"><div class=\"tabs\" id=\"calendar1\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#calendar1-1\">Get Calendar ID and API KEY →</a></li><li class=\"tab\"><a href=\"#calendar1-2\">NexT Config</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"calendar1-1\"><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNpbXBsZWNhbGVuZGFyLmlvL2ZpbmQtZ29vZ2xlLWNhbGVuZGFyLWlkLw==\">Follow these instructions<i class=\"fa fa-external-link-alt\"></i></span> to find your Google Calendar ID.</p>\n<p>Login to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLmNsb3VkLmdvb2dsZS5jb20vZmxvd3MvZW5hYmxlYXBpP2FwaWlkPWNhbGVuZGFy\">Google developers<i class=\"fa fa-external-link-alt\"></i></span> and add Google Calendar API, you will get your API KEY on the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLmNsb3VkLmdvb2dsZS5jb20vYXBpcy9jcmVkZW50aWFscw==\">credentials page<i class=\"fa fa-external-link-alt\"></i></span>.</p></div><div class=\"tab-pane\" id=\"calendar1-2\"><p>You can enable it by setting values in <code>calendar</code> part. Copy the value of Calendar ID and API KEY in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">calendar:</span></span><br><span class=\"line\">  <span class=\"attr\">calendar_id:</span> <span class=\"string\">&lt;required&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">api_key:</span> <span class=\"string\">&lt;required&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">orderBy:</span> <span class=\"string\">startTime</span></span><br><span class=\"line\">  <span class=\"attr\">showLocation:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">offsetMax:</span> <span class=\"number\">72</span></span><br><span class=\"line\">  <span class=\"attr\">offsetMin:</span> <span class=\"number\">4</span></span><br><span class=\"line\">  <span class=\"attr\">showDeleted:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">singleEvents:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">maxResults:</span> <span class=\"number\">250</span></span><br></pre></td></tr></table></figure></div></div></div></div><div class=\"tab-pane\" id=\"calendar-2\"><p>Change to <mark class=\"label info\">site root directory</mark> in your terminal. Use <code>hexo new page schedule</code> to create a new <code>schedule</code> page:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo-site</span><br><span class=\"line\">$ hexo new page schedule</span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"calendar-3\"><p>Edit the new page and change the type to <code>schedule</code>, theme will show schedule automatically in this page. Page content looks like following:</p>\n<figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: Schedule</span><br><span class=\"line\">date: 2014-12-22 12:39:04</span><br><span class=\"line\"><span class=\"section\">type: schedule</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"calendar-4\"><p>Add <code>schedule</code> to <code>menu</code> by editing <mark class=\"label primary\">NexT config file</mark>:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span></span><br><span class=\"line\">  <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span> <span class=\"string\">/schedule/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-calendar</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h3 id=\"Custom-404-Page\"><a href=\"#Custom-404-Page\" class=\"headerlink\" title=\"Custom 404 Page\"></a>Custom 404 Page</h3><p>In your terminal, change to the <code>source</code> folder of <mark class=\"label info\">site root directory</mark>. Create a new folder called <code>404</code>, then create a new page in it:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo-site</span><br><span class=\"line\">$ hexo new page 404</span><br></pre></td></tr></table></figure>\n\n<p>Make sure <code>relative_link</code> is disabled in <mark class=\"label info\">Hexo config file</mark>:</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">relative_link:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note warning\"><p>Whether users can be redirected to the 404 page depends on the settings of the website hosting service or web server, not Hexo. For example, if you use Nginx as the server, you also need to configure the 404 page in <code>nginx.conf</code> file.</p>\n</div>\n\n<h4 id=\"Commonweal-404\"><a href=\"#Commonweal-404\" class=\"headerlink\" title=\"Commonweal 404\"></a>Commonweal 404</h4><p>If you would like to enable <code>commonweal 404</code> (A service provided by Tencent in China), Edit <code>404/index.md</code> like this:</p>\n<figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &#x27;404&#x27;</span><br><span class=\"line\">date: 2014-12-22 12:39:04</span><br><span class=\"line\"><span class=\"section\">comments: false</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> <span class=\"attr\">homePageUrl</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">homePageName</span>=<span class=\"string\">&quot;Back to home&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>You can also add any content you want to it.</p>\n<p>Add <code>404</code> to <code>menu</code> by editing <mark class=\"label primary\">NexT config file</mark>:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span></span><br><span class=\"line\">  <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span></span><br><span class=\"line\">  <span class=\"attr\">commonweal:</span> <span class=\"string\">/404/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-heartbeat</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Footer","url":"/docs/theme-settings/footer.html","content":"<h3 id=\"Site-Footer-Setting\"><a href=\"#Site-Footer-Setting\" class=\"headerlink\" title=\"Site Footer Setting\"></a>Site Footer Setting</h3><h4 id=\"Site-Start-Time\"><a href=\"#Site-Start-Time\" class=\"headerlink\" title=\"Site Start Time\"></a>Site Start Time</h4><p>By default NexT shows current year in the footer like <code>© 2020</code>. You can configure it to show the time gap like <code>© 2015 - 2020</code> by editing values in <code>since</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">footer:</span></span><br><span class=\"line\">  <span class=\"attr\">since:</span> <span class=\"number\">2020</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Site-Footer-Icon\"><a href=\"#Site-Footer-Icon\" class=\"headerlink\" title=\"Site Footer Icon\"></a>Site Footer Icon</h4><p>By default NexT shows red <code>heart</code> icon <a class=\"btn\" href=\"#\"><i class=\"fa fa-heart\"></i></a> with animation between year and copyright information in the footer. You can configure it by editing values in <code>icon</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<div class=\"tabs\" id=\"icon\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#icon-1\"><code>name</code></a></li><li class=\"tab\"><a href=\"#icon-2\"><code>animated</code></a></li><li class=\"tab\"><a href=\"#icon-3\"><code>color</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"icon-1\"><p>The name of footer icon can be founded in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5jb20v\">Font Awesome<i class=\"fa fa-external-link-alt\"></i></span> site. <code>heart</code> is recommended.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">footer:</span></span><br><span class=\"line\">  <span class=\"attr\">icon:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">fa</span> <span class=\"string\">fa-user</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"icon-2\"><p>Set up animated of footer icon by changing the value of <code>icon.animated</code>:</p>\n<ul>\n<li><strong><code>true</code></strong> → Icon will be animated.</li>\n<li><code>false</code> → Icon will not be animated.</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">footer:</span></span><br><span class=\"line\">  <span class=\"attr\">icon:</span></span><br><span class=\"line\">    <span class=\"attr\">animated:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"icon-3\"><p>Set up color of footer icon by changing the value of <code>icon.color</code>. Please use Hex Code, and red (#ff0000) is recommended for <code>heart</code> icon.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">footer:</span></span><br><span class=\"line\">  <span class=\"attr\">icon:</span></span><br><span class=\"line\">    <span class=\"attr\">color:</span> <span class=\"string\">&quot;#808080&quot;</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h4 id=\"Site-Copyright-Name\"><a href=\"#Site-Copyright-Name\" class=\"headerlink\" title=\"Site Copyright Name\"></a>Site Copyright Name</h4><p>By default NexT shows the name of <code>author</code> from <mark class=\"label info\">Hexo config file</mark>. You can configure it by editing values in <code>copyright</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">footer:</span></span><br><span class=\"line\">  <span class=\"attr\">copyright:</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note warning\"><p>This option will only customize the author name in the footer. The name in the Creative Commons License section at the end of each post is not affected.</p>\n</div>\n\n<h4 id=\"Site-Platform-Information\"><a href=\"#Site-Platform-Information\" class=\"headerlink\" title=\"Site Platform Information\"></a>Site Platform Information</h4><p>By default NexT shows Hexo and Theme &amp; scheme information like <code>Powered by Hexo &amp; NexT.Muse</code>. You can configure it by editing <code>powered</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">footer:</span></span><br><span class=\"line\">  <span class=\"attr\">powered:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Site-Beian-Information\"><a href=\"#Site-Beian-Information\" class=\"headerlink\" title=\"Site Beian Information\"></a>Site Beian Information</h4><p>Beian information is for Chinese users. By default NexT will not show the information of beian. You can configure it by editing values in <code>beian</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">footer:</span></span><br><span class=\"line\">  <span class=\"attr\">beian:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">icp:</span> <span class=\"string\">京ICP备</span> <span class=\"number\">1234567890</span><span class=\"string\">号-1</span></span><br><span class=\"line\">    <span class=\"attr\">gongan_id:</span> <span class=\"number\">1234567890</span></span><br><span class=\"line\">    <span class=\"attr\">gongan_num:</span> <span class=\"string\">京公网安备</span> <span class=\"number\">1234567890</span><span class=\"string\">号</span></span><br><span class=\"line\">    <span class=\"attr\">gongan_icon_url:</span> <span class=\"string\">/uploads/beian.png</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Theme Settings","url":"/docs/theme-settings/index.html","content":"<p>One of the guiding principles of NexT is to hide complex details and give you a simple but flexible config, so you can use it easily.</p>\n<div class=\"note info\"><p>The values given in the document are often typical allowable values rather than default values. They may be different from those in <mark class=\"label primary\">NexT config file</mark>.</p>\n</div>\n\n<h3 id=\"NexT-Quick-Start\"><a href=\"#NexT-Quick-Start\" class=\"headerlink\" title=\"NexT Quick Start\"></a>NexT Quick Start</h3><h4 id=\"Cache-Support\"><a href=\"#Cache-Support\" class=\"headerlink\" title=\"Cache Support\"></a>Cache Support</h4><p>NexT v6+ allows to cache content generation. Set the value <code>enable</code> to <code>true</code> in <code>cache</code> section in <mark class=\"label primary\">NexT config file</mark> as following:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Allow to cache content generation.</span></span><br><span class=\"line\"><span class=\"attr\">cache:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Minify-Support\"><a href=\"#Minify-Support\" class=\"headerlink\" title=\"Minify Support\"></a>Minify Support</h4><p>NexT allows to minify Hexo generation. Set the value <code>minify</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark> as following:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Remove unnecessary files after hexo generate.</span></span><br><span class=\"line\"><span class=\"attr\">minify:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Choosing-Scheme\"><a href=\"#Choosing-Scheme\" class=\"headerlink\" title=\"Choosing Scheme\"></a>Choosing Scheme</h4><p>Scheme is a feature supported by NexT, by using Scheme NexT gives you different views. And nearly all config can be used by those Schemes. Till now NexT supports 4 schemes, and they are:</p>\n<ul>\n<li><strong><code>Muse</code></strong> → Default Scheme, this is the initial version of NexT. Uses black-white tone and mainly looks cleanly.</li>\n<li><code>Mist</code> → A tighter version of Muse with a tidy single-column view.</li>\n<li><code>Pisces</code> → Double-column Scheme, fresh like your neighbor&#39;s daughter.</li>\n<li><code>Gemini</code> → Looks like Pisces, but have distinct column blocks with shadow to appear more sensitive to view.</li>\n</ul>\n<p>You can change Scheme by editing <mark class=\"label primary\">NexT config file</mark>, searching <code>scheme</code> keyword. You&#39;ll see 4 lines of scheme settings and can enable one of them by removing it&#39;s <code>#</code> and added <code>#</code> to previous.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#scheme: Muse</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Mist</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Pisces</span></span><br><span class=\"line\"><span class=\"attr\">scheme:</span> <span class=\"string\">Gemini</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Dark-Mode\"><a href=\"#Dark-Mode\" class=\"headerlink\" title=\"Dark Mode\"></a>Dark Mode</h4><style>\n.image-comparison-container {\n    position: relative;\n}\n\n.image-comparison {\n    opacity: 1 !important;\n}\n\n@keyframes next-clip-path {\n    from {\n        clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);\n    }\n    to {\n        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\n    }\n}\n\n.image-comparison:last-of-type {\n    animation: next-clip-path 8s alternate ease-in-out infinite;\n    position: absolute;\n    top: 0;\n}\n</style>\n<div class=\"image-comparison-container\">\n    <img class=\"image-comparison\" src=\"/images/next-schemes.png\" alt=\"NexT Schemes\">\n    <img class=\"image-comparison\" src=\"/images/next-schemes-dark.png\" alt=\"NexT Schemes\">\n</div>\n\n<p>You can enable Dark Mode by setting <code>darkmode</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">darkmode:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>The <code>prefers-color-scheme</code> CSS media feature is used to bring Dark Mode to all 4 schemes above, make sure your browser supports it.</p>\n<iframe data-feature=\"prefers-color-scheme\" src=\"https://caniuse.bitsofco.de/embed/index.html?feat=prefers-color-scheme&periods=current,past_1,past_2,past_3,past_4,past_5&accessible-colours=false\" frameborder=\"0\" width=\"100%\" height=\"400px\"></iframe>\n\n<p>Theme NexT automatically shows Dark Mode if the OS prefered theme is dark. It&#39;s supported by macOS Mojave, iOS 13 and Android 10 or later. Relevant docs:<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0LmFwcGxlLmNvbS9lbi11cy9IVDIwODk3Ng==\">How to use Dark Mode on your Mac<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0LmFwcGxlLmNvbS9lbi11cy9IVDIxMDMzMg==\">Use Dark Mode on your iPhone, iPad, or iPod touch<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vZ3VpZGUvdG9waWNzL3VpL2xvb2stYW5kLWZlZWwvZGFya3RoZW1l\">Dark theme | Android Developers<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h4 id=\"Configuring-Favicon\"><a href=\"#Configuring-Favicon\" class=\"headerlink\" title=\"Configuring Favicon\"></a>Configuring Favicon</h4><p>By default the Hexo site use NexT favicons in <code>hexo-site/themes/next/source/images/</code> directory with different size for different device. You can replace them with your own favicons.</p>\n<p>For example, you can put your favicons in <code>hexo-site/source/images/</code> directory. Then you need to rename them and change the settings in <code>favicon</code> section in <mark class=\"label primary\">NexT config file</mark>, otherwise icons from Next will rewrite your custom icons in Hexo.</p>\n<p>You can also put custom favicons into <code>hexo-site/source/</code> directory. In this way, you <strong>must remove</strong> <code>/images</code> prefix from paths.</p>\n<p>To generate custom favicons, you can visit <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWFsZmF2aWNvbmdlbmVyYXRvci5uZXQv\">Favicon Generator<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">favicon:</span></span><br><span class=\"line\">  <span class=\"attr\">small:</span> <span class=\"string\">/images/favicon-16x16-next.png</span></span><br><span class=\"line\">  <span class=\"attr\">medium:</span> <span class=\"string\">/images/favicon-32x32-next.png</span></span><br><span class=\"line\">  <span class=\"attr\">apple_touch_icon:</span> <span class=\"string\">/images/apple-touch-icon-next.png</span></span><br><span class=\"line\">  <span class=\"attr\">safari_pinned_tab:</span> <span class=\"string\">/images/logo.svg</span></span><br><span class=\"line\">  <span class=\"attr\">android_manifest:</span> <span class=\"string\">/images/manifest.json</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Custom-Logo-Support\"><a href=\"#Custom-Logo-Support\" class=\"headerlink\" title=\"Custom Logo Support\"></a>Custom Logo Support</h4><p>NexT supports the site logo personalization.</p>\n<p>You can enable it by adding images&#39;s url to <code>custom_logo</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_logo:</span> <span class=\"string\">/uploads/custom-logo.jpg</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note danger\"><p>Scheme Mist does not support custom logo setting.</p>\n</div>\n\n<h4 id=\"Creative-Commons\"><a href=\"#Creative-Commons\" class=\"headerlink\" title=\"Creative Commons\"></a>Creative Commons</h4><p>NexT supports the display of <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnLw==\">Creative Commons 4.0 International License<i class=\"fa fa-external-link-alt\"></i></span> in sidebar and post including <code>by</code>, <code>by-nc</code>, <code>by-nc-nd</code>, <code>by-nc-sa</code>, <code>by-nd</code>, <code>by-sa</code> and <code>cc-zero</code>. These licenses allow creators to communicate which rights they reserve, and which rights they waive for the benefit of recipients or other creators.</p>\n<p>You can configure it by editing values in <code>creative_commons</code> section in <mark class=\"label primary\">NexT config file</mark>, for example:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">creative_commons:</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | cc-zero</span></span><br><span class=\"line\">  <span class=\"attr\">license:</span> <span class=\"string\">by-nc-sa</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: big | small</span></span><br><span class=\"line\">  <span class=\"attr\">size:</span> <span class=\"string\">small</span></span><br><span class=\"line\">  <span class=\"attr\">sidebar:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">post:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">language:</span> <span class=\"string\">deed.zh</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note info\"><p>You can set a language value if you prefer a translated version of CC license, e.g. deed.zh<br>CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnLw==\">https://creativecommons.org<i class=\"fa fa-external-link-alt\"></i></span></p>\n</div>\n\n<h4 id=\"Open-Graph\"><a href=\"#Open-Graph\" class=\"headerlink\" title=\"Open Graph\"></a>Open Graph</h4><figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">open_graph:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Add pairs each line to customize</span></span><br><span class=\"line\">  <span class=\"attr\">options:</span></span><br><span class=\"line\">    <span class=\"attr\">type:</span> <span class=\"string\">blog</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Configuring-Menu-Items\"><a href=\"#Configuring-Menu-Items\" class=\"headerlink\" title=\"Configuring Menu Items\"></a>Configuring Menu Items</h4><p>Menu settings items have format <code>Key: /link/ || icon</code> which contains 3 values:</p>\n<div class=\"tabs\" id=\"menu-items\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#menu-items-1\"><code>Key</code></a></li><li class=\"tab\"><a href=\"#menu-items-2\"><code>link</code></a></li><li class=\"tab\"><a href=\"#menu-items-3\"><code>icon</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"menu-items-1\"><p><code>Key</code> → is the name of menu item (<code>home</code>, <code>archives</code>, etc.).<br>If translate for this menu will be found in languages, this translate will be loaded; if not, <code>Key</code> name will be used.</p>\n<div class=\"note danger\"><p><code>Key</code> value is case sensitive (e.g. <code>home</code> is not same as <code>Home</code>).</p>\n</div></div><div class=\"tab-pane\" id=\"menu-items-2\"><p>Value before <code>||</code> delimiter (<code>/link/</code>) → is the target link to relative url inside your site.</p></div><div class=\"tab-pane\" id=\"menu-items-3\"><p>Value after <code>||</code> delimiter (<code>icon</code>) → is the name of Font Awesome icon.<br>Names of that icons can be found in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5jb20v\">Font Awesome<i class=\"fa fa-external-link-alt\"></i></span> site.</p></div></div></div>\n\n<p>By default, all menu items are commented out to ensure that you can override them in the <a href=\"/docs/getting-started/configuration.html\">Alternate Theme Config</a>.<br>To customize menu items, edit the following content in <mark class=\"label primary\">NexT config file</mark>:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span></span><br><span class=\"line\">  <span class=\"comment\">#about: /about/ || fa fa-user</span></span><br><span class=\"line\">  <span class=\"comment\">#tags: /tags/ || fa fa-tags</span></span><br><span class=\"line\">  <span class=\"comment\">#categories: /categories/ || fa fa-th</span></span><br><span class=\"line\">  <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span></span><br><span class=\"line\">  <span class=\"comment\">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class=\"line\">  <span class=\"comment\">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class=\"line\">  <span class=\"comment\">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note danger\"><p>Except <code>home</code> and <code>archives</code>, all custom pages under <code>menu</code> section need to be created manually. See <a href=\"/docs/theme-settings/custom-pages.html\">«Custom Page Support»</a>.</p>\n<p>Besides, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLWdlbmVyYXRvci1zaXRlbWFw\">hexo-generator-sitemap<i class=\"fa fa-external-link-alt\"></i></span> plugin is required for <code>sitemap</code> support.</p>\n</div>\n\n<p>Dynamic sub-menu within hierarchy structure is also supported. Add your sub-menu items in <code>menu</code> section in <mark class=\"label primary\">NexT config file</mark> as following:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span></span><br><span class=\"line\">  <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span></span><br><span class=\"line\">  <span class=\"attr\">Docs:</span></span><br><span class=\"line\">    <span class=\"attr\">default:</span> <span class=\"string\">/docs/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-book</span></span><br><span class=\"line\">    <span class=\"attr\">Getting Started:</span></span><br><span class=\"line\">      <span class=\"attr\">default:</span> <span class=\"string\">/getting-started/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-flag</span></span><br><span class=\"line\">      <span class=\"attr\">Installation:</span> <span class=\"string\">/installation.html</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-download</span></span><br><span class=\"line\">      <span class=\"attr\">Configuration:</span> <span class=\"string\">/configuration.html</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-wrench</span></span><br><span class=\"line\">    <span class=\"attr\">Third Party Plugins:</span></span><br><span class=\"line\">      <span class=\"attr\">default:</span> <span class=\"string\">/third-party-services/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-puzzle-piece</span></span><br><span class=\"line\">      <span class=\"attr\">Math Equations:</span> <span class=\"string\">/math-equations.html</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-square-root-alt</span></span><br><span class=\"line\">      <span class=\"attr\">Comment Systems:</span> <span class=\"string\">/comments.html</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-comment-alt</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note danger\"><p>A <code>default</code> page is required for each sub-menu item.</p>\n</div>\n\n<p>By default NexT shows the icons of menu items without badges.</p>\n<div class=\"tabs\" id=\"menu_settings\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#menu_settings-1\"><code>icons</code></a></li><li class=\"tab\"><a href=\"#menu_settings-2\"><code>badges</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"menu_settings-1\"><p>You can configure it by editing values in <code>menu_settings.icons</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu_settings:</span></span><br><span class=\"line\">  <span class=\"attr\">icons:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"menu_settings-2\"><p>Set the value <code>badges</code> to <code>true</code> to display the count of Posts &#x2F; Categories &#x2F; Tags within menu items in <code>menu_settings</code> section in <mark class=\"label primary\">NexT config file</mark> as following:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu_settings:</span></span><br><span class=\"line\">  <span class=\"attr\">badges:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div></div></div>\n"},{"title":"Internationalization","url":"/docs/theme-settings/internationalization.html","content":"<h3 id=\"Choosing-Language\"><a href=\"#Choosing-Language\" class=\"headerlink\" title=\"Choosing Language\"></a>Choosing Language</h3><p>Edit <mark class=\"label info\">Hexo config file</mark>, set the value of <code>language</code> to the language you need. For example, English looks like this:</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n\n<p>NexT now supports following languages:</p>\n<table>\n<thead>\n<tr>\n<th>Language</th>\n<th>Example</th>\n<th>Code</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Arabic</td>\n<td>عربي</td>\n<td><code>ar</code></td>\n</tr>\n<tr>\n<td>Bengali</td>\n<td>বাংলা</td>\n<td><code>bn</code></td>\n</tr>\n<tr>\n<td>Chinese (Simplified)</td>\n<td>简体中文</td>\n<td><code>zh-CN</code></td>\n</tr>\n<tr>\n<td>Chinese (Traditional)</td>\n<td>繁體中文</td>\n<td><code>zh-TW</code></td>\n</tr>\n<tr>\n<td>Chinese (Hong Kong)</td>\n<td>繁體中文-香港</td>\n<td><code>zh-HK</code></td>\n</tr>\n<tr>\n<td>Dutch</td>\n<td>Niederländisch</td>\n<td><code>nl</code></td>\n</tr>\n<tr>\n<td>English</td>\n<td>English</td>\n<td><code>en</code></td>\n</tr>\n<tr>\n<td>French</td>\n<td>Français</td>\n<td><code>fr</code></td>\n</tr>\n<tr>\n<td>German</td>\n<td>Deutsch</td>\n<td><code>de</code></td>\n</tr>\n<tr>\n<td>Indonesian</td>\n<td>Indonesia</td>\n<td><code>id</code></td>\n</tr>\n<tr>\n<td>Italian</td>\n<td>Italiano</td>\n<td><code>it</code></td>\n</tr>\n<tr>\n<td>Japanese</td>\n<td>日本語</td>\n<td><code>ja</code></td>\n</tr>\n<tr>\n<td>Korean</td>\n<td>한국어</td>\n<td><code>ko</code></td>\n</tr>\n<tr>\n<td>Persian</td>\n<td>فارسی</td>\n<td><code>fa</code></td>\n</tr>\n<tr>\n<td>Portuguese</td>\n<td>Português</td>\n<td><code>pt</code></td>\n</tr>\n<tr>\n<td>Portuguese (Brazilian)</td>\n<td>Português (Brazilian)</td>\n<td><code>pt-BR</code></td>\n</tr>\n<tr>\n<td>Russian</td>\n<td>Русский</td>\n<td><code>ru</code></td>\n</tr>\n<tr>\n<td>Sinhala</td>\n<td>සිංහල</td>\n<td><code>si</code></td>\n</tr>\n<tr>\n<td>Spanish</td>\n<td>Español</td>\n<td><code>es</code></td>\n</tr>\n<tr>\n<td>Turkish</td>\n<td>Türk</td>\n<td><code>tr</code></td>\n</tr>\n<tr>\n<td>Turkmen</td>\n<td>Türkmençe</td>\n<td><code>tk</code></td>\n</tr>\n<tr>\n<td>Ukrainian</td>\n<td>Український</td>\n<td><code>uk</code></td>\n</tr>\n<tr>\n<td>Vietnamese</td>\n<td>Tiếng Việt</td>\n<td><code>vi</code></td>\n</tr>\n</tbody></table>\n<div class=\"note primary\"><p>The files in the <code>language</code> directory are automatically generated, you do not need to modify them directly. Please submit translations via <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcm93ZGluLmNvbS9wcm9qZWN0L2hleG8tdGhlbWUtbmV4dA==\">Crowdin<i class=\"fa fa-external-link-alt\"></i></span> if you would like to add or improve translation for NexT theme.</p>\n</div>\n\n<h3 id=\"Multilingual-Switcher\"><a href=\"#Multilingual-Switcher\" class=\"headerlink\" title=\"Multilingual Switcher\"></a>Multilingual Switcher</h3><p>Set multiple languages in <mark class=\"label info\">Hexo config file</mark>, e.g.</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">zh-CN</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n\n<p>Then turn on <code>language_switcher</code> in <mark class=\"label primary\">NexT config file</mark>:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Show multilingual switcher in footer.</span></span><br><span class=\"line\"><span class=\"attr\">language_switcher:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Override-Default-Translations\"><a href=\"#Override-Default-Translations\" class=\"headerlink\" title=\"Override Default Translations\"></a>Override Default Translations</h3><p>If you would like to customize the default translation, you do not need to modify the translation files in the <code>languages</code> directory. You can override all translations using <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZGF0YS1maWxlcw==\">Data Files<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<ol>\n<li><p>Create a <code>languages.yml</code> in <code>source/_data</code>.</p>\n</li>\n<li><p>Insert following codes: (be careful about the two-space indent)</p>\n <figure class=\"highlight yml\"><figcaption><span>languages.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># language</span></span><br><span class=\"line\"><span class=\"attr\">zh-CN:</span></span><br><span class=\"line\">  <span class=\"comment\"># items</span></span><br><span class=\"line\">  <span class=\"attr\">post:</span></span><br><span class=\"line\">    <span class=\"attr\">copyright:</span></span><br><span class=\"line\">      <span class=\"comment\"># the translation you prefer</span></span><br><span class=\"line\">      <span class=\"attr\">author:</span> <span class=\"string\">本文博主</span></span><br><span class=\"line\"><span class=\"attr\">en:</span></span><br><span class=\"line\">  <span class=\"attr\">menu:</span></span><br><span class=\"line\">    <span class=\"attr\">schedule:</span> <span class=\"string\">Calendar</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>This situation is also available for off-list items. For example, Next uses <a href=\"/docs/advanced-settings/injects.html\">Theme Inject</a> to introduce the comments systems. You can rename the returned value in chinese as followed:</p>\n<figure class=\"highlight yml\"><figcaption><span>languages.yml</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># language</span></span><br><span class=\"line\"><span class=\"attr\">zh-CN:</span></span><br><span class=\"line\">  <span class=\"comment\"># items</span></span><br><span class=\"line\">  <span class=\"attr\">post:</span></span><br><span class=\"line\">    <span class=\"attr\">comments:</span></span><br><span class=\"line\">      <span class=\"attr\">disqus:</span> <span class=\"string\">评论</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Post Settings","url":"/docs/theme-settings/posts.html","content":"<h3 id=\"Preamble-Text\"><a href=\"#Preamble-Text\" class=\"headerlink\" title=\"Preamble Text\"></a>Preamble Text</h3><p>It&#39;s a common need to show some part of article in home page and then give a link to full article. NexT gives two ways to control how article is shown in home page. In other words, you can use following ways to show summary of articles and a <strong>Read More</strong> button.</p>\n<div class=\"tabs\" id=\"preamble\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#preamble-1\"><mark class=\"label success\">Tag more</mark></a></li><li class=\"tab\"><a href=\"#preamble-2\"><code>excerpt_description</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"preamble-1\"><p>Use <code>&lt;!-- more --&gt;</code> in your article to break your article manually, which is recommended by Hexo.</p></div><div class=\"tab-pane\" id=\"preamble-2\"><p>If you have added <code>description</code> and set its value to your article summary in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZnJvbnQtbWF0dGVy\">front-matter<i class=\"fa fa-external-link-alt\"></i></span>, NexT excerpts <code>description</code> as preamble text in homepage by default. Without <code>description</code>, the full contents would be the preamble text in homepage.</p>\n<p>You can disable it by setting value <code>excerpt_description</code> to <code>false</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">excerpt_description:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<div class=\"note info\"><p>It is recommended to use <code>&lt;!-- more --&gt;</code> (the first way) which can not only control what you want to show better, but also let Hexo&#39;s plugins use it easily.</p>\n</div>\n\n<h3 id=\"Post-Meta-Display\"><a href=\"#Post-Meta-Display\" class=\"headerlink\" title=\"Post Meta Display\"></a>Post Meta Display</h3><p>NexT supports post created date, post updated date and post categories display.</p>\n<div class=\"tabs\" id=\"postmeta\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#postmeta-1\"><code>item_text</code></a></li><li class=\"tab\"><a href=\"#postmeta-2\"><code>created_at</code></a></li><li class=\"tab\"><a href=\"#postmeta-3\"><code>updated_at</code></a></li><li class=\"tab\"><a href=\"#postmeta-4\"><code>categories</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"postmeta-1\"><p>By default NexT shows the description text of post meta. You can disable it by setting value <code>post_meta.item_text</code> to <code>false</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_meta:</span></span><br><span class=\"line\">  <span class=\"attr\">item_text:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"postmeta-2\"><p>By default NexT shows the post created date in post meta section and created time in popup. You can disable it by setting value <code>post_meta.created_at</code> to <code>false</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_meta:</span></span><br><span class=\"line\">  <span class=\"attr\">created_at:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"postmeta-3\"><div class=\"note warning\"><p>Make sure you set <code>use_date_for_updated</code> and <code>updated_option</code> in <mark class=\"label info\">Hexo config file</mark> correctly, otherwise this option will not take effect. See also <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvY29uZmlndXJhdGlvbiNEYXRlLVRpbWUtZm9ybWF0\">Date &#x2F; Time format<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n</div>\n\n<div class=\"tabs\" id=\"postmeta1\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#postmeta1-1\"><code>enable</code></a></li><li class=\"tab\"><a href=\"#postmeta1-2\"><code>another_day</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"postmeta1-1\"><p>By default NexT shows the post updated date in post meta section and updated time in popup. You can disable it by setting value <code>post_meta.updated_at.enable</code> to <code>false</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_meta:</span></span><br><span class=\"line\">  <span class=\"attr\">updated_at:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"postmeta1-2\"><p>By default, if updated&#x2F;edited date is the same as created date, edited time would be displayed in popup message. You can disable it by setting value <code>post_meta.updated_at.another_day</code> to <code>false</code> in <mark class=\"label primary\">NexT config file</mark>.<br>In other words:</p>\n<ul>\n<li>If true, show updated date label only if <code>updated date</code> is different from <code>created date</code> (post edited in another day than was created).</li>\n<li>And if post was edited in same day as created, edited time will show in popup title under created time label.</li>\n<li>If false show anyway, but if post edited in same day, show only edited time.</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_meta:</span></span><br><span class=\"line\">  <span class=\"attr\">updated_at:</span></span><br><span class=\"line\">    <span class=\"attr\">another_day:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div></div></div></div><div class=\"tab-pane\" id=\"postmeta-4\"><p>By default NexT shows the post categories in post meta section. You can disable it by setting value <code>post_meta.categories</code> to <code>false</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_meta:</span></span><br><span class=\"line\">  <span class=\"attr\">categories:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h3 id=\"Post-Wordcount\"><a href=\"#Post-Wordcount\" class=\"headerlink\" title=\"Post Wordcount\"></a>Post Wordcount</h3><div class=\"tabs\" id=\"wordcount\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#wordcount-1\">Installation →</a></li><li class=\"tab\"><a href=\"#wordcount-2\">Hexo Config →</a></li><li class=\"tab\"><a href=\"#wordcount-3\">NexT Config</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"wordcount-1\"><p>Install <code>hexo-word-counter</code> by executing the following command in <mark class=\"label info\">site root dir</mark>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-word-counter</span><br><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"wordcount-2\"><p>Activate this plugin in <mark class=\"label info\">Hexo config file</mark> by enabled any option:</p>\n<div class=\"tabs\" id=\"wordcount1\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#wordcount1-1\"><code>symbols</code></a></li><li class=\"tab\"><a href=\"#wordcount1-2\"><code>time</code></a></li><li class=\"tab\"><a href=\"#wordcount1-3\"><code>total_symbols</code></a></li><li class=\"tab\"><a href=\"#wordcount1-4\"><code>total_time</code></a></li><li class=\"tab\"><a href=\"#wordcount1-5\"><code>awl</code></a></li><li class=\"tab\"><a href=\"#wordcount1-6\"><code>wpm</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"wordcount1-1\"><p>By default NexT shows the number of post words in post meta section. You can disable it by setting value <code>symbols_count_time.symbols</code> to <code>false</code> in <mark class=\"label info\">Hexo config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">symbols_count_time:</span></span><br><span class=\"line\">  <span class=\"attr\">symbols:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"wordcount1-2\"><p>By default NexT shows the estimated reading time of post in post meta section. You can disable it by setting value <code>symbols_count_time.time</code> to <code>false</code> in <mark class=\"label info\">Hexo config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">symbols_count_time:</span></span><br><span class=\"line\">  <span class=\"attr\">time:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"wordcount1-3\"><p>By default NexT shows the number of all posts words in footer section. You can disable it by setting value <code>symbols_count_time.total_symbols</code> to <code>false</code> in <mark class=\"label info\">Hexo config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">symbols_count_time:</span></span><br><span class=\"line\">  <span class=\"attr\">total_symbols:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"wordcount1-4\"><p>By default NexT shows the estimated reading time of all posts in footer section. You can disable it by setting value <code>symbols_count_time.total_time</code> to <code>false</code> in <mark class=\"label info\">Hexo config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">symbols_count_time:</span></span><br><span class=\"line\">  <span class=\"attr\">total_time:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"wordcount1-5\"><p><code>awl</code> means the average Word Length (chars count in word). You can check this <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaGFyYWN0ZXJjb3VudHRvb2wuY29tLw==\">here<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">symbols_count_time:</span></span><br><span class=\"line\">  <span class=\"attr\">awl:</span> <span class=\"number\">4</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"wordcount1-6\"><p><code>wpm</code> means the average words per minute. You can check this <span class=\"exturl\" data-url=\"aHR0cHM6Ly93b3JkY291bnRlci5uZXQv\">here<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">symbols_count_time:</span></span><br><span class=\"line\">  <span class=\"attr\">wpm:</span> <span class=\"number\">275</span></span><br></pre></td></tr></table></figure></div></div></div></div><div class=\"tab-pane\" id=\"wordcount-3\"><p>After the plugin enabled, you may adjust options in <code>symbols_count_time</code> section in <mark class=\"label primary\">NexT config file</mark>:</p>\n<div class=\"tabs\" id=\"wordcount2\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#wordcount2-1\"><code>separated_meta</code></a></li><li class=\"tab\"><a href=\"#wordcount2-2\"><code>item_text_total</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"wordcount2-1\"><p>By default NexT shows the words counts and estimated reading time in a separated line. You can add them into one line by setting value <code>symbols_count_time.separated_meta</code> to <code>false</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">symbols_count_time:</span></span><br><span class=\"line\">  <span class=\"attr\">separated_meta:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"wordcount2-2\"><p>By default NexT doesn&#39;t shows the text description of the words counts and estimated reading time in footer section. You can enable it by setting value <code>symbols_count_time.item_text_total</code> to <code>false</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">symbols_count_time:</span></span><br><span class=\"line\">  <span class=\"attr\">item_text_total:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div></div></div></div></div></div>\n\n<h3 id=\"Tag-Icon\"><a href=\"#Tag-Icon\" class=\"headerlink\" title=\"Tag Icon\"></a>Tag Icon</h3><p>By default, tags at the bottom of posts have a symbol # at there left side.</p>\n<p>If you prefer icon instead of symbol, edit <mark class=\"label primary\">NexT config file</mark> like following:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">tag_icon:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Donate-Settings\"><a href=\"#Donate-Settings\" class=\"headerlink\" title=\"Donate Settings\"></a>Donate Settings</h3><p>More and more online blogging platforms (e.g. WeChat public accounts, Jianshu, Zhihu) support donate (sponsor). To catch paid reading trends, we added donate feature, supports WeChat, Alipay and Bitcoin. What you need is:</p>\n<ol>\n<li><p>Get your WeChat &#x2F; Alipay &#x2F; Bitcoin receive money QRcode image(s) and put into <code>source/images</code> under <mark class=\"label primary\">theme directory</mark> or upload it(them) to an image cloud to get the absolute HTTP address(es).</p>\n</li>\n<li><p>Set needed values in  <mark class=\"label primary\">NexT config file</mark>:</p>\n <figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Donate (Sponsor) settings</span></span><br><span class=\"line\"><span class=\"comment\"># Front-matter variable (nonsupport animation).</span></span><br><span class=\"line\"><span class=\"attr\">reward_settings:</span></span><br><span class=\"line\">  <span class=\"comment\"># If true, a donate button will be displayed in every article by default.</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">animation:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">reward:</span></span><br><span class=\"line\">  <span class=\"attr\">wechatpay:</span> <span class=\"string\">/images/wechatpay.png</span></span><br><span class=\"line\">  <span class=\"attr\">alipay:</span> <span class=\"string\">/images/alipay.png</span></span><br><span class=\"line\">  <span class=\"attr\">bitcoin:</span> <span class=\"string\">/images/bitcoin.png</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>You can also add QRcode of other platforms, e.g.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">paypal:</span> <span class=\"string\">/images/paypal.png</span></span><br><span class=\"line\"><span class=\"attr\">monero:</span> <span class=\"string\">/images/monero.png</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Follow-Me\"><a href=\"#Follow-Me\" class=\"headerlink\" title=\"Follow Me\"></a>Follow Me</h3><figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Subscribe through Telegram Channel, Twitter, etc.</span></span><br><span class=\"line\"><span class=\"comment\"># Usage: `Key: permalink || icon` (Font Awesome)</span></span><br><span class=\"line\"><span class=\"attr\">follow_me:</span></span><br><span class=\"line\">  <span class=\"comment\">#Twitter: https://twitter.com/username || fab fa-twitter</span></span><br><span class=\"line\">  <span class=\"comment\">#Telegram: https://t.me/channel_name || fab fa-telegram</span></span><br><span class=\"line\">  <span class=\"comment\">#WeChat: /images/wechat_channel.jpg || fab fa-weixin</span></span><br><span class=\"line\">  <span class=\"comment\">#RSS: /atom.xml || fa fa-rss</span></span><br></pre></td></tr></table></figure>\n\n<p>You can add links of other platforms not listed here, for example:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">follow_me:</span></span><br><span class=\"line\">  <span class=\"attr\">Zhihu:</span> <span class=\"string\">https://www.zhihu.com/people/username</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-zhihu</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Related-Popular-Posts\"><a href=\"#Related-Popular-Posts\" class=\"headerlink\" title=\"Related Popular Posts\"></a>Related Popular Posts</h3><p>NexT supports the related posts functionality according to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlcmdleXp3ZXpkaW4vaGV4by1yZWxhdGVkLXBvc3Rz\">hexo-related-posts<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<div class=\"tabs\" id=\"related_posts\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#related_posts-1\">Installation →</a></li><li class=\"tab\"><a href=\"#related_posts-2\"><code>enable</code></a></li><li class=\"tab\"><a href=\"#related_posts-3\"><code>icon</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"related_posts-1\"><p>Install <code>hexo-related-posts</code> by executing the following command in <mark class=\"label info\">site root dir</mark>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-related-posts</span><br><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"related_posts-2\"><p>You can enable it by setting value <code>related_posts.enable</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">related_posts:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"related_posts-3\"><p>By default NexT shows the <code>signs-post</code> icon <a class=\"btn\" href=\"#\"><i class=\"fa fa-signs-post\"></i></a> before <code>title</code>. The name of icon can be found in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5jb20v\">Font Awesome<i class=\"fa fa-external-link-alt\"></i></span> site. You can configure it by editing value <code>icon</code> in <code>related_posts</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">related_posts:</span></span><br><span class=\"line\">  <span class=\"attr\">icon:</span> <span class=\"string\">fa</span> <span class=\"string\">fa-signs-post</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h3 id=\"Post-Edit\"><a href=\"#Post-Edit\" class=\"headerlink\" title=\"Post Edit\"></a>Post Edit</h3><p>NexT supports the edit functionality of your posts. By enabling this feature, users can quickly browse and modify the blog&#39;s source code on GitHub.</p>\n<div class=\"tabs\" id=\"post_edit\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#post_edit-1\"><code>enable</code></a></li><li class=\"tab\"><a href=\"#post_edit-2\"><code>url</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"post_edit-1\"><p>You can enable it by setting value <code>post_edit.enable</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_edit:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"post_edit-2\"><p>You should create a source repository of your post files. The <code>url</code> setting depends on the source project in github.</p>\n<ul>\n<li>For site repository<ul>\n<li>Link for view source: <code>url: https://github.com/.../tree/master/source/_posts/</code></li>\n<li>Link for fork &amp; edit: <code>url: https://github.com/.../edit/master/source/_posts/</code></li>\n</ul>\n</li>\n<li>For post repository<ul>\n<li>Link for view source: <code>url: https://github.com/.../_posts/tree/master/</code></li>\n<li>Link for fork &amp; edit: <code>url: https://github.com/.../_posts/edit/master/</code></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_edit:</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h3 id=\"Post-Navigation\"><a href=\"#Post-Navigation\" class=\"headerlink\" title=\"Post Navigation\"></a>Post Navigation</h3><p>Show previous post and next post in post footer if exists.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_navigation:</span> <span class=\"string\">left</span></span><br></pre></td></tr></table></figure>\n"},{"title":"SEO","url":"/docs/theme-settings/seo.html","content":"<h3 id=\"SEO-Setting\"><a href=\"#SEO-Setting\" class=\"headerlink\" title=\"SEO Setting\"></a>SEO Setting</h3><p>Next provides useful options for better Search Engine Optimization (SEO).</p>\n<div class=\"note info\"><p>By default a canonical link tag is created in Hexo after you have set up your URL <code>url: http://example.com</code> in <mark class=\"label info\">Hexo config file</mark>. More detailed information can be found in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vd2VibWFzdGVycy9hbnN3ZXIvMTM5MDY2\">Consolidate duplicate URLs<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n</div>\n\n<p>Set the value of <code>index_with_subtitle</code> in <mark class=\"label primary\">NexT config file</mark> to <code>true</code> to add <code>subtitle</code> information to index page.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">index_with_subtitle:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>You can set <code>subtitle</code> in <mark class=\"label info\">Hexo config file</mark>.</p>\n<h3 id=\"Webmaster-Tools\"><a href=\"#Webmaster-Tools\" class=\"headerlink\" title=\"Webmaster Tools\"></a>Webmaster Tools</h3><h4 id=\"Google-Webmaster-Tools\"><a href=\"#Google-Webmaster-Tools\" class=\"headerlink\" title=\"Google Webmaster Tools\"></a>Google Webmaster Tools</h4><p>Set the verification string of <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vc2VhcmNo\">Google Webmaster Tools<i class=\"fa fa-external-link-alt\"></i></span> which is used in submitting sitemap.</p>\n<div class=\"tabs\" id=\"google-webmaster-tools\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#google-webmaster-tools-1\">Get Verification Code →</a></li><li class=\"tab\"><a href=\"#google-webmaster-tools-2\">NexT Config</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"google-webmaster-tools-1\"><p>Login to Google Webmaster Tools and go to verification methods and choose <code>HTML Tag</code>, you will get some code:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;google-site-verification&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;XXXXXXXXXXXXXXXXXXXXXXX&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"google-webmaster-tools-2\"><p>Copy <code>XXXXXXXXXXXXXXXXXXXXXXX</code> value of <code>content</code> key.<br>Edit <mark class=\"label primary\">NexT config file</mark> and add or change the value of <code>google_site_verification</code>:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">google_site_verification:</span> <span class=\"string\">XXXXXXXXXXXXXXXXXXXXXXX</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h4 id=\"Bing-Webmaster-Tools\"><a href=\"#Bing-Webmaster-Tools\" class=\"headerlink\" title=\"Bing Webmaster Tools\"></a>Bing Webmaster Tools</h4><p>Set the verification string of <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmluZy5jb20vd2VibWFzdGVycw==\">Bing Webmaster Tools<i class=\"fa fa-external-link-alt\"></i></span> which is used in submitting sitemap.</p>\n<div class=\"tabs\" id=\"bing-webmaster-tools\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#bing-webmaster-tools-1\">Get Verification Code →</a></li><li class=\"tab\"><a href=\"#bing-webmaster-tools-2\">NexT Config</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"bing-webmaster-tools-1\"><p>Login to Bing Webmaster Tools and go to verification methods and choose <code>HTML Tag</code>, you will get some code:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;msvalidate.01&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;XXXXXXXXXXXXXXXXXXXXXXX&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"bing-webmaster-tools-2\"><p>Copy <code>XXXXXXXXXXXXXXXXXXXXXXX</code> value of <code>content</code> key.<br>Edit <mark class=\"label primary\">NexT config file</mark> and add or change the value of <code>bing_site_verification</code>:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">bing_site_verification:</span> <span class=\"string\">XXXXXXXXXXXXXXXXXXXXXXX</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h4 id=\"Yandex-Webmaster-Tools\"><a href=\"#Yandex-Webmaster-Tools\" class=\"headerlink\" title=\"Yandex Webmaster Tools\"></a>Yandex Webmaster Tools</h4><p>Set the verification string of <span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWJtYXN0ZXIueWFuZGV4LnJ1Lw==\">Yandex Webmaster Tools<i class=\"fa fa-external-link-alt\"></i></span> which is used in submitting sitemap.</p>\n<div class=\"tabs\" id=\"yandex-webmaster-tools\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#yandex-webmaster-tools-1\">Get Verification Code →</a></li><li class=\"tab\"><a href=\"#yandex-webmaster-tools-2\">NexT Config</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"yandex-webmaster-tools-1\"><p>Login to Yandex Webmaster Tools and go to verification methods and choose <code>Meta Tag</code>, you will get some code:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;yandex-verification&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;XXXXXXXXXXXXXXXXXXXXXXX&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"yandex-webmaster-tools-2\"><p>Copy <code>XXXXXXXXXXXXXXXXXXXXXXX</code> value of <code>content</code> key.<br>Edit <mark class=\"label primary\">NexT config file</mark> and add or change the value of <code>yandex_site_verification</code>:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">yandex_site_verification:</span> <span class=\"string\">XXXXXXXXXXXXXXXXXXXXXXX</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h4 id=\"Baidu-Webmaster-Tools\"><a href=\"#Baidu-Webmaster-Tools\" class=\"headerlink\" title=\"Baidu Webmaster Tools\"></a>Baidu Webmaster Tools</h4><p>Set the verification string of <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aXl1YW4uYmFpZHUuY29tL3NpdGUv\">Baidu Webmaster Tools<i class=\"fa fa-external-link-alt\"></i></span> which is used in submitting sitemap.</p>\n<div class=\"tabs\" id=\"baidu-webmaster-tools\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#baidu-webmaster-tools-1\">Get Verification Code →</a></li><li class=\"tab\"><a href=\"#baidu-webmaster-tools-2\">NexT Config</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"baidu-webmaster-tools-1\"><p>Login to Baidu Webmaster Tools and go to verification methods and choose <code>HTML Tag</code>, you will get some code:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;baidu-site-verification&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;code-XXXXXXXXXX&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"baidu-webmaster-tools-2\"><p>Copy <code>code-XXXXXXXXXX</code> value of <code>content</code> key.<br>Edit <mark class=\"label primary\">NexT config file</mark> and add or change the value of <code>baidu_site_verification</code>:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">baidu_site_verification:</span> <span class=\"string\">code-XXXXXXXXXX</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<div class=\"note info\"><p>By default Baidu will cache and rewrite your site to provide a webpage snapshot for mobile users. You can disable this by setting the site type.</p>\n<p><img src=\"/images/baidu.png\" alt=\"Baidu Webmaster Tools\" loading=\"lazy\"></p>\n</div>\n"},{"title":"Sidebar Setting","url":"/docs/theme-settings/sidebar.html","content":"<h3 id=\"Sidebar-Style\"><a href=\"#Sidebar-Style\" class=\"headerlink\" title=\"Sidebar Style\"></a>Sidebar Style</h3><p>By default sidebar only shows in posts (have a table of content), and is placed in left side. You can change it by editing values under <code>sidebar</code> setting in <mark class=\"label primary\">NexT config file</mark>.</p>\n<p>Sidebar has several options, including <code>position</code>, <code>width</code>, <code>display</code>, <code>padding</code> and <code>offset</code>.</p>\n<div class=\"tabs\" id=\"setting-sidebar\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#setting-sidebar-1\"><code>position</code></a></li><li class=\"tab\"><a href=\"#setting-sidebar-2\"><code>width</code></a></li><li class=\"tab\"><a href=\"#setting-sidebar-3\"><code>display</code></a></li><li class=\"tab\"><a href=\"#setting-sidebar-4\"><code>padding</code></a></li><li class=\"tab\"><a href=\"#setting-sidebar-5\"><code>offset</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"setting-sidebar-1\"><p>Set up sidebar position by changing the value of <code>sidebar.position</code>, which can be one of following:</p>\n<ul>\n<li><strong><code>left</code></strong> → Place at the left of the screen.</li>\n<li><code>right</code> → Place at the right of the screen.</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span></span><br><span class=\"line\">  <span class=\"attr\">position:</span> <span class=\"string\">left</span></span><br><span class=\"line\">  <span class=\"comment\">#position: right</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"setting-sidebar-2\"><p>You can change sidebar width by specify <code>sidebar.width</code> setting in pixels, for example:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span></span><br><span class=\"line\">  <span class=\"attr\">width:</span> <span class=\"number\">300</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note info\"><p>This option is commented out by default and values are:</p>\n<ul>\n<li>For Muse | Mist schemes: <code>320</code></li>\n<li>For Pisces | Gemini schemes: <code>240</code></li>\n</ul>\n</div></div><div class=\"tab-pane\" id=\"setting-sidebar-3\"><p>Set up conditions under which sidebar will show by editing <code>sidebar.display</code> value, which can be one of following:</p>\n<ul>\n<li><strong><code>post</code></strong> → Show sidebar only in posts which have index.</li>\n<li><code>always</code> → Show sidebar in all pages.</li>\n<li><code>hide</code> → Hide it in all pages (but can be opened by user manually).</li>\n<li><code>remove</code> → Remove sidebar totally.</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span></span><br><span class=\"line\">  <span class=\"attr\">display:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"comment\">#display: always</span></span><br><span class=\"line\">  <span class=\"comment\">#display: hide</span></span><br><span class=\"line\">  <span class=\"comment\">#display: remove</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"setting-sidebar-4\"><p>Set up sidebar padding in pixels by changing the value of <code>sidebar.padding</code>:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span></span><br><span class=\"line\">  <span class=\"attr\">padding:</span> <span class=\"number\">18</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"setting-sidebar-5\"><p>Set up sidebar offset from top menubar in pixels by changing the value of <code>sidebar.offset</code>:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span></span><br><span class=\"line\">  <span class=\"attr\">offset:</span> <span class=\"number\">12</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note danger\"><p>For now only Pisces &#x2F; Gemini Schemes supports <code>offset</code> setting under <strong>6.0.x</strong> version or later.</p>\n</div></div></div></div>\n\n<h3 id=\"Configuring-Avatar\"><a href=\"#Configuring-Avatar\" class=\"headerlink\" title=\"Configuring Avatar\"></a>Configuring Avatar</h3><p>By default NexT doesn&#39;t show avatar in sidebar. You can configure it by editing values under <code>avatar</code> setting in <mark class=\"label primary\">NexT config file</mark>.</p>\n<div class=\"tabs\" id=\"avatar\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#avatar-1\"><code>url</code></a></li><li class=\"tab\"><a href=\"#avatar-2\"><code>rounded</code></a></li><li class=\"tab\"><a href=\"#avatar-3\"><code>rotated</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"avatar-1\"><p>For first test you can uncomment <code>/images/avatar.gif</code> value near the <code>avatar.url</code> setting to see default avatar:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">avatar:</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span> <span class=\"string\">/images/avatar.gif</span></span><br></pre></td></tr></table></figure>\n\n<p>Then you need to specify your own avatar. It can be done one of the ways below:</p>\n<div class=\"tabs\" id=\"avatar1\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#avatar1-1\"><mark class=\"label success\">Hexo directory</mark></a></li><li class=\"tab\"><a href=\"#avatar1-2\">NexT directory</a></li><li class=\"tab\"><a href=\"#avatar1-3\">Absolute URL from Internet</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"avatar1-1\"><p>Put your avatar under <mark class=\"label info\">site directory</mark> <code>source/uploads/</code> (create directory if it doesn&#39;t exists).<br>And then change option to <code>url: /uploads/avatar.png</code>.</p></div><div class=\"tab-pane\" id=\"avatar1-2\"><p>Put your avatar under <mark class=\"label primary\">theme directory</mark> <code>source/images/</code>.<br>And then change option to <code>url: /images/avatar.png</code>.</p>\n<div class=\"note info\"><p>Current site uses avatar under <mark class=\"label primary\">theme directory</mark> from file located in <code>next/source/images/apple-touch-icon-next.png</code> with following config:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">avatar:</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span> <span class=\"string\">/images/apple-touch-icon-next.png</span></span><br></pre></td></tr></table></figure>\n</div></div><div class=\"tab-pane\" id=\"avatar1-3\"><p>You can also specify any external URL with absolute path to image: <code>http(s)://example.com/avatar.png</code></p></div></div></div></div><div class=\"tab-pane\" id=\"avatar-2\"><p>Set up rounded of avatar by changing the value of <code>avatar.rounded</code>:</p>\n<ul>\n<li><code>true</code> → Avatar will be rounded.</li>\n<li><strong><code>false</code></strong> → Avatar will be squared.</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">avatar:</span></span><br><span class=\"line\">  <span class=\"attr\">rounded:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"avatar-3\"><p>Set up rotated of avatar by changing the value of <code>avatar.rotated</code>:</p>\n<ul>\n<li><code>true</code> → Avatar will be rotate under the mouse hovering.</li>\n<li><strong><code>false</code></strong> → Avatar will not rotate under the mouse hovering.</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">avatar:</span></span><br><span class=\"line\">  <span class=\"attr\">rotated:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h3 id=\"Sidebar-Site-State\"><a href=\"#Sidebar-Site-State\" class=\"headerlink\" title=\"Sidebar Site State\"></a>Sidebar Site State</h3><p>By default NexT shows the categories and counts of Posts &#x2F; Categories &#x2F; Tags in sidebar. You can configure it by editing value <code>site_state</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">site_state:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Sidebar-Social-Links\"><a href=\"#Sidebar-Social-Links\" class=\"headerlink\" title=\"Sidebar Social Links\"></a>Sidebar Social Links</h3><div class=\"note default\"><p>Social Links have similar structure as <a href=\"/docs/theme-settings/#Configuring-Menu-Items\">Menu Items</a>, only target link there is difference: specified link must have full url path (permalink).</p>\n</div>\n\n<p>Edit the <code>social</code> section in <mark class=\"label primary\">NexT config file</mark> as following:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">social:</span></span><br><span class=\"line\">  <span class=\"attr\">GitHub:</span> <span class=\"string\">https://github.com/yourname</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-github</span></span><br><span class=\"line\">  <span class=\"attr\">E-Mail:</span> <span class=\"string\">mailto:yourname@gmail.com</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-envelope</span></span><br><span class=\"line\">  <span class=\"attr\">Weibo:</span> <span class=\"string\">https://weibo.com/yourname</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-weibo</span></span><br><span class=\"line\">  <span class=\"attr\">Twitter:</span> <span class=\"string\">https://twitter.com/yourname</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-twitter</span></span><br><span class=\"line\">  <span class=\"attr\">FB Page:</span> <span class=\"string\">https://www.facebook.com/yourname</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-facebook</span></span><br><span class=\"line\">  <span class=\"attr\">StackOverflow:</span> <span class=\"string\">https://stackoverflow.com/yourname</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-stack-overflow</span></span><br><span class=\"line\">  <span class=\"attr\">YouTube:</span> <span class=\"string\">https://youtube.com/yourname</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-youtube</span></span><br><span class=\"line\">  <span class=\"attr\">Instagram:</span> <span class=\"string\">https://instagram.com/yourname</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-instagram</span></span><br><span class=\"line\">  <span class=\"attr\">Skype:</span> <span class=\"string\">skype:yourname?call|chat</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-skype</span></span><br></pre></td></tr></table></figure>\n\n<p>By default NexT shows the icons of social links in sidebar.</p>\n<div class=\"tabs\" id=\"social_icons\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#social_icons-1\"><code>enable</code></a></li><li class=\"tab\"><a href=\"#social_icons-2\"><code>icons_only</code></a></li><li class=\"tab\"><a href=\"#social_icons-3\"><code>transition</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"social_icons-1\"><p>You can configure it by editing value <code>enable</code> in <code>social_icons</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">social_icons:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"social_icons-2\"><p>Set the value <code>icons_only</code> to <code>true</code> to display social icons without description in <code>social_icons</code> section in <mark class=\"label primary\">NexT config file</mark> as following:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">social_icons:</span></span><br><span class=\"line\">  <span class=\"attr\">icons_only:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"social_icons-3\"><p>Set the value <code>transition</code> to <code>true</code> to display social icons with transition effects in <code>social_icons</code> section in <mark class=\"label primary\">NexT config file</mark> as following:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">social_icons:</span></span><br><span class=\"line\">  <span class=\"attr\">transition:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h3 id=\"Sidebar-Blogrolls\"><a href=\"#Sidebar-Blogrolls\" class=\"headerlink\" title=\"Sidebar Blogrolls\"></a>Sidebar Blogrolls</h3><p>You can add blog rolls within sidebar in NexT.</p>\n<div class=\"tabs\" id=\"blogrolls\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#blogrolls-1\"><code>links_settings</code></a></li><li class=\"tab\"><a href=\"#blogrolls-2\"><code>links</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"blogrolls-1\"><p>By default NexT shows the <code>globe</code> icon <a class=\"btn\" href=\"#\"><i class=\"fa fa-globe\"></i></a> before <code>title</code>. The name of icon can be found in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5jb20v\">Font Awesome<i class=\"fa fa-external-link-alt\"></i></span> site. You can configure it by editing value <code>icon</code> in <code>links_settings</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">links_settings:</span></span><br><span class=\"line\">  <span class=\"attr\">icon:</span> <span class=\"string\">fa</span> <span class=\"string\">fa-globe</span></span><br></pre></td></tr></table></figure>\n\n<p>By default all blogrolls are displayed in block. You can configure it to <code>inline</code> by editing value <code>layout</code> in <code>links_settings</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">links_settings:</span></span><br><span class=\"line\">  <span class=\"attr\">layout:</span> <span class=\"string\">block</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"blogrolls-2\"><p>Edit the <code>links</code> section in <mark class=\"label primary\">NexT config file</mark> and add your favorite links:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">links:</span></span><br><span class=\"line\">  <span class=\"attr\">Title1:</span> <span class=\"string\">https://example1.com/</span></span><br><span class=\"line\">  <span class=\"attr\">Title2:</span> <span class=\"string\">https://example2.com/</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h3 id=\"Sidebar-TOC\"><a href=\"#Sidebar-TOC\" class=\"headerlink\" title=\"Sidebar TOC\"></a>Sidebar TOC</h3><div class=\"tabs\" id=\"toc\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#toc-1\"><code>enable</code></a></li><li class=\"tab\"><a href=\"#toc-2\"><code>number</code></a></li><li class=\"tab\"><a href=\"#toc-3\"><code>wrap</code></a></li><li class=\"tab\"><a href=\"#toc-4\"><code>expand_all</code></a></li><li class=\"tab\"><a href=\"#toc-5\"><code>max_depth</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"toc-1\"><p>By default NexT shows <code>Table Of Contents (TOC)</code> in the sidebar. You can disable it by setting <code>toc.enable</code> to <code>false</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">toc:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"toc-2\"><p>By default NexT adds list number to TOC automatically. You can disable it by setting <code>toc.number</code> to <code>false</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">toc:</span></span><br><span class=\"line\">  <span class=\"attr\">number:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"toc-3\"><p>If the post header width longer than sidebar width, you can wrap the header words in next lines by setting <code>toc.wrap</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">toc:</span></span><br><span class=\"line\">  <span class=\"attr\">wrap:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"toc-4\"><p>If you want all level of TOC in a post to be displayed, rather than the activated part of it, you can set <code>toc.expand_all</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">toc:</span></span><br><span class=\"line\">  <span class=\"attr\">expand_all:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"toc-5\"><p>By default maximum heading depth of generated toc is 6. You can set it by setting <code>toc.max_depth</code> to <code>another number</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">toc:</span></span><br><span class=\"line\">  <span class=\"attr\">max_depth:</span> <span class=\"number\">3</span></span><br></pre></td></tr></table></figure></div></div></div>\n"},{"title":"Misc Theme Settings","url":"/docs/theme-settings/miscellaneous.html","content":"<h3 id=\"Preconnect\"><a href=\"#Preconnect\" class=\"headerlink\" title=\"Preconnect\"></a>Preconnect</h3><p>NexT supports adding preconnect resource hints to establish early connections to fonts and plugins origins.</p>\n<p>You can enable it by setting <code>preconnect: true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Preconnect CDN for fonts and plugins.</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://www.w3.org/TR/resource-hints/#preconnect</span></span><br><span class=\"line\"><span class=\"attr\">preconnect:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Text-Align\"><a href=\"#Text-Align\" class=\"headerlink\" title=\"Text Align\"></a>Text Align</h3><p>NexT allows to customize the text alignment in posts &#x2F; pages. The <code>text-align</code> CSS property sets the horizontal alignment of a block element or table-cell box.</p>\n<table>\n<thead>\n<tr>\n<th>Values</th>\n<th>Effect</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>start</code></td>\n<td>The same as <code>left</code> if direction is left-to-right and <code>right</code> if direction is right-to-left.</td>\n</tr>\n<tr>\n<td><code>end</code></td>\n<td>The same as <code>right</code> if direction is left-to-right and <code>left</code> if direction is right-to-left.</td>\n</tr>\n<tr>\n<td><code>left</code></td>\n<td>The inline contents are aligned to the left edge of the line box.</td>\n</tr>\n<tr>\n<td><code>right</code></td>\n<td>The inline contents are aligned to the right edge of the line box.</td>\n</tr>\n<tr>\n<td><code>center</code></td>\n<td>The inline contents are centered within the line box.</td>\n</tr>\n<tr>\n<td><code>justify</code></td>\n<td>The inline contents are justified. Text should be spaced to line up its left and right edges to the left and right edges of the line box, except for the last line.</td>\n</tr>\n<tr>\n<td><code>justify-all</code></td>\n<td>Same as <code>justify</code>, but also forces the last line to be justified.</td>\n</tr>\n<tr>\n<td><code>match-parent</code></td>\n<td>Similar to <code>inherit</code>, but the values <code>start</code> and <code>end</code> are calculated according to the parent&#39;s direction and are replaced by the appropriate <code>left</code> or <code>right</code> value.</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Set the text alignment in the posts.</span></span><br><span class=\"line\"><span class=\"attr\">text_align:</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: start | end | left | right | center | justify | justify-all | match-parent</span></span><br><span class=\"line\">  <span class=\"attr\">desktop:</span> <span class=\"string\">justify</span></span><br><span class=\"line\">  <span class=\"attr\">mobile:</span> <span class=\"string\">justify</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Mobile-Devices-Adaptation\"><a href=\"#Mobile-Devices-Adaptation\" class=\"headerlink\" title=\"Mobile Devices Adaptation\"></a>Mobile Devices Adaptation</h3><p>If you want to reduce padding&#x2F;margin indents on devices with narrow width, you can enable it by setting value <code>mobile_layout_economy</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mobile_layout_economy:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Theme-Color\"><a href=\"#Theme-Color\" class=\"headerlink\" title=\"Theme Color\"></a>Theme Color</h3><p>By default NexT uses black-deep (<code>#222</code>) as the color of browser header panel (it&#39;s supported by Safari 15 and Android Chrome). You can configure it by editing values with Hex color in <code>theme_color</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme_color:</span></span><br><span class=\"line\">  <span class=\"attr\">light:</span> <span class=\"string\">&quot;#222&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">dark:</span> <span class=\"string\">&quot;#222&quot;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Body-Scrollbar\"><a href=\"#Body-Scrollbar\" class=\"headerlink\" title=\"Body Scrollbar\"></a>Body Scrollbar</h3><figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Override browsers&#x27; default behavior.</span></span><br><span class=\"line\"><span class=\"attr\">body_scrollbar:</span></span><br><span class=\"line\">  <span class=\"comment\"># Place the scrollbar over the content.</span></span><br><span class=\"line\">  <span class=\"attr\">overlay:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Present the scrollbar even if the content is not overflowing.</span></span><br><span class=\"line\">  <span class=\"attr\">stable:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Codeblock-Style\"><a href=\"#Codeblock-Style\" class=\"headerlink\" title=\"Codeblock Style\"></a>Codeblock Style</h3><div class=\"tabs\" id=\"codeblock\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#codeblock-1\"><code>theme</code></a></li><li class=\"tab\"><a href=\"#codeblock-2\"><code>copy_button</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"codeblock-1\"><p>NexT uses the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oaWdobGlnaHRqcy5vcmcv\">Highlight.js<i class=\"fa fa-external-link-alt\"></i></span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcmlzbWpzLmNvbS8=\">Prism<i class=\"fa fa-external-link-alt\"></i></span> package to support code highlight.</p>\n<div class=\"note warning\"><p>Please read Hexo&#39;s documentation on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc3ludGF4LWhpZ2hsaWdodA==\">Syntax Highlighting<i class=\"fa fa-external-link-alt\"></i></span> first, and set it up in <mark class=\"label info\">Hexo config file</mark>.</p>\n</div>\n\n<p>You can preview all available Code Highlight themes here: <a href=\"https://theme-next.js.org/highlight/\">NexT Highlight Theme Preview</a>. Change the value of <code>theme</code> and <code>prism</code> to choose the highlight style you like.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">codeblock:</span></span><br><span class=\"line\">  <span class=\"comment\"># Code Highlight theme</span></span><br><span class=\"line\">  <span class=\"comment\"># All available themes: https://theme-next.js.org/highlight/</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span></span><br><span class=\"line\">    <span class=\"attr\">light:</span> <span class=\"string\">default</span></span><br><span class=\"line\">    <span class=\"attr\">dark:</span> <span class=\"string\">stackoverflow-dark</span></span><br><span class=\"line\">  <span class=\"attr\">prism:</span></span><br><span class=\"line\">    <span class=\"attr\">light:</span> <span class=\"string\">prism</span></span><br><span class=\"line\">    <span class=\"attr\">dark:</span> <span class=\"string\">prism-dark</span></span><br></pre></td></tr></table></figure>\n\n<p>If Dark Mode is enabled, dark code highlighting themes will be available.</p></div><div class=\"tab-pane\" id=\"codeblock-2\"><p>NexT supports the copy-and-paste functionality of codeblock.</p>\n<div class=\"tabs\" id=\"codeblock1\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#codeblock1-1\"><code>enable</code></a></li><li class=\"tab\"><a href=\"#codeblock1-2\"><code>style</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"codeblock1-1\"><p>You can enable it by setting value <code>copy_button.enable</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>. By default NexT shows copy result of the copy-and-paste functionality.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">codeblock:</span></span><br><span class=\"line\">  <span class=\"attr\">copy_button:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"codeblock1-2\"><p>With <code>style</code> option, you can change your copy button style.<br>There are three style available currently: <code>default</code> (Just leave it empty), <code>flat</code> and <code>mac</code>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">codeblock:</span></span><br><span class=\"line\">  <span class=\"attr\">copy_button:</span></span><br><span class=\"line\">    <span class=\"attr\">style:</span> <span class=\"string\">flat</span></span><br></pre></td></tr></table></figure></div></div></div></div></div></div>\n\n<h3 id=\"Back-To-Top\"><a href=\"#Back-To-Top\" class=\"headerlink\" title=\"Back To Top\"></a>Back To Top</h3><div class=\"tabs\" id=\"b2t\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#b2t-1\"><code>enable</code></a></li><li class=\"tab\"><a href=\"#b2t-2\"><code>sidebar</code></a></li><li class=\"tab\"><a href=\"#b2t-3\"><code>scrollpercent</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"b2t-1\"><figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">back2top:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>Set the value <code>back2top.enable</code> to <code>true</code> to display <code>Back to top</code> button.</p></div><div class=\"tab-pane\" id=\"b2t-2\"><figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">back2top:</span></span><br><span class=\"line\">  <span class=\"comment\"># Back to top in sidebar.</span></span><br><span class=\"line\">  <span class=\"attr\">sidebar:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>Set the value <code>back2top.sidebar</code> to <code>true</code> to put the button in sidebar.</p></div><div class=\"tab-pane\" id=\"b2t-3\"><figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">back2top:</span></span><br><span class=\"line\">  <span class=\"comment\"># Scroll percent label in b2t button.</span></span><br><span class=\"line\">  <span class=\"attr\">scrollpercent:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>Set the value <code>back2top.scrollpercent</code> to <code>true</code> to display scroll percent label in <code>Back to top</code> button.</p></div></div></div>\n\n<h3 id=\"Reading-Progress\"><a href=\"#Reading-Progress\" class=\"headerlink\" title=\"Reading Progress\"></a>Reading Progress</h3><p>NexT supports the page scroll reading progress indicator.</p>\n<p>You can enable it by setting value <code>reading_progress.enable</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">reading_progress:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: left | right</span></span><br><span class=\"line\">  <span class=\"attr\">start_at:</span> <span class=\"string\">left</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: top | bottom</span></span><br><span class=\"line\">  <span class=\"attr\">position:</span> <span class=\"string\">top</span></span><br><span class=\"line\">  <span class=\"attr\">reversed:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">color:</span> <span class=\"string\">&quot;#37c6c0&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">height:</span> <span class=\"string\">2px</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Bookmark\"><a href=\"#Bookmark\" class=\"headerlink\" title=\"Bookmark\"></a>Bookmark</h3><p>Bookmark is a plugin that allow the users save their reading progress. Users could just click the bookmark icon (like 🔖) in left-top of the page to save the scroll position. And when they visit your blog in the next time, they can resume the last scroll position of each page automatically.</p>\n<p>You can enable it by setting value <code>bookmark.enable</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">bookmark:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Customize the color of the bookmark.</span></span><br><span class=\"line\">  <span class=\"attr\">color:</span> <span class=\"string\">&quot;#222&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># If auto, save the reading progress when closing the page or clicking the bookmark-icon.</span></span><br><span class=\"line\">  <span class=\"comment\"># If manual, only save it by clicking the bookmark-icon.</span></span><br><span class=\"line\">  <span class=\"attr\">save:</span> <span class=\"string\">auto</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"GitHub-Banner\"><a href=\"#GitHub-Banner\" class=\"headerlink\" title=\"GitHub Banner\"></a>GitHub Banner</h3><p>NexT provides <code>Follow me on GitHub</code> banner in right-top corner.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Follow me on GitHub banner in right-top corner.</span></span><br><span class=\"line\"><span class=\"attr\">github_banner:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">permalink:</span> <span class=\"string\">https://github.com/yourname</span></span><br></pre></td></tr></table></figure>\n\n<p>You can set <code>enable</code> to <code>true</code> and add your own GitHub link.</p>\n<h3 id=\"Fonts-Customization\"><a href=\"#Fonts-Customization\" class=\"headerlink\" title=\"Fonts Customization\"></a>Fonts Customization</h3><p>NexT gives you 5 specific font settings, they are:</p>\n<ul>\n<li>Global Font: Font used in the whole site.</li>\n<li>Title Font: Font used by site title.</li>\n<li>Headlines Font: Font used by headings in articles (h1, h2, h3, h4, h5, h6).</li>\n<li>Article Font: Font used by articles.</li>\n<li>Code Font: Font used by code blocks in articles.</li>\n</ul>\n<p>Each font will be used as the first font of this class, NexT will fallback to internal font settings if they are unavailable.</p>\n<ul>\n<li>Non-code Font: Fallback to <code>&quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif</code></li>\n<li>Code Font: Fallback to <code>consolas, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, monospace</code></li>\n</ul>\n<p>Plus each section has a <code>external</code> attribute, this controls whether to use the font library CDN.<br>Use this can help you to use fonts installed in system and reduce unnecessary requests.</p>\n<div class=\"note info\"><p>To solve the unstable of <span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250cy5nb29nbGUuY29tLw==\">Google Fonts API<i class=\"fa fa-external-link-alt\"></i></span> in some countries, NexT supports custom URL of fonts library by setting <code>font.host</code>.<br>In addition, we noticed that for requests from certain websites, Google Fonts will return 403. At this time, it is necessary to use <code>font.host</code> to set up a mirror site.<br>Relevant issues: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L2lzc3Vlcy82MTM=\">#613<i class=\"fa fa-external-link-alt\"></i></span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L2lzc3Vlcy8xMzMz\">#1333<i class=\"fa fa-external-link-alt\"></i></span></p>\n</div>\n\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">font:</span></span><br><span class=\"line\">  <span class=\"comment\"># Use custom fonts families or not.</span></span><br><span class=\"line\">  <span class=\"comment\"># Depended options: `external` and `family`.</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Uri of fonts host, e.g. https://fonts.googleapis.com (Default).</span></span><br><span class=\"line\">  <span class=\"attr\">host:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Font options:</span></span><br><span class=\"line\">  <span class=\"comment\"># `external: true` will load this font family from `host` above.</span></span><br><span class=\"line\">  <span class=\"comment\"># `family: Times New Roman`. Without any quotes.</span></span><br><span class=\"line\">  <span class=\"comment\"># `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Global font settings used for all elements inside &lt;body&gt;.</span></span><br><span class=\"line\">  <span class=\"attr\">global:</span></span><br><span class=\"line\">    <span class=\"attr\">external:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">family:</span> <span class=\"string\">Monda</span></span><br><span class=\"line\">    <span class=\"attr\">size:</span> <span class=\"number\">1.125</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Font settings for site title (.site-title).</span></span><br><span class=\"line\">  <span class=\"attr\">title:</span></span><br><span class=\"line\">    <span class=\"attr\">external:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">family:</span> <span class=\"string\">Lobster</span> <span class=\"string\">Two</span></span><br><span class=\"line\">    <span class=\"attr\">size:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).</span></span><br><span class=\"line\">  <span class=\"attr\">headings:</span></span><br><span class=\"line\">    <span class=\"attr\">external:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">family:</span> <span class=\"string\">Amita</span></span><br><span class=\"line\">    <span class=\"attr\">size:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Font settings for posts (.post-body).</span></span><br><span class=\"line\">  <span class=\"attr\">posts:</span></span><br><span class=\"line\">    <span class=\"attr\">external:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">family:</span> <span class=\"string\">Montserrat</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Font settings for &lt;code&gt; and code blocks.</span></span><br><span class=\"line\">  <span class=\"attr\">codes:</span></span><br><span class=\"line\">    <span class=\"attr\">external:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">family:</span> <span class=\"string\">PT</span> <span class=\"string\">Mono</span></span><br></pre></td></tr></table></figure>\n\n<p>And you can apply multiple font families for each option. This is especially useful for those who often writes both Chinese and English.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">font:</span></span><br><span class=\"line\">  <span class=\"string\">...</span></span><br><span class=\"line\">  <span class=\"attr\">title:</span></span><br><span class=\"line\">    <span class=\"attr\">external:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">family:</span> <span class=\"string\">Roboto</span> <span class=\"string\">Slab,</span> <span class=\"string\">Noto</span> <span class=\"string\">Serif</span> <span class=\"string\">SC</span></span><br><span class=\"line\">    <span class=\"attr\">size:</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note info\"><p>According to the <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzMub3JnL1RSLzIwMTgvUkVDLWNzcy1mb250cy0zLTIwMTgwOTIwLyNwcm9wZGVmLWZvbnQtZmFtaWx5\">CSS Fonts Module Level 3<i class=\"fa fa-external-link-alt\"></i></span> spec:</p>\n<blockquote>\n<p>Font family names other than generic families must either be given quoted as strings, or unquoted as a sequence of one or more identifiers.</p>\n</blockquote>\n<p>To avoid escaping mistakes, quote font family names if necessary.</p>\n</div>\n\n<p>If you still need more customization, following change will cover Fonts Customization function. Edit <code>source/_data/variables.styl</code> in <mark class=\"label info\">site root directory</mark> and add two variables:</p>\n<figure class=\"highlight styl\"><figcaption><span>hexo/source/_data/variables.styl</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Title Font, set it to font family you want.</span></span><br><span class=\"line\"><span class=\"variable\">$font</span>-family-headings = Georgia, sans</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Set it to font family you want.</span></span><br><span class=\"line\"><span class=\"variable\">$font</span>-family-base = <span class=\"string\">&quot;Microsoft YaHei&quot;</span>, Verdana, sans-serif</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Code Font.</span></span><br><span class=\"line\"><span class=\"variable\">$code</span>-<span class=\"attribute\">font-family</span> = <span class=\"string\">&quot;Input Mono&quot;</span>, <span class=\"string\">&quot;PT Mono&quot;</span>, Consolas, Monaco, Menlo, monospace</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Font size of articles.</span></span><br><span class=\"line\"><span class=\"variable\">$font</span>-size-base = <span class=\"number\">16px</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Font size of table and code.</span></span><br><span class=\"line\"><span class=\"variable\">$table</span>-<span class=\"attribute\">font-size</span> = <span class=\"number\">13px</span></span><br></pre></td></tr></table></figure>\n\n<p>Then uncomment <code>variable</code> under the <code>custom_file_path</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n"},{"title":"Chat Services","url":"/docs/third-party-services/chat-services.html","content":"<h3 id=\"Chatra\"><a href=\"#Chatra\" class=\"headerlink\" title=\"Chatra\"></a>Chatra</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaGF0cmEuY29tLw==\">Chatra<i class=\"fa fa-external-link-alt\"></i></span> is a live chat messenger app for your website.</p>\n<div class=\"tabs\" id=\"chatra\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#chatra-1\">Enable Chatra →</a></li><li class=\"tab\"><a href=\"#chatra-2\">Activate sidebar button</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"chatra-1\"><p>Visit <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcHAuY2hhdHJhLmlvL3NldHRpbmdzL2dlbmVyYWw=\">Dashboard<i class=\"fa fa-external-link-alt\"></i></span> to get your ChatraID.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Chatra Support</span></span><br><span class=\"line\"><span class=\"attr\">chatra:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">async:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">id:</span> <span class=\"string\">&lt;ChatraID&gt;</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"chatra-2\"><p>After Chatra enabled, you can set <code>chat.enable</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># A button to open designated chat widget in sidebar.</span></span><br><span class=\"line\"><span class=\"comment\"># Firstly, you need enable the chat service you want to activate its sidebar button.</span></span><br><span class=\"line\"><span class=\"attr\">chat:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">icon:</span> <span class=\"string\">fa</span> <span class=\"string\">fa-comment</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h3 id=\"Tidio\"><a href=\"#Tidio\" class=\"headerlink\" title=\"Tidio\"></a>Tidio</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGlkaW8uY29tLw==\">Tidio<i class=\"fa fa-external-link-alt\"></i></span> is a live chat messenger app for your website.</p>\n<div class=\"tabs\" id=\"tidio\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tidio-1\">Enable Tidio →</a></li><li class=\"tab\"><a href=\"#tidio-2\">Activate sidebar button</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tidio-1\"><p>Visit <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGlkaW8uY29tL3BhbmVsL2Rhc2hib2FyZA==\">Dashboard<i class=\"fa fa-external-link-alt\"></i></span> to get your Public Key.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Tidio Support</span></span><br><span class=\"line\"><span class=\"attr\">tidio:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">key:</span> <span class=\"string\">&lt;Publick</span> <span class=\"string\">Key&gt;</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"tidio-2\"><p>After Tidio enabled, you can set <code>chat.enable</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># A button to open designated chat widget in sidebar.</span></span><br><span class=\"line\"><span class=\"comment\"># Firstly, you need enable the chat service you want to activate its sidebar button.</span></span><br><span class=\"line\"><span class=\"attr\">chat:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">icon:</span> <span class=\"string\">fa</span> <span class=\"string\">fa-comment</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h3 id=\"Gitter\"><a href=\"#Gitter\" class=\"headerlink\" title=\"Gitter\"></a>Gitter</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXR0ZXIuaW0v\">Gitter<i class=\"fa fa-external-link-alt\"></i></span> is a chat and networking platform that helps to manage, grow and connect communities through messaging, content and discovery.</p>\n<div class=\"tabs\" id=\"gitter\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#gitter-1\">Enable Gitter →</a></li><li class=\"tab\"><a href=\"#gitter-2\">Activate sidebar button</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"gitter-1\"><p>You need to create a community, then create a webapp room under that community.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Gitter Support</span></span><br><span class=\"line\"><span class=\"attr\">gitter:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">room:</span> <span class=\"string\">&lt;Community&gt;/&lt;Room</span> <span class=\"string\">Name&gt;</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"gitter-2\"><p>After Gitter enabled, you can set <code>chat.enable</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># A button to open designated chat widget in sidebar.</span></span><br><span class=\"line\"><span class=\"comment\"># Firstly, you need enable the chat service you want to activate its sidebar button.</span></span><br><span class=\"line\"><span class=\"attr\">chat:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">icon:</span> <span class=\"string\">fa</span> <span class=\"string\">fa-comment</span></span><br></pre></td></tr></table></figure></div></div></div>\n"},{"title":"Comment Systems","url":"/docs/third-party-services/comments.html","content":"<h3 id=\"Overview\"><a href=\"#Overview\" class=\"headerlink\" title=\"Overview\"></a>Overview</h3><h4 id=\"Multiple-Comment-System-Support\"><a href=\"#Multiple-Comment-System-Support\" class=\"headerlink\" title=\"Multiple Comment System Support\"></a>Multiple Comment System Support</h4><p>NexT allows you to enable multiple commenting systems at the same time. You can modify the following configuration to adjust the style or behavior of multiple commenting systems.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Multiple Comment System Support</span></span><br><span class=\"line\"><span class=\"attr\">comments:</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: tabs | buttons</span></span><br><span class=\"line\">  <span class=\"attr\">style:</span> <span class=\"string\">tabs</span></span><br><span class=\"line\">  <span class=\"comment\"># Choose a comment system to be displayed by default</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: disqus | disqusjs | changyan | livere | gitalk | utterances | isso</span></span><br><span class=\"line\">  <span class=\"attr\">active:</span></span><br><span class=\"line\">  <span class=\"comment\"># Setting `true` means remembering the comment system selected by the visitor</span></span><br><span class=\"line\">  <span class=\"attr\">storage:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Lazyload all comment systems.</span></span><br><span class=\"line\">  <span class=\"attr\">lazyload:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Modify icons and texts for any style, here are some examples</span></span><br><span class=\"line\">  <span class=\"attr\">nav:</span></span><br><span class=\"line\">    <span class=\"comment\">#disqus:</span></span><br><span class=\"line\">    <span class=\"comment\">#  text: Load Disqus</span></span><br><span class=\"line\">    <span class=\"comment\">#  order: -1</span></span><br><span class=\"line\">    <span class=\"comment\">#gitalk:</span></span><br><span class=\"line\">    <span class=\"comment\">#  order: -2</span></span><br></pre></td></tr></table></figure>\n\n<p>You can enable lazyload by setting value <code>comments.lazyload</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>. NexT uses IntersectionObserver to lazyload the comments, which is not supported by IE and most browsers released before 2017.</p>\n<iframe data-feature=\"intersectionobserver\" src=\"https://caniuse.bitsofco.de/embed/index.html?feat=intersectionobserver&periods=current,past_1,past_2,past_3,past_4,past_5&accessible-colours=false\" frameborder=\"0\" width=\"100%\" height=\"400px\"></iframe>\n\n<h4 id=\"How-to-Disable-Comments-on-Page\"><a href=\"#How-to-Disable-Comments-on-Page\" class=\"headerlink\" title=\"How to Disable Comments on Page\"></a>How to Disable Comments on Page</h4><p>When you enabled comment service like Disqus, all new page will have comment service automatically. If you want to disable it in one page, just add <code>comments</code> key to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZnJvbnQtbWF0dGVy\">front-matter<i class=\"fa fa-external-link-alt\"></i></span> and set its value to <code>false</code>. Like following:</p>\n<figure class=\"highlight md\"><figcaption><span>your-post.md</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">title: All tags</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\"><span class=\"section\">comments: false</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Rename-Comment-Count-Text\"><a href=\"#Rename-Comment-Count-Text\" class=\"headerlink\" title=\"Rename Comment Count Text\"></a>Rename Comment Count Text</h4><p>You can rename the post meta text of comment count using <code>languages.yml</code>: <a href=\"/docs/theme-settings/internationalization.html#Override-Default-Translations\">Override Default Translations</a>.</p>\n<h3 id=\"Disqus\"><a href=\"#Disqus\" class=\"headerlink\" title=\"Disqus\"></a>Disqus</h3><p>Disqus is a global comment system that improves discussion on websites and connects conversations across the web.</p>\n<ol>\n<li><p>Create an account and log into <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXNxdXMuY29tLw==\">Disqus<i class=\"fa fa-external-link-alt\"></i></span>. Once logged in, click the <code>GET STARTED</code> button on the homepage, then select <code>I want to install Disqus on my site</code> option and you will see the <code>Create a new site</code> interface.</p>\n</li>\n<li><p>Enter your <code>Website Name</code>, which will serve as your Disqus shortname, and select a Category from the drop-down menu. Then click <code>Create Site</code> button.</p>\n</li>\n<li><p>Choose <code>I don&#39;t see my platform listed, install manually with Universal Code</code>, configure Disqus for your site, and click <code>Complete Setup</code> button.</p>\n</li>\n<li><p>Set the value <code>enable</code> to <code>true</code>, add the obtained Disqus shortname (<code>shortname</code>), and edit other configurations in <code>disqus</code> section in the <mark class=\"label primary\">NexT config file</mark> as following:</p>\n <figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">disqus:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">shortname:</span> <span class=\"string\">your-short-disqus-name</span></span><br><span class=\"line\">  <span class=\"attr\">count:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"DisqusJS\"><a href=\"#DisqusJS\" class=\"headerlink\" title=\"DisqusJS\"></a>DisqusJS</h3><p>Render Disqus comment component using Disqus API.</p>\n<ol>\n<li><p>Get your Disqus API Key from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXNxdXMuY29tL2FwaS9hcHBsaWNhdGlvbnMv\">Disqus API Application<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n</li>\n<li><p>Go to the settings page of your Disqus Application, enter your domain in Settings → Domains.</p>\n</li>\n<li><p>Get your Disqus Shortname from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXNxdXMuY29tL2FkbWluL3NldHRpbmdzL2dlbmVyYWwv\">General Settings - Disqus Admin<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n</li>\n<li><p>Set the value <code>enable</code> to <code>true</code>, add the obtained Disqus API Key (<code>apikey</code>) and Shortname (<code>shortname</code>), and edit other configurations in <code>disqusjs</code> section in the <mark class=\"label primary\">NexT config file</mark> as following:</p>\n <figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># DisqusJS</span></span><br><span class=\"line\"><span class=\"comment\"># Demo: https://disqusjs.skk.moe</span></span><br><span class=\"line\"><span class=\"attr\">disqusjs:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># API Endpoint of Disqus API (https://disqus.com/api/docs/)</span></span><br><span class=\"line\">  <span class=\"comment\"># leave api empty if you are able to connect to Disqus API</span></span><br><span class=\"line\">  <span class=\"comment\"># otherwise you need a reverse proxy for Disqus API</span></span><br><span class=\"line\">  <span class=\"comment\"># For example:</span></span><br><span class=\"line\">  <span class=\"comment\"># api: https://disqus.skk.moe/disqus/</span></span><br><span class=\"line\">  <span class=\"attr\">api:</span></span><br><span class=\"line\">  <span class=\"attr\">apikey:</span> <span class=\"comment\"># register new application from https://disqus.com/api/applications/</span></span><br><span class=\"line\">  <span class=\"attr\">shortname:</span> <span class=\"comment\"># See: https://disqus.com/admin/settings/general/</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"Changyan-China\"><a href=\"#Changyan-China\" class=\"headerlink\" title=\"Changyan (China)\"></a>Changyan (China)</h3><p>Changyan is the industry&#39;s leading social commenting system, supporting both PC and mobile access methods, providing a new way of commenting on websites. Changyan has a variety of common account login, triple filtering mechanism, real-time data statistics, fast data export, comprehensive support for mobile and other leading functions. It fully satisfies the needs of major websites for user login, comment, sharing, and review.</p>\n<ol>\n<li><p>Create an account or log into <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaGFuZ3lhbi5rdWFpemhhbi5jb20v\">Changyan<i class=\"fa fa-external-link-alt\"></i></span>, then add your site to get APP ID and APP KEY.</p>\n</li>\n<li><p>Set the value <code>enable</code> to <code>true</code>, and add the obtained APP ID (<code>appid</code>) and APP KEY (<code>appkey</code>) to the <code>changyan</code> section in the <mark class=\"label primary\">NexT config file</mark> as following:</p>\n <figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># changyan</span></span><br><span class=\"line\"><span class=\"attr\">changyan:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">appid:</span></span><br><span class=\"line\">  <span class=\"attr\">appkey:</span></span><br><span class=\"line\">  <span class=\"attr\">count:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>Note: after you comment, it will take some time for you to see the increase in the number of comments.</p>\n<h3 id=\"LiveRe\"><a href=\"#LiveRe\" class=\"headerlink\" title=\"LiveRe\"></a>LiveRe</h3><p>LiveRe is a content platform based on social networking site reviews to help users communicate freely.</p>\n<ol>\n<li><p>Create an account or log into <span class=\"exturl\" data-url=\"aHR0cHM6Ly9saXZlcmUuY29tLw==\">LiveRe<i class=\"fa fa-external-link-alt\"></i></span>, click on the <code>installation</code> button and select the free city version, then click on the <code>install now</code> button.</p>\n</li>\n<li><p>Copy the <code>data-uid</code> field in the installation code to get your LiveRe UID.</p>\n</li>\n<li><p>Add the obtained LiveRe UID to the <code>livere_uid</code> section in the <mark class=\"label primary\">NexT config file</mark> as following:</p>\n <figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Support for LiveRe comments system.</span></span><br><span class=\"line\"><span class=\"comment\"># You can get your uid from https://livere.com/insight/myCode (General web site)</span></span><br><span class=\"line\"><span class=\"attr\">livere_uid:</span> <span class=\"string\">your_uid</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"Gitalk\"><a href=\"#Gitalk\" class=\"headerlink\" title=\"Gitalk\"></a>Gitalk</h3><p>Gitalk is a modern comment component based on Github Issue and Preact.</p>\n<ol>\n<li><p>Click here to sign up for a <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL2FwcGxpY2F0aW9ucy9uZXc=\">new OAuth Application<i class=\"fa fa-external-link-alt\"></i></span>. Other content can be filled in at will, but be sure to fill in the correct callback URL (usually the domain name corresponding to the comment page). Then you will get a Client ID and a Client secret.</p>\n</li>\n<li><p>Create a repository you want to store Gitalk comments in your GitHub.</p>\n</li>\n<li><p>Set the value <code>enable</code> to <code>true</code>, add Client ID (<code>client_id</code>) and Client secret (<code>client_secret</code>) in step 1, add your Github username (<code>github_id</code> and <code>admin_user</code>) and the created repository name (<code>repo</code>) in step 2, and edit other configurations in <code>gitalk</code> section in the <mark class=\"label primary\">NexT config file</mark> as following:</p>\n <figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Gitalk</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://gitalk.github.io</span></span><br><span class=\"line\"><span class=\"attr\">gitalk:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">github_id:</span> <span class=\"comment\"># GitHub repo owner</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"comment\"># Repository name to store issues</span></span><br><span class=\"line\">  <span class=\"attr\">client_id:</span> <span class=\"comment\"># GitHub Application Client ID</span></span><br><span class=\"line\">  <span class=\"attr\">client_secret:</span> <span class=\"comment\"># GitHub Application Client Secret</span></span><br><span class=\"line\">  <span class=\"attr\">admin_user:</span> <span class=\"comment\"># GitHub repo owner and collaborators, only these guys can initialize gitHub issues</span></span><br><span class=\"line\">  <span class=\"attr\">distraction_free_mode:</span> <span class=\"literal\">true</span> <span class=\"comment\"># Facebook-like distraction free mode</span></span><br><span class=\"line\">  <span class=\"comment\"># When the official proxy is not available, you can change it to your own proxy address</span></span><br><span class=\"line\">  <span class=\"attr\">proxy:</span> <span class=\"string\">https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token</span> <span class=\"comment\"># This is official proxy address</span></span><br><span class=\"line\">  <span class=\"comment\"># Gitalk&#x27;s display language depends on user&#x27;s browser or system environment</span></span><br><span class=\"line\">  <span class=\"comment\"># If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span></span><br><span class=\"line\">  <span class=\"attr\">language:</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<div class=\"note warning\"><p>Gitalk relies on the md5 value of the page path for tagging, the comments will not be loaded correctly if a page&#39;s permalink is changed.</p>\n</div>\n\n<h3 id=\"Utterances\"><a href=\"#Utterances\" class=\"headerlink\" title=\"Utterances\"></a>Utterances</h3><p>A lightweight comments widget built on GitHub issues. Use GitHub issues for blog comments, wiki pages and more!</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Utterances</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://utteranc.es</span></span><br><span class=\"line\"><span class=\"attr\">utterances:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">user-name/repo-name</span> <span class=\"comment\"># Github repository owner and name</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: pathname | url | title | og:title</span></span><br><span class=\"line\">  <span class=\"attr\">issue_term:</span> <span class=\"string\">pathname</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: github-light | github-dark | preferred-color-scheme | github-dark-orange | icy-dark | dark-blue | photon-dark | boxy-light</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">github-light</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Isso\"><a href=\"#Isso\" class=\"headerlink\" title=\"Isso\"></a>Isso</h3><p>Isso – <em>Ich schrei sonst</em> – is a lightweight commenting server written in Python and JavaScript. It aims to be a drop-in replacement for Disqus.</p>\n<ol>\n<li><p>You need to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9pc3NvLWNvbW1lbnRzLmRlL2RvY3MvcmVmZXJlbmNlL2luc3RhbGxhdGlvbi8=\">install and configure Isso<i class=\"fa fa-external-link-alt\"></i></span> on your server first.</p>\n</li>\n<li><p>Set the value <code>isso</code> in the <mark class=\"label primary\">NexT config file</mark> as the value <code>data-isso</code> in Isso script. An exemplary script tag is given in the <code>Integration</code> section of the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9pc3NvLWNvbW1lbnRzLmRlL2RvY3MvZ3VpZGVzL3F1aWNrc3RhcnQvI2ludGVncmF0aW9u\">Isso quickstart document<i class=\"fa fa-external-link-alt\"></i></span>, you need to modify it according to the URL of your server.</p>\n <figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Isso</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://isso-comments.de</span></span><br><span class=\"line\"><span class=\"attr\">isso:</span> <span class=\"comment\"># &lt;data_isso&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"External Libraries","url":"/docs/third-party-services/external-libraries.html","content":"<h3 id=\"PJAX\"><a href=\"#PJAX\" class=\"headerlink\" title=\"PJAX\"></a>PJAX</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01vT3gvcGpheA==\">Pjax<i class=\"fa fa-external-link-alt\"></i></span> is a standalone JavaScript module that uses AJAX (XmlHttpRequest) and <code>pushState()</code> to deliver a fast browsing experience.</p>\n<p>It allows you to completely transform the user experience of standard websites (server-side generated or static ones) to make users feel like they are browsing an app, especially for those with low bandwidth connections.</p>\n<div class=\"note warning\"><p>Please use the absolute path of the image or <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdGFnLXBsdWdpbnMjSW5jbHVkZS1Bc3NldHM=\">Hexo asset_img tag<i class=\"fa fa-external-link-alt\"></i></span> in your posts, otherwise the images may fail to load during Pjax refresh.</p>\n</div>\n\n<p>You can enable it by setting value <code>pjax</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Easily enable fast Ajax navigation on your website.</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://github.com/next-theme/pjax</span></span><br><span class=\"line\"><span class=\"attr\">pjax:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Fancybox\"><a href=\"#Fancybox\" class=\"headerlink\" title=\"Fancybox\"></a>Fancybox</h3><p>NexT supports the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9mYW5jeWFwcHMuY29tL2ZhbmN5Ym94Lw==\">fancybox<i class=\"fa fa-external-link-alt\"></i></span> plugin, which is a jQuery lightbox script for displaying images, videos and more. Touch enabled, responsive and fully customizable.</p>\n<p>You can enable it by setting value <code>fancybox</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">fancybox:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Medium-Zoom\"><a href=\"#Medium-Zoom\" class=\"headerlink\" title=\"Medium Zoom\"></a>Medium Zoom</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZyYW5jb2lzY2hhbGlmb3VyL21lZGl1bS16b29t\">Medium Zoom<i class=\"fa fa-external-link-alt\"></i></span> is a JavaScript library for zooming images like Medium.</p>\n<p>You can enable it by setting value <code>mediumzoom</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># A JavaScript library for zooming images like Medium.</span></span><br><span class=\"line\"><span class=\"attr\">mediumzoom:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note warning\"><p>Do not enable both <code>fancybox</code> and <code>mediumzoom</code>.</p>\n</div>\n\n<h3 id=\"Lazyload\"><a href=\"#Lazyload\" class=\"headerlink\" title=\"Lazyload\"></a>Lazyload</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0Fwb29ydlNheGVuYS9sb3phZC5qcw==\">Lozad.js<i class=\"fa fa-external-link-alt\"></i></span> is a lazy loader plugin in modern vanilla JavaScript. It delays loading of images in long web pages. Images outside of viewport will not be loaded before user scrolls to them. This is opposite of image preloading.</p>\n<p>You can enable it by setting value <code>lazyload</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Vanilla JavaScript plugin for lazyloading images.</span></span><br><span class=\"line\"><span class=\"attr\">lazyload:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>Then run the following command in <mark class=\"label info\">site root dir</mark> to ensure that <code>lazyload</code> can be enabled or disabled correctly:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Pangu-Autospace\"><a href=\"#Pangu-Autospace\" class=\"headerlink\" title=\"Pangu Autospace\"></a>Pangu Autospace</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZpbnRhL3Bhbmd1Lmpz\">pangu.js<i class=\"fa fa-external-link-alt\"></i></span> will automatically insert a blank space between all the Chinese characters and the hexagonal English numeric symbols on the page.</p>\n<p>You can enable it by setting value <code>pangu</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Pangu Support</span></span><br><span class=\"line\"><span class=\"attr\">pangu:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Quicklink\"><a href=\"#Quicklink\" class=\"headerlink\" title=\"Quicklink\"></a>Quicklink</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0dvb2dsZUNocm9tZUxhYnMvcXVpY2tsaW5r\">Quicklink<i class=\"fa fa-external-link-alt\"></i></span> is a JavaScript plugin that faster subsequent page-loads by prefetching in-viewport links during idle time. Chrome, Firefox, Edge are supported without polyfills.</p>\n<p>You can enable it by setting value <code>quicklink.enable</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"attr\">quicklink:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">archive:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">delay:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">timeout:</span> <span class=\"number\">3000</span></span><br><span class=\"line\">  <span class=\"attr\">priority:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Animation-Effect\"><a href=\"#Animation-Effect\" class=\"headerlink\" title=\"Animation Effect\"></a>Animation Effect</h3><p>NexT enables animation effect by default which is supported by Anime.js and Animate.css, so it will wait for JavaScript loaded to show content.<br>If you need speed you can set the value of <code>motion.enable</code> to <code>false</code> to disable it.</p>\n<p>Edit <mark class=\"label primary\">NexT config file</mark> and set the needed values under the <code>motion</code> to fit your demand. You can preview all Transition variants here: <a href=\"https://theme-next.js.org/animate/\">NexT Animation Effect Preview</a>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Use Animate.css to animate everything.</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://animate.style</span></span><br><span class=\"line\"><span class=\"attr\">motion:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">async:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">transition:</span></span><br><span class=\"line\">    <span class=\"comment\"># All available Transition variants: https://theme-next.js.org/animate/</span></span><br><span class=\"line\">    <span class=\"attr\">post_block:</span> <span class=\"string\">fadeIn</span></span><br><span class=\"line\">    <span class=\"attr\">post_header:</span> <span class=\"string\">fadeInDown</span></span><br><span class=\"line\">    <span class=\"attr\">post_body:</span> <span class=\"string\">fadeInDown</span></span><br><span class=\"line\">    <span class=\"attr\">coll_header:</span> <span class=\"string\">fadeInLeft</span></span><br><span class=\"line\">    <span class=\"comment\"># Only for Pisces | Gemini.</span></span><br><span class=\"line\">    <span class=\"attr\">sidebar:</span> <span class=\"string\">fadeInUp</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Progress-Bar\"><a href=\"#Progress-Bar\" class=\"headerlink\" title=\"Progress Bar\"></a>Progress Bar</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NvZGVCeVphY2gvcGFjZQ==\">Pace<i class=\"fa fa-external-link-alt\"></i></span> will automatically monitor your Ajax requests, event loop lag, document ready state and elements on your page to decide on the progress.</p>\n<div class=\"tabs\" id=\"pace\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#pace-1\"><code>pace</code></a></li><li class=\"tab\"><a href=\"#pace-2\"><code>color</code></a></li><li class=\"tab\"><a href=\"#pace-3\"><code>theme</code></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"pace-1\"><p>You can enable it by setting value <code>pace.enable</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">pace:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"pace-2\"><p>You can change the color of progress bar by setting value <code>pace.color</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">pace:</span></span><br><span class=\"line\">  <span class=\"attr\">color:</span> <span class=\"string\">orange</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"pace-3\"><p>Pace includes a bunch of <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlYnl6YWNoLmdpdGh1Yi5pby9wYWNlLw==\">themes<i class=\"fa fa-external-link-alt\"></i></span> to get you started. By default NexT uses <code>minimal</code> theme (pace-theme-minimal). You can configure it by editing values in <code>pace.theme</code> section in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">pace:</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">minimal</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h3 id=\"Canvas-Ribbon\"><a href=\"#Canvas-Ribbon\" class=\"headerlink\" title=\"Canvas Ribbon\"></a>Canvas Ribbon</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h1c3RjYy9yaWJib24uanM=\">canvas-ribbon.js<i class=\"fa fa-external-link-alt\"></i></span> is a ribbon background of website draw on canvas.</p>\n<p>You can enable it by setting value <code>canvas_ribbon</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>. You can also configure the ribbon setting by editing values in <code>canvas_ribbon</code> section:</p>\n<ul>\n<li>size: The width of the ribbon.</li>\n<li>alpha: The transparency of the ribbon.</li>\n<li>zIndex: The display level of the ribbon.</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">canvas_ribbon:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">size:</span> <span class=\"number\">300</span></span><br><span class=\"line\">  <span class=\"attr\">alpha:</span> <span class=\"number\">0.6</span></span><br><span class=\"line\">  <span class=\"attr\">zIndex:</span> <span class=\"number\">-1</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Math Equations","url":"/docs/third-party-services/math-equations.html","content":"<h3 id=\"Settings\"><a href=\"#Settings\" class=\"headerlink\" title=\"Settings\"></a>Settings</h3><figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Math Formulas Render Support</span></span><br><span class=\"line\"><span class=\"attr\">math:</span></span><br><span class=\"line\">  <span class=\"comment\"># Default (false) will load mathjax / katex script on demand.</span></span><br><span class=\"line\">  <span class=\"comment\"># That is it only render those page which has `mathjax: true` in front-matter.</span></span><br><span class=\"line\">  <span class=\"comment\"># If you set it to true, it will load mathjax / katex script EVERY PAGE.</span></span><br><span class=\"line\">  <span class=\"attr\">every_page:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">mathjax:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\"># Available values: none | ams | all</span></span><br><span class=\"line\">    <span class=\"attr\">tags:</span> <span class=\"string\">none</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">katex:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"comment\"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class=\"line\">    <span class=\"attr\">copy_tex:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<p>The <code>every_page</code> option controls whether to render Math Equations every page.</p>\n<ul>\n<li><strong><code>false</code></strong> → Equations will be processed on demand. It will only render those posts which have <code>mathjax: true</code> in their front-matter.</li>\n<li><code>true</code> → Equations will be processed on every page. Even if they not exists on one or another page.</li>\n</ul>\n<details class=\"note default\"><summary><p><strong>Examples with <code>every_page: false</code> option</strong></p>\n</summary>\n<ul>\n<li><p>This post will render the Math Equations</p>\n  <figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Will Render Math</span><br><span class=\"line\"><span class=\"section\">mathjax: true</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>This post will NOT render the Math Equations</p>\n  <figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Not Render Math</span><br><span class=\"line\"><span class=\"section\">mathjax: false</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>This post will NOT render the Math Equations either</p>\n  <figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\"><span class=\"section\">title: Not Render Math Either</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n\n</details>\n\n<p>The <code>mathjax</code> and <code>katex</code> options are used to set the rendering engine. Please read the detailed document below.</p>\n<h3 id=\"Render-Engines\"><a href=\"#Render-Engines\" class=\"headerlink\" title=\"Render Engines\"></a>Render Engines</h3><p>For now, NexT provides two rendering engines for displaying Math Equations: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWF0aGpheC5vcmcv\">MathJax<i class=\"fa fa-external-link-alt\"></i></span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYXRleC5vcmcv\">KaTeX<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<ul>\n<li>MathJax is a JavaScript display engine for mathematics that works in all browsers. It is highly modular on input and output. Use MathML, TeX, and ASCIImath as input and produce HTML+CSS, SVG, or MathML as output.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW50bWF0aC5jb20vY2c1L2thdGV4LW1hdGhqYXgtY29tcGFyaXNvbi5waHA=\">KaTeX is a faster<i class=\"fa fa-external-link-alt\"></i></span> math rendering engine compared to MathJax 3. And it could survive without JavaScript. But, for now <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0thVGVYL0thVGVYL3dpa2kvVGhpbmdzLXRoYXQtS2FUZVgtZG9lcy1ub3QtKHlldCktc3VwcG9ydA==\">KaTeX supports less features<i class=\"fa fa-external-link-alt\"></i></span> than MathJax. Here is a list of <span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYXRleC5vcmcvZG9jcy9zdXBwb3J0ZWQuaHRtbA==\">TeX functions supported by KaTeX<i class=\"fa fa-external-link-alt\"></i></span>.</li>\n</ul>\n<p>Firstly, you need to choose a rendering engine and turn on <code>enable</code> for it in <mark class=\"label primary\">NexT config file</mark>. Then you need to install the <strong>corresponding Hexo Renderer</strong> to fully support the display of Math Equations - Only turn on <code>enable</code> <strong>may not let you see the displayed equations correctly</strong>.</p>\n<div class=\"tabs\" id=\"render-engines\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#render-engines-1\">MathJax</a></li><li class=\"tab\"><a href=\"#render-engines-2\">KaTeX</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"render-engines-1\"><p><strong>Renderer Choosing</strong></p>\n<p>If you use MathJax to render Math Equations, you can choose one of the Markdown renderers below:</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3d6cGFuL2hleG8tcmVuZGVyZXItcGFuZG9j\">hexo-renderer-pandoc<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<p>hexo-renderer-pandoc is recommended because it can handle mathematical formulas in markdown documents perfectly.</p>\n<div class=\"note warning\"><p>If you are using other renderers, such as <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLXJlbmRlcmVyLW1hcmtlZA==\">hexo-renderer-marked<i class=\"fa fa-external-link-alt\"></i></span>, you need to be aware of the conflict between LaTeX and Markdown syntax. For example, an underscore (<code>_</code>) may be interpreted as the start of italic text in Markdown, or subscripted mark in TeX. To avoid syntax errors, please use escape characters (<code>\\_</code>) instead:</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">-$\\epsilon_0$</span></span><br><span class=\"line\"><span class=\"addition\">+$\\epsilon\\_0$</span></span><br><span class=\"line\"><span class=\"deletion\">-\\begin&#123;eqnarray*&#125;</span></span><br><span class=\"line\"><span class=\"addition\">+\\begin&#123;eqnarray\\*&#125;</span></span><br><span class=\"line\"><span class=\"deletion\">-\\\\</span></span><br><span class=\"line\"><span class=\"addition\">+\\\\\\\\</span></span><br></pre></td></tr></table></figure>\n</div>\n\n<p><strong>Installation</strong></p>\n<ol>\n<li><p>Firstly, set <code>mathjax</code> as rendering engine in <mark class=\"label primary\">NexT config file</mark>.</p>\n <figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">math:</span></span><br><span class=\"line\">  <span class=\"string\">...</span></span><br><span class=\"line\">  <span class=\"attr\">mathjax:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Then you need to uninstall the original renderer <code>hexo-renderer-marked</code>, and install <code>hexo-renderer-pandoc</code>:</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm un hexo-renderer-marked</span><br><span class=\"line\">$ npm i hexo-renderer-pandoc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2pnbS9wYW5kb2M=\">pandoc<i class=\"fa fa-external-link-alt\"></i></span> is required for hexo-renderer-pandoc, here&#39;s <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2pnbS9wYW5kb2MvYmxvYi9tYXN0ZXIvSU5TVEFMTC5tZA==\">how to install pandoc<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n</li>\n</ol>\n<p><strong>Plugins</strong></p>\n<p>All extensions of MathJax are loaded automatically. For example, <code>mhchem</code> is a tool for writing beautiful chemical equations easily. It implements the <code>\\ce</code> and <code>\\pu</code> chemical equation macros of the LaTeX mhchem package. More information: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9taGNoZW0uZ2l0aHViLmlvL01hdGhKYXgtbWhjaGVtLw==\">MathJax&#x2F;mhchem Manual<i class=\"fa fa-external-link-alt\"></i></span>.</p></div><div class=\"tab-pane\" id=\"render-engines-2\"><p><strong>Renderer Choosing</strong></p>\n<p>If you use KaTeX to render Math Equations, you can choose one of the Markdown renderers below:</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NIRU5YQ0hFTi9oZXhvLXJlbmRlcmVyLW1hcmtkb3duLWl0LXBsdXM=\">hexo-renderer-markdown-it-plus<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLXJlbmRlcmVyLW1hcmtkb3duLWl0\">hexo-renderer-markdown-it<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ul>\n<p><strong>Installation</strong></p>\n<ol>\n<li><p>Firstly, set <code>katex</code> as rendering engine in <mark class=\"label primary\">NexT config file</mark>.</p>\n <figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">math:</span></span><br><span class=\"line\">  <span class=\"string\">...</span></span><br><span class=\"line\">  <span class=\"attr\">katex:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Then you need to uninstall the original renderer <code>hexo-renderer-marked</code> and install one of the renderer plugins:</p>\n</li>\n</ol>\n<div class=\"tabs\" id=\"katex-renderer\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#katex-renderer-1\">hexo-renderer-markdown-it-plus</a></li><li class=\"tab\"><a href=\"#katex-renderer-2\">hexo-renderer-markdown-it</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"katex-renderer-1\"><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm un hexo-renderer-marked</span><br><span class=\"line\">$ npm i hexo-renderer-markdown-it-plus</span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"katex-renderer-2\"><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm un hexo-renderer-marked</span><br><span class=\"line\">$ npm i hexo-renderer-markdown-it</span><br></pre></td></tr></table></figure>\n\n<p>If you use <code>hexo-renderer-markdown-it</code>, you also need to install <code>markdown-it-katex</code>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm i markdown-it-katex</span><br></pre></td></tr></table></figure>\n\n<p>And then in <mark class=\"label info\">Hexo config file</mark> you need to add <code>markdown-it-katex</code> as a plugin for <code>hexo-renderer-markdown-it</code>:</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># config of hexo-renderer-markdown-it</span></span><br><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\">  <span class=\"attr\">render:</span></span><br><span class=\"line\">    <span class=\"attr\">html:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">xhtmlOut:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">breaks:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">linkify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">typographer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">quotes:</span> <span class=\"string\">&#x27;“”‘’&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">plugins:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">markdown-it-katex</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<p><strong>Plugins</strong></p>\n<p>Copy-tex extension for KaTeX modifies the copy&#x2F;paste behavior in any browser supporting the Clipboard API so that, when selecting and copying whole KaTeX-rendered elements, the text content of the resulting clipboard renders KaTeX elements as their LaTeX source surrounded by specified delimiters. More information: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0thVGVYL0thVGVYL3RyZWUvbWFzdGVyL2NvbnRyaWIvY29weS10ZXg=\">Copy-tex extension<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">math:</span></span><br><span class=\"line\">  <span class=\"string\">...</span></span><br><span class=\"line\">  <span class=\"attr\">katex:</span></span><br><span class=\"line\">    <span class=\"comment\"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class=\"line\">    <span class=\"attr\">copy_tex:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note danger\"><p><strong>Known Issues</strong></p>\n<ol>\n<li>Firstly, please check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYXRleC5vcmcvZG9jcy9pc3N1ZXMuaHRtbA==\">Common Issues<i class=\"fa fa-external-link-alt\"></i></span> of KaTeX.</li>\n<li>Displayed Math (i.e. <code>$$...$$</code>) needs to started with new clear line.<br> In other words: you must not have any characters (except of whitespaces) <strong>before the opening <code>$$</code> and after the ending <code>$$</code></strong> (<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L3B1bGwvMzIjaXNzdWVjb21tZW50LTM1NzQ4OTUwOQ==\">comment #32<i class=\"fa fa-external-link-alt\"></i></span>).</li>\n<li>Don&#39;t support Unicode (<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L3B1bGwvMzIjaXNzdWVjb21tZW50LTM1NzQ4OTUwOQ==\">comment #32<i class=\"fa fa-external-link-alt\"></i></span>).</li>\n<li>Inline Math (..<code>$...$</code>) must not have white spaces <strong>after the opening <code>$</code> and before the ending <code>$</code></strong> (<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L3B1bGwvMzIjaXNzdWVjb21tZW50LTM1NzQ4OTUwOQ==\">comment #32<i class=\"fa fa-external-link-alt\"></i></span>).</li>\n<li>If you use math in Heading (i.e. <code>## Heading</code>).<br> Then in corresponding TOC item it will show the related LaTeX code 3 times (<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L3B1bGwvMzIjaXNzdWVjb21tZW50LTM1OTAxODY5NA==\">comment #32<i class=\"fa fa-external-link-alt\"></i></span>).</li>\n<li>If you use math in your post&#39;s title, it will not be rendered (<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L3B1bGwvMzIjaXNzdWVjb21tZW50LTM1OTE0Mjg3OQ==\">comment #32<i class=\"fa fa-external-link-alt\"></i></span>).</li>\n</ol>\n</div></div></div></div>\n\n<div class=\"note warning\"><p>After setting up the math rendering engine or installing &#x2F; uninstalling the Markdown renderer, please execute <code>hexo clean</code>. Run standard Hexo generate, deploy process or start the server to test whether the plugin is working properly:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean &amp;&amp; hexo g -d</span><br><span class=\"line\"><span class=\"comment\"># or hexo clean &amp;&amp; hexo s</span></span><br></pre></td></tr></table></figure>\n</div>\n\n<div class=\"note warning\"><p>Except for the required renderer, any other Hexo math plugins are unnecessary and there is no need to manually import any JS or CSS files. If you have installed plugins such as <code>hexo-math</code> or <code>hexo-katex</code>, they may conflict with the built-in rendering engine of NexT.</p>\n</div>\n\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><div class=\"note info\"><p>The following examples are rendered by <code>mathjax</code> engine.</p>\n</div>\n\n<h4 id=\"Numbering-and-Referring-Equations-in-MathJax\"><a href=\"#Numbering-and-Referring-Equations-in-MathJax\" class=\"headerlink\" title=\"Numbering and Referring Equations in MathJax\"></a>Numbering and Referring Equations in MathJax</h4><p>In NexT v6.3.0, we have added feature to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1hdGhqYXgub3JnL2VuL2xhdGVzdC9pbnB1dC90ZXgvZXFudW1iZXJzLmh0bWw=\">automatic equation numbering<i class=\"fa fa-external-link-alt\"></i></span> with opportunity to make reference to that equations.</p>\n<p>To enable this feature, you need to set <code>mathjax.tags</code> to <code>ams</code> in <mark class=\"label primary\">NexT config file</mark>.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">math:</span></span><br><span class=\"line\">  <span class=\"attr\">mathjax:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\"># Available values: none | ams | all</span></span><br><span class=\"line\">    <span class=\"attr\">tags:</span> <span class=\"string\">ams</span></span><br></pre></td></tr></table></figure>\n\n<p>And to make the automatic equation numbering work, you have to wrap your LaTeX equations in <code>equation</code> environment. Using the plain old style (i.e., wrap an equation with two dollar signs in each side) will not work. How to refer to an equation? Just give a <code>\\label&#123;&#125;</code> tag and then in your later text, use <code>\\ref&#123;&#125;</code> or <code>\\eqref&#123;&#125;</code> to refer it. Using <code>\\eqref&#123;&#125;</code> is preferred since if you use <code>\\ref&#123;&#125;</code>, there are no parentheses around the equation number. Below are some of the common scenarios for equation numbering.</p>\n<h4 id=\"Simple-Equations\"><a href=\"#Simple-Equations\" class=\"headerlink\" title=\"Simple Equations\"></a>Simple Equations</h4><p>For simple equations, use the following form to give a tag,</p>\n<figure class=\"highlight latex\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span><span class=\"keyword\">\\begin</span>&#123;equation&#125; <span class=\"keyword\">\\label</span>&#123;eq1&#125;</span><br><span class=\"line\">e=mc<span class=\"built_in\">^</span>2</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;equation&#125;<span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n\n<p>$$\\begin{equation} \\label{eq1}<br>e&#x3D;mc^2<br>\\end{equation}$$</p>\n<p>Then, you can refer to this equation in your text easily by using something like:</p>\n<figure class=\"highlight latex\"><table><tr><td class=\"code\"><pre><span class=\"line\">The famous matter-energy equation <span class=\"built_in\">$</span><span class=\"keyword\">\\eqref</span>&#123;eq1&#125;<span class=\"built_in\">$</span> proposed by Einstein...</span><br></pre></td></tr></table></figure>\n\n<p>The famous matter-energy equation $\\eqref{eq1}$ proposed by Einstein...</p>\n<h4 id=\"Multi-line-Equations\"><a href=\"#Multi-line-Equations\" class=\"headerlink\" title=\"Multi-line Equations\"></a>Multi-line Equations</h4><p>For multi-line equations, inside the <code>equation</code> environment, you can use the <code>aligned</code> environment to split it into multiple lines:</p>\n<figure class=\"highlight latex\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span><span class=\"keyword\">\\begin</span>&#123;equation&#125; <span class=\"keyword\">\\label</span>&#123;eq2&#125;</span><br><span class=\"line\"><span class=\"keyword\">\\begin</span>&#123;aligned&#125;</span><br><span class=\"line\">a <span class=\"built_in\">&amp;</span>= b + c <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">  <span class=\"built_in\">&amp;</span>= d + e + f + g <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">  <span class=\"built_in\">&amp;</span>= h + i</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;aligned&#125;</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;equation&#125;<span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n\n<p>$$\\begin{equation} \\label{eq2}<br>\\begin{aligned}<br>a &amp;&#x3D; b + c \\\\<br>  &amp;&#x3D; d + e + f + g \\\\<br>  &amp;&#x3D; h + i<br>\\end{aligned}<br>\\end{equation}$$</p>\n<figure class=\"highlight latex\"><table><tr><td class=\"code\"><pre><span class=\"line\">Equation <span class=\"built_in\">$</span><span class=\"keyword\">\\eqref</span>&#123;eq2&#125;<span class=\"built_in\">$</span> is a multi-line equation.</span><br></pre></td></tr></table></figure>\n\n<p>Equation $\\eqref{eq2}$ is a multi-line equation.</p>\n<h4 id=\"Multiple-Aligned-Equations\"><a href=\"#Multiple-Aligned-Equations\" class=\"headerlink\" title=\"Multiple Aligned Equations\"></a>Multiple Aligned Equations</h4><p>We can use <code>align</code> environment to align multiple equations. Each of these equations will get its own numbers.</p>\n<figure class=\"highlight latex\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span><span class=\"keyword\">\\begin</span>&#123;align&#125;</span><br><span class=\"line\">a <span class=\"built_in\">&amp;</span>= b + c <span class=\"keyword\">\\label</span>&#123;eq3&#125; <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">x <span class=\"built_in\">&amp;</span>= yz <span class=\"keyword\">\\label</span>&#123;eq4&#125; <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">l <span class=\"built_in\">&amp;</span>= m - n <span class=\"keyword\">\\label</span>&#123;eq5&#125;</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;align&#125;<span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n\n<p>$$\\begin{align}<br>a &amp;&#x3D; b + c \\label{eq3} \\\\<br>x &amp;&#x3D; yz \\label{eq4} \\\\<br>l &amp;&#x3D; m - n \\label{eq5}<br>\\end{align}$$</p>\n<figure class=\"highlight latex\"><table><tr><td class=\"code\"><pre><span class=\"line\">There are three aligned equations: equation <span class=\"built_in\">$</span><span class=\"keyword\">\\eqref</span>&#123;eq3&#125;<span class=\"built_in\">$</span>, equation <span class=\"built_in\">$</span><span class=\"keyword\">\\eqref</span>&#123;eq4&#125;<span class=\"built_in\">$</span> and equation <span class=\"built_in\">$</span><span class=\"keyword\">\\eqref</span>&#123;eq5&#125;<span class=\"built_in\">$</span>.</span><br></pre></td></tr></table></figure>\n\n<p>There are three aligned equations: equation $\\eqref{eq3}$, equation $\\eqref{eq4}$ and equation $\\eqref{eq5}$.</p>\n<p>Since <code>align</code> in and of itself is a complete equation environment (read <span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZXguc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzk1NDAyL3doYXQtaXMtdGhlLWRpZmZlcmVuY2UtYmV0d2Vlbi1hbGlnbmVkLWluLWRpc3BsYXllZC1tb2RlLWFuZC1zdGFycmVkLWFsaWdu\">here<i class=\"fa fa-external-link-alt\"></i></span> about the difference between <code>aligned</code> and <code>align</code> in LaTeX). You do not need to wrap it with <code>equation</code> environment.</p>\n<h4 id=\"Exclude-Equations-from-Numbering\"><a href=\"#Exclude-Equations-from-Numbering\" class=\"headerlink\" title=\"Exclude Equations from Numbering\"></a>Exclude Equations from Numbering</h4><p>In the <code>align</code> environment, if you do not want to number one or some equations, just use <code>\\nonumber</code> right behind these equations. Like the following:</p>\n<figure class=\"highlight latex\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span><span class=\"keyword\">\\begin</span>&#123;align&#125;</span><br><span class=\"line\">-4 + 5x <span class=\"built_in\">&amp;</span>= 2 + y <span class=\"keyword\">\\nonumber</span> <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">w + 2 <span class=\"built_in\">&amp;</span>= -1 + w <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">ab <span class=\"built_in\">&amp;</span>= cb</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;align&#125;<span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n\n<p>$$\\begin{align}<br>-4 + 5x &amp;&#x3D; 2 + y \\nonumber \\\\<br>w + 2 &amp;&#x3D; -1 + w \\\\<br>ab &amp;&#x3D; cb<br>\\end{align}$$</p>\n<h4 id=\"Use-tag-to-Tag-Equations\"><a href=\"#Use-tag-to-Tag-Equations\" class=\"headerlink\" title=\"Use \\tag to Tag Equations\"></a>Use <code>\\tag</code> to Tag Equations</h4><p>Sometimes, you want to use more «exotic» style to refer your equation. You can use <code>\\tag&#123;&#125;</code> to achieve this. For example:</p>\n<figure class=\"highlight latex\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span>x+1<span class=\"keyword\">\\over</span><span class=\"keyword\">\\sqrt</span>&#123;1-x<span class=\"built_in\">^</span>2&#125; <span class=\"keyword\">\\tag</span>&#123;i&#125;<span class=\"keyword\">\\label</span>&#123;eq<span class=\"built_in\">_</span>tag&#125;<span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n\n<p>$$x+1\\over\\sqrt{1-x^2} \\tag{i}\\label{eq_tag}$$</p>\n<figure class=\"highlight latex\"><table><tr><td class=\"code\"><pre><span class=\"line\">Equation <span class=\"built_in\">$</span><span class=\"keyword\">\\eqref</span>&#123;eq<span class=\"built_in\">_</span>tag&#125;<span class=\"built_in\">$</span> use `<span class=\"keyword\">\\tag</span>&#123;&#125;` instead of automatic numbering.</span><br></pre></td></tr></table></figure>\n\n<p>Equation $\\eqref{eq_tag}$ use <code>\\tag&#123;&#125;</code> instead of automatic numbering.</p>\n"},{"title":"Third-party Plugins","url":"/docs/third-party-services/index.html","content":"<p>Static website is limited in some functions, so we need third-party services to extend our site.<br>In any time you can extend needed functions by using third-party services supported by NexT.</p>\n<h3 id=\"Adding-Plugins\"><a href=\"#Adding-Plugins\" class=\"headerlink\" title=\"Adding Plugins\"></a>Adding Plugins</h3><p>Plugins extend and expand the functionality of NexT. There are two types of libraries: internal scripts and third-party plugins. The internal scripts are loaded from your site by default, they are required by the basic functions of NexT. Third-party plugins provide a large number of optional features. They are loaded from jsDelivr CDN by default, because it is fast in everywhere.</p>\n<p>Configuring these plugins is very easy. For example, if you want to use <code>pjax</code> in your site, just set <code>pjax</code> to <code>true</code> in <mark class=\"label primary\">NexT config file</mark>:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Easily enable fast Ajax navigation on your website.</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://github.com/next-theme/pjax</span></span><br><span class=\"line\"><span class=\"attr\">pjax:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>If you want to specify the CDN provider for any plugins, you need to set &#x2F; update the CDN URL. See <a href=\"/docs/advanced-settings/vendors.html\">Advanced Settings</a> for more information.</p>\n<p>Detailed documentation about these plugins is listed below.</p>\n<h3 id=\"Math-Equations\"><a href=\"#Math-Equations\" class=\"headerlink\" title=\"Math Equations\"></a>Math Equations</h3><ul>\n<li><a href=\"/docs/third-party-services/math-equations.html\">Math Equations</a></li>\n</ul>\n<h3 id=\"Comment-Systems\"><a href=\"#Comment-Systems\" class=\"headerlink\" title=\"Comment Systems\"></a>Comment Systems</h3><ul>\n<li><a href=\"/docs/third-party-services/comments.html#Overview\">Overview</a></li>\n<li><a href=\"/docs/third-party-services/comments.html#Disqus\">Disqus</a></li>\n<li><a href=\"/docs/third-party-services/comments.html#DisqusJS\">DisqusJS</a></li>\n<li><a href=\"/docs/third-party-services/comments.html#Changyan\">Changyan (China)</a></li>\n<li><a href=\"/docs/third-party-services/comments.html#LiveRe\">LiveRe</a></li>\n<li><a href=\"/docs/third-party-services/comments.html#Gitalk\">Gitalk</a></li>\n<li><a href=\"/docs/third-party-services/comments.html#Utterances\">Utterances</a></li>\n<li><a href=\"/docs/third-party-services/comments.html#Isso\">Isso</a></li>\n</ul>\n<h3 id=\"Statistics-and-Analytics\"><a href=\"#Statistics-and-Analytics\" class=\"headerlink\" title=\"Statistics and Analytics\"></a>Statistics and Analytics</h3><h4 id=\"Analytics\"><a href=\"#Analytics\" class=\"headerlink\" title=\"Analytics\"></a>Analytics</h4><ul>\n<li><a href=\"/docs/third-party-services/statistics-and-analytics.html#Google-Analytics\">Google Analytics</a></li>\n<li><a href=\"/docs/third-party-services/statistics-and-analytics.html#Baidu-Analytics-China\">Baidu Analytics (China)</a></li>\n<li><a href=\"/docs/third-party-services/statistics-and-analytics.html#Growingio-Analytics\">Growingio Analytics</a></li>\n<li><a href=\"/docs/third-party-services/statistics-and-analytics.html#Cloudflare-Web-Analytics\">Cloudflare Web Analytics</a></li>\n<li><a href=\"/docs/third-party-services/statistics-and-analytics.html#Microsoft-Clarity-Analytics\">Microsoft Clarity Analytics</a></li>\n<li><a href=\"/docs/third-party-services/statistics-and-analytics.html#Matomo-Analytics\">Matomo Analytics</a></li>\n<li><a href=\"/docs/third-party-services/statistics-and-analytics.html#Umami-Analytics\">Umami Analytics</a></li>\n<li><a href=\"/docs/third-party-services/statistics-and-analytics.html#Plausible-Analytics\">Plausible Analytics</a></li>\n</ul>\n<h4 id=\"Statistics\"><a href=\"#Statistics\" class=\"headerlink\" title=\"Statistics\"></a>Statistics</h4><ul>\n<li><a href=\"/docs/third-party-services/statistics-and-analytics.html#LeanCloud-China\">LeanCloud (China)</a></li>\n<li><a href=\"/docs/third-party-services/statistics-and-analytics.html#Firebase\">Firebase</a></li>\n<li><a href=\"/docs/third-party-services/statistics-and-analytics.html#Busuanzi-Counting-China\">Busuanzi Counting</a></li>\n</ul>\n<h3 id=\"Post-Widgets\"><a href=\"#Post-Widgets\" class=\"headerlink\" title=\"Post Widgets\"></a>Post Widgets</h3><ul>\n<li><a href=\"/docs/third-party-services/post-widgets.html#Widgetpack-Rating\">Widgetpack Rating</a></li>\n<li><a href=\"/docs/third-party-services/post-widgets.html#AddThis\">AddThis</a></li>\n</ul>\n<h3 id=\"Search-Services\"><a href=\"#Search-Services\" class=\"headerlink\" title=\"Search Services\"></a>Search Services</h3><ul>\n<li><a href=\"/docs/third-party-services/search-services.html#Algolia-Search\">Algolia Search</a></li>\n<li><a href=\"/docs/third-party-services/search-services.html#Local-Search\">Local Search</a></li>\n</ul>\n<h3 id=\"Chat-Services\"><a href=\"#Chat-Services\" class=\"headerlink\" title=\"Chat Services\"></a>Chat Services</h3><ul>\n<li><a href=\"/docs/third-party-services/chat-services.html#Chatra\">Chatra</a></li>\n<li><a href=\"/docs/third-party-services/chat-services.html#Tidio\">Tidio</a></li>\n<li><a href=\"/docs/third-party-services/chat-services.html#Gitter\">Gitter</a></li>\n</ul>\n<h3 id=\"External-Libraries\"><a href=\"#External-Libraries\" class=\"headerlink\" title=\"External Libraries\"></a>External Libraries</h3><ul>\n<li><a href=\"/docs/third-party-services/external-libraries.html#PJAX\">PJAX</a></li>\n<li><a href=\"/docs/third-party-services/external-libraries.html#Fancybox\">Fancybox</a></li>\n<li><a href=\"/docs/third-party-services/external-libraries.html#Medium-Zoom\">MediumZoom</a></li>\n<li><a href=\"/docs/third-party-services/external-libraries.html#Lazyload\">Lazyload</a></li>\n<li><a href=\"/docs/third-party-services/external-libraries.html#Pangu-Autospace\">Pangu Autospace</a></li>\n<li><a href=\"/docs/third-party-services/external-libraries.html#Quicklink\">Quicklink</a></li>\n<li><a href=\"/docs/third-party-services/external-libraries.html#Animation-Effect\">Motion</a></li>\n<li><a href=\"/docs/third-party-services/external-libraries.html#Progress-Bar\">Progress bar</a></li>\n<li><a href=\"/docs/third-party-services/external-libraries.html#Canvas-Ribbon\">Canvas Ribbon</a></li>\n</ul>\n"},{"title":"Search Services","url":"/docs/third-party-services/search-services.html","content":"<h3 id=\"Algolia-Search\"><a href=\"#Algolia-Search\" class=\"headerlink\" title=\"Algolia Search\"></a>Algolia Search</h3><p>NexT provides Algolia search plugin to search your Hexo website content. It should be noted that only turn on <code>enable</code> of <code>algolia_search</code> in <mark class=\"label primary\">NexT config file</mark> does not allow you to use the Algolia search correctly. You need to install the corresponding Hexo plugin to index your website on Algolia: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29uY2xldG9tL2hleG8tYWxnb2xpYQ==\">Hexo Algolia<i class=\"fa fa-external-link-alt\"></i></span> or <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xvdWlzQmFycmFucXVlaXJvL2hleG8tYWxnb2xpYXNlYXJjaA==\">Hexo Algoliasearch<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<div class=\"note danger\"><p><strong>Known Issues</strong></p>\n<ol>\n<li>The latest version of the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29uY2xldG9tL2hleG8tYWxnb2xpYQ==\">Hexo Algolia<i class=\"fa fa-external-link-alt\"></i></span> plugin removes the content indexing feature, given Algolia&#39;s free account limitation.</li>\n<li>The <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xvdWlzQmFycmFucXVlaXJvL2hleG8tYWxnb2xpYXNlYXJjaA==\">Hexo Algoliasearch<i class=\"fa fa-external-link-alt\"></i></span> plugin provides content indexing functionality. The same problem exists with <code>Record Too Big</code> for Algolia&#39;s free account.</li>\n</ol>\n</div>\n\n<p>Follow the steps described below to complete the installation of Algolia search.</p>\n<div class=\"tabs\" id=\"algolia-search\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#algolia-search-1\">Registration →</a></li><li class=\"tab\"><a href=\"#algolia-search-2\">Algolia Config →</a></li><li class=\"tab\"><a href=\"#algolia-search-3\">Algolia Plugin →</a></li><li class=\"tab\"><a href=\"#algolia-search-4\">NexT Config</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"algolia-search-1\"><p>Register at <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxnb2xpYS5jb20v\">Algolia<i class=\"fa fa-external-link-alt\"></i></span>, you can log in directly using GitHub or Google Account. Upon Customer&#39;s initial sign-up for an Account, Customer will have a free, fourteen (14) day evaluation period (the «Evaluation Period») for the Algolia Services commencing on the Effective Date, subject to the limitations on Algolia&#39;s website. After that, Algolia offers a free, branded version for up to 10k records and 100k operations per month.</p>\n<p>If a tutorial pops up, you can skip it. Go straight to create an <code>Index</code> which will be used later.<br><img src=\"/images/algolia-1.png\" alt=\"Algolia Create Index\" loading=\"lazy\"></p></div><div class=\"tab-pane\" id=\"algolia-search-2\"><ol>\n<li><p>Go to the <code>API Keys</code> page and find your credentials. You will need the <code>Application ID</code> and the <code>Search-only API key</code> in the following sections. The <code>Admin API key</code> need to keep confidential. Never store your Admin API Key as <code>apiKey</code> in <mark class=\"label info\">Hexo config file</mark>: it would give full control of your Algolia index to others and you don&#39;t want to face the consequences.<br><img src=\"/images/algolia-2.png\" alt=\"Algolia API Keys\" loading=\"lazy\"></p>\n</li>\n<li><p>In the <code>API Keys</code> page, click the <code>All API Keys</code> button to switch to the corresponding tab. Then click the <code>New API Key</code> button to activate a pop-up box where you can setup authorizations and restrictions with a great level of precision. Enter <code>addObject</code>, <code>deleteObject</code>, <code>listIndexes</code>, <code>deleteIndex</code> features in ACL permissions that will be allowed for the given API key. And then click the <code>Create</code> button. Copy this newly created key to the clipboard, we call it a <code>High-privilege API key</code>.<br><img src=\"/images/algolia-3.png\" alt=\"Algolia API Keys 2\" loading=\"lazy\"><br><img src=\"/images/algolia-4.png\" alt=\"Algolia Configuring Records\" loading=\"lazy\"></p>\n</li>\n</ol></div><div class=\"tab-pane\" id=\"algolia-search-3\"><p>Algolia requires users to upload their search index data either manually or via provided APIs. You need to choose one of the following two plugins to install. Both plugins will index your site and upload selected data to Algolia.</p>\n<div class=\"tabs\" id=\"algolia-plugin\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#algolia-plugin-1\">Hexo Algolia</a></li><li class=\"tab\"><a href=\"#algolia-plugin-2\">Hexo Algoliasearch</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"algolia-plugin-1\"><p>Install and configure <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29uY2xldG9tL2hleG8tYWxnb2xpYQ==\">Hexo Algolia<i class=\"fa fa-external-link-alt\"></i></span> in your Hexo directory.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo-site</span><br><span class=\"line\">$ npm install hexo-algolia</span><br></pre></td></tr></table></figure>\n\n<p>In your <mark class=\"label info\">Hexo config file</mark>, add the following configuration and replace the <code>Application ID</code>, <code>Search-only API key</code> and <code>indexName</code> with corresponding fields obtained at Algolia.</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">algolia:</span></span><br><span class=\"line\">  <span class=\"attr\">applicationID:</span> <span class=\"string\">&quot;Application ID&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">apiKey:</span> <span class=\"string\">&quot;Search-only API key&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">indexName:</span> <span class=\"string\">&quot;indexName&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>Run the following command to upload index data, keep a weather eye out the output of the command.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">export</span> HEXO_ALGOLIA_INDEXING_KEY=High-privilege API key <span class=\"comment\"># Use Git Bash</span></span><br><span class=\"line\"><span class=\"comment\"># set HEXO_ALGOLIA_INDEXING_KEY=High-privilege API key # Use Windows command line</span></span><br><span class=\"line\">$ hexo clean</span><br><span class=\"line\">$ hexo algolia</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/algolia-5.png\" alt=\"Reload Index\" loading=\"lazy\"></p></div><div class=\"tab-pane\" id=\"algolia-plugin-2\"><p>Install and configure <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xvdWlzQmFycmFucXVlaXJvL2hleG8tYWxnb2xpYXNlYXJjaA==\">Hexo Algoliasearch<i class=\"fa fa-external-link-alt\"></i></span> in your Hexo directory.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo-site</span><br><span class=\"line\">$ npm install hexo-algoliasearch</span><br></pre></td></tr></table></figure>\n\n<p>In your <mark class=\"label info\">Hexo config file</mark>, add the following configuration and replace the <code>Application ID</code>, <code>Search-only API key</code>, <code>High-privilege API key</code> and <code>indexName</code> with corresponding fields obtained at Algolia.</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">algolia:</span></span><br><span class=\"line\">  <span class=\"attr\">appId:</span> <span class=\"string\">&quot;Application ID&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">apiKey:</span> <span class=\"string\">&quot;Search-only API key&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">adminApiKey:</span> <span class=\"string\">&quot;High-privilege API key&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">indexName:</span> <span class=\"string\">&quot;indexName&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">chunkSize:</span> <span class=\"number\">5000</span></span><br><span class=\"line\">  <span class=\"attr\">fields:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">content:strip:truncate,0,500</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">excerpt:strip</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">gallery</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">permalink</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">photos</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">slug</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">tags</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">title</span></span><br></pre></td></tr></table></figure>\n\n<p>Run the following command to upload index data, keep a weather eye out the output of the command.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br><span class=\"line\">$ hexo algolia</span><br></pre></td></tr></table></figure></div></div></div></div><div class=\"tab-pane\" id=\"algolia-search-4\"><p>In <mark class=\"label primary\">NexT config file</mark>, turn on <code>enable</code> of <code>algolia_search</code>. At the same time, you need to <strong>turn off other search plugins</strong> like Local Search. You can also adjust the text in <code>labels</code> according to your needs.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Algolia Search</span></span><br><span class=\"line\"><span class=\"attr\">algolia_search:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">hits:</span></span><br><span class=\"line\">    <span class=\"attr\">per_page:</span> <span class=\"number\">10</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h3 id=\"Local-Search\"><a href=\"#Local-Search\" class=\"headerlink\" title=\"Local Search\"></a>Local Search</h3><p>Local search does not require any external 3rd-party services and can be extra indexed by search engines. This search method is recommended for most users.</p>\n<div class=\"tabs\" id=\"local-search\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#local-search-1\">Installation →</a></li><li class=\"tab\"><a href=\"#local-search-2\">Hexo Config →</a></li><li class=\"tab\"><a href=\"#local-search-3\">NexT Config</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"local-search-1\"><p>Install <code>hexo-generator-searchdb</code> by executing the following command in <mark class=\"label info\">site root dir</mark>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"local-search-2\"><p>Edit <mark class=\"label info\">Hexo config file</mark> and add following content:</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">format:</span> <span class=\"string\">html</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"local-search-3\"><p>Edit <mark class=\"label primary\">NexT config file</mark> to enable Local Search:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Local search</span></span><br><span class=\"line\"><span class=\"comment\"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class=\"line\"><span class=\"attr\">local_search:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># If auto, trigger search by changing input.</span></span><br><span class=\"line\">  <span class=\"comment\"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class=\"line\">  <span class=\"attr\">trigger:</span> <span class=\"string\">auto</span></span><br><span class=\"line\">  <span class=\"comment\"># Show top n results per article, show all results by setting to -1</span></span><br><span class=\"line\">  <span class=\"attr\">top_n_per_article:</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"comment\"># Unescape html strings to the readable one.</span></span><br><span class=\"line\">  <span class=\"attr\">unescape:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Preload the search data when the page loads.</span></span><br><span class=\"line\">  <span class=\"attr\">preload:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure></div></div></div>\n"},{"title":"Button","url":"/docs/tag-plugins/button.html","content":"<h3 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">button</span> url, text, icon [class], [title] %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>or</p>\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> url, text, icon [class], [title] %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>url</code>     : Absolute or relative path to URL.</li>\n<li><code>text</code>    : Button text. Required if no icon specified.</li>\n<li><code>icon</code>    : Font Awesome icon name. Required if no text specified.</li>\n<li><code>[class]</code> : <em>Optional parameter.</em> Font Awesome class(es): <code>fa-fw</code> | <code>fa-lg</code> | <code>fa-2x</code> | <code>fa-3x</code> | <code>fa-4x</code> | <code>fa-5x</code></li>\n<li><code>[title]</code> : <em>Optional parameter.</em> Tooltip at mouseover.</li>\n</ul>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">button</span> #, Text %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<a class=\"btn\" href=\"#\">Text</a>\n\n<h4 id=\"Button-with-text-amp-title\"><a href=\"#Button-with-text-amp-title\" class=\"headerlink\" title=\"Button with text &amp; title\"></a>Button with text &amp; title</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Text %&#125;</span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Text &amp; Title,, Title %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<a class=\"btn\" href=\"#\">Text</a><a class=\"btn\" href=\"#\" title=\"Title\">Text & Title</a>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Text %&#125;</span><span class=\"language-xml\"> </span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Text &amp; Title,, Title %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<a class=\"btn\" href=\"#\">Text</a> <a class=\"btn\" href=\"#\" title=\"Title\">Text & Title</a>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Text %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Text &amp; Title,, Title %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<a class=\"btn\" href=\"#\">Text</a>\n<a class=\"btn\" href=\"#\" title=\"Title\">Text & Title</a>\n\n<h4 id=\"Button-with-icon\"><a href=\"#Button-with-icon\" class=\"headerlink\" title=\"Button with icon\"></a>Button with icon</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, home fa-5x %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, home fa-4x %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, home fa-3x %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, home fa-2x %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, home fa-lg %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, home %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<a class=\"btn\" href=\"#\"><i class=\"fa fa-home fa-5x\"></i></a>\n<a class=\"btn\" href=\"#\"><i class=\"fa fa-home fa-4x\"></i></a>\n<a class=\"btn\" href=\"#\"><i class=\"fa fa-home fa-3x\"></i></a>\n<a class=\"btn\" href=\"#\"><i class=\"fa fa-home fa-2x\"></i></a>\n<a class=\"btn\" href=\"#\"><i class=\"fa fa-home fa-lg\"></i></a>\n<a class=\"btn\" href=\"#\"><i class=\"fa fa-home\"></i></a>\n\n<h4 id=\"Button-with-text-amp-icon\"><a href=\"#Button-with-text-amp-icon\" class=\"headerlink\" title=\"Button with text &amp; icon\"></a>Button with text &amp; icon</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Text &amp; Icon (buggy), home %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Text &amp; Icon (fixed width), home fa-fw %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<a class=\"btn\" href=\"#\"><i class=\"fa fa-home\"></i>Text & Icon (buggy)</a>\n<a class=\"btn\" href=\"#\"><i class=\"fa fa-home fa-fw\"></i>Text & Icon (fixed width)</a>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Text &amp; Large Icon, home fa-fw fa-lg %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Text &amp; Large Icon &amp; Title, home fa-fw fa-lg, Title %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<a class=\"btn\" href=\"#\"><i class=\"fa fa-home fa-fw fa-lg\"></i>Text & Large Icon</a>\n<a class=\"btn\" href=\"#\" title=\"Title\"><i class=\"fa fa-home fa-fw fa-lg\"></i>Text & Large Icon & Title</a>\n\n<h4 id=\"Button-inside-text\"><a href=\"#Button-inside-text\" class=\"headerlink\" title=\"Button inside text\"></a>Button inside text</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\">Lorem </span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Lorem, home fa-fw fa-lg %&#125;</span><span class=\"language-xml\"> ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident </span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Ipsum, home fa-fw fa-lg %&#125;</span><span class=\"language-xml\">, sunt in culpa qui officia deserunt mollit anim id est laborum.</span></span><br></pre></td></tr></table></figure>\n\n<p>Lorem <a class=\"btn\" href=\"#\"><i class=\"fa fa-home fa-fw fa-lg\"></i>ipsum</a> dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure <a class=\"btn\" href=\"#\"><i class=\"fa fa-home fa-fw fa-lg\"></i>dolor</a> in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non <a class=\"btn\" href=\"#\"><i class=\"fa fa-home fa-fw fa-lg\"></i>proident</a>, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n<h4 id=\"Button-inside-other-tag\"><a href=\"#Button-inside-other-tag\" class=\"headerlink\" title=\"Button inside other tag\"></a>Button inside other tag</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> info %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Text &amp; Icon, home fa-fw %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, home, Title %&#125;</span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Text %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">[Link](#)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note info\"><p><a class=\"btn\" href=\"#\"><i class=\"fa fa-home fa-fw fa-lg\"></i>Text &amp; Icon</a></p>\n<p><a class=\"btn\" href=\"#\" title=\"Title\"><i class=\"fa fa-home fa-lg\"></i></a><a class=\"btn\" href=\"#\">Text</a></p>\n<p><a href=\"#\">Link</a></p>\n</div>\n\n<h4 id=\"Button-margin\"><a href=\"#Button-margin\" class=\"headerlink\" title=\"Button margin\"></a>Button margin</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-center&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, heading %&#125;</span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, fab fa-edge %&#125;</span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, times %&#125;</span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, circle-notch %&#125;</span><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, italic %&#125;</span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, fab fa-scribd %&#125;</span><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, fab fa-google %&#125;</span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, fab fa-chrome %&#125;</span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, fab fa-opera %&#125;</span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #,, gem fa-rotate-270 %&#125;</span><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<div class=\"text-center\"><div><a class=\"btn\" href=\"#\"><i class=\"fa fa-heading\"></i></a><a class=\"btn\" href=\"#\"><i class=\"fab fa-edge\"></i></a><a class=\"btn\" href=\"#\"><i class=\"fa fa-times\"></i></a><a class=\"btn\" href=\"#\"><i class=\"fa fa-circle-notch\"></i></a></div>\n<div><a class=\"btn\" href=\"#\"><i class=\"fa fa-italic\"></i></a><a class=\"btn\" href=\"#\"><i class=\"fab fa-scribd\"></i></a></div>\n<div><a class=\"btn\" href=\"#\"><i class=\"fab fa-google\"></i></a><a class=\"btn\" href=\"#\"><i class=\"fab fa-chrome\"></i></a><a class=\"btn\" href=\"#\"><i class=\"fab fa-opera\"></i></a><a class=\"btn\" href=\"#\"><i class=\"fa fa-gem fa-rotate-270\"></i></a></div></div>\n\n<h4 id=\"Button-with-relative-URL\"><a href=\"#Button-with-relative-URL\" class=\"headerlink\" title=\"Button with relative URL\"></a>Button with relative URL</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-center&quot;</span>&gt;</span></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Previous Chapter, arrow-left fa-fw fa-lg, Previous Chapter (Full Image) %&#125;</span><span class=\"language-xml\"> </span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> #, Next Chapter, arrow-right fa-fw fa-lg, Next Chapter (Label) %&#125;</span><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<div class=\"text-center\"><a class=\"btn\" href=\"/docs/tag-plugins/full-image\" title=\"Previous Chapter (Full Image)\"><i class=\"fa fa-arrow-left fa-fw fa-lg\"></i>Previous Chapter</a> <a class=\"btn\" href=\"/docs/tag-plugins/label\" title=\"Next Chapter (Label)\"><i class=\"fa fa-arrow-right fa-fw fa-lg\"></i>Next Chapter</a></div>\n\n<h4 id=\"Button-with-absolute-URL\"><a href=\"#Button-with-absolute-URL\" class=\"headerlink\" title=\"Button with absolute URL\"></a>Button with absolute URL</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-center&quot;</span>&gt;</span></span><span class=\"template-tag\">&#123;% <span class=\"name\">btn</span> https://github.com, GitHub, fab fa-github fa-fw fa-lg, GitHub %&#125;</span><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<div class=\"text-center\"><a class=\"btn\" href=\"https://github.com\" title=\"GitHub\"><i class=\"fab fa-github fa-fw fa-lg\"></i>GitHub</a></div>\n"},{"title":"Statistics and Analytics","url":"/docs/third-party-services/statistics-and-analytics.html","content":"<div class=\"note warning\"><p>NexT will not send record to analytics service provider as long as the page&#39;s host name does not match <code>url</code> option set in <mark class=\"label info\">Hexo config file</mark>. This will prevent local debugging from polluting analytics. Make sure you have configured <code>url</code> correctly, otherwise these statistics tools may not work as expected.</p>\n</div>\n\n<h3 id=\"Analytics-Tools\"><a href=\"#Analytics-Tools\" class=\"headerlink\" title=\"Analytics Tools\"></a>Analytics Tools</h3><h4 id=\"Google-Analytics\"><a href=\"#Google-Analytics\" class=\"headerlink\" title=\"Google Analytics\"></a>Google Analytics</h4><ol>\n<li><p>Create an account and log into <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hbmFseXRpY3MuZ29vZ2xlLmNvbS8=\">Google Analytics<i class=\"fa fa-external-link-alt\"></i></span>. <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vYW5hbHl0aWNzLz9obD1lbiN0b3BpYz0zNTQ0OTA2\">More detailed documentation<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li><p>Edit <mark class=\"label primary\">NexT config file</mark> and fill <code>tracking_id</code> under section <code>google_analytics</code> with your Google track ID. Google track ID always starts with <code>UA-</code>.</p>\n <figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Google Analytics</span></span><br><span class=\"line\"><span class=\"attr\">google_analytics:</span></span><br><span class=\"line\">  <span class=\"attr\">tracking_id:</span> <span class=\"string\">UA-XXXXXXXX-X</span></span><br><span class=\"line\">  <span class=\"attr\">only_pageview:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>When field <code>only_pageview</code> is set to true, NexT will only send <code>pageview</code> event to Google Analytics.<br>The benefit of using this instead of <code>only_pageview: false</code> is reduce a external script on your site, which will give you better performance but no complete analytics function.</p>\n</li>\n</ol>\n<h4 id=\"Baidu-Analytics-China\"><a href=\"#Baidu-Analytics-China\" class=\"headerlink\" title=\"Baidu Analytics (China)\"></a>Baidu Analytics (China)</h4><div class=\"tabs\" id=\"baidu-analytics\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#baidu-analytics-1\">Login →</a></li><li class=\"tab\"><a href=\"#baidu-analytics-2\">Script ID →</a></li><li class=\"tab\"><a href=\"#baidu-analytics-3\">NexT Config</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"baidu-analytics-1\"><p>Login to <span class=\"exturl\" data-url=\"aHR0cHM6Ly90b25namkuYmFpZHUuY29tLw==\">Baidu Analytics<i class=\"fa fa-external-link-alt\"></i></span> and locate to site code getting page.</p></div><div class=\"tab-pane\" id=\"baidu-analytics-2\"><p>Copy the script ID after <code>hm.js?</code>, like the following picture:<br><img src=\"/images/analytics-baidu-id.png\" alt=\"NexT Baidu Analytics\" loading=\"lazy\"></p></div><div class=\"tab-pane\" id=\"baidu-analytics-3\"><p>Edit <mark class=\"label primary\">NexT config file</mark> and change the value of <code>baidu_analytics</code> to your script ID.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Baidu Analytics ID</span></span><br><span class=\"line\"><span class=\"attr\">baidu_analytics:</span> <span class=\"string\">your_id</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h4 id=\"Growingio-Analytics\"><a href=\"#Growingio-Analytics\" class=\"headerlink\" title=\"Growingio Analytics\"></a>Growingio Analytics</h4><p>Official documentation: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdyb3dpbmdpby5jb20vdjMvZGV2ZWxvcGVyLW1hbnVhbC9zZGtpbnRlZ3JhdGVkL3dlYi1qcy1zZGsvbGF0ZXN0LWpzc2Rr\">https://docs.growingio.com/v3/developer-manual/sdkintegrated/web-js-sdk/latest-jssdk<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Edit <mark class=\"label primary\">NexT config file</mark> and change the value of <code>growingio_analytics</code> to your project ID.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Growingio Analytics</span></span><br><span class=\"line\"><span class=\"attr\">growingio_analytics:</span> <span class=\"comment\"># &lt;project_id&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Cloudflare-Web-Analytics\"><a href=\"#Cloudflare-Web-Analytics\" class=\"headerlink\" title=\"Cloudflare Web Analytics\"></a>Cloudflare Web Analytics</h4><p>Official documentation: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2xvdWRmbGFyZS5jb20vd2ViLWFuYWx5dGljcy8=\">https://www.cloudflare.com/web-analytics/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Edit <mark class=\"label primary\">NexT config file</mark> and change the value of <code>cloudflare_analytics</code> to your project ID.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Cloudflare Web Analytics</span></span><br><span class=\"line\"><span class=\"attr\">cloudflare_analytics:</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Microsoft-Clarity-Analytics\"><a href=\"#Microsoft-Clarity-Analytics\" class=\"headerlink\" title=\"Microsoft Clarity Analytics\"></a>Microsoft Clarity Analytics</h4><p>Official documentation: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGFyaXR5Lm1pY3Jvc29mdC5jb20v\">https://clarity.microsoft.com/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Edit <mark class=\"label primary\">NexT config file</mark> and change the value of <code>clarity_analytics</code> to your project ID.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Microsoft Clarity Analytics</span></span><br><span class=\"line\"><span class=\"attr\">clarity_analytics:</span> <span class=\"comment\"># &lt;project_id&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Matomo-Analytics-Self-managed\"><a href=\"#Matomo-Analytics-Self-managed\" class=\"headerlink\" title=\"Matomo Analytics (Self-managed)\"></a>Matomo Analytics (Self-managed)</h4><p>Edit <mark class=\"label primary\">NexT config file</mark> and fill <code>server_url</code> and <code>site_id</code> under section <code>matomo</code> with the url of your backend server and your customized site ID.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Matomo Analytics</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://matomo.org/</span></span><br><span class=\"line\"><span class=\"attr\">matomo:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">server_url:</span> <span class=\"comment\"># https://www.example.com/</span></span><br><span class=\"line\">  <span class=\"attr\">site_id:</span> <span class=\"comment\"># &lt;your site id&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Umami-Analytics-Self-managed\"><a href=\"#Umami-Analytics-Self-managed\" class=\"headerlink\" title=\"Umami Analytics (Self-managed)\"></a>Umami Analytics (Self-managed)</h4><p>Umami is a self-hosted web analytics solution. Official documentation: <span class=\"exturl\" data-url=\"aHR0cHM6Ly91bWFtaS5pcy8=\">https://umami.is/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Edit <mark class=\"label primary\">NexT config file</mark>. Fill <code>script_url</code> under section <code>umami</code> with your tracking script URL, and change the value of <code>website_id</code> to your website ID.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Umami Analytics</span></span><br><span class=\"line\"><span class=\"attr\">umami:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">script_url:</span> <span class=\"comment\"># https://umami.example.com/script.js</span></span><br><span class=\"line\">  <span class=\"attr\">website_id:</span> <span class=\"comment\"># &lt;your website id&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Plausible-Analytics-Self-managed\"><a href=\"#Plausible-Analytics-Self-managed\" class=\"headerlink\" title=\"Plausible Analytics (Self-managed)\"></a>Plausible Analytics (Self-managed)</h4><p>Opt for paid managed hosting or self-host it on your server. Official documentation: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wbGF1c2libGUuaW8v\">https://plausible.io/<i class=\"fa fa-external-link-alt\"></i></span></p>\n<p>Edit <mark class=\"label primary\">NexT config file</mark>. Fill <code>script_url</code> under section <code>plausible</code> with your tracking script URL, and change the value of <code>site_domain</code> to your website domain.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Plausible Analytics</span></span><br><span class=\"line\"><span class=\"attr\">plausible:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">script_url:</span> <span class=\"comment\"># https://plausible.io/js/script.js</span></span><br><span class=\"line\">  <span class=\"attr\">site_domain:</span> <span class=\"comment\"># www.example.com</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Counting-Tools\"><a href=\"#Counting-Tools\" class=\"headerlink\" title=\"Counting Tools\"></a>Counting Tools</h3><h4 id=\"LeanCloud-China\"><a href=\"#LeanCloud-China\" class=\"headerlink\" title=\"LeanCloud (China)\"></a>LeanCloud (China)</h4><p>Adding article reading times counting to NexT theme. Documentation how to set the counter up and running safely aviable in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by1sZWFuY2xvdWQtY291bnRlci1zZWN1cml0eQ==\">hexo-leancloud-counter-security<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<div class=\"tabs\" id=\"leancloud-counter\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#leancloud-counter-1\">Get App Keys →</a></li><li class=\"tab\"><a href=\"#leancloud-counter-2\">Installation →</a></li><li class=\"tab\"><a href=\"#leancloud-counter-3\">Hexo Config →</a></li><li class=\"tab\"><a href=\"#leancloud-counter-4\">NexT Config</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"leancloud-counter-1\"><ol>\n<li>Create an account or log in to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLmxlYW5jbG91ZC5hcHAvbG9naW4=\">LeanCloud<i class=\"fa fa-external-link-alt\"></i></span>, and then click the button to create an application in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLmxlYW5jbG91ZC5hcHAvYXBwcw==\">dashboard<i class=\"fa fa-external-link-alt\"></i></span>.<br> <img src=\"/images/valine-1.png\" alt=\"LeanCloud\" loading=\"lazy\"></li>\n<li>Go to the application you just created, select <code>Settings → App Keys</code> in the lower left corner, and you will see your APP ID and APP Key.<br> <img src=\"/images/valine-2.png\" alt=\"LeanCloud\" loading=\"lazy\"></li>\n</ol></div><div class=\"tab-pane\" id=\"leancloud-counter-2\"><p>Install <code>hexo-leancloud-counter-security</code> by executing the following command in <mark class=\"label info\">site root dir</mark>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-leancloud-counter-security</span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"leancloud-counter-3\"><p>Edit <mark class=\"label info\">Hexo config file</mark> and add following content:</p>\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">leancloud_counter_security:</span></span><br><span class=\"line\">  <span class=\"attr\">enable_sync:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">app_id:</span> <span class=\"string\">&lt;your</span> <span class=\"string\">app</span> <span class=\"string\">id&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">app_key:</span> <span class=\"string\">&lt;your</span> <span class=\"string\">app</span> <span class=\"string\">key&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">&lt;your</span> <span class=\"string\">username&gt;</span> <span class=\"comment\"># Will be asked while deploying if is left blank</span></span><br><span class=\"line\">  <span class=\"attr\">password:</span> <span class=\"string\">&lt;your</span> <span class=\"string\">password&gt;</span> <span class=\"comment\"># Recommmended to be left blank. Will be asked while deploying if is left blank</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"leancloud-counter-4\"><p>Edit <mark class=\"label primary\">NexT config file</mark> and fill options under <code>leancloud_visitors</code> section.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Show number of visitors to each article.</span></span><br><span class=\"line\"><span class=\"comment\"># You can visit https://www.leancloud.cn get AppID and AppKey.</span></span><br><span class=\"line\"><span class=\"attr\">leancloud_visitors:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">app_id:</span> <span class=\"comment\">#&lt;app_id&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">app_key:</span> <span class=\"comment\">#&lt;app_key&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Required for apps from CN region</span></span><br><span class=\"line\">  <span class=\"attr\">server_url:</span> <span class=\"comment\"># &lt;your server url&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security</span></span><br><span class=\"line\">  <span class=\"comment\"># If you don&#x27;t care about security in lc counter and just want to use it directly</span></span><br><span class=\"line\">  <span class=\"comment\"># (without hexo-leancloud-counter-security plugin), set the `security` to `false`.</span></span><br><span class=\"line\">  <span class=\"attr\">security:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h4 id=\"Firebase\"><a href=\"#Firebase\" class=\"headerlink\" title=\"Firebase\"></a>Firebase</h4><p>Firebase Analytics provides the functionality of visitor statistics.</p>\n<div class=\"tabs\" id=\"firestore\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#firestore-1\">Get apiKey & projectId →</a></li><li class=\"tab\"><a href=\"#firestore-2\">NexT Config</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"firestore-1\"><p>Login to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLmZpcmViYXNlLmdvb2dsZS5jb20vdS8wLw==\">Firebase<i class=\"fa fa-external-link-alt\"></i></span> to get apiKey and projectId. The Web API Key gets generated once you go into the &quot;Authentication&quot; section for the first time.</p>\n<p><img src=\"/images/firebase.png\" alt=\"Firebase\" loading=\"lazy\"></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9maXJlYmFzZS5nb29nbGUuY29tL2RvY3MvZmlyZXN0b3JlLw==\">More detailed documentation<i class=\"fa fa-external-link-alt\"></i></span></p></div><div class=\"tab-pane\" id=\"firestore-2\"><p>Edit <mark class=\"label primary\">NexT config file</mark> and add or change <code>firestore</code> section:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">firestore:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">collection:</span> <span class=\"string\">articles</span> <span class=\"comment\">#required, a string collection name to access firestore database</span></span><br><span class=\"line\">  <span class=\"attr\">apiKey:</span> <span class=\"comment\">#required</span></span><br><span class=\"line\">  <span class=\"attr\">projectId:</span> <span class=\"comment\">#required</span></span><br></pre></td></tr></table></figure></div></div></div>\n\n<h4 id=\"Busuanzi-Counting-China\"><a href=\"#Busuanzi-Counting-China\" class=\"headerlink\" title=\"Busuanzi Counting (China)\"></a>Busuanzi Counting (China)</h4><div class=\"tabs\" id=\"busuanzi-counting\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#busuanzi-counting-1\">Global Settings →</a></li><li class=\"tab\"><a href=\"#busuanzi-counting-2\">Site UV Settings →</a></li><li class=\"tab\"><a href=\"#busuanzi-counting-3\">Site PV Settings →</a></li><li class=\"tab\"><a href=\"#busuanzi-counting-4\">Per-page PV Settings</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"busuanzi-counting-1\"><p>Edit <code>busuanzi_count</code> option in <mark class=\"label primary\">NexT config file</mark>.<br>When <code>enable: true</code>, global setting is enabled. If <code>total_visitors</code>, <code>total_views</code>, <code>post_views</code> are all <code>false</code>, Busuanzi only counts but never shows.</p></div><div class=\"tab-pane\" id=\"busuanzi-counting-2\"><p>When <code>total_visitors: true</code>, it will show site UV in footer. You can also use font-awesome by setting <code>total_visitors_icon</code> to the name of the icon.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">busuanzi_count:</span></span><br><span class=\"line\">  <span class=\"attr\">total_visitors:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">total_visitors_icon:</span> <span class=\"string\">fa</span> <span class=\"string\">fa-user</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"busuanzi-counting-3\"><p>When <code>total_views: true</code>, it will show site UV in footer. You can also use font-awesome by setting <code>total_views_icon</code> to the name of the icon.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">busuanzi_count:</span></span><br><span class=\"line\">  <span class=\"attr\">total_views:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">total_views_icon:</span> <span class=\"string\">fa</span> <span class=\"string\">fa-eye</span></span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"busuanzi-counting-4\"><p>When <code>post_views: true</code>, it will show page PV in post meta. You can also use font-awesome by setting <code>post_views_icon</code> to the name of the icon.</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">busuanzi_count:</span></span><br><span class=\"line\">  <span class=\"attr\">post_views:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">post_views_icon:</span> <span class=\"string\">far</span> <span class=\"string\">fa-eye</span></span><br></pre></td></tr></table></figure></div></div></div>\n"},{"title":"Caniuse","url":"/docs/tag-plugins/caniuse.html","content":"<h3 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">caniuse</span> feature @ [periods] %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>or</p>\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">can</span> feature @ [periods] %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>feature</code>   : Search for the feature you want on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jYW5pdXNlLmNvbS8=\">https://caniuse.com<i class=\"fa fa-external-link-alt\"></i></span>, then click on the hash sign to the left of the search result heading and you will get the unique name of this feature.</li>\n<li><code>[periods]</code> : <em>Optional parameter.</em> Select the browser versions to display. Supported values: <code>past_1</code>, <code>past_2</code>, <code>past_3</code>, <code>past_4</code>, <code>past_5</code>, <code>current</code>, <code>future_3</code>, <code>future_2</code>, <code>future_1</code>. If this value is empty, the default value <code>current</code> will be used.</li>\n</ul>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><h4 id=\"Caniuse-without-periods\"><a href=\"#Caniuse-without-periods\" class=\"headerlink\" title=\"Caniuse without periods\"></a>Caniuse without periods</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">caniuse</span> fetch %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<iframe data-feature=\"fetch\" src=\"https://caniuse.bitsofco.de/embed/index.html?feat=fetch&periods=current&accessible-colours=false\" frameborder=\"0\" width=\"100%\" height=\"400px\"></iframe>\n\n<h4 id=\"Caniuse-with-current-period\"><a href=\"#Caniuse-with-current-period\" class=\"headerlink\" title=\"Caniuse with current period\"></a>Caniuse with current period</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">caniuse</span> sharedarraybuffer @ current %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<iframe data-feature=\"sharedarraybuffer\" src=\"https://caniuse.bitsofco.de/embed/index.html?feat=sharedarraybuffer&periods=current&accessible-colours=false\" frameborder=\"0\" width=\"100%\" height=\"400px\"></iframe>\n\n<h4 id=\"Caniuse-with-future-periods\"><a href=\"#Caniuse-with-future-periods\" class=\"headerlink\" title=\"Caniuse with future periods\"></a>Caniuse with future periods</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">caniuse</span> loading-lazy-attr @ future_3,future_2,future_1 %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<iframe data-feature=\"loading-lazy-attr\" src=\"https://caniuse.bitsofco.de/embed/index.html?feat=loading-lazy-attr&periods=future_3,future_2,future_1&accessible-colours=false\" frameborder=\"0\" width=\"100%\" height=\"400px\"></iframe>\n\n<h4 id=\"Caniuse-with-past-periods\"><a href=\"#Caniuse-with-past-periods\" class=\"headerlink\" title=\"Caniuse with past periods\"></a>Caniuse with past periods</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">caniuse</span> link-rel-modulepreload @ past_1,past_2,past_3,past_4,past_5 %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<iframe data-feature=\"link-rel-modulepreload\" src=\"https://caniuse.bitsofco.de/embed/index.html?feat=link-rel-modulepreload&periods=past_1,past_2,past_3,past_4,past_5&accessible-colours=false\" frameborder=\"0\" width=\"100%\" height=\"400px\"></iframe>\n"},{"title":"Post Widgets","url":"/docs/third-party-services/post-widgets.html","content":"<h3 id=\"AddThis\"><a href=\"#AddThis\" class=\"headerlink\" title=\"AddThis\"></a>AddThis</h3><div class=\"tabs\" id=\"addthis\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#addthis-1\">Sign Up →</a></li><li class=\"tab\"><a href=\"#addthis-2\">AddThis ID →</a></li><li class=\"tab\"><a href=\"#addthis-3\">NexT Config</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"addthis-1\"><p>Sign up in <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWRkdGhpcy5jb20v\">AddThis<i class=\"fa fa-external-link-alt\"></i></span>. You can use Google &#x2F; Facebook &#x2F; Twitter to login.</p></div><div class=\"tab-pane\" id=\"addthis-2\"><p>Get AddThis ID in this menu: <code>Profile Settings</code> → <code>General</code> → <code>ID</code>. See example on the picture below:<br><img src=\"/images/add-this-id.png\" alt=\"AddThis ID\" loading=\"lazy\"></p></div><div class=\"tab-pane\" id=\"addthis-3\"><p>Edit the value of <code>add_this_id</code> in the <mark class=\"label primary\">NexT config file</mark> as following:</p>\n<figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">add_this_id:</span> <span class=\"string\">your_add_this_id</span></span><br></pre></td></tr></table></figure></div></div></div>\n"},{"title":"Group Pictures","url":"/docs/tag-plugins/group-pictures.html","content":"<h3 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">grouppicture</span> [number]-[layout] %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endgrouppicture</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>or</p>\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">gp</span> [number]-[layout] %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endgp</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>[number]</code> : <em>Optional parameter.</em> Total number of pictures to add in the group pictures.</p>\n</li>\n<li><p><code>[layout]</code> : <em>Optional parameter.</em> The index of the layout, which can be obtained according to the figure below. For example, if you want to apply the second layout to 4 pictures, then use</p>\n  <figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">grouppicture</span> 4-2 %&#125;</span><span class=\"template-tag\">&#123;% <span class=\"name\">endgrouppicture</span> %&#125;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><img src=\"/images/group-picture-1.png\" alt=\"Group Picture Layout\" loading=\"lazy\"><br><img src=\"/images/group-picture-2.png\" alt=\"Group Picture Layout\" loading=\"lazy\"></p>\n<div class=\"note info\"><p>It&#39;s recommended to use Group Pictures with <a href=\"/docs/third-party-services/external-libraries.html#Fancybox\">Fancybox</a> enabled.</p>\n</div>\n\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">grouppicture</span> 3-3 %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">![](/images/next.svg)</span></span><br><span class=\"line\"><span class=\"language-xml\">![](/images/next.svg)</span></span><br><span class=\"line\"><span class=\"language-xml\">![](/images/next.svg)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endgrouppicture</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"group-picture\"><div class=\"group-picture-row\"><div class=\"group-picture-column\"><img src=\"/images/next.svg\" loading=\"lazy\"></div><div class=\"group-picture-column\"><img src=\"/images/next.svg\" loading=\"lazy\"></div><div class=\"group-picture-column\"><img src=\"/images/next.svg\" loading=\"lazy\"></div></div></div>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">gp</span> 5-2 %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">![](/images/next.svg)</span></span><br><span class=\"line\"><span class=\"language-xml\">![](/images/next.svg)</span></span><br><span class=\"line\"><span class=\"language-xml\">![](/images/next.svg)</span></span><br><span class=\"line\"><span class=\"language-xml\">![](/images/next.svg)</span></span><br><span class=\"line\"><span class=\"language-xml\">![](/images/next.svg)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endgp</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"group-picture\"><div class=\"group-picture-row\"><div class=\"group-picture-column\"><img src=\"/images/next.svg\" loading=\"lazy\"></div><div class=\"group-picture-column\"><img src=\"/images/next.svg\" loading=\"lazy\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\"><img src=\"/images/next.svg\" loading=\"lazy\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\"><img src=\"/images/next.svg\" loading=\"lazy\"></div><div class=\"group-picture-column\"><img src=\"/images/next.svg\" loading=\"lazy\"></div></div></div>\n"},{"title":"Tag Plugins","url":"/docs/tag-plugins/index.html","content":"<p>Tag Plugin is a way to make special style contents supported by Hexo. For example, we cannot show a image with custom size in standard Markdown. And then we can use tag plugins to solve it. <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdGFnLXBsdWdpbnM=\">Hexo has a lot of tags<i class=\"fa fa-external-link-alt\"></i></span> which can help user. And Hexo also have interfaces to themes which make themes able to create their own tags. Following tags are provided by NexT:</p>\n<ul>\n<li><a href=\"/docs/tag-plugins/button.html\">Button</a></li>\n<li><a href=\"/docs/tag-plugins/caniuse.html\">Caniuse</a></li>\n<li><a href=\"#Centered-Quote\">Centered Quote</a></li>\n<li><a href=\"/docs/tag-plugins/group-pictures.html\">Group Pictures</a></li>\n<li><a href=\"/docs/tag-plugins/label.html\">Label</a></li>\n<li><a href=\"/docs/tag-plugins/link-grid.html\">Link Grid</a></li>\n<li><a href=\"/docs/tag-plugins/mermaid.html\">Mermaid</a></li>\n<li><a href=\"/docs/tag-plugins/note.html\">Note</a></li>\n<li><a href=\"/docs/tag-plugins/pdf.html\">PDF</a></li>\n<li><a href=\"/docs/tag-plugins/tabs.html\">Tabs</a></li>\n<li><a href=\"#Video\">Video</a></li>\n</ul>\n<p>These tag plugins are only available in the theme NexT. If you switch to other Hexo themes, they may cause rendering errors.</p>\n<h3 id=\"Centered-Quote\"><a href=\"#Centered-Quote\" class=\"headerlink\" title=\"Centered Quote\"></a>Centered Quote</h3><p>This tag will make a quote with two lines before and after it, and text quoted will be centered. When using centered quote, if we have multi-line text, and each line has a different length, the quote won&#39;t be symmetrical, so it&#39;s recommended to use when only have single line text. For example before article all after article to make a summary.</p>\n<h4 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">centerquote</span> %&#125;</span><span class=\"language-xml\">Something</span><span class=\"template-tag\">&#123;% <span class=\"name\">endcenterquote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>or</p>\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">cq</span> %&#125;</span><span class=\"language-xml\">Something</span><span class=\"template-tag\">&#123;% <span class=\"name\">endcq</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">cq</span> %&#125;</span><span class=\"language-xml\">Elegant in code, simple in core</span><span class=\"template-tag\">&#123;% <span class=\"name\">endcq</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote class=\"blockquote-center\">\n<p>Elegant in code, simple in core</p>\n\n</blockquote>\n\n<h3 id=\"Video\"><a href=\"#Video\" class=\"headerlink\" title=\"Video\"></a>Video</h3><h4 id=\"Usage-1\"><a href=\"#Usage-1\" class=\"headerlink\" title=\"Usage\"></a>Usage</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">video</span> url %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Examples-1\"><a href=\"#Examples-1\" class=\"headerlink\" title=\"Examples\"></a>Examples</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">video</span> https://example.com/sample.mp4 %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">video</span> /path/to/your/video.mp4 %&#125;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Link Grid","url":"/docs/tag-plugins/link-grid.html","content":"<h3 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">linkgrid</span> [image] [delimiter] [comment] %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endlinkgrid</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>or</p>\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">lg</span> [image] [delimiter] [comment] %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endlg</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>[image]</code>     : <em>Optional parameter.</em> Default image URL.</li>\n<li><code>[delimiter]</code> : <em>Optional parameter.</em> If the optional delimiter parameter is given, it is interpreted as the delimiter of items in each line.</li>\n<li><code>[comment]</code>   : <em>Optional parameter.</em> If the optional comment parameter is given, it is interpreted as the symbol to comment out a line.</li>\n</ul>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">linkgrid</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Theme NexT | https://theme-next.js.org/ | Stay Simple. Stay NexT. | /images/apple-touch-icon-next.png</span></span><br><span class=\"line\"><span class=\"language-xml\">Theme NexT | https://theme-next.js.org/ | Stay Simple. Stay NexT. | /images/apple-touch-icon-next.png</span></span><br><span class=\"line\"><span class=\"language-xml\">Theme NexT | https://theme-next.js.org/ | Stay Simple. Stay NexT. | /images/apple-touch-icon-next.png</span></span><br><span class=\"line\"><span class=\"language-xml\">Theme NexT | https://theme-next.js.org/ | Stay Simple. Stay NexT. | /images/apple-touch-icon-next.png</span></span><br><span class=\"line\"><span class=\"language-xml\">% Theme NexT | https://theme-next.js.org/ | Stay Simple. Stay NexT. | /images/apple-touch-icon-next.png</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endlinkgrid</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"link-grid\"><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"/images/apple-touch-icon-next.png\"></object>\n<p>Theme NexT</p><p>Stay Simple. Stay NexT.</p>\n<a href=\"https://theme-next.js.org/\"></a>\n</div><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"/images/apple-touch-icon-next.png\"></object>\n<p>Theme NexT</p><p>Stay Simple. Stay NexT.</p>\n<a href=\"https://theme-next.js.org/\"></a>\n</div><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"/images/apple-touch-icon-next.png\"></object>\n<p>Theme NexT</p><p>Stay Simple. Stay NexT.</p>\n<a href=\"https://theme-next.js.org/\"></a>\n</div><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"/images/apple-touch-icon-next.png\"></object>\n<p>Theme NexT</p><p>Stay Simple. Stay NexT.</p>\n<a href=\"https://theme-next.js.org/\"></a>\n</div></div>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">lg</span> /images/apple-touch-icon-next.png , %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Theme NexT , https://theme-next.js.org/ , Stay Simple. Stay NexT. , /images/apple-touch-icon-next.png</span></span><br><span class=\"line\"><span class=\"language-xml\">Theme NexT , https://theme-next.js.org/ , Stay Simple. Stay NexT. , /images/apple-touch-icon-next.png</span></span><br><span class=\"line\"><span class=\"language-xml\">Theme NexT , https://theme-next.js.org/ , Stay Simple. Stay NexT. , /images/apple-touch-icon-next.png</span></span><br><span class=\"line\"><span class=\"language-xml\">% Theme NexT , https://theme-next.js.org/ , Stay Simple. Stay NexT. , /images/apple-touch-icon-next.png</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endlg</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"link-grid\"><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"/images/apple-touch-icon-next.png\"></object>\n<p>Theme NexT</p><p>Stay Simple. Stay NexT.</p>\n<a href=\"https://theme-next.js.org/\"></a>\n</div><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"/images/apple-touch-icon-next.png\"></object>\n<p>Theme NexT</p><p>Stay Simple. Stay NexT.</p>\n<a href=\"https://theme-next.js.org/\"></a>\n</div><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"/images/apple-touch-icon-next.png\"></object>\n<p>Theme NexT</p><p>Stay Simple. Stay NexT.</p>\n<a href=\"https://theme-next.js.org/\"></a>\n</div></div>\n"},{"title":"Note (Bootstrap Callout)","url":"/docs/tag-plugins/note.html","content":"<h3 id=\"Settings\"><a href=\"#Settings\" class=\"headerlink\" title=\"Settings\"></a>Settings</h3><figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">note:</span></span><br><span class=\"line\">  <span class=\"comment\"># Note tag style values:</span></span><br><span class=\"line\">  <span class=\"comment\">#  - simple    bs-callout old alert style. Default.</span></span><br><span class=\"line\">  <span class=\"comment\">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class=\"line\">  <span class=\"comment\">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class=\"line\">  <span class=\"comment\">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class=\"line\">  <span class=\"attr\">style:</span> <span class=\"string\">simple</span></span><br><span class=\"line\">  <span class=\"attr\">icons:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class=\"line\">  <span class=\"comment\"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class=\"line\">  <span class=\"attr\">light_bg_offset:</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> [class] [no-icon] [summary] %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Any content (support inline tags too).</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>[class]</code>   : <em>Optional parameter.</em> Supported values: default | primary | success | info | warning | danger.</li>\n<li><code>[no-icon]</code> : <em>Optional parameter.</em> Disable icon in note.</li>\n<li><code>[summary]</code> : <em>Optional parameter.</em> Optional summary of the note.</li>\n</ul>\n<p>All parameters are optional.</p>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">#### Header</span></span><br><span class=\"line\"><span class=\"language-xml\">(without define class style)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note \"><h4 id=\"Header\"><a href=\"#Header\" class=\"headerlink\" title=\"Header\"></a>Header</h4><p>(without define class style)</p>\n</div>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> default %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">#### Default Header</span></span><br><span class=\"line\"><span class=\"language-xml\">Welcome to [Hexo!](https://hexo.io)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note default\"><h4 id=\"Default-Header\"><a href=\"#Default-Header\" class=\"headerlink\" title=\"Default Header\"></a>Default Header</h4><p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n</div>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> primary %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">#### Primary Header</span></span><br><span class=\"line\"><span class=\"language-xml\">**Welcome** to [Hexo!](https://hexo.io)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note primary\"><h4 id=\"Primary-Header\"><a href=\"#Primary-Header\" class=\"headerlink\" title=\"Primary Header\"></a>Primary Header</h4><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n</div>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> info %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">#### Info Header</span></span><br><span class=\"line\"><span class=\"language-xml\">**Welcome** to [Hexo!](https://hexo.io)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note info\"><h4 id=\"Info-Header\"><a href=\"#Info-Header\" class=\"headerlink\" title=\"Info Header\"></a>Info Header</h4><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n</div>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> success %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">#### Success Header</span></span><br><span class=\"line\"><span class=\"language-xml\">**Welcome** to [Hexo!](https://hexo.io)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note success\"><h4 id=\"Success-Header\"><a href=\"#Success-Header\" class=\"headerlink\" title=\"Success Header\"></a>Success Header</h4><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n</div>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> warning %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">#### Warning Header</span></span><br><span class=\"line\"><span class=\"language-xml\">**Welcome** to [Hexo!](https://hexo.io)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note warning\"><h4 id=\"Warning-Header\"><a href=\"#Warning-Header\" class=\"headerlink\" title=\"Warning Header\"></a>Warning Header</h4><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n</div>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> danger %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">#### Danger Header</span></span><br><span class=\"line\"><span class=\"language-xml\">**Welcome** to [Hexo!](https://hexo.io)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note danger\"><h4 id=\"Danger-Header\"><a href=\"#Danger-Header\" class=\"headerlink\" title=\"Danger Header\"></a>Danger Header</h4><p><strong>Welcome</strong> to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo!<i class=\"fa fa-external-link-alt\"></i></span></p>\n</div>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> info no-icon %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">#### No icon note</span></span><br><span class=\"line\"><span class=\"language-xml\">Note **without** icon: `note info no-icon`</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note info no-icon\"><h4 id=\"No-icon-note\"><a href=\"#No-icon-note\" class=\"headerlink\" title=\"No icon note\"></a>No icon note</h4><p>Note <strong>without</strong> icon: <code>note info no-icon</code></p>\n</div>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> primary This is a summary %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">#### Details and summary</span></span><br><span class=\"line\"><span class=\"language-xml\">Note with summary: `note primary This is a summary`</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<details class=\"note primary\"><summary><p>This is a summary</p>\n</summary>\n<h4 id=\"Details-and-summary\"><a href=\"#Details-and-summary\" class=\"headerlink\" title=\"Details and summary\"></a>Details and summary</h4><p>Note with summary: <code>note primary This is a summary</code></p>\n\n</details>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> info no-icon This is a summary %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">#### Details and summary (No icon)</span></span><br><span class=\"line\"><span class=\"language-xml\">Note with summary: `note info no-icon This is a summary`</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<details class=\"note info no-icon\"><summary><p>This is a summary</p>\n</summary>\n<h4 id=\"Details-and-summary-No-icon\"><a href=\"#Details-and-summary-No-icon\" class=\"headerlink\" title=\"Details and summary (No icon)\"></a>Details and summary (No icon)</h4><p>Note with summary: <code>note info no-icon This is a summary</code></p>\n\n</details>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> success %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">#### Codeblock in note</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">```</span></span><br><span class=\"line\"><span class=\"language-xml\">code block in note tag</span></span><br><span class=\"line\"><span class=\"language-xml\">code block in note tag</span></span><br><span class=\"line\"><span class=\"language-xml\">code block in note tag</span></span><br><span class=\"line\"><span class=\"language-xml\">```</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note success\"><h4 id=\"Codeblock-in-note\"><a href=\"#Codeblock-in-note\" class=\"headerlink\" title=\"Codeblock in note\"></a>Codeblock in note</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">code block in note tag</span><br><span class=\"line\">code block in note tag</span><br><span class=\"line\">code block in note tag</span><br></pre></td></tr></table></figure></div>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> default %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">#### Lists in note</span></span><br><span class=\"line\"><span class=\"language-xml\">* ul</span></span><br><span class=\"line\"><span class=\"language-xml\">* ul</span></span><br><span class=\"line\"><span class=\"language-xml\">    * ul</span></span><br><span class=\"line\"><span class=\"language-xml\">    * ul</span></span><br><span class=\"line\"><span class=\"language-xml\">* ul</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">1. ol</span></span><br><span class=\"line\"><span class=\"language-xml\">2. ol</span></span><br><span class=\"line\"><span class=\"language-xml\">    1. ol</span></span><br><span class=\"line\"><span class=\"language-xml\">    2. ol</span></span><br><span class=\"line\"><span class=\"language-xml\">3. ol</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note default\"><h4 id=\"Lists-in-note\"><a href=\"#Lists-in-note\" class=\"headerlink\" title=\"Lists in note\"></a>Lists in note</h4><ul>\n<li>ul</li>\n<li>ul<ul>\n<li>ul</li>\n<li>ul</li>\n</ul>\n</li>\n<li>ul</li>\n</ul>\n<ol>\n<li>ol</li>\n<li>ol<ol>\n<li>ol</li>\n<li>ol</li>\n</ol>\n</li>\n<li>ol</li>\n</ol>\n</div>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\">#### Table in Note</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> default %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">| 1 | 2 |</span></span><br><span class=\"line\"><span class=\"language-xml\">| - | - |</span></span><br><span class=\"line\"><span class=\"language-xml\">| 3 | 4 |</span></span><br><span class=\"line\"><span class=\"language-xml\">| 5 | 6 |</span></span><br><span class=\"line\"><span class=\"language-xml\">| 7 | 8 |</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note default\"><h4 id=\"Table-in-note\"><a href=\"#Table-in-note\" class=\"headerlink\" title=\"Table in note\"></a>Table in note</h4><table>\n<thead>\n<tr>\n<th>1</th>\n<th>2</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>3</td>\n<td>4</td>\n</tr>\n<tr>\n<td>5</td>\n<td>6</td>\n</tr>\n<tr>\n<td>7</td>\n<td>8</td>\n</tr>\n</tbody></table>\n</div>\n"},{"title":"Label","url":"/docs/tag-plugins/label.html","content":"<h3 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">label</span> [class]@text %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>[class]</code> : <em>Optional parameter.</em> Supported values: <code>default</code> | <code>primary</code> | <code>success</code> | <code>info</code> | <code>warning</code> | <code>danger</code>.<br>If not specified, the default style of the browser will be used, which may be different in different browsers.</li>\n<li><code>text</code>    : <code>@text</code> can be specified with or without space<br>E.g. <code>success @text</code> is the same as <code>success@text</code>.</li>\n</ul>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\">Lorem </span><span class=\"template-tag\">&#123;% <span class=\"name\">label</span> @ipsum %&#125;</span><span class=\"language-xml\"> </span><span class=\"template-tag\">&#123;% <span class=\"name\">label</span> primary@dolor sit %&#125;</span><span class=\"language-xml\"> amet, consectetur </span><span class=\"template-tag\">&#123;% <span class=\"name\">label</span> success@adipiscing elit, %&#125;</span><span class=\"language-xml\"> sed </span><span class=\"template-tag\">&#123;% <span class=\"name\">label</span> info@do eiusmod %&#125;</span><span class=\"language-xml\"> tempor incididunt ut labore et dolore magna aliqua.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Ut enim *</span><span class=\"template-tag\">&#123;% <span class=\"name\">label</span> warning @ad %&#125;</span><span class=\"language-xml\">* minim veniam, quis **</span><span class=\"template-tag\">&#123;% <span class=\"name\">label</span> danger@nostrud %&#125;</span><span class=\"language-xml\">** exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Duis aute irure dolor in reprehenderit in voluptate ~~</span><span class=\"template-tag\">&#123;% <span class=\"name\">label</span> default @velit %&#125;</span><span class=\"language-xml\">~~ <span class=\"tag\">&lt;<span class=\"name\">mark</span>&gt;</span>esse<span class=\"tag\">&lt;/<span class=\"name\">mark</span>&gt;</span> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span></span><br></pre></td></tr></table></figure>\n\n<p>Lorem <mark class=\"label \">ipsum</mark> <mark class=\"label primary\">dolor sit</mark> amet, consectetur <mark class=\"label success\">adipiscing elit,</mark> sed <mark class=\"label info\">do eiusmod</mark> tempor incididunt ut labore et dolore magna aliqua.</p>\n<p>Ut enim <em><mark class=\"label warning\">ad</mark></em> minim veniam, quis <strong><mark class=\"label danger\">nostrud</mark></strong> exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n<p>Duis aute irure dolor in reprehenderit in voluptate <del><mark class=\"label default\">velit</mark></del> <mark>esse</mark> cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n"},{"title":"PDF","url":"/docs/tag-plugins/pdf.html","content":"<h3 id=\"Settings\"><a href=\"#Settings\" class=\"headerlink\" title=\"Settings\"></a>Settings</h3><figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">pdf:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Default height</span></span><br><span class=\"line\">  <span class=\"attr\">height:</span> <span class=\"string\">500px</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">pdf</span> url [height] %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>url</code>      : The URL (Absolute path) of the PDF file.</li>\n<li><code>[height]</code> : <em>Optional parameter.</em> Height of the PDF display element, e.g. 800px.</li>\n</ul>\n<div class=\"note warning\"><p>The loading of pdf.js or pdf file might be blocked by CORS policy. If you want to load resources from another website, make sure the Access-Control-Allow-Origin header is set correctly. See also <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbg==\">Access-Control-Allow-Origin - HTTP | MDN<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n</div>\n\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">pdf</span> https://example.com/sample.pdf %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">pdf</span> /path/to/your/file.pdf 600px %&#125;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Mermaid","url":"/docs/tag-plugins/mermaid.html","content":"<h3 id=\"Settings\"><a href=\"#Settings\" class=\"headerlink\" title=\"Settings\"></a>Settings</h3><figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Mermaid tag</span></span><br><span class=\"line\"><span class=\"attr\">mermaid:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Available themes: default | dark | forest | neutral</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span></span><br><span class=\"line\">    <span class=\"attr\">light:</span> <span class=\"string\">default</span></span><br><span class=\"line\">    <span class=\"attr\">dark:</span> <span class=\"string\">dark</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight yml\"><figcaption><span>Hexo config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">highlight:</span></span><br><span class=\"line\">  <span class=\"attr\">exclude_languages:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">mermaid</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">mermaid</span> type %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endmermaid</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>or</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">pre</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mermaid&quot;</span>&gt;</span></span>type<span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>type</code> : type of the mermaid chart, visit <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21lcm1haWQtanMvbWVybWFpZA==\">https://github.com/mermaid-js/mermaid<i class=\"fa fa-external-link-alt\"></i></span> for more information.</li>\n</ul>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">mermaid</span> graph TD %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">A[Hard] --&gt;|Text| B(Round)</span></span><br><span class=\"line\"><span class=\"language-xml\">B --&gt; C&#123;Decision&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">C --&gt;|One| D[Result 1]</span></span><br><span class=\"line\"><span class=\"language-xml\">C --&gt;|Two| E[Result 2]</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endmermaid</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<pre class=\"mermaid\">\ngraph TD\nA[Hard] --&gt;|Text| B(Round)\nB --&gt; C{Decision}\nC --&gt;|One| D[Result 1]\nC --&gt;|Two| E[Result 2]\n</pre>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">mermaid</span> sequenceDiagram %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Alice-&gt;&gt;John: Hello John, how are you?</span></span><br><span class=\"line\"><span class=\"language-xml\">loop Healthcheck</span></span><br><span class=\"line\"><span class=\"language-xml\">    John-&gt;&gt;John: Fight against hypochondria</span></span><br><span class=\"line\"><span class=\"language-xml\">end</span></span><br><span class=\"line\"><span class=\"language-xml\">Note right of John: Rational thoughts!</span></span><br><span class=\"line\"><span class=\"language-xml\">John--&gt;&gt;Alice: Great!</span></span><br><span class=\"line\"><span class=\"language-xml\">John-&gt;&gt;Bob: How about you?</span></span><br><span class=\"line\"><span class=\"language-xml\">Bob--&gt;&gt;John: Jolly good!</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endmermaid</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<pre class=\"mermaid\">\nsequenceDiagram\nAlice-&gt;&gt;John: Hello John, how are you?\nloop Healthcheck\n    John-&gt;&gt;John: Fight against hypochondria\nend\nNote right of John: Rational thoughts!\nJohn--&gt;&gt;Alice: Great!\nJohn-&gt;&gt;Bob: How about you?\nBob--&gt;&gt;John: Jolly good!\n</pre>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">mermaid</span> gantt %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">dateFormat  YYYY-MM-DD</span></span><br><span class=\"line\"><span class=\"language-xml\">section Section</span></span><br><span class=\"line\"><span class=\"language-xml\">Completed :done,    des1, 2014-01-06,2014-01-08</span></span><br><span class=\"line\"><span class=\"language-xml\">Active        :active,  des2, 2014-01-07, 3d</span></span><br><span class=\"line\"><span class=\"language-xml\">Parallel 1   :         des3, after des1, 1d</span></span><br><span class=\"line\"><span class=\"language-xml\">Parallel 2   :         des4, after des1, 1d</span></span><br><span class=\"line\"><span class=\"language-xml\">Parallel 3   :         des5, after des3, 1d</span></span><br><span class=\"line\"><span class=\"language-xml\">Parallel 4   :         des6, after des4, 1d</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endmermaid</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<pre class=\"mermaid\">\ngantt\ndateFormat  YYYY-MM-DD\nsection Section\nCompleted :done,    des1, 2014-01-06,2014-01-08\nActive        :active,  des2, 2014-01-07, 3d\nParallel 1   :         des3, after des1, 1d\nParallel 2   :         des4, after des1, 1d\nParallel 3   :         des5, after des3, 1d\nParallel 4   :         des6, after des4, 1d\n</pre>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">mermaid</span> classDiagram %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Class01 &lt;|-- AveryLongClass : Cool</span></span><br><span class=\"line\"><span class=\"language-xml\">&lt;<span class=\"tag\">&lt;<span class=\"name\">interface</span>&gt;</span>&gt; Class01</span></span><br><span class=\"line\"><span class=\"language-xml\">Class09 --&gt; C2 : Where am i?</span></span><br><span class=\"line\"><span class=\"language-xml\">Class09 --* C3</span></span><br><span class=\"line\"><span class=\"language-xml\">Class09 --|&gt; Class07</span></span><br><span class=\"line\"><span class=\"language-xml\">Class07 : equals()</span></span><br><span class=\"line\"><span class=\"language-xml\">Class07 : Object[] elementData</span></span><br><span class=\"line\"><span class=\"language-xml\">Class01 : size()</span></span><br><span class=\"line\"><span class=\"language-xml\">Class01 : int chimp</span></span><br><span class=\"line\"><span class=\"language-xml\">Class01 : int gorilla</span></span><br><span class=\"line\"><span class=\"language-xml\">class Class10 &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">  &lt;<span class=\"tag\">&lt;<span class=\"name\">service</span>&gt;</span>&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">  int id</span></span><br><span class=\"line\"><span class=\"language-xml\">  size()</span></span><br><span class=\"line\"><span class=\"language-xml\">&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endmermaid</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<pre class=\"mermaid\">\nclassDiagram\nClass01 &lt;|-- AveryLongClass : Cool\n&lt;&lt;interface&gt;&gt; Class01\nClass09 --&gt; C2 : Where am i?\nClass09 --* C3\nClass09 --|&gt; Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nclass Class10 {\n  &lt;&lt;service&gt;&gt;\n  int id\n  size()\n}\n</pre>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">mermaid</span> stateDiagram %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">[*] --&gt; Still</span></span><br><span class=\"line\"><span class=\"language-xml\">Still --&gt; [*]</span></span><br><span class=\"line\"><span class=\"language-xml\">Still --&gt; Moving</span></span><br><span class=\"line\"><span class=\"language-xml\">Moving --&gt; Still</span></span><br><span class=\"line\"><span class=\"language-xml\">Moving --&gt; Crash</span></span><br><span class=\"line\"><span class=\"language-xml\">Crash --&gt; [*]</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endmermaid</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<pre class=\"mermaid\">\nstateDiagram\n[*] --&gt; Still\nStill --&gt; [*]\nStill --&gt; Moving\nMoving --&gt; Still\nMoving --&gt; Crash\nCrash --&gt; [*]\n</pre>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">mermaid</span> pie %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">&quot;Dogs&quot; : 386</span></span><br><span class=\"line\"><span class=\"language-xml\">&quot;Cats&quot; : 85</span></span><br><span class=\"line\"><span class=\"language-xml\">&quot;Rats&quot; : 15</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endmermaid</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<pre class=\"mermaid\">\npie\n&quot;Dogs&quot; : 386\n&quot;Cats&quot; : 85\n&quot;Rats&quot; : 15\n</pre>\n\n<figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">mermaid</span> journey %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">title My working day</span></span><br><span class=\"line\"><span class=\"language-xml\">section Go to work</span></span><br><span class=\"line\"><span class=\"language-xml\">  Make tea: 5: Me</span></span><br><span class=\"line\"><span class=\"language-xml\">  Go upstairs: 3: Me</span></span><br><span class=\"line\"><span class=\"language-xml\">  Do work: 1: Me, Cat</span></span><br><span class=\"line\"><span class=\"language-xml\">section Go home</span></span><br><span class=\"line\"><span class=\"language-xml\">  Go downstairs: 5: Me</span></span><br><span class=\"line\"><span class=\"language-xml\">  Sit down: 3: Me</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endmermaid</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<pre class=\"mermaid\">\njourney\ntitle My working day\nsection Go to work\n  Make tea: 5: Me\n  Go upstairs: 3: Me\n  Do work: 1: Me, Cat\nsection Go home\n  Go downstairs: 5: Me\n  Sit down: 3: Me\n</pre>\n"},{"title":"Tabs","url":"/docs/tag-plugins/tabs.html","content":"<h3 id=\"Settings\"><a href=\"#Settings\" class=\"headerlink\" title=\"Settings\"></a>Settings</h3><figure class=\"highlight yml\"><figcaption><span>NexT config file</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">tabs:</span></span><br><span class=\"line\">  <span class=\"comment\"># Make the nav bar of tabs with long content stick to the top.</span></span><br><span class=\"line\">  <span class=\"attr\">sticky:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">transition:</span></span><br><span class=\"line\">    <span class=\"attr\">tabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">labels:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">tabs</span> Unique name, [index] %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab [Tab caption] [@icon] --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">Any content (support inline tags too).</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endtabs</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>Unique name</code>   : Unique name of tabs block tag without comma.<br>Will be used in #id&#39;s as prefix for each tab with their index numbers.<br>If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.<br>Only for current url of post&#x2F;page must be unique!</li>\n<li><code>[index]</code>       : Index number of active tab.<br>If not specified, first tab (1) will be selected.<br>If index is -1, no tab will be selected. It&#39;s will be something like spoiler.<br>Optional parameter.</li>\n<li><code>[Tab caption]</code> : Caption of current tab.<br>If not caption specified, unique name with tab index suffix will be used as caption of tab.<br>If not caption specified, but specified icon, caption will empty.<br>Optional parameter.</li>\n<li><code>[@icon]</code>       : Font Awesome icon name.<br>Can be specified with or without space; e.g. &#39;Tab caption @icon&#39; is the same as &#39;Tab caption@icon&#39;.<br>Optional parameter.</li>\n</ul>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">tabs</span> First unique name %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 1.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 2.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 3.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endtabs</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"tabs\" id=\"first-unique-name\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#first-unique-name-1\">First unique name 1</a></li><li class=\"tab\"><a href=\"#first-unique-name-2\">First unique name 2</a></li><li class=\"tab\"><a href=\"#first-unique-name-3\">First unique name 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"first-unique-name-1\"><p><strong>This is Tab 1.</strong></p></div><div class=\"tab-pane\" id=\"first-unique-name-2\"><p><strong>This is Tab 2.</strong></p></div><div class=\"tab-pane\" id=\"first-unique-name-3\"><p><strong>This is Tab 3.</strong></p></div></div></div>\n\n<h4 id=\"Tabs-with-3rd-tab-selected\"><a href=\"#Tabs-with-3rd-tab-selected\" class=\"headerlink\" title=\"Tabs with 3rd tab selected\"></a>Tabs with 3rd tab selected</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">tabs</span> Second unique name, 3 %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 1.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 2.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 3.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endtabs</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"tabs\" id=\"second-unique-name\"><ul class=\"nav-tabs\"><li class=\"tab\"><a href=\"#second-unique-name-1\">Second unique name 1</a></li><li class=\"tab\"><a href=\"#second-unique-name-2\">Second unique name 2</a></li><li class=\"tab active\"><a href=\"#second-unique-name-3\">Second unique name 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane\" id=\"second-unique-name-1\"><p><strong>This is Tab 1.</strong></p></div><div class=\"tab-pane\" id=\"second-unique-name-2\"><p><strong>This is Tab 2.</strong></p></div><div class=\"tab-pane active\" id=\"second-unique-name-3\"><p><strong>This is Tab 3.</strong></p></div></div></div>\n\n<h4 id=\"Tabs-with-no-tab-selected\"><a href=\"#Tabs-with-no-tab-selected\" class=\"headerlink\" title=\"Tabs with no tab selected\"></a>Tabs with no tab selected</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">tabs</span> Third unique name, -1 %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 1.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 2.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 3.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endtabs</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"tabs\" id=\"third-unique-name\"><ul class=\"nav-tabs\"><li class=\"tab\"><a href=\"#third-unique-name-1\">Third unique name 1</a></li><li class=\"tab\"><a href=\"#third-unique-name-2\">Third unique name 2</a></li><li class=\"tab\"><a href=\"#third-unique-name-3\">Third unique name 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane\" id=\"third-unique-name-1\"><p><strong>This is Tab 1.</strong></p></div><div class=\"tab-pane\" id=\"third-unique-name-2\"><p><strong>This is Tab 2.</strong></p></div><div class=\"tab-pane\" id=\"third-unique-name-3\"><p><strong>This is Tab 3.</strong></p></div></div></div>\n\n<h4 id=\"Tabs-with-custom-labels\"><a href=\"#Tabs-with-custom-labels\" class=\"headerlink\" title=\"Tabs with custom labels\"></a>Tabs with custom labels</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">tabs</span> Fourth unique name %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab Solution 1 --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 1.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab Solution 2 --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 2.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab Solution 3 --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 3.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endtabs</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"tabs\" id=\"fourth-unique-name\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#fourth-unique-name-1\">Solution 1</a></li><li class=\"tab\"><a href=\"#fourth-unique-name-2\">Solution 2</a></li><li class=\"tab\"><a href=\"#fourth-unique-name-3\">Solution 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"fourth-unique-name-1\"><p><strong>This is Tab 1.</strong></p></div><div class=\"tab-pane\" id=\"fourth-unique-name-2\"><p><strong>This is Tab 2.</strong></p></div><div class=\"tab-pane\" id=\"fourth-unique-name-3\"><p><strong>This is Tab 3.</strong></p></div></div></div>\n\n<h4 id=\"Tabs-with-icons-only\"><a href=\"#Tabs-with-icons-only\" class=\"headerlink\" title=\"Tabs with icons only\"></a>Tabs with icons only</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">tabs</span> Fifth unique name %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab @text-width --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 1.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab @font --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 2.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab @bold --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 3.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endtabs</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"tabs\" id=\"fifth-unique-name\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#fifth-unique-name-1\"><i class=\"fa fa-text-width\"></i></a></li><li class=\"tab\"><a href=\"#fifth-unique-name-2\"><i class=\"fa fa-font\"></i></a></li><li class=\"tab\"><a href=\"#fifth-unique-name-3\"><i class=\"fa fa-bold\"></i></a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"fifth-unique-name-1\"><p><strong>This is Tab 1.</strong></p></div><div class=\"tab-pane\" id=\"fifth-unique-name-2\"><p><strong>This is Tab 2.</strong></p></div><div class=\"tab-pane\" id=\"fifth-unique-name-3\"><p><strong>This is Tab 3.</strong></p></div></div></div>\n\n<h4 id=\"Tabs-with-icons-and-labels\"><a href=\"#Tabs-with-icons-and-labels\" class=\"headerlink\" title=\"Tabs with icons and labels\"></a>Tabs with icons and labels</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">tabs</span> Sixth unique name %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab Solution 1@text-width --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 1.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab Solution 2@font --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 2.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab Solution 3@bold --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 3.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endtabs</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"tabs\" id=\"sixth-unique-name\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#sixth-unique-name-1\"><i class=\"fa fa-text-width\"></i>Solution 1</a></li><li class=\"tab\"><a href=\"#sixth-unique-name-2\"><i class=\"fa fa-font\"></i>Solution 2</a></li><li class=\"tab\"><a href=\"#sixth-unique-name-3\"><i class=\"fa fa-bold\"></i>Solution 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"sixth-unique-name-1\"><p><strong>This is Tab 1.</strong></p></div><div class=\"tab-pane\" id=\"sixth-unique-name-2\"><p><strong>This is Tab 2.</strong></p></div><div class=\"tab-pane\" id=\"sixth-unique-name-3\"><p><strong>This is Tab 3.</strong></p></div></div></div>\n\n<h4 id=\"Tabs-permalinks-test\"><a href=\"#Tabs-permalinks-test\" class=\"headerlink\" title=\"Tabs permalinks test\"></a>Tabs permalinks test</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\">Permalink for &gt; [Tab one](#tab-one).</span></span><br><span class=\"line\"><span class=\"language-xml\">Permalink for &gt; [Tab one 1](#tab-one-1).</span></span><br><span class=\"line\"><span class=\"language-xml\">Permalink for &gt; [Tab one 2](#tab-one-2).</span></span><br><span class=\"line\"><span class=\"language-xml\">Permalink for &gt; [Tab one 3](#tab-one-3).</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Permalink for &gt; [Tab two](#tab-two).</span></span><br><span class=\"line\"><span class=\"language-xml\">Permalink for &gt; [Tab two 1](#tab-two-1).</span></span><br><span class=\"line\"><span class=\"language-xml\">Permalink for &gt; [Tab two 2](#tab-two-2).</span></span><br><span class=\"line\"><span class=\"language-xml\">Permalink for &gt; [Tab two 3](#tab-two-3).</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">tabs</span> Tab one %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 1.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 2.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 3.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endtabs</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">tabs</span> Tab two %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 1.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 2.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 3.**</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endtabs</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>Permalink for &gt; <a href=\"#tab-one\">Tab one</a>.<br>Permalink for &gt; <a href=\"#tab-one-1\">Tab one 1</a>.<br>Permalink for &gt; <a href=\"#tab-one-2\">Tab one 2</a>.<br>Permalink for &gt; <a href=\"#tab-one-3\">Tab one 3</a>.</p>\n<p>Permalink for &gt; <a href=\"#tab-two\">Tab two</a>.<br>Permalink for &gt; <a href=\"#tab-two-1\">Tab two 1</a>.<br>Permalink for &gt; <a href=\"#tab-two-2\">Tab two 2</a>.<br>Permalink for &gt; <a href=\"#tab-two-3\">Tab two 3</a>.</p>\n<div class=\"tabs\" id=\"tab-one\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tab-one-1\">Tab one 1</a></li><li class=\"tab\"><a href=\"#tab-one-2\">Tab one 2</a></li><li class=\"tab\"><a href=\"#tab-one-3\">Tab one 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tab-one-1\"><p><strong>This is Tab 1.</strong></p></div><div class=\"tab-pane\" id=\"tab-one-2\"><p><strong>This is Tab 2.</strong></p></div><div class=\"tab-pane\" id=\"tab-one-3\"><p><strong>This is Tab 3.</strong></p></div></div></div>\n\n<div class=\"tabs\" id=\"tab-two\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tab-two-1\">Tab two 1</a></li><li class=\"tab\"><a href=\"#tab-two-2\">Tab two 2</a></li><li class=\"tab\"><a href=\"#tab-two-3\">Tab two 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tab-two-1\"><p><strong>This is Tab 1.</strong></p></div><div class=\"tab-pane\" id=\"tab-two-2\"><p><strong>This is Tab 2.</strong></p></div><div class=\"tab-pane\" id=\"tab-two-3\"><p><strong>This is Tab 3.</strong></p></div></div></div>\n\n<h4 id=\"Tabs-with-other-tags\"><a href=\"#Tabs-with-other-tags\" class=\"headerlink\" title=\"Tabs with other tags\"></a>Tabs with other tags</h4><figure class=\"highlight jinja\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"template-tag\">&#123;% <span class=\"name\">tabs</span> Tags %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 1.**</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">1. One</span></span><br><span class=\"line\"><span class=\"language-xml\">2. Two</span></span><br><span class=\"line\"><span class=\"language-xml\">3. Three</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Indented code block:</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">    nano /etc</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Tagged code block:</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">code</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">code tag</span></span><br><span class=\"line\"><span class=\"language-xml\">code tag</span></span><br><span class=\"line\"><span class=\"language-xml\">code tag</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endcode</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> default %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Note default tag.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 2.**</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">* Five</span></span><br><span class=\"line\"><span class=\"language-xml\">* Six</span></span><br><span class=\"line\"><span class=\"language-xml\">* Seven</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> primary %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">youtube</span> Kt7u5kr_P5o %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Tab 3.**</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">subtabs</span> Sub Tabs %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Sub Tab 1.**</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> success %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> warning %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Sub Tab 2.**</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> success %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> danger %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Sub Tab 3.**</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">subtabs</span> Sub-Sub Tabs %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Sub-Sub Tab 1 of Sub Tab 3.**</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> success %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Sub-Sub Tab 2 of Sub Tab 3.**</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> success %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> warning %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">**This is Sub-Sub Tab 3 of Sub Tab 3.**</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> success %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> warning %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">note</span> danger %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endnote</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endsubtabs</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endsubtabs</span> %&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\">endtabs</span> %&#125;</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"tabs\" id=\"tags\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tags-1\">Tags 1</a></li><li class=\"tab\"><a href=\"#tags-2\">Tags 2</a></li><li class=\"tab\"><a href=\"#tags-3\">Tags 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tags-1\"><p><strong>This is Tab 1.</strong></p>\n<ol>\n<li>One</li>\n<li>Two</li>\n<li>Three</li>\n</ol>\n<p>Indented code block:</p>\n<pre><code>nano /etc\n</code></pre>\n<p>Tagged code block:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">code tag</span><br><span class=\"line\">code tag</span><br><span class=\"line\">code tag</span><br></pre></td></tr></table></figure>\n\n<div class=\"note default\"><p>Note default tag.</p>\n</div></div><div class=\"tab-pane\" id=\"tags-2\"><p><strong>This is Tab 2.</strong></p>\n<ul>\n<li>Five</li>\n<li>Six</li>\n<li>Seven</li>\n</ul>\n<div class=\"note primary\"><div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/Kt7u5kr_P5o\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div></div></div><div class=\"tab-pane\" id=\"tags-3\"><p><strong>This is Tab 3.</strong></p>\n<div class=\"tabs\" id=\"sub-tabs\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#sub-tabs-1\">Sub Tabs 1</a></li><li class=\"tab\"><a href=\"#sub-tabs-2\">Sub Tabs 2</a></li><li class=\"tab\"><a href=\"#sub-tabs-3\">Sub Tabs 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"sub-tabs-1\"><p><strong>This is Sub Tab 1.</strong></p>\n<div class=\"note success\"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>\n<div class=\"note warning\"><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>\n</div>\n\n<p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>\n</div></div><div class=\"tab-pane\" id=\"sub-tabs-2\"><p><strong>This is Sub Tab 2.</strong></p>\n<div class=\"note success\"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>\n<p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>\n<div class=\"note danger\"><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>\n</div></div></div><div class=\"tab-pane\" id=\"sub-tabs-3\"><p><strong>This is Sub Tab 3.</strong></p>\n<div class=\"tabs\" id=\"sub-sub-tabs\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#sub-sub-tabs-1\">Sub-Sub Tabs 1</a></li><li class=\"tab\"><a href=\"#sub-sub-tabs-2\">Sub-Sub Tabs 2</a></li><li class=\"tab\"><a href=\"#sub-sub-tabs-3\">Sub-Sub Tabs 3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"sub-sub-tabs-1\"><p><strong>This is Sub-Sub Tab 1 of Sub Tab 3.</strong></p>\n<div class=\"note success\"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>\n<p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>\n<p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>\n</div></div><div class=\"tab-pane\" id=\"sub-sub-tabs-2\"><p><strong>This is Sub-Sub Tab 2 of Sub Tab 3.</strong></p>\n<div class=\"note success\"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>\n<div class=\"note warning\"><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>\n<p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>\n</div>\n</div></div><div class=\"tab-pane\" id=\"sub-sub-tabs-3\"><p><strong>This is Sub-Sub Tab 3 of Sub Tab 3.</strong></p>\n<div class=\"note success\"><p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.</p>\n<div class=\"note warning\"><p>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.</p>\n<div class=\"note danger\"><p>Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</p>\n</div>\n</div>\n</div></div></div></div></div></div></div></div></div></div>\n"}]